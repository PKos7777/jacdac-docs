{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/HourglassEmpty.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayCircleFilled.js","webpack://jacdac-docs/./jacdac-ts/jacdac-spec/spectool/jdtestfuns.ts","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx","webpack://jacdac-docs/./src/components/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/DeviceCardHeader.tsx","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack://jacdac-docs/./jacdac-ts/src/test/testrunner.ts","webpack://jacdac-docs/./src/components/test/ServiceTestRunner.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts"],"names":["getTestCommandFunctions","testFunctions","filter","f","context","getTestExpressionFunctions","id","args","prompt","undefined","useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","specification","useDeviceSpecification","imageUrl","useDeviceImage","name","DeviceFirmwareVersionChip","firmwareVersionRegister","service","register","ControlReg","useRegisterUnpackedValue","firmwareVersion","DeviceTemperatureChip","tempRegister","temperature","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","identifierToUrlPath","deviceId","s","join","JDTestCommandStatus","JDTestStatus","commandStatusToTestStatus","status","Active","Passed","Failed","NotReady","RequiresUserInput","cmdToTestFunction","cmd","call","callee","find","t","unparse","e","type","ae","elements","map","caller","arguments","root","computed","object","property","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","start","exprStack","tos","length","eval","visitExpression","pop","getStartVal","r","v","push","goal","error","ev","top","le","lhs","rhs","val","lit","value","JDCommandEvaluator","testRunner","command","_prompt","_progress","_status","_startExpressions","_rangeComplete","_eventsComplete","testFun","startExprs","exprVisitor","p","ce","eventList","forEach","child","findIndex","exprEval","createPrompt","replaceId","a","i","replaceVal","aStart","roundWithPrecision","toString","slice","replace","setEvent","checkExpression","expr","getStart","evaluate","Math","abs","pretify","regSaved","regValue","amtSaved","beginSaved","endSaved","hasEvent","consumeEvent","shift","event","reg","jdreg","serviceTestRunner","registers","fmt","packFormat","sendSetPackedAsync","fld","lookup","JDTestCommandRunner","_output","message","progress","_commmandEvaluator","reset","output","envChange","isActive","newOutput","finish","cancel","finishCommand","emit","CHANGE","JDEventSource","JDTestRunner","testSpec","commands","testCommands","c","_commandIndex","_currentEvent","commandIndex","refreshEnvironment","next","newStatus","currentCommand","eventChange","ret","description","index","refresh_env","k","retry","refresh","unpackedValue","JDServiceTestRunner","_testIndex","_registers","_events","tests","serviceSpec","serviceSpecificationFromClassIdentifier","serviceClass","events","eventName","pkt","packets","isEvent","identifier","mount","subscribe","EVENT","currentTest","regName","isRegister","field","fields","stats","total","success","failed","indeterminate","test","testIndex","ct","indexOf","JDServiceClient","TestStatusIcon","useChange","TestListItem","onSelectTest","selected","handleSelectTest","TestList","CommandStatusIcon","CommandListItem","handleAnswer","ActiveTest","handleRestart","handleNext","useEffect","ServiceTestRunner","serviceTest","serviceTestFromServiceClass","factory","useCallback","useServiceClient","useGridBreakpoints","itemCount","useContext","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","deps","useState","client","setClient","unmount"],"mappings":"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","file":"859a83de993caea7524bf57c2975f3be6812c8c3-eb0f85ea2a26047da8ed.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdtest.d.ts\" />\n\nexport type JDTestFunctions =\n    | \"changes\"\n    | \"ask\"\n    | \"check\"\n    | \"increases\"\n    | \"decreases\"\n    | \"increasesBy\"\n    | \"decreasesBy\"\n    | \"stepsUpTo\"\n    | \"stepsDownTo\"\n    | \"events\"\n    | \"awaitEvent\"\n    | \"nextEvent\"\n    | \"assign\"\n    | \"closeTo\"\n\nexport function getTestCommandFunctions() {\n    return testFunctions.filter(f => f.context === \"command\" || f.context === \"either\")\n}\n\nexport function getTestExpressionFunctions() {\n    return testFunctions.filter(f => f.context === \"expression\" || f.context === \"either\")\n}\n\nconst testFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"changes\",\n        args: [\"register\"],\n        prompt: `check that {1} changes`,\n        context: \"command\",\n    },\n    {\n        id: \"ask\",\n        args: [],\n        prompt: undefined,\n        context: \"command\",\n    },\n    {\n        id: \"events\",\n        args: [\"events\"],\n        prompt: `check that events {1} are observed`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true] ],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"nextEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `next event must be {1}, then check {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"assign\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"check\",\n        args: [\"boolean\"],\n        prompt: `check that {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"increases\",\n        args: [\"register\"],\n        prompt: `check that {1} increases`,\n        context: \"command\",\n    },\n    {\n        id: \"decreases\",\n        args: [\"register\"],\n        prompt: `check that {1} decreases`,\n        context: \"command\",\n    },\n    {\n        id: \"increasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that  {1} (initially {1:val}) increases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"decreasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that {1} (initially {1:val}) decreases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsUpTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step up (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsDownTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step down (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"start\",\n        args: [\"any\"],\n        prompt: undefined,\n        context: \"expression\",\n    },\n    {\n        id: \"closeTo\",\n        args: [\"number\", \"number\", \"number\"],\n        prompt: `evaluate {1} until it is close to {2:val}, as given by error {3:val}`,\n        context: \"either\",\n    },\n]\n","import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport {\n    useRegisterUnpackedValue,\n} from \"../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./devices/DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./devices/DeviceAvatar\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = device\n        ?.service(0)\n        ?.register(ControlReg.FirmwareVersion)\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(firmwareVersionRegister)\n\n    return (\n        (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || (\n            <></>\n        )\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    return (\n        (temperature !== undefined && (\n            <Chip size=\"small\" label={`${temperature}°`} />\n        )) || <></>\n    )\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={<DeviceActions device={device} showReset={true} />}\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n    getTestCommandFunctions,\n    JDTestFunctions,\n} from \"../../jacdac-spec/spectool/jdtestfuns\"\nimport { exprVisitor } from \"../../jacdac-spec/spectool/jdutils\"\n\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { JDService } from \"../jdom/service\"\nimport { JDRegister } from \"../jdom/register\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport {\n    isEvent,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n} from \"../jdom/spec\"\nimport { roundWithPrecision } from \"../jdom/utils\"\n\nexport enum JDTestCommandStatus {\n    NotReady,\n    Active,\n    RequiresUserInput,\n    Passed,\n    Failed,\n}\n\nexport enum JDTestStatus {\n    NotReady,\n    Active,\n    Passed,\n    Failed,\n}\n\nfunction commandStatusToTestStatus(status: JDTestCommandStatus) {\n    switch (status) {\n        case JDTestCommandStatus.Active:\n            return JDTestStatus.Active\n        case JDTestCommandStatus.Passed:\n            return JDTestStatus.Passed\n        case JDTestCommandStatus.Failed:\n            return JDTestStatus.Failed\n        case JDTestCommandStatus.NotReady:\n            return JDTestStatus.NotReady\n        case JDTestCommandStatus.RequiresUserInput:\n            return JDTestStatus.Active\n    }\n}\n\nfunction cmdToTestFunction(cmd: jdtest.TestCommandSpec) {\n    const id = (<jsep.Identifier>cmd.call.callee).name\n    return getTestCommandFunctions().find(t => t.id == id)\n}\n\nfunction unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\ntype SMap<T> = { [v: string]: T }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype StartMap = { e: jsep.Expression; v: any }[]\n\ntype GetValue = (root: string, fld: string) => any\n\nclass JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private start: StartMap) {}\n\n    private tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    private getStartVal(e: jsep.Expression) {\n        return this.start.find(r => r.e === e).v\n    }\n\n    private visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                const caller = <jsep.CallExpression>e\n                const callee = <jsep.Identifier>caller.callee\n                switch (callee.name) {\n                    case \"start\": {\n                        this.exprStack.push(\n                            this.getStartVal(caller.arguments[0])\n                        )\n                        return\n                    }\n                    case \"closeTo\": {\n                        const args = caller.arguments\n                        const goal = this.getStartVal(args[1])\n                        const error = this.getStartVal(args[2])\n                        this.visitExpression(args[0])\n                        const ev = this.exprStack.pop()\n                        this.exprStack.push(\n                            ev >= goal - error && ev <= goal + error\n                        )\n                        break\n                    }\n                    default: // ERROR\n                }\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // member expressions are of form [register|event].field\n                const root = e as jsep.MemberExpression\n                const lhs = root.object as jsep.Identifier\n                const rhs = root.property as jsep.Identifier\n                const val = this.env(lhs.name, rhs.name)\n                // console.log(`${lhs.name}.${rhs.name} = ${val}`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env(id.name, \"\"))\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n\nclass JDCommandEvaluator {\n    private _prompt = \"\"\n    private _progress = \"\"\n    private _status = JDTestCommandStatus.Active\n    private _startExpressions: StartMap = []\n    private _rangeComplete: number = undefined\n    private _eventsComplete: string[] = undefined\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {}\n\n    public get prompt() {\n        return this._prompt\n    }\n    public get status() {\n        return this._status\n    }\n    public get progress() {\n        return this._progress\n    }\n\n    private get env() {\n        return (root: string, fld = \"\") => {\n            return this.testRunner.serviceTestRunner.lookup(root, fld)\n        }\n    }\n\n    // TODO: define an interface between test runner and command evaluator\n    // TODO: so this all can be done modularly\n    public start() {\n        this._startExpressions = []\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        const startExprs: jsep.Expression[] = []\n        switch (testFun.id as JDTestFunctions) {\n            case \"check\":\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                exprVisitor(null, args, (p, ce: jsep.CallExpression) => {\n                    if (ce.type !== \"CallExpression\") return\n                    if ((<jsep.Identifier>ce.callee).name === \"start\")\n                        startExprs.push(ce.arguments[0])\n                    else if ((<jsep.Identifier>ce.callee).name === \"closeTo\") {\n                        startExprs.push(ce.arguments[1])\n                        startExprs.push(ce.arguments[2])\n                    }\n                })\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                startExprs.push(args[0])\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\":\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                startExprs.push(args[0])\n                startExprs.push(args[1])\n                break\n            }\n            case \"closeTo\": {\n                startExprs.push(args[1])\n                startExprs.push(args[2])\n                break\n            }\n            case \"assign\": {\n                startExprs.push(args[1])\n                break\n            }\n            case \"events\": {\n                const eventList = this.command.call\n                    .arguments[0] as jsep.ArrayExpression\n                this._eventsComplete = (eventList.elements as jsep.Identifier[]).map(\n                    id => id.name\n                )\n                break\n            }\n        }\n        // evaluate the start expressions and store the results\n        startExprs.forEach(child => {\n            if (this._startExpressions.findIndex(r => r.e === child) < 0) {\n                const exprEval = new JDExprEvaluator(this.env, [])\n                this._startExpressions.push({\n                    e: child,\n                    v: exprEval.eval(child),\n                })\n            }\n        })\n        this.createPrompt()\n    }\n\n    private createPrompt() {\n        const testFun = cmdToTestFunction(this.command)\n        const replaceId = this.command.call.arguments.map((a, i) => {\n            return [`{${i + 1}}`, unparse(a)]\n        })\n        const replaceVal = this.command.call.arguments.map((a, i) => {\n            const aStart = this._startExpressions.find(r => r.e === a)\n            return [\n                `{${i + 1}:val}`,\n                aStart && aStart.v\n                    ? roundWithPrecision(aStart.v, 3).toString()\n                    : unparse(a),\n            ]\n        })\n        this._prompt =\n            testFun.id === \"ask\" || testFun.id === \"say\"\n                ? this.command.prompt.slice(0)\n                : testFun.prompt.slice(0)\n        replaceId.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n        replaceVal.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n    }\n\n    public setEvent(ev: string) {}\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(this.env, this._startExpressions)\n        return expr.eval(e)\n            ? JDTestCommandStatus.Passed\n            : JDTestCommandStatus.Active\n    }\n\n    private getStart(e: jsep.Expression) {\n        return this._startExpressions.find(r => r.e === e)\n    }\n\n    public evaluate() {\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        this._status = JDTestCommandStatus.Active\n        this._progress = \"\"\n        switch (testFun.id as JDTestFunctions) {\n            case \"ask\": {\n                this._status = JDTestCommandStatus.RequiresUserInput\n                break\n            }\n            case \"check\": {\n                this._status = this.checkExpression(args[0])\n                break\n            }\n            case \"closeTo\": {\n                const goal = this.getStart(args[1])\n                const error = this.getStart(args[2])\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(args[0]) as number\n                if (Math.abs(ev - goal.v) <= error.v)\n                    this._status = JDTestCommandStatus.Passed\n                this._progress = `current: ${pretify(ev)}; goal: ${pretify(\n                    goal.v\n                )}; error: ${pretify(error.v)}`\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                const regSaved = this._startExpressions.find(\n                    r => r.e === args[0]\n                )\n                const regValue = this.env(unparse(args[0]))\n                const status =\n                    regValue &&\n                    regSaved.v &&\n                    ((testFun.id === \"changes\" && regValue !== regSaved.v) ||\n                        (testFun.id === \"increases\" && regValue > regSaved.v) ||\n                        (testFun.id === \"decreases\" && regValue < regSaved.v))\n                        ? JDTestCommandStatus.Passed\n                        : JDTestCommandStatus.Active\n                this._status = status\n                regSaved.v = regValue\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                const regSaved = this.getStart(args[0])\n                const amtSaved = this.getStart(args[1])\n                const regValue = this.env(unparse(args[0]))\n                if (testFun.id === \"increasesBy\") {\n                    if (regValue >= regSaved.v + amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    } else if (\n                        regValue >= regSaved.v &&\n                        regValue < regSaved.v + amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )}, goal: ${pretify(regSaved.v + amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                } else {\n                    if (regValue <= regSaved.v - amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                        this._progress = \"completed\"\n                    } else if (\n                        regValue <= regSaved.v &&\n                        regValue > regSaved.v - amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )} goal: ${pretify(regSaved.v - amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                }\n                break\n            }\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                this._status = JDTestCommandStatus.Active\n                const regValue = this.env(unparse(args[0]))\n                const beginSaved = this.getStart(args[0])\n                const endSaved = this.getStart(args[1])\n                if (this._rangeComplete === undefined) {\n                    this._rangeComplete = regValue\n                } else {\n                    if (\n                        regValue ===\n                        this._rangeComplete +\n                            (testFun.id == \"stepsUpTo\" ? 1 : -1)\n                    )\n                        this._rangeComplete = regValue\n                    if (this._rangeComplete === endSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    }\n                }\n                if (this._rangeComplete != undefined) {\n                    this._progress =\n                        testFun.id == \"stepsUpTo\"\n                            ? `from ${pretify(beginSaved.v)} up to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                            : `from ${pretify(beginSaved.v)} down to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                }\n                break\n            }\n            case \"events\": {\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev === this._eventsComplete[0]) {\n                        this._eventsComplete.shift()\n                        if (this._eventsComplete.length === 0)\n                            this._status = JDTestCommandStatus.Passed\n                    } else {\n                        this._status = JDTestCommandStatus.Failed\n                    }\n                    this._progress = `got event ${ev}; remaining = [${this._eventsComplete}]`\n                } else {\n                    this._progress = `no events received; remaining = [${this._eventsComplete}]`\n                }\n                break\n            }\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                const event = args[0] as jsep.Identifier\n                this._progress = `waiting for event ${event.name}`\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev !== event.name) {\n                        if (testFun.id === \"nextEvent\")\n                            this._status = JDTestCommandStatus.Failed\n                    } else {\n                        // this._status = JDTestCommandStatus.Passed\n                        this._status = this.checkExpression(\n                            this.command.call.arguments[1]\n                        )\n                    }\n                } else {\n                    this._progress = `no events received; ${this._progress}`\n                }\n                break\n            }\n            case \"assign\": {\n                const reg = args[0] as jsep.Identifier\n                const jdreg = this.testRunner.serviceTestRunner.registers[\n                    reg.name\n                ]\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(args[1])\n                if (jdreg) {\n                    const fmt = jdreg.specification?.packFormat\n                    jdreg.sendSetPackedAsync(fmt, [ev])\n                    this._status = JDTestCommandStatus.Passed\n                    this._progress = `wrote ${ev} to register ${reg.name}`\n                }\n            }\n        }\n\n        function pretify(v: number) {\n            return roundWithPrecision(v, 3)\n        }\n    }\n}\n\nexport interface JDCommandOutput {\n    message: string\n    progress: string\n}\n\nexport class JDTestCommandRunner extends JDEventSource {\n    private _status = JDTestCommandStatus.NotReady\n    private _output: JDCommandOutput = { message: \"\", progress: \"\" }\n    private _commmandEvaluator: JDCommandEvaluator = null\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {\n        super()\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestCommandStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestCommandStatus.Failed &&\n            this.status !== JDTestCommandStatus.Passed\n        )\n    }\n\n    get isActive(): boolean {\n        return (\n            this.status === JDTestCommandStatus.Active ||\n            this.status === JDTestCommandStatus.RequiresUserInput\n        )\n    }\n\n    get output() {\n        return this._output\n    }\n\n    set output(value: JDCommandOutput) {\n        if (\n            !this._output ||\n            this._output.message !== value.message ||\n            this._output.progress !== value.progress\n        ) {\n            this._output = value\n            this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.status = JDTestCommandStatus.NotReady\n        this.output = { message: \"\", progress: \"\" }\n        this._commmandEvaluator = null\n    }\n\n    start() {\n        this.status = JDTestCommandStatus.Active\n        this._commmandEvaluator = new JDCommandEvaluator(\n            this.testRunner,\n            this.command\n        )\n        this._commmandEvaluator.start()\n        this.envChange()\n    }\n\n    envChange() {\n        if (this.isActive) {\n            this._commmandEvaluator.evaluate()\n            const newOutput: JDCommandOutput = {\n                message: this._commmandEvaluator.prompt,\n                progress: this._commmandEvaluator.progress,\n            }\n            this.output = newOutput\n            if (\n                this._commmandEvaluator.status ===\n                JDTestCommandStatus.RequiresUserInput\n            )\n                this.status = JDTestCommandStatus.RequiresUserInput\n            else this.finish(this._commmandEvaluator.status)\n        }\n    }\n\n    cancel() {\n        this.finish(JDTestCommandStatus.Failed)\n    }\n\n    finish(s: JDTestCommandStatus) {\n        if (\n            this.isActive &&\n            (s === JDTestCommandStatus.Failed ||\n                s === JDTestCommandStatus.Passed)\n        ) {\n            this.status = s\n            this.testRunner.finishCommand()\n        }\n    }\n}\n\nexport class JDTestRunner extends JDEventSource {\n    private _status = JDTestStatus.NotReady\n    private _commandIndex: number\n    private _currentEvent: string\n    public readonly commands: JDTestCommandRunner[]\n\n    constructor(\n        public readonly serviceTestRunner: JDServiceTestRunner,\n        private readonly testSpec: jdtest.TestSpec\n    ) {\n        super()\n        this.commands = testSpec.testCommands.map(\n            c => new JDTestCommandRunner(this, c)\n        )\n    }\n\n    public reset() {\n        if (this.status !== JDTestStatus.NotReady) {\n            this._status = JDTestStatus.NotReady\n            this._commandIndex = undefined\n            this._currentEvent = undefined\n            this.commands.forEach(t => t.reset())\n            this.emit(CHANGE)\n        }\n    }\n\n    start() {\n        this.reset()\n        this.status = JDTestStatus.Active\n        this.commandIndex = 0\n        this.serviceTestRunner.refreshEnvironment()\n    }\n\n    next() {\n        this.serviceTestRunner.next()\n    }\n\n    cancel() {\n        this.finish(JDTestStatus.Failed)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestStatus.Failed &&\n            this.status !== JDTestStatus.Passed\n        )\n    }\n\n    get description() {\n        return this.testSpec.description\n    }\n\n    get prompt() {\n        return this.testSpec.prompt\n    }\n\n    finish(newStatus: JDTestStatus) {\n        if (this.status === JDTestStatus.Active) {\n            this.status = newStatus\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    private set commandIndex(index: number) {\n        if (this._commandIndex !== index) {\n            this._commandIndex = index\n            this.currentCommand?.start()\n            this.emit(CHANGE)\n        }\n    }\n\n    public envChange() {\n        if (this.status === JDTestStatus.Active) {\n            this.currentCommand?.envChange()\n        }\n    }\n\n    public eventChange(event: string) {\n        if (this.status === JDTestStatus.Active) {\n            this._currentEvent = event\n            this.envChange()\n        }\n    }\n\n    public get hasEvent() {\n        return this._currentEvent != undefined\n    }\n\n    public consumeEvent() {\n        const ret = this._currentEvent\n        this._currentEvent = undefined\n        return ret\n    }\n\n    public finishCommand() {\n        if (this.commandIndex === this.commands.length - 1)\n            this.finish(commandStatusToTestStatus(this.currentCommand.status))\n        else this.commandIndex++\n    }\n\n    get currentCommand() {\n        return this.commands[this._commandIndex]\n    }\n}\n\nasync function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\nexport class JDServiceTestRunner extends JDServiceClient {\n    private _testIndex = -1\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n    public readonly tests: JDTestRunner[]\n\n    constructor(\n        public readonly testSpec: jdtest.ServiceTestSpec,\n        service: JDService\n    ) {\n        super(service)\n        this.tests = this.testSpec.tests.map(t => new JDTestRunner(this, t))\n        const serviceSpec = serviceSpecificationFromClassIdentifier(\n            service.serviceClass\n        )\n        this.testSpec.tests.forEach(t => {\n            t.events.forEach(eventName => {\n                if (!this.events[eventName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isEvent(pkt) && pkt.name === eventName\n                    )\n                    const event = service.event(pkt.identifier)\n                    this.events[eventName] = event\n                    this.mount(\n                        event.subscribe(EVENT, () => {\n                            this.currentTest?.eventChange(eventName)\n                        })\n                    )\n                }\n            })\n            t.registers.forEach(regName => {\n                if (!this._registers[regName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isRegister(pkt) && pkt.name === regName\n                    )\n                    const register = service.register(pkt.identifier)\n                    this._registers[regName] = register\n                    this.mount(\n                        register.subscribe(CHANGE, () => {\n                            this.currentTest?.envChange()\n                        })\n                    )\n                }\n            })\n        })\n        this.start()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(root: string, fld = \"\"): any {\n        if (root in this.registers) {\n            if (!fld) return this.registers[root].unpackedValue?.[0]\n            else {\n                const field = this.registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this.events) {\n            const field = this.events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this.registers)\n    }\n\n    public get registers() {\n        return this._registers\n    }\n\n    public get events() {\n        return this._events\n    }\n\n    private get testIndex() {\n        return this._testIndex\n    }\n\n    private set testIndex(index: number) {\n        if (this._testIndex !== index) {\n            // stop previous test if needed\n            const ct = this.currentTest\n            if (ct) {\n                if (ct.status === JDTestStatus.Active) {\n                    ct.cancel()\n                }\n            }\n\n            // update test\n            this._testIndex = index\n            this.emit(CHANGE)\n        }\n    }\n\n    public stats() {\n        const r = {\n            total: this.tests.length,\n            success: 0,\n            failed: 0,\n            indeterminate: 0,\n        }\n        for (const test of this.tests) {\n            switch (test.status) {\n                case JDTestStatus.Failed:\n                    r.failed++\n                    break\n                case JDTestStatus.Passed:\n                    r.success++\n                    break\n                default:\n                    r.indeterminate++\n            }\n        }\n        return r\n    }\n\n    public start() {\n        this.tests.forEach(t => t.reset())\n        this.testIndex = 0\n    }\n\n    public next() {\n        this.testIndex++\n    }\n\n    get currentTest() {\n        return this.tests[this._testIndex]\n    }\n\n    set currentTest(test: JDTestRunner) {\n        const index = this.tests.indexOf(test)\n        if (index > -1) this.testIndex = index\n    }\n}\n","import React, { useCallback, useEffect } from \"react\"\nimport useServiceClient from \"../useServiceClient\"\nimport {\n    Grid,\n    Button,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    Typography,\n    Card,\n    CardContent,\n    CardActions,\n    Box,\n    ListSubheader,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    JDServiceTestRunner,\n    JDTestRunner,\n    JDTestStatus,\n    JDTestCommandRunner,\n    JDTestCommandStatus,\n} from \"../../../jacdac-ts/src/test/testrunner\"\nimport ErrorIcon from \"@material-ui/icons/Error\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\n\nfunction TestStatusIcon(props: { test: JDTestRunner }) {\n    const { test } = props\n    const status = useChange(test, t => t.status)\n\n    switch (status) {\n        case JDTestStatus.Active:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction TestListItem(props: {\n    test: JDTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { test, currentTest, onSelectTest } = props\n    const description = useChange(test, t => t.description)\n    const selected = test === currentTest\n    const handleSelectTest = () => onSelectTest(test)\n\n    return (\n        <ListItem selected={selected} button onClick={handleSelectTest}>\n            <ListItemIcon>\n                <TestStatusIcon test={test} />\n            </ListItemIcon>\n            <ListItemText primary={description} />\n        </ListItem>\n    )\n}\n\nfunction TestList(props: {\n    testRunner: JDServiceTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { testRunner, currentTest, onSelectTest } = props\n    const { tests } = testRunner\n    const stats = useChange(testRunner, r => r.stats())\n\n    return (\n        <Card>\n            <CardContent>\n                <List\n                    dense={true}\n                    subheader={\n                        <ListSubheader>\n                            {`${stats.total} tests, ${stats.success} success, ${stats.failed} failed`}\n                        </ListSubheader>\n                    }\n                >\n                    {tests?.map((test, i) => (\n                        <TestListItem\n                            key={i}\n                            test={test}\n                            currentTest={currentTest}\n                            onSelectTest={onSelectTest}\n                        />\n                    ))}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CommandStatusIcon(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const status = useChange(command, c => c.status)\n\n    switch (status) {\n        case JDTestCommandStatus.Active:\n        case JDTestCommandStatus.RequiresUserInput:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestCommandStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestCommandStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction CommandListItem(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const { message, progress } = useChange(command, c => c.output)\n    const status = useChange(command, c => c.status)\n    const handleAnswer = (status: JDTestCommandStatus) => () =>\n        command.finish(status)\n    return (\n        <>\n            <ListItem selected={status === JDTestCommandStatus.Active}>\n                <ListItemIcon>\n                    <CommandStatusIcon command={command} />\n                </ListItemIcon>\n                <ListItemText\n                    primary={message}\n                    secondary={progress}\n                />\n            </ListItem>\n            {status === JDTestCommandStatus.RequiresUserInput && (\n                <ListItem>\n\n                    <ListItemSecondaryAction>\n                        <Grid container spacing={1}>\n                            <Grid item><Button\n                                variant=\"outlined\"\n                                onClick={handleAnswer(JDTestCommandStatus.Passed)}\n                            >\n                                Yes\n                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleAnswer(JDTestCommandStatus.Failed)}\n                                >\n                                    No\n                    </Button>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )}\n\n        </>\n    )\n}\n\nfunction ActiveTest(props: { test: JDTestRunner }) {\n    const { test } = props\n    const { commands } = test\n    const status = useChange(test, t => t.status)\n    const handleRestart = () => test.start()\n    const handleNext = () => test.next()\n    // auto start\n    useEffect(() => test.start(), [test])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">DO</Typography>\n                <Box m={2}>\n                    <Typography variant=\"body1\">{test.prompt}</Typography>\n                </Box>\n                <Typography variant=\"h5\">TEST</Typography>\n                <List dense={false}>\n                    {commands.map((cmd, i) => (\n                        <CommandListItem key={i} command={cmd} />\n                    ))}\n                </List>\n                {status === JDTestStatus.Passed && (\n                    <Alert severity=\"success\">Test passed</Alert>\n                )}\n                {status === JDTestStatus.Failed && (\n                    <Alert severity=\"error\">Test failed</Alert>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant={\n                        status === JDTestStatus.Active\n                            ? \"outlined\"\n                            : \"contained\"\n                    }\n                    color={\n                        status === JDTestStatus.Passed ? \"primary\" : undefined\n                    }\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n                <Button variant=\"outlined\" onClick={handleRestart}>\n                    Restart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function ServiceTestRunner(props: {\n    service: JDService\n    serviceTest?: jdtest.ServiceTestSpec\n}) {\n    const {\n        service,\n        serviceTest = serviceTestFromServiceClass(service.serviceClass),\n    } = props\n    const factory = useCallback(\n        service => serviceTest && new JDServiceTestRunner(serviceTest, service),\n        [service, serviceTest]\n    )\n    const testRunner = useServiceClient(service, factory)\n    const currentTest = useChange(testRunner, t => t?.currentTest)\n    const handleSelectTest = (test: JDTestRunner) => {\n        testRunner.currentTest = test\n    }\n\n    if (!serviceTest)\n        return (\n            <Alert severity=\"warning\">\n                Sorry, there are no tests available for service{\" \"}\n                {service.specification.name}.\n            </Alert>\n        )\n\n    if (!testRunner) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={3}>\n                <TestList\n                    testRunner={testRunner}\n                    currentTest={currentTest}\n                    onSelectTest={handleSelectTest}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                {currentTest ? <ActiveTest test={currentTest} /> : <Alert severity={\"info\"}>\n                    Select a test to get started.\n                </Alert>}\n            </Grid>\n            {service && (\n                <Grid item xs={3}>\n                    <DashboardDevice\n                        showAvatar={true}\n                        showHeader={true}\n                        device={service.device}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}