{"version":3,"file":"5969-c00e8b2935d4cdc200cc.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;ACnBf;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEe,SAASiB,oBAAT,CAA8BC,KAA9B,EAA4D;AACvE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAM;AAAEE,IAAAA;AAAF,MAAUlB,iDAAU,CAAqBc,gEAArB,CAA1B;AACA,MAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,+CAAQ,CAAC,CAAD,CAAxC;AACA,MAAM;AAAA,OAACoB,SAAD;AAAA,OAAYC;AAAZ,MAA4BrB,+CAAQ,CAACI,gHAAD,CAA1C;AACA,MAAM;AAAA,OAACmB,cAAD;AAAA,OAAiBC;AAAjB,MAAsCxB,+CAAQ,CAAS,EAAT,CAApD;AACA,MAAMyB,MAAM,GAAGf,qEAAS,CAAC;AAAEgB,IAAAA,YAAY,EAAE;AAAhB,GAAD,CAAxB;;AAEA,MAAMC,eAAe,GAAG,CACpBC,WADoB,EAEpBC,YAFoB,KAGnB;AACDV,IAAAA,WAAW,CAACS,WAAD,CAAX;AACAP,IAAAA,YAAY,CAACQ,YAAD,CAAZ;AACH,GAND;;AAQA,MAAMC,WAAW,GAAGhC,kDAAW,iHAAC,aAAY;AACxC,QAAMiC,QAA+D,GACjE,CAAC,CAAC,CAACb,QAAD,EAAWE,SAAX,EAAsBlB,+GAAtB,CAAD,CAAD,CADJ;AAEA,QAAM+B,IAAI,GAAG5B,0EAAM,CAAC,cAAD,EAAiB0B,QAAjB,CAAnB;AACA,UAAMf,OAAO,CAACkB,YAAR,CAAqB/B,wGAArB,EAAyC8B,IAAzC,CAAN;AACH,GAL8B,GAK5B,CAACf,QAAD,EAAWE,SAAX,EAAsBJ,OAAtB,CAL4B,CAA/B;AAOAL,EAAAA,sEAAS,CACLM,GADK,EAEL,MAAM;AACF,QAAMmB,YAAY,GAAGnB,GAAG,CAACoB,IAAJ,CAASd,cAAT,CAArB;AACA,QAAMe,EAAE,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEG,SAAd,CAAwB3B,2EAAxB,EAA+BkB,WAA/B,CAAX;AACA,WAAO,MAAMQ,EAAN,aAAMA,EAAN,uBAAMA,EAAE,EAAf;AACH,GANI,EAOL,CAACf,cAAD,EAAiBO,WAAjB,CAPK,CAAT;AAUA,MAAMU,QAAQ,GAAG,CAACtB,QAAD,IAAa,CAACE,SAA/B;;AACA,MAAMqB,mBAAmB,GAAIC,OAAD,IAAqBlB,iBAAiB,CAACkB,OAAD,CAAlE;;AAEA,sBACI,iDAAC,mEAAD;AAAM,aAAS,MAAf;AAAgB,aAAS,EAAC,QAA1B;AAAmC,WAAO,EAAE;AAA5C,kBACI,iDAAC,mEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,4DAAD;AACI,YAAQ,EAAExB,QADd;AAEI,aAAS,EAAEE,SAFf;AAGI,YAAQ,EAAEO;AAHd,IADJ,CADJ,eAQI,iDAAC,mEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,mEAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,kBACI,iDAAC,mEAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,2DAAD;AACI,WAAO,EAAC,UADZ;AAEI,SAAK,EAAC,WAFV;AAGI,YAAQ,EAAEa,QAHd;AAII,WAAO,EAAEV,WAJb;AAKI,QAAI,eAAE,iDAAC,6EAAD;AALV,iBADJ,CADJ,eAYI,iDAAC,mEAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,oEAAD;AACI,UAAM,EAAEL,MADZ;AAEI,WAAO,EAAEF,cAFb;AAGI,YAAQ,EAAEkB,mBAHd;AAII,SAAK,EAAE,uBAJX;AAKI,gBAAY,EAAE;AALlB,IADJ,CAZJ,CADJ,CARJ,CADJ;AAmCH;;;;;;;;;;;;;AC3FD;AACA;AACA;AAEe,SAAS/B,SAAT,CAAmBoC,OAAnB,EAKZ;AACC,MAAM;AAAEpB,IAAAA;AAAF,MAAmBoB,OAAO,IAAI,EAApC;AACA,MAAMC,QAAQ,GAAGF,iEAAW,CAACC,OAAD,CAA5B;AACA,MAAIrB,MAAM,GAAGmB,oFAAe,CAACG,QAAQ,CAACC,GAAT,CAAaC,GAAG,IAAIA,GAAG,CAACxB,MAAxB,CAAD,CAA5B;AACA,MAAIC,YAAJ,EACID,MAAM,GAAGA,MAAM,CAACyB,MAAP,CAAcC,EAAE,IAAIA,EAAE,CAACC,IAAH,KAAYT,iIAAZ,IAA6CQ,EAAE,CAACC,IAAH,KAAYT,2GAA7E,CAAT;AACJ,SAAOlB,MAAP;AACH;;;;;;;;;;;;;AChBD;AAGA;AACA;AAEe,SAASoB,WAAT,CAAqBC,OAArB,EAA6D;AACxE,MAAM;AAAE7B,IAAAA;AAAF,MAAUlB,iDAAU,CAAqBc,gEAArB,CAA1B;AACA,MAAMkC,QAAQ,GAAGpC,sEAAS,CAACM,GAAD,EAAMsC,CAAC,IAAI,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAER,QAAH,CAAYD,OAAZ,MAAwB,EAAnC,EAAuC,CAC7DU,IAAI,CAACC,SAAL,CAAeX,OAAf,CAD6D,CAAvC,CAA1B;AAGA,SAAOC,QAAP;AACH;;;;;;;;;;;;;ACZD;AACA;AAEA;AAEe,SAAStC,WAAT,CAAqBM,KAArB,EAMZ;AACC,MAAM;AAAEU,IAAAA,MAAF;AAAUiB,IAAAA,OAAV;AAAmBkB,IAAAA,QAAnB;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,MAAqD/C,KAA3D;;AAEA,MAAMgD,YAAY,GAAIZ,EAAD,IAA+C;AAChES,IAAAA,QAAQ,CAACT,EAAE,CAACa,MAAH,CAAUC,KAAX,CAAR;AACH,GAFD;;AAIA,sBACI,iDAAC,oEAAD;AACI,cAAU,EAAEH,KAAK,IAAI,iBADzB;AAEI,SAAK,EAAEpB,OAFX;AAGI,YAAQ,EAAEqB,YAHd;AAII,YAAQ,EAAE,EAACtC,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEyC,MAAT,CAJd;AAKI,QAAI,EAAE;AALV,KAOKzC,MAPL,aAOKA,MAPL,uBAOKA,MAAM,CAAEuB,GAAR,CAAYG,EAAE,iBACX,iDAAC,2EAAD;AAAU,OAAG,EAAEA,EAAE,CAACgB,EAAlB;AAAsB,SAAK,EAAEhB,EAAE,CAACgB;AAAhC,KACKN,YAAY,GAAGV,EAAE,CAACU,YAAN,GAAqBV,EAAE,CAACiB,IADzC,CADH,CAPL,CADJ;AAeH;;;;;;;;;;;;;;;;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA,IAAMa,SAAS,GAAGR,sEAAU,CAACS,KAAK,IAC9BV,sEAAY,CAAC;AACTW,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,SADH;AAEL,eAAW;AACPC,MAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBC;AAD5B,KAFN;AAKL,eAAW;AACPH,MAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAcG,MAAd,CAAqBC;AAD3B;AALN,GADA;AAUTC,EAAAA,YAAY,EAAE;AACVC,IAAAA,eAAe,EAAE,iBADP;AAEVP,IAAAA,WAAW,EAAE,iBAFH;AAGVQ,IAAAA,KAAK,EAAE,kBAHG;AAIV,oBAAgB;AACZC,MAAAA,UAAU,EAAE,+BADA;AAEZD,MAAAA,KAAK,EAAE;AAFK,KAJN;AAQV,mCAA+B;AAC3BC,MAAAA,UAAU,EAAKZ,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBQ,IAA3B,gBADiB;AAE3BF,MAAAA,KAAK,EAAE;AAFoB;AARrB,GAVL;AAuBTG,EAAAA,QAAQ,EAAE;AACN,yBAAqB;AACjBF,MAAAA,UAAU,EAAKZ,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBQ,IAA3B,gBADO;AAEjBF,MAAAA,KAAK,EAAE;AAFU;AADf;AAvBD,CAAD,CADY,CAA5B;AAiCe,SAAStF,gBAAT,CAA0BQ,KAA1B,EAMZ;AACC,MAAM;AAAEkF,IAAAA,eAAF;AAAmBC,IAAAA,gBAAnB;AAAqChF,IAAAA,QAArC;AAA+CE,IAAAA,SAA/C;AAA0DwC,IAAAA;AAA1D,MACF7C,KADJ;AAEA,MAAMoF,YAAY,GAAG7B,8CAAO,CACxB,MAAMpD,QAAQ,KAAKkF,SAAb,IAA0BhF,SAAS,KAAKgF,SADtB,EAExB,EAFwB,CAA5B;AAIA,MAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BtG,+CAAQ,CAASiG,eAAe,IAAI,CAA5B,CAA1C;AACA,MAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA+BxG,+CAAQ,CACzCkG,gBAAgB,IAAI9F,gHADqB,CAA7C;AAGA,MAAM;AAAEqG,IAAAA;AAAF,MAAe1G,iDAAU,CAAC4E,iEAAD,CAA/B,CAXD,CAYC;;AACA,MAAM+B,YAAW,GAAGnC,6CAAM,EAA1B;;AACA,MAAMoC,OAAO,GAAG1B,SAAS,EAAzB;AACA,MAAMC,KAAK,4CACPuB,QAAQ,KAAK,MAAb,GAAsBE,OAAO,CAAChB,YAA9B,GAA6CgB,OAAO,CAACX,QAD9C,CAAX;AAGA,MAAM;AAAEY,IAAAA;AAAF,MAAa5B,2EAAe,EAAlC;AACA,MAAM6B,UAAU,GAAGD,MAAM,GAAG,QAAH,GAAc,SAAvC;AACA,MAAME,UAAU,GAAGlC,kEAAK,EAAxB;AAEA,MAAMmC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE,CACL,yEADK,EAEL,uCAFK,EAGL,kCAHK,EAIL,0CAJK,EAKL,8CALK,EAML,mEANK,CADE;AASXJ,IAAAA,MAAM,EAAE,CACJ,mCADI,EAEJ,uCAFI,EAGJ,eAHI,EAIJ,yBAJI,EAKJ,iBALI,EAMJ,kBANI,EAOJ,sBAPI,EAQJ,qBARI,EASJ,uBATI,EAUJ,wBAVI,EAWJ,4CAXI,EAYJ,wBAZI;AATG,GAAf;AAwBA,MAAMK,OAAO,GAAG;AACZ,gBAAY,OADA;AAEZ,aAAS,OAFG;AAGZ,mBAAe,aAHH;AAIZ,eAAW,SAJC;AAKZ,kBAAc,aALF;AAMZ,mBAAe,SANH;AAOZ,oBAAgB,SAPJ;AAQZ,qBAAiB,QARL;AASZ,sBAAkB,QATN;AAUZ,iBAAa,OAVD;AAWZ,kBAAc,OAXF;AAYZ,kBAAc,OAZF;AAaZ,mBAAe,OAbH;AAcZ,eAAW;AAdC,GAAhB;;AAgBA,MAAMC,sBAAsB,GAAI9D,IAAD,IAAkB;AAC7CA,IAAAA,IAAI,GAAGA,IAAI,CAAC+D,WAAL,GAAmBC,OAAnB,CAA2B,OAA3B,EAAoC,EAApC,CAAP;AACA,QAAIxF,WAAW,GAAGyE,SAAlB;AACA,QAAIxE,YAAY,GAAG0E,UAAnB;AACA,QAAMc,IAAI,GAAGtC,yFAAS,CAAC3B,IAAD,CAAtB;AACA,QAAMkE,KAAK,GAAGzC,6FAAa,CAACzB,IAAD,CAA3B;;AACA,QAAIiE,IAAJ,EAAU;AACN,UAAIA,IAAI,KAAKnG,QAAb,EAAuBU,WAAW,GAAGwE,SAAd,CAAvB,KACKxE,WAAW,GAAGyF,IAAd;AACR,KAHD,MAGO;AACH,UAAIC,KAAJ,EAAW;AACP,YAAIzF,YAAY,GAAGyF,KAAnB,EAA0BzF,YAAY,IAAI,CAACyF,KAAjB,CAA1B,KACKzF,YAAY,IAAIyF,KAAhB;AACR;AACJ;;AACDhB,IAAAA,YAAY,CAAC1E,WAAD,CAAZ;AACA4E,IAAAA,cAAc,CAAC3E,YAAD,CAAd;AACA+B,IAAAA,QAAQ,CAAChC,WAAD,EAAcC,YAAd,CAAR;AACH,GAlBD,CA9DD,CAkFC;;;AACAwC,EAAAA,gDAAS,CAAC,MAAM;AACZ,QAAInD,QAAQ,KAAKkF,SAAjB,EAA4B;AACxB,UAAID,YAAJ,EACIoB,OAAO,CAACC,IAAR;AACJlB,MAAAA,YAAY,CAACpF,QAAD,CAAZ;AACH;AACJ,GANQ,EAMN,CAACA,QAAD,CANM,CAAT;AAOAmD,EAAAA,gDAAS,CAAC,MAAM;AACZ,QAAIjD,SAAS,KAAKgF,SAAlB,EAA6B;AACzB,UAAID,YAAJ,EACIoB,OAAO,CAACC,IAAR;AACJhB,MAAAA,cAAc,CAACpF,SAAD,CAAd;AACH;AACJ,GANQ,EAMN,CAACA,SAAD,CANM,CAAT;AAQA,MAAM6C,KAAK,GAAGa,qGAAiB,CAACuB,SAAD,EAAYE,UAAZ,EAAwB,KAAxB,CAA/B;AACAlC,EAAAA,gDAAS,CAAC,MAAM;AAAA;;AACZ,4BAAAqC,YAAW,CAACe,OAAZ,8EAAqBC,cAArB,CAAoCzD,KAApC,EAA2C,gBAA3C;AACA,WAAO;AAAA;;AAAA,sCACHyC,YAAW,CAACe,OADT,0DACH,sBAAqBE,iBAArB,CAAuC1D,KAAvC,EAA8C,gBAA9C,CADG;AAAA,KAAP;AAEH,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACI,iDAAC,8DAAD;AACI,aAAS,EAAE6C,UADf;AAEI,eAAW,EAAEc,CAAC,IAAKlB,YAAW,CAACe,OAAZ,GAAsBG,CAF7C;AAGI,cAAU,EAAEV,sBAHhB;AAII,UAAM,EAAEH,MAJZ;AAKI,cAAU,EAAEF,UALhB;AAMI,SAAK,EAAE3B,KANX;AAOI,WAAO,EAAE+B,OAPb;AAQI,gBAAY,EAAE;AARlB,IADJ;AAYH;;;;;;;;;;;;;;;;;AC1KD;AAOA;AACA;AAEe,SAAStD,eAAT,CAAyB5C,KAAzB,EAcZ;AACC,MAAM;AACF+C,IAAAA,KADE;AAEFmE,IAAAA,SAFE;AAGFC,IAAAA,QAHE;AAIF1F,IAAAA,QAJE;AAKFyB,IAAAA,KALE;AAMFkE,IAAAA,KANE;AAOFC,IAAAA,WAPE;AAQFxE,IAAAA,QARE;AASFyE,IAAAA,OATE;AAUFC,IAAAA,QAVE;AAWFC,IAAAA,UAXE;AAYFC,IAAAA,IAZE;AAaFC,IAAAA;AAbE,MAcF1H,KAdJ;AAeA,MAAM2H,OAAO,GAAG9D,kEAAK,EAArB;AACA,MAAM+D,OAAO,GAAG/D,kEAAK,EAArB;AACA,MAAMT,EAAE,GAAGS,kEAAK,EAAhB;AACA,MAAMgE,QAAQ,GAAG,CAAC,CAACL,UAAF,IAAgB,CAAC,CAACJ,KAAnC;AAEA,sBACI,iDAAC,kEAAD;AAAa,aAAS,EAAEF,SAAxB;AAAmC,WAAO,EAAC;AAA3C,kBACI,iDAAC,kEAAD;AAAY,MAAE,EAAES,OAAhB;AAAyB,OAAG,EAAC;AAA7B,KACKR,QAAQ,GAAMpE,KAAN,UAAkBA,KAD/B,CADJ,eAII,iDAAC,kEAAD;AACI,MAAE,EAAEK,EADR;AAEI,YAAQ,EAAE3B,QAFd;AAGI,SAAK,EAAEsB,KAHX;AAII,SAAK,EAAEG,KAJX;AAKI,SAAK,EAAE,CAAC,CAACkE,KALb;AAMI,aAAS,EAAE,IANf;AAOI,eAAW,EAAEC,WAPjB;AAQI,QAAI,EAAEI,IARV;AASI,WAAO,EAAEE,OATb;AAUI,wBAAkBE,QAAQ,GAAGD,OAAH,GAAavC,SAV3C;AAWI,YAAQ,EAAExC,QAXd;AAYI,WAAO,EAAEyE;AAZb,KAcKI,IAAI,KAAKrC,SAAT,iBACG,iDAAC,kEAAD;AAAU,OAAG,EAAE,MAAf;AAAuB,SAAK,EAAE;AAA9B,KACKqC,IADL,CAfR,EAmBKH,QAnBL,CAJJ,EAyBKM,QAAQ,iBACL,iDAAC,kEAAD;AAAgB,MAAE,EAAED;AAApB,KACKR,KAAK,IAAII,UADd,CA1BR,CADJ;AAiCH","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Keyboard.js","webpack://jacdac-docs/./src/components/dashboard/DashboardHIDKeyboard.tsx","webpack://jacdac-docs/./src/components/hooks/useEvents.ts","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/select/SelectEvent.tsx","webpack://jacdac-docs/./src/components/ui/KeyboardKeyInput.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z\"\n}), 'Keyboard');\n\nexports.default = _default;","import React, { useCallback, useContext, useEffect, useState } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport {\n    HidKeyboardAction,\n    HidKeyboardCmd,\n    HidKeyboardModifiers,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport CmdButton from \"../CmdButton\"\nimport ClearIcon from \"@material-ui/icons/Clear\"\nimport KeyboardKeyInput from \"../ui/KeyboardKeyInput\"\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\"\nimport SelectEvent from \"../select/SelectEvent\"\nimport useEvents from \"../hooks/useEvents\"\nimport useChange from \"../../jacdac/useChange\"\nimport { EVENT } from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function DashboardHIDKeyboard(props: DashboardServiceProps) {\n    const { service } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const events = useEvents({ ignoreChange: true })\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n\n    const handleClick = useCallback(async () => {\n        const unpacked: [[number, HidKeyboardModifiers, HidKeyboardAction][]] =\n            [[[selector, modifiers, HidKeyboardAction.Press]]]\n        const data = jdpack(\"r: u16 u8 u8\", unpacked)\n        await service.sendCmdAsync(HidKeyboardCmd.Key, data)\n    }, [selector, modifiers, service])\n\n    useChange(\n        bus,\n        () => {\n            const triggerEvent = bus.node(triggerEventId) as JDEvent\n            const un = triggerEvent?.subscribe(EVENT, handleClick)\n            return () => un?.()\n        },\n        [triggerEventId, handleClick]\n    )\n\n    const disabled = !selector && !modifiers\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <KeyboardKeyInput\n                    selector={selector}\n                    modifiers={modifiers}\n                    onChange={handleKeyChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <CmdButton\n                            variant=\"outlined\"\n                            title=\"send keys\"\n                            disabled={disabled}\n                            onClick={handleClick}\n                            icon={<KeyboardIcon />}\n                        >\n                            Send keys\n                        </CmdButton>\n                    </Grid>\n                    <Grid item>\n                        <SelectEvent\n                            events={events}\n                            eventId={triggerEventId}\n                            onChange={handleTriggerChange}\n                            label={\"Choose Send Key event\"}\n                            friendlyName={true}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","import { SystemEvent } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"./useServices\"\n\nexport default function useEvents(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n    ignoreChange?: boolean\n}) {\n    const { ignoreChange } = options || {}\n    const services = useServices(options)\n    let events = arrayConcatMany(services.map(srv => srv.events))\n    if (ignoreChange)\n        events = events.filter(ev => ev.code !== SystemEvent.StatusCodeChanged && ev.code !== SystemEvent.Change)\n    return events\n}\n","import { useContext } from \"react\"\nimport DeviceFilter from \"../../../jacdac-ts/src/jdom/filters/devicefilter\"\nimport ServiceFilter from \"../../../jacdac-ts/src/jdom/filters/servicefilter\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, _ => _?.services(options) || [], [\n        JSON.stringify(options),\n    ])\n    return services\n}\n","import React from \"react\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectEvent(props: {\n    events: JDEvent[]\n    eventId: string\n    onChange: (eventId: string) => void\n    friendlyName?: boolean,\n    label?: string\n}) {\n    const { events, eventId, onChange, friendlyName, label } = props\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string)\n    }\n\n    return (\n        <SelectWithLabel\n            helperText={label || \"choose an event\"}\n            value={eventId}\n            onChange={handleChange}\n            disabled={!events?.length}\n            none={\"None\"}\n        >\n            {events?.map(ev => (\n                <MenuItem key={ev.id} value={ev.id}>\n                    {friendlyName ? ev.friendlyName : ev.name}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport Keyboard from \"react-simple-keyboard\"\nimport \"react-simple-keyboard/build/css/index.css\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useId } from \"react-use-id-hook\"\nimport {\n    modifierCodes,\n    renderKeyboardKey,\n    selectors,\n} from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        capture: {\n            cursor: \"pointer\",\n            \"&:hover\": {\n                borderColor: theme.palette.primary.main,\n            },\n            \"&:focus\": {\n                borderColor: theme.palette.action.active,\n            },\n        },\n        darkKeyboard: {\n            backgroundColor: \"#333 !important\",\n            borderColor: \"#777 !important\",\n            color: \"white !important\",\n            \"& .hg-button\": {\n                background: \"rgba(0, 0, 0, 0.5) !important\",\n                color: \"white\",\n            },\n            \"& .hg-button.buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n        keyboard: {\n            \"& .buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n    })\n)\n\nexport default function KeyboardKeyInput(props: {\n    initialSelector?: number\n    initialModifiers?: HidKeyboardModifiers\n    selector?: number\n    modifiers?: HidKeyboardModifiers\n    onChange: (newSelector: number, newModifiers: HidKeyboardModifiers) => void\n}) {\n    const { initialSelector, initialModifiers, selector, modifiers, onChange } =\n        props\n    const uncontrolled = useMemo(\n        () => selector === undefined || modifiers === undefined,\n        []\n    )\n    const [selector_, setSelector_] = useState<number>(initialSelector || 0)\n    const [modifiers_, setModifiters_] = useState<HidKeyboardModifiers>(\n        initialModifiers || HidKeyboardModifiers.None\n    )\n    const { darkMode } = useContext(DarkModeContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyboardRef = useRef<any>()\n    const classes = useStyles()\n    const theme = `hg-theme-default hg-layout-default ${\n        darkMode === \"dark\" ? classes.darkKeyboard : classes.keyboard\n    }`\n    const { mobile } = useMediaQueries()\n    const layoutName = mobile ? \"mobile\" : \"default\"\n    const keyboardId = useId()\n\n    const layout = {\n        default: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6 7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space} {metaright} {altright}\",\n        ],\n        mobile: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5}\",\n            \"{f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6\",\n            \"7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t\",\n            \"y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g\",\n            \"h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b\",\n            \"n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space}\",\n            \"{metaright} {altright}\",\n        ],\n    }\n    const display = {\n        \"{escape}\": \"esc ⎋\",\n        \"{tab}\": \"tab ⇥\",\n        \"{backspace}\": \"backspace ⌫\",\n        \"{enter}\": \"enter ↵\",\n        \"{capslock}\": \"caps lock ⇪\",\n        \"{shiftleft}\": \"shift ⇧\",\n        \"{shiftright}\": \"shift ⇧\",\n        \"{controlleft}\": \"ctrl ⌃\",\n        \"{controlright}\": \"ctrl ⌃\",\n        \"{altleft}\": \"alt ⌥\",\n        \"{altright}\": \"alt ⌥\",\n        \"{metaleft}\": \"cmd ⌘\",\n        \"{metaright}\": \"cmd ⌘\",\n        \"{space}\": \"⎵\",\n    }\n    const handleKeyboardKeyPress = (code: string) => {\n        code = code.toLowerCase().replace(/[{}]/g, \"\")\n        let newSelector = selector_\n        let newModifiers = modifiers_\n        const msel = selectors[code]\n        const mcode = modifierCodes[code]\n        if (msel) {\n            if (msel === selector) newSelector = undefined\n            else newSelector = msel\n        } else {\n            if (mcode) {\n                if (newModifiers & mcode) newModifiers &= ~mcode\n                else newModifiers |= mcode\n            }\n        }\n        setSelector_(newSelector)\n        setModifiters_(newModifiers)\n        onChange(newSelector, newModifiers)\n    }\n\n    // update external values\n    useEffect(() => {\n        if (selector !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled selector`)\n            setSelector_(selector)\n        }\n    }, [selector])\n    useEffect(() => {\n        if (modifiers !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled modifier`)\n            setModifiters_(modifiers)\n        }\n    }, [modifiers])\n\n    const value = renderKeyboardKey(selector_, modifiers_, false)\n    useEffect(() => {\n        keyboardRef.current?.addButtonTheme(value, \"buttonSelected\")\n        return () =>\n            keyboardRef.current?.removeButtonTheme(value, \"buttonSelected\")\n    }, [value])\n\n    return (\n        <Keyboard\n            baseClass={keyboardId}\n            keyboardRef={r => (keyboardRef.current = r)}\n            onKeyPress={handleKeyboardKeyPress}\n            layout={layout}\n            layoutName={layoutName}\n            theme={theme}\n            display={display}\n            mergeDisplay={true}\n        />\n    )\n}\n","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SelectWithLabel(props: {\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown }>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n}) {\n    const {\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n    } = props\n    const labelId = useId()\n    const descrId = useId()\n    const id = useId()\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                id={id}\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n            >\n                {none !== undefined && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n"],"names":["React","useCallback","useContext","useState","Grid","HidKeyboardAction","HidKeyboardCmd","HidKeyboardModifiers","jdpack","CmdButton","KeyboardKeyInput","KeyboardIcon","SelectEvent","useEvents","useChange","EVENT","JacdacContext","DashboardHIDKeyboard","props","service","bus","selector","setSelector","modifiers","setModifiers","None","triggerEventId","setTriggerEventId","events","ignoreChange","handleKeyChange","newSelector","newModifiers","handleClick","unpacked","Press","data","sendCmdAsync","Key","triggerEvent","node","un","subscribe","disabled","handleTriggerChange","eventId","SystemEvent","arrayConcatMany","useServices","options","services","map","srv","filter","ev","code","StatusCodeChanged","Change","_","JSON","stringify","MenuItem","SelectWithLabel","onChange","friendlyName","label","handleChange","target","value","length","id","name","useEffect","useMemo","useRef","createStyles","makeStyles","Keyboard","DarkModeContext","useId","modifierCodes","renderKeyboardKey","selectors","useMediaQueries","useStyles","theme","capture","cursor","borderColor","palette","primary","main","action","active","darkKeyboard","backgroundColor","color","background","dark","keyboard","initialSelector","initialModifiers","uncontrolled","undefined","selector_","setSelector_","modifiers_","setModifiters_","darkMode","keyboardRef","classes","mobile","layoutName","keyboardId","layout","default","display","handleKeyboardKeyPress","toLowerCase","replace","msel","mcode","console","warn","current","addButtonTheme","removeButtonTheme","r","FormControl","FormHelperText","InputLabel","Select","fullWidth","required","error","placeholder","onClose","children","helperText","type","none","labelId","descrId","hasDescr"],"sourceRoot":""}