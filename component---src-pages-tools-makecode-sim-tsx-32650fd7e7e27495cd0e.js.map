{"version":3,"sources":["webpack:///./src/components/makecode/MakeCodeSim.tsx","webpack:///./src/pages/tools/makecode-sim.tsx","webpack:///./src/components/dashboard/DashboardDeviceItem.tsx"],"names":["deviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","map","specification","filter","spec","rs","strcmp","deviceId","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_SETTINGS","SRV_ROLE_MANAGER","SRV_POWER","Carousel","useContext","AppContext","toggleShowDeviceHostsDialog","devices","useDevices","announced","ignoreSelf","device","serviceClasses","sc","indexOf","length","sort","handleAdd","extensions","unique","arrayConcatMany","resolveMakecodeServiceFromClassIdentifier","serviceClass","info","client","repo","q","window","parent","postMessage","type","broadcast","id","VIRTUAL_DEVICE_NODE_NAME","Page","DarkModeContext","toggleDarkMode","rawTheme","createMuiTheme","palette","primary","main","secondary","contrastThreshold","theme","responsiveFontSizes","useEffect","DashboardDeviceItem","props","expanded","toggleExpanded","variant","other","breakpoints","useChange","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","xs","sm","md","lg","xl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAT,CAAoBC,CAApB,EAAiCC,CAAjC,EAAsD;AAClD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WAA6BA,GAAG,CAACC,OAAJ,CACzCC,MADyC,CAClC,UAACC,IAAD,EAAOC,GAAP;AAAA,aAAeD,IAAI,IAAIE,iCAAS,CAACD,GAAD,CAAT,GAAiB,EAAjB,GAAsBE,0CAAkB,CAACF,GAAD,CAAlB,GAA0B,CAA1B,GAA8B,CAAxD,CAAnB;AAAA,KADkC,EAC6C,CAD7C,KACmD,CADhF;AAAA,GAAjB;;AAEA,MAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WAAgCA,IAAI,CAACN,MAAL,CAAY,UAACC,IAAD,EAAOH,GAAP;AAAA,aAAeD,QAAQ,CAACC,GAAD,CAAvB;AAAA,KAAZ,EAA0C,CAA1C,CAAhC;AAAA,GAAd;;AAEA,MAAMS,EAAE,GAAGF,KAAK,CAACV,CAAC,CAACa,QAAF,GAAaC,KAAb,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,UAAAZ,GAAG;AAAA,WAAIA,GAAG,CAACa,aAAR;AAAA,GAA7B,EAAoDC,MAApD,CAA2D,UAAAC,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAA/D,CAAD,CAAhB;AACA,MAAMC,EAAE,GAAGT,KAAK,CAACT,CAAC,CAACY,QAAF,GAAaC,KAAb,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,UAAAZ,GAAG;AAAA,WAAIA,GAAG,CAACa,aAAR;AAAA,GAA7B,EAAoDC,MAApD,CAA2D,UAAAC,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAA/D,CAAD,CAAhB;AACA,MAAIN,EAAE,KAAKO,EAAX,EACI,OAAO,CAACP,EAAD,GAAMO,EAAb;AACJ,SAAOC,+BAAM,CAACpB,CAAC,CAACqB,QAAH,EAAapB,CAAC,CAACoB,QAAf,CAAb;AACH,C,CAED;;;AACA,IAAMC,eAAe,GAAG,CACpBC,iCADoB,EAEpBC,gCAFoB,EAGpBC,kCAHoB,EAIpBC,sCAJoB,EAKpBC,+BALoB,CAAxB;;AAQA,SAASC,QAAT,GAAoB;AAAA,oBACwBC,2BAAU,CAACC,6BAAD,CADlC;AAAA,MACRC,2BADQ,eACRA,2BADQ;;AAEhB,MAAMC,OAAO,GAAGC,qCAAU,CAAC;AAAEC,aAAS,EAAE,IAAb;AAAmBC,cAAU,EAAE;AAA/B,GAAD,CAAV,CACZ;AADY,GAEXlB,MAFW,CAEJ,UAAAmB,MAAM;AAAA,WAAIA,MAAM,CAACC,cAAP,CAAsBpB,MAAtB,CAA6B,UAAAqB,EAAE;AAAA,aAAIhB,eAAe,CAACiB,OAAhB,CAAwBD,EAAxB,IAA8B,CAAlC;AAAA,KAA/B,EAAoEE,MAAxE;AAAA,GAFF,EAGZ;AAHY,GAIXC,IAJW,CAIN1C,UAJM,CAAhB;;AAKA,MAAM2C,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB;AACA;AACA,QAAMC,UAAU,GAAGC,+BAAM,CACrBC,wCAAe,CACXb,OAAO,CAACjB,GAAR,CAAY,UAAAqB,MAAM;AAAA,aAAIA,MAAM,CAACvB,QAAP,GACjBE,GADiB,CACb,UAAAZ,GAAG;AAAA,eAAI2C,iEAAyC,CAAC3C,GAAG,CAAC4C,YAAL,CAA7C;AAAA,OADU,EAEjBhC,GAFiB,CAEb,UAAAiC,IAAI;AAAA,eAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,MAAN,CAAaC,IAAjB;AAAA,OAFS,EAGjBjC,MAHiB,CAGV,UAAAkC,CAAC;AAAA,eAAI,CAAC,CAACA,CAAN;AAAA,OAHS,CAAJ;AAAA,KAAlB,CADW,CADM,CAAzB;;AASA,QAAIR,UAAJ,aAAIA,UAAJ,eAAIA,UAAU,CAAEH,MAAhB,EAAwB;AACpB;AACAY,YAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B;AACtBC,YAAI,EAAE,eADgB;AAEtBZ,kBAAU,EAAVA,UAFsB;AAGtBa,iBAAS,EAAE;AAHW,OAA1B,EAIG,GAJH;AAKH;AACJ,GApBD;;AAsBA,sBAAO,8BAAC,uBAAD;AAAM,aAAS,MAAf;AAAgB,cAAU,EAAC,YAA3B;AAAwC,WAAO,EAAE;AAAjD,KACFxB,OAAO,CAACjB,GAAR,CAAY,UAAAqB,MAAM;AAAA,wBAAI,8BAAC,sCAAD;AAAqB,SAAG,EAAEA,MAAM,CAACqB,EAAjC;AACnB,YAAM,EAAErB,MADW;AACH,gBAAU,EAAE,IADT;AACe,gBAAU,EAAE;AAD3B,MAAJ;AAAA,GAAlB,CADE,eAGH,8BAAC,uBAAD;AAAM,QAAI;AAAV,kBACI,8BAAC,uBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC;AAAtC,kBACI,8BAAC,uBAAD;AAAM,QAAI;AAAV,kBACI,8BAAC,yBAAD;AAAQ,QAAI,EAAC,QAAb;AAAsB,WAAO,EAAC,WAA9B;AAA0C,aAAS,eAAE,8BAAC,2BAAD;AAAU,UAAI,EAAEsB,8CAAwBA;AAAxC,MAArD;AACI,WAAO,EAAE3B,2BADb;AAC0C,kBAAY;AADtD,uBADJ,CADJ,EAKK,CAAC,EAACC,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEQ,MAAV,CAAD,iBAAqB,8BAAC,uBAAD;AAAM,QAAI;AAAV,kBAClB,8BAAC,yBAAD;AAAQ,QAAI,EAAC,QAAb;AAAsB,SAAK,EAAC,SAA5B;AAAsC,WAAO,EAAC,WAA9C;AAA0D,aAAS,eAAE,8BAAC,+BAAD,OAArE;AACI,WAAO,EAAEE,SADb;AACwB,kBAAY;AADpC,kBADkB,CAL1B,CADJ,CAHG,CAAP;AAgBH;;AAEc,SAASiB,IAAT,GAAgB;AAAA,qBACA9B,2BAAU,CAAC+B,kCAAD,CADV;AAAA,MACnBC,cADmB,gBACnBA,cADmB;;AAE3B,MAAMC,QAAQ,GAAGC,yCAAc,CAAC;AAC5BC,WAAO,EAAE;AACLC,aAAO,EAAE;AACLC,YAAI,EAAE;AADD,OADJ;AAILC,eAAS,EAAE;AACPD,YAAI,EAAE;AADC,OAJN;AAOLE,uBAAiB,EAAE,GAPd;AAQLb,UAAI,EAAE;AARD;AADmB,GAAD,CAA/B;AAYA,MAAMc,KAAK,GAAGC,8CAAmB,CAACR,QAAD,CAAjC;AAEAS,4BAAS,CAAC;AAAA,WAAMV,cAAc,CAAC,MAAD,CAApB;AAAA,GAAD,EAA+B,EAA/B,CAAT,CAhB2B,CAgBkB;;AAE7C,sBAAO,8BAAC,+BAAD;AAAc,SAAK,EAAEQ;AAArB,kBACH,8BAAC,yBAAD,qBACI,iLADJ,CADG,eAcH,8BAAC,QAAD,OAdG,CAAP;AAgBH,C;;ACvHD;AACA;AAEe,SAASV,iBAAT,GAAgB;AAC3B,sBAAO,8BAAC,IAAD,OAAP;AACH,C;;;;;;;;;;;;;;;;;ACLD;AACA;AAEA;AAGA;AACA;AAEe,SAASa,mBAAT,CAA6BC,KAA7B,EAKW;AAAA,MACdrC,MADc,GAC0CqC,KAD1C,CACdrC,MADc;AAAA,MACNsC,QADM,GAC0CD,KAD1C,CACNC,QADM;AAAA,MACIC,cADJ,GAC0CF,KAD1C,CACIE,cADJ;AAAA,MACoBC,OADpB,GAC0CH,KAD1C,CACoBG,OADpB;AAAA,MACgCC,KADhC,mHAC0CJ,KAD1C;;AAEtB,MAAMK,WAA4B,GAAGC,yEAAS,CAAC3C,MAAD,EAAS,YAAM;AACzD,QAAM4C,gBAAgB,GAAG5C,MAAM,CAACvB,QAAP,GACpBE,GADoB,CAChB,UAAAZ,GAAG,EAAI;AACR,aAAO8E,8FAAsB,CAAC9E,GAAD,CAAtB,KACCA,GAAG,CAAC+E,eAAJ,IAAuB/E,GAAG,CAACgF,aAA3B,IAA4ChF,GAAG,CAACiF,iBAAhD,GAAoE,CAApE,GAAwE,CADzE,CAAP;AAEH,KAJoB,EAKpB/E,MALoB,CAKb,UAACgF,CAAD,EAAYC,CAAZ;AAAA,aAAkBD,CAAC,GAAGC,CAAtB;AAAA,KALa,EAKY,CALZ,CAAzB;AAOA,QAAIN,gBAAgB,GAAG,CAAvB,EACI,OAAO;AAAEO,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,EAAtB;AAA0BC,QAAE,EAAE,CAA9B;AAAiCC,QAAE,EAAE;AAArC,KAAP,CADJ,KAEK,IAAIX,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEO,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,CAAtB;AAAyBC,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE;AAApC,KAAP,CADC,KAEA,IAAIX,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEO,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,CAAd;AAAiBC,QAAE,EAAE,CAArB;AAAwBC,QAAE,EAAE,CAA5B;AAA+BC,QAAE,EAAE;AAAnC,KAAP,CADC,KAGD,OAAO;AAAEJ,QAAE,EAAEb,QAAQ,GAAG,EAAH,GAAQ,CAAtB;AAAyBc,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE,CAApC;AAAuCC,QAAE,EAAE,CAA3C;AAA8CC,QAAE,EAAE;AAAlD,KAAP;AACP,GAhB6C,EAgB3C,CAACjB,QAAD,CAhB2C,CAA9C,CAFsB,CAoBtB;;AACA,sBAAO,2DAAC,iEAAD;AAAM,QAAI;AAAV,KAAeI,WAAf,gBACH,2DAAC,gEAAD;AACI,UAAM,EAAE1C,MADZ;AAEI,YAAQ,EAAEsC,QAFd;AAGI,kBAAc,EAAEC,cAHpB;AAII,WAAO,EAAEC;AAJb,KAKQC,KALR,EADG,CAAP;AASH,C","file":"component---src-pages-tools-makecode-sim-tsx-32650fd7e7e27495cd0e.js","sourcesContent":["import React, { useContext, useEffect } from \"react\"\nimport { Button, createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport ThemedLayout from \"../../components/ui/ThemedLayout\";\nimport { Grid } from \"@material-ui/core\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport { isReading, isValueOrIntensity, resolveMakecodeServiceFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\";\nimport { arrayConcatMany, strcmp, unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport useDevices from \"../hooks/useDevices\";\nimport { SRV_CONTROL, SRV_LOGGER, SRV_POWER, SRV_ROLE_MANAGER, SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\";\nimport MakeCodeIcon from \"../icons/MakeCodeIcon\"\nimport DashboardDeviceItem from \"../dashboard/DashboardDeviceItem\";\nimport Helmet from \"react-helmet\"\nimport DarkModeContext from \"../ui/DarkModeContext\";\nimport KindIcon from \"../KindIcon\";\nimport AppContext from \"../AppContext\";\nimport { VIRTUAL_DEVICE_NODE_NAME } from \"../../../jacdac-ts/src/jdom/constants\";\n\nfunction deviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) => srv.packets\n        .reduce((prev, pkt) => prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0), 0) || 0;\n    const score = (srvs: jdspec.ServiceSpec[]) => srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(l.services().slice(1).map(srv => srv.specification).filter(spec => !!spec))\n    const rs = score(r.services().slice(1).map(srv => srv.specification).filter(spec => !!spec))\n    if (ls !== rs)\n        return -ls + rs;\n    return strcmp(l.deviceId, r.deviceId);\n}\n\n// hide the makecode device itself and power devices\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n    SRV_ROLE_MANAGER,\n    SRV_POWER\n]\n\nfunction Carousel() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        // ignore MakeCode device (role manager) and power devices\n        .filter(device => device.serviceClasses.filter(sc => ignoredServices.indexOf(sc) < 0).length)\n        // show best in front\n        .sort(deviceSort);\n    const handleAdd = () => {\n        // list all devices connected to the bus\n        // and query for them, let makecode show the missing ones\n        const extensions = unique(\n            arrayConcatMany(\n                devices.map(device => device.services()\n                    .map(srv => resolveMakecodeServiceFromClassIdentifier(srv.serviceClass))\n                    .map(info => info?.client.repo)\n                    .filter(q => !!q)\n                )\n            )\n        );\n        if (extensions?.length) {\n            // send message to makecode\n            window.parent.postMessage({\n                type: \"addextensions\",\n                extensions,\n                broadcast: true\n            }, \"*\")\n        }\n    }\n\n    return <Grid container alignItems=\"flex-start\" spacing={1}>\n        {devices.map(device => <DashboardDeviceItem key={device.id}\n            device={device} showAvatar={true} showHeader={true} />)}\n        <Grid item>\n            <Grid container spacing={1} direction=\"row\">\n                <Grid item>\n                    <Button size=\"medium\" variant=\"contained\" startIcon={<KindIcon kind={VIRTUAL_DEVICE_NODE_NAME} />}\n                        onClick={toggleShowDeviceHostsDialog} aria-label={\"Start Simulator\"}>Start simulator</Button>\n                </Grid>\n                {!!devices?.length && <Grid item>\n                    <Button size=\"medium\" color=\"primary\" variant=\"contained\" startIcon={<MakeCodeIcon />}\n                        onClick={handleAdd} aria-label={\"Add blocks\"}>Add blocks</Button>\n                </Grid>}\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\nexport default function Page() {\n    const { toggleDarkMode } = useContext(DarkModeContext);\n    const rawTheme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#63c',\n            },\n            secondary: {\n                main: '#ffc400',\n            },\n            contrastThreshold: 5.1,\n            type: \"dark\"\n        },\n    })\n    const theme = responsiveFontSizes(rawTheme);\n\n    useEffect(() => toggleDarkMode('dark'), []); // always dark mode\n\n    return <ThemedLayout theme={theme}>\n        <Helmet>\n            <style>\n                {`\nhtml {\n    margin-right: 4px;\n    overflow-y: auto !important;\n}\nhtml, body {\n    background: transparent !important;\n}\n`}\n            </style>\n        </Helmet>\n        <Carousel />\n    </ThemedLayout>\n}\n","import React from \"react\"\nimport MakeCodeSim from \"../../components/makecode/MakeCodeSim\"\n\nexport default function Page() {\n    return <MakeCodeSim />\n}","import { Grid } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}"],"sourceRoot":""}