{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx"],"names":["refresh_env","registers","k","register","retry","val","undefined","refresh","unpackedValue","writeReg","reg","fmt","ev","sendSetPackedAsync","sendCommand","service","pkt","values","sendCmdAsync","identifier","jdpack","packFormat","VMServiceEnvironment","_registers","_events","registerRegister","regName","handler","specification","packets","find","isRegister","name","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","command","commandName","p","isCommand","writeRegister","jdreg","lookup","e","root","type","object","fld","property","field","fields","f","value","refreshEnvironment","JDServiceClient","VMEnvironment","notifyOnChange","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","serviceEnv","getService","getRootName","Object","forEach","s","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","id","lit","getServiceFromRole","info","shortId","roles","pair","serviceSpecificationFromName","serviceShortName","checkProgram","prog","errors","errorFun","file","line","message","symbolResolver","SpecSymbolResolver","checker","CheckExpression","_","handlers","h","commands","c","check","IT4Functions","split","events","args","prompt","context","MyRoleManager","bus","notify","_roles","_devices","on","DEVICE_ANNOUNCE","dev","addServices","DEVICE_DISCONNECT","removeServices","services","keys","nameMatch","shortName","indexOf","filter","d","n1","n2","cn1","slice","toLowerCase","replace","trim","cn2","getServicesFromName","addRoleService","existingServices","VMStatus","IT4CommandEvaluator","gc","_regSaved","_changeSaved","_started","evalExpression","expr","checkExpression","start","inst","evaluate","_status","Running","a","Completed","regValue","Stopped","IT4CommandRunner","_eval","step","isWaiting","finish","status","cancel","IT4HandlerRunner","stopped","reset","_commandIndex","_currentCommand","post_process","Ready","IT4ProgramRunner","program","_waitQueue","_running","regs","console","debug","_rm","_env","r","emit","ERROR","run","_handlers","index","nextTime","VMRunner","props","autoStartDefault","autoStart","useContext","JacdacContext","useState","testRunner","setTestRunner","setAutoStart","useEffect","runner","disabled","useChange","t","handleRun","handleCancel","running"],"mappings":"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","file":"8681e1d67a6dd0cf4967cae72c671a181d17268f-7534053f0a915b3d2701.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","import { isEvent, isRegister, isCommand } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { jdpack, PackedValues } from \"../jdom/pack\"\n\nexport async function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\n// TODO: you want [ev] to be PackedValues and handle the arrays yourself.\nasync function writeReg(reg: JDRegister, fmt: string, ev: any) {\n    await reg.sendSetPackedAsync(fmt, [ev], true)\n}\n\nasync function sendCommand(\n    service: JDService,\n    pkt: jdspec.PacketInfo,\n    values: PackedValues\n) {\n    // console.log(pkt, values)\n    await service.sendCmdAsync(\n        pkt.identifier,\n        jdpack(pkt.packFormat, values),\n        true\n    )\n}\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    public sendCommand(command: jsep.Identifier, values: PackedValues) {\n        const commandName = command?.name\n        const pkt = this.service.specification.packets.find(\n            p => isCommand(p) && p.name === commandName\n        )\n        if (pkt) sendCommand(this.service, pkt, values)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public writeRegister(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        if (jdreg) {\n            writeReg(jdreg, jdreg.specification?.packFormat, ev)\n            return true\n        }\n        return false\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this._registers)\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(private readonly notifyOnChange: () => void) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, this.notifyOnChange)\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.notifyOnChange()\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        return this._envs[root]\n    }\n\n    public refreshEnvironment() {\n        Object.values(this._envs).forEach(s => s?.refreshEnvironment())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public sendCommand(e: jsep.MemberExpression, values: PackedValues) {\n        const serviceEnv = this.getService(e)\n        if (serviceEnv) {\n            serviceEnv.sendCommand(e.property as jsep.Identifier, values)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return undefined\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public writeRegister(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.writeRegister(reg, ev)\n        }\n        return false\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        Object.values(this._envs).forEach(vs => vs.unmount())\n    }\n}\n","/*\nThe JD-VM runs a program, which is a set of handlers. Each handler is of the form\n•\twait on event/condition, followed by a\n•\tsequence of guarded commands – the sequence is executed atomically (though may suspend if it contains a wait)\nAfter a handler finishes executing, it restarts (there is an implicit event loop around all the handlers, as usual). \n \nWe will have a small key-value store to keep program state (perhaps we will have the ability to store lists of values as well as basic values) across the handler executions.\n \nCommands can talk to JD services (probably via roles), as well as read/write program state, and wait on events/expressions. Any command can be guarded by an expression, for conditional execution.\n \nExpressions can be against service registers (as in the test case) and program state.\n \n*/\n\nimport { exception } from \"console\"\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                if (val === undefined)\n                    throw \"undefined-register\"\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                const val = this.env(id.name)\n                if (val === undefined)\n                    throw \"undefined-register\"\n                this.exprStack.push(val)\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    CheckExpression,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\n\nexport interface IT4GuardedCommand {\n    guard?: jsep.Expression\n    command: jsep.CallExpression\n}\n\nexport interface IT4Handler {\n    description?: string\n    commands: IT4GuardedCommand[]\n}\n\nexport interface IT4Role {\n    role: string\n    serviceShortName: string\n}\n\nexport interface IT4Program {\n    description?: string\n    roles: IT4Role[]\n    handlers: IT4Handler[]\n    errors?: jdspec.Diagnostic[]\n}\n\nexport const getServiceFromRole = (info: IT4Program) => (role: string) => {\n    // lookup in roles first\n    let shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        return serviceSpecificationFromName(shortId.serviceShortName)\n    } else {\n        let service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport function checkProgram(prog: IT4Program): [RoleRegister[], RoleEvent[]] {\n    prog.errors = []\n    let errorFun = (e: string) => {\n        prog.errors.push({ file: \"\", line: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new CheckExpression(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        h.commands.forEach(c => {\n            checker.check(c.command, IT4Functions)\n        })\n    })\n    return [\n        symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n    ]\n}\n\nexport type JDIT4Functions =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"role\"\n\nexport const IT4Functions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"role\",\n        args: [\"Identifier\", \"Identifier\"],\n        prompt: `role variable {1} of service type {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n]\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../src/servers/servers\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<JDService | string> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            let role = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] === \"string\" &&\n                    this.nameMatch(\n                        this._roles[k] as string,\n                        s.specification.shortName\n                    )\n            )\n            if (role && this._devices.indexOf(dev) === -1) {\n                this._roles[role] = s\n                this._devices.push(dev)\n                if (this.notify) this.notify(role, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            let role = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] !== \"string\" &&\n                    dev.services().indexOf(this._roles[k] as JDService) >= 0\n            )\n            if (role) {\n                let service = this._roles[role] as JDService\n                this._roles[role] = (\n                    this._roles[role] as JDService\n                ).specification.shortName\n                if (this.notify) this.notify(role, service, false)\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        let s = this._roles[role]\n        return !s || typeof s === \"string\" ? undefined : s\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortName, root))\n    }\n\n    public addRoleService(role: string, serviceShortName: string) {\n        const s = this._roles[role]\n        if (s && typeof s !== \"string\") return\n        this._roles[role] = serviceShortName\n        let existingServices = Object.values(this._roles).filter(s => typeof(s) !== \"string\")\n        let ret = this.getServicesFromName(serviceShortName).filter(s => existingServices.indexOf(s) === -1)\n        if (ret.length > 0) {\n            this._roles[role] = ret[0]\n            this.notify(role, ret[0], true)\n        } else {\n            // spin up a new simulator\n            // let service = serviceSpecificationFromName(serviceShortName)\n            // if (service) {\n            //     let provider = serviceProviderDefinitionFromServiceClass(\n            //         service?.classIdentifier\n            //     )\n            //     if (provider) {\n            //         let serviceProvider = addServiceProvider(this.bus, provider)\n            //     }\n            // }\n        }\n    }\n}\n","import { IT4Program, IT4Handler, IT4GuardedCommand } from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR } from \"../jdom/constants\"\nimport { checkProgram } from \"./ir\"\n\nexport enum VMStatus {\n    Ready = \"ready\",\n    Running = \"running\",\n    Completed = \"completed\",\n    Stopped = \"stopped\",\n}\n\ninterface Environment {\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeRegister: (e: jsep.MemberExpression | string, v: any) => boolean\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    sendCommand: (command: jsep.MemberExpression, values: any[]) => void\n    refreshEnvironment: () => void\n    unsubscribe: () => void\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        private readonly env: Environment,\n        private readonly gc: IT4GuardedCommand\n    ) {}\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")) {\n                // need to capture register value for awaitChange/awaitRegister\n                const args = this.gc.command.arguments\n                this._regSaved = this.evalExpression(args[0])\n                if (this.inst === \"awaitChange\")\n                    this._changeSaved = this.evalExpression(args[1])\n        }\n    }\n\n    public evaluate() {\n        this._status = VMStatus.Running\n        if (!this._started) {\n            this.start()\n            this._started = true\n            return\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            this.env.sendCommand(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            this._status = VMStatus.Completed\n            return\n        }\n        switch (this.inst) {\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {  \n                const regValue = this.evalExpression(args[0])\n                if (this.inst === \"awaitRegister\" && regValue !== this._regSaved ||\n                    this.inst === \"awaitChange\" &&\n                        (this._changeSaved === 0 && regValue !== this._regSaved ||\n                         this._changeSaved < 0 && regValue <= this._regSaved + this._changeSaved ||\n                         this._changeSaved > 0 && regValue >= this._regSaved + this._changeSaved)) {\n                    this._status = VMStatus.Completed\n                }\n                break\n\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                const reg = args[0] as jsep.MemberExpression\n                if (\n                    (this.inst === \"writeRegister\" &&\n                        this.env.writeRegister(reg, ev)) ||\n                    (this.inst === \"writeLocal\" && this.env.writeLocal(reg, ev))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(env: Environment, gc: IT4GuardedCommand) {\n        this._eval = new IT4CommandEvaluator(env, gc)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    step() {\n        if (this.isWaiting) {\n            try {\n                this._eval.evaluate()\n                this.finish(this._eval.status)\n            } catch (e) {\n                // we will try again\n            }\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped = false\n\n    constructor(\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        this.reset()\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this._commandIndex = undefined\n        this._currentCommand = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private post_process() {\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    // run-to-completion semantics\n    step() {\n        // handler stopped or empty\n        if (this.stopped || !this.handler.commands.length) return\n\n        if (this._commandIndex === undefined) {\n            this._commandIndex = 0\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n        }\n        this._currentCommand.step()\n        this.post_process()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this._commandIndex < this.handler.commands.length - 1\n        ) {\n            this._commandIndex++\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n            this._currentCommand.step()\n            this.post_process()\n        }\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[]\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _rm: MyRoleManager\n\n    constructor(private readonly program: IT4Program, bus: JDBus) {\n        super()\n        try {\n            const [regs, events] = checkProgram(program)\n            if (program.errors.length > 0) {\n                console.debug(program.errors)\n            }\n            this._rm = new MyRoleManager(bus, (role, service, added) => {\n                try {\n                    this._env.serviceChanged(role, service, added)\n                    if (added) {\n                        this.program.handlers.forEach(h => {\n                            regs.forEach(r => {\n                                if (r.role === role) {\n                                    this._env.registerRegister(role, r.register)\n                                }\n                            })\n                            events.forEach(e => {\n                                if (e.role === role) {\n                                    this._env.registerEvent(role, e.event)\n                                }\n                            })\n                        })\n                    }\n                } catch (e) {\n                    this.emit(ERROR, e)\n                }\n            })\n            this._env = new VMEnvironment(() => {\n                this.run()\n            })\n            this._handlers = program.handlers.map(\n                (h, index) => new IT4HandlerRunner(index, this._env, h)\n            )\n            this._waitQueue = this._handlers.slice(0)\n        } catch (e) {\n            this.emit(ERROR, e)\n        }\n    }\n\n    get status() {\n        const ret =\n            this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        if (!this._running) return // nothing to cancel\n\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n    }\n\n    start() {\n        if (this._running) return // already running\n        try {\n            this.program.roles.forEach(role => {\n                this._rm.addRoleService(role.role, role.serviceShortName)\n            })\n            this._running = true\n            this.emit(CHANGE)\n            this.run()\n        } catch (e) {\n            this.emit(ERROR, e)\n        }\n    }\n\n    run() {\n        if (!this._running) return\n        try {\n            this._env.refreshEnvironment()\n            if (this._waitQueue.length > 0) {\n                const nextTime: IT4HandlerRunner[] = []\n                this._waitQueue.forEach(h => {\n                    h.step()\n                    if (h.status !== VMStatus.Stopped) {\n                        if (h.status === VMStatus.Completed) h.reset()\n                        nextTime.push(h)\n                    }\n                })\n                this._waitQueue = nextTime\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            this.emit(ERROR, e)\n        }\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function VMRunner(props: {\n    program: IT4Program\n    autoStart?: boolean\n}) {\n    const { program, autoStart: autoStartDefault } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [testRunner, setTestRunner] = useState<IT4ProgramRunner>()\n    const [autoStart, setAutoStart] = useState(!!autoStartDefault)\n\n    useEffect(() => {\n        const runner = program && new IT4ProgramRunner(program, bus)\n        setTestRunner(runner)\n        if (runner && autoStart) runner.start()\n        return () => runner?.cancel()\n    }, [program, autoStart])\n\n    const disabled = !testRunner\n    const status = useChange(testRunner, t => t?.status)\n    const handleRun = () => {\n        setAutoStart(autoStartDefault)\n        try {\n            testRunner.start()\n        } catch (e) {\n            // TODO expose error here\n        }\n    }\n    const handleCancel = () => {\n        setAutoStart(false)\n        testRunner.cancel()\n    }\n    const running = status === VMStatus.Running\n\n    return (\n        <Button\n            disabled={disabled}\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <LoadingProgress /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n"],"sourceRoot":""}