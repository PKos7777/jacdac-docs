{"version":3,"file":"component---src-pages-tools-model-editor-tsx-0b8885da31c1b7e14b29.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./src/components/ClassDataSetGrid.tsx","webpack://jacdac-docs/./src/components/model-editor/CollectData.tsx","webpack://jacdac-docs/./src/components/model-editor/ModelEditor.tsx","webpack://jacdac-docs/./src/pages/tools/model-editor.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React from \"react\"\n\nimport { Card, CardContent, CardHeader, Grid } from \"@material-ui/core\"\nimport { IconButton } from \"gatsby-theme-material-ui\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport Trend from \"./Trend\"\nimport FieldDataSet from \"./FieldDataSet\"\n\nexport default function ClassDataSetGrid(props: {\n    label: string\n    tables: FieldDataSet[]\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { label, tables, handleDeleteTable } = props\n\n    const handleDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n\n    return (\n        <Grid container spacing={2}>\n            <Card>\n                <CardHeader\n                    subheader={label + `, ${tables.length} sample(s)`}\n                />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        {tables.map(table => (\n                            <Grid item key={`result` + table.id}>\n                                <Trend dataSet={table} height={8} mini={true} />\n                                {handleDeleteTable && (\n                                    <IconButton\n                                        onClick={handleDelete(table)}\n                                        title=\"Delete this sample\"\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                )}\n                            </Grid>\n                        ))}\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n    )\n}\n","import React, { lazy, useEffect, useContext, useState } from \"react\"\n\nimport { Button, Grid, TextField, InputAdornment } from \"@material-ui/core\"\nimport { Autocomplete } from \"@material-ui/lab\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@material-ui/icons/Stop\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteAllIcon from \"@material-ui/icons/DeleteSweep\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from \"@material-ui/icons/Add\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nimport ServiceManagerContext from \"../ServiceManagerContext\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nimport useChange from \"../../jacdac/useChange\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport { REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { throttle } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport Trend from \"../Trend\"\nimport ClassDataSetGrid from \"../ClassDataSetGrid\"\nimport ReadingFieldGrid from \"../ReadingFieldGrid\"\nimport FieldDataSet from \"../FieldDataSet\"\nimport MBDataSet, { arraysEqual } from \"./MBDataSet\"\nimport { DATASET_NAME } from \"./ModelEditor\"\nimport Suspense from \"../ui/Suspense\"\nimport AppContext from \"../AppContext\"\n\nconst DataSetPlot = lazy(() => import(\"./components/DataSetPlot\"))\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live) set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nexport default function CollectData(props: {\n    chartProps: any\n    reactStyle: any\n    chartPalette: string[]\n    dataset: MBDataSet\n    onChange: (dataset) => void\n    onNext: (dataset) => void\n}) {\n    const { chartPalette, onChange, onNext } = props\n    const [dataset, setDataSet] = useState<MBDataSet>(props.dataset)\n    const [dataTimestamp, setDataTimestamp] = useState(0)\n    const classes = props.reactStyle\n    const chartProps = props.chartProps\n\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const readingRegisters = useChange(bus, bus =>\n        arrayConcatMany(\n            bus.devices().map(device =>\n                device\n                    .services()\n                    .filter(srv => isSensor(srv.specification))\n                    .map(srv => srv.readingRegister)\n            )\n        )\n    )\n\n    /* For choosing sensors */\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [totalRecordings, setTotalRecordings] = useState(0)\n    const [recordingName, setRecordingName] = useState(\n        \"recording\" + totalRecordings\n    )\n\n    const [isRecording, setIsRecording] = useState(false)\n    const [liveRecording, setLiveRecording] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n\n    const newRecording = (registerIds: string[], live: boolean) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `${currentClassLabel}$${dataset.totalRecordings}`,\n                  live,\n                  chartPalette\n              )\n            : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveRecording(newRecording(registerIdsChecked, true))\n    }\n\n    const handleRecordingNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setRecordingName(event.target.value.trim())\n    }\n\n    /* For recording data*/\n    const [currentClassLabel, setCurrentClassLabel] = useState(\"class1\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"50\")\n    const [samplingDuration, setSamplingDuration] = useState(\"2\")\n    const [datasetMatch, setDataSetMatch] = useState(false)\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(\n        (parseFloat(samplingDuration) * 1000) / samplingIntervalDelayi\n    )\n    const errorSamplingIntervalDelay =\n        isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const startEnabled = !!recordingRegisters?.length && datasetMatch\n\n    const handleSamplingIntervalChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handleLabelChange = newLabel => {\n        setCurrentClassLabel(newLabel)\n    }\n    const handleDownloadDataSet = async () => {\n        fileStorage.saveText(`${dataset.name}.csv`, dataset.toCSV())\n    }\n    const handleDeleteDataSet = () => {\n        if (confirm(\"Are you sure you want to delete all recorded samples?\")) {\n            const newDataSet = new MBDataSet(DATASET_NAME)\n            handleDataSetUpdate(newDataSet)\n            setDataSet(newDataSet)\n\n            resetDataCollection()\n        }\n    }\n    const resetDataCollection = () => {\n        setCurrentClassLabel(\"class1\")\n        setTotalRecordings(0)\n        setSamplingIntervalDelay(\"50\")\n        setSamplingDuration(\"2\")\n    }\n    const stopRecording = () => {\n        if (isRecording) {\n            // add new data to the dataset\n            liveRecording.interval = samplingIntervalDelayi\n            dataset.addRecording(\n                liveRecording,\n                currentClassLabel,\n                registerIdsChecked\n            )\n            setTotalRecordings(totalRecordings + 1)\n            setDataSet(dataset)\n            handleDataSetUpdate(dataset)\n            setDataTimestamp(Date.now())\n\n            // create new live recording\n            setLiveRecording(newRecording(registerIdsChecked, true))\n\n            // stop recording\n            setIsRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!isRecording && recordingRegisters.length) {\n            setLiveRecording(newRecording(registerIdsChecked, false))\n            setIsRecording(true)\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg =>\n            reg.subscribe(REPORT_UPDATE, () => {})\n        )\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (isRecording) stopRecording()\n        else startRecording()\n    }\n    const handleDeleteRecording = (recording: FieldDataSet) => {\n        dataset.removeRecording(recording)\n        setDataTimestamp(Date.now())\n        setDataSet(dataset)\n        handleDataSetUpdate(dataset)\n    }\n    const updateLiveData = () => {\n        setLiveRecording(liveRecording)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveRecording) return\n        liveRecording.addRow(values)\n        if (isRecording && liveRecording.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg =>\n            reg.sendSetPackedAsync(\"i32\", [samplingIntervalDelayi])\n        )\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error) return undefined\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi)\n        const stopStreaming = startStreamingRegisters()\n\n        return () => {\n            clearInterval(interval)\n            stopStreaming()\n        }\n    }, [isRecording, samplingIntervalDelayi, samplingCount, registerIdsChecked])\n    useEffect(() => {\n        setRecordingName(\"recording\" + totalRecordings)\n    }, [totalRecordings])\n    useEffect(() => {\n        let matchingInputs = true\n        if (dataset && liveRecording) {\n            if (dataset.inputTypes && dataset.inputTypes.length) {\n                if (!arraysEqual(dataset.inputTypes, liveRecording.headers))\n                    matchingInputs = false\n            }\n        }\n        setDataSetMatch(matchingInputs)\n    }, [registerIdsChecked, liveRecording])\n\n    const handleDataSetUpdate = dataset => {\n        onChange(dataset)\n    }\n    const handleNext = () => {\n        onNext(dataset)\n    }\n\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h2>\n                    Current Dataset\n                    <IconButtonWithTooltip\n                        onClick={handleDownloadDataSet}\n                        title=\"Download all recording data\"\n                        disabled={dataset.totalRecordings == 0}\n                    >\n                        <DownloadIcon />\n                    </IconButtonWithTooltip>\n                    <IconButtonWithTooltip\n                        onClick={handleDeleteDataSet}\n                        title=\"Delete all recording data\"\n                        disabled={dataset.totalRecordings == 0}\n                    >\n                        <DeleteAllIcon />\n                    </IconButtonWithTooltip>\n                </h2>\n                <div key=\"recordedData\">\n                    {dataset.totalRecordings ? (\n                        <div key=\"recordings\">\n                            <p>\n                                Input type(s): {dataset.inputTypes.join(\",\")}{\" \"}\n                            </p>\n                            {dataset.labels.map(classLabel => (\n                                <ClassDataSetGrid\n                                    key={\"dataset-\" + classLabel}\n                                    label={classLabel}\n                                    tables={dataset.getRecordingsWithLabel(\n                                        classLabel\n                                    )}\n                                    handleDeleteTable={handleDeleteRecording}\n                                />\n                            ))}\n                            <br />\n                            <Suspense>\n                                <DataSetPlot\n                                    chartProps={chartProps}\n                                    reactStyle={classes}\n                                    dataset={dataset}\n                                    predictedLabels={undefined}\n                                    timestamp={dataTimestamp}\n                                />\n                            </Suspense>\n                        </div>\n                    ) : (\n                        <p>Empty</p>\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <h2>Collect More Data</h2>\n                {/* TODO Toggle button to get data from sensors vs upload from file */}\n                <div key=\"sensors\">\n                    <h3>\n                        Select input sensors&nbsp;\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    </h3>\n                    {!readingRegisters.length && (\n                        <span>Waiting for sensors...</span>\n                    )}\n                    {!!readingRegisters.length && (\n                        <ReadingFieldGrid\n                            readingRegisters={readingRegisters}\n                            registerIdsChecked={registerIdsChecked}\n                            recording={isRecording}\n                            liveDataSet={liveRecording}\n                            handleRegisterCheck={handleRegisterCheck}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <div key=\"record\">\n                    <h3>Record data</h3>\n                    <div className={classes.row}>\n                        <TextField\n                            className={classes.field}\n                            label=\"Recording name\"\n                            value={recordingName}\n                            variant=\"outlined\"\n                            onChange={handleRecordingNameChange}\n                        />\n                        <Autocomplete\n                            disabled={isRecording}\n                            className={classes.field}\n                            options={dataset.labelOptions}\n                            renderInput={params => (\n                                <TextField\n                                    {...params}\n                                    label=\"Class label\"\n                                    variant=\"outlined\"\n                                />\n                            )}\n                            value={currentClassLabel}\n                            onInputChange={(event, newValue) =>\n                                handleLabelChange(newValue)\n                            }\n                            getOptionSelected={() => true}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingDuration}\n                            disabled={isRecording}\n                            label=\"Sampling duration\"\n                            value={samplingDuration}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        s\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingDurationChange}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingIntervalDelay}\n                            disabled={isRecording}\n                            label=\"Sampling interval\"\n                            value={samplingIntervalDelay}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        ms\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingIntervalChange}\n                        />\n                    </div>\n                    <div className={classes.buttons}>\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isRecording ? \"secondary\" : \"primary\"}\n                            aria-label=\"start/stop recording\"\n                            title=\"start/stop recording\"\n                            onClick={toggleRecording}\n                            startIcon={\n                                isRecording ? <StopIcon /> : <PlayArrowIcon />\n                            }\n                            disabled={!startEnabled}\n                        >\n                            {isRecording ? \"Stop\" : \"Start\"}\n                        </Button>\n                    </div>\n                </div>\n                <div key=\"liveData\">\n                    {liveRecording && (\n                        <Trend\n                            key=\"trends\"\n                            height={12}\n                            dataSet={liveRecording}\n                            horizon={LIVE_HORIZON}\n                            dot={true}\n                            gradient={true}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<NavigateNextIcon />}\n                        disabled={dataset.labels.length < 2}\n                        onClick={handleNext}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useState } from \"react\"\nimport { createStyles, Box, Tabs, Tab } from \"@material-ui/core\"\nimport TabPanel from \"../ui/TabPanel\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport useChartPalette from \"../useChartPalette\"\n\nimport CollectData from \"./CollectData\"\nimport TrainModel from \"./TrainModel\"\nimport ModelOutput from \"./ModelOutput\"\n\nimport MBDataSet from \"./MBDataSet\"\nimport MBModel from \"./MBModel\"\n\nconst MODEL_EDITOR = \"model_editor\" // create prefix for model editor page\nconst MODEL_NAME = MODEL_EDITOR + \"-model\"\nexport const DATASET_NAME = MODEL_EDITOR + \"-dataset\"\nexport const MODEL_EDITOR_STORAGE_KEY = \"model-editor-data-json\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginBottom: theme.spacing(1),\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        field: {\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1.5),\n            display: \"inline-flex\",\n            width: theme.spacing(35),\n        },\n        segment: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        },\n        row: {\n            marginBottom: theme.spacing(0.5),\n        },\n        buttons: {\n            display: \"inline-flex\",\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n        },\n        trend: {\n            width: theme.spacing(10),\n        },\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nfunction getDataSetFromLocalStorage() {\n    // check local storage for recording\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"dataset\"])\n            return MBDataSet.createFromFile(\n                DATASET_NAME,\n                modelEditorData[\"dataset\"]\n            )\n    }\n    return new MBDataSet(DATASET_NAME)\n}\n\nfunction getModelFromLocalStorage() {\n    // check local storage for saved model\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"model\"])\n            return MBModel.createFromFile(modelEditorData[\"model\"])\n    }\n\n    const newModel = new MBModel(MODEL_NAME)\n    return newModel\n}\n\nfunction getTabFromLocalStorage() {\n    // check local storage for saved model\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"tab\"]) return modelEditorData[\"tab\"]\n    }\n    return 0\n}\n\nexport default function ModelPlayground() {\n    const classes = useStyles()\n    const chartPalette = useChartPalette()\n    const chartProps = {\n        CHART_WIDTH: 300,\n        CHART_HEIGHT: 300,\n        MARK_SIZE: 75,\n        TOOLTIP_NUM_FORMAT: \"0.2f\",\n        PALETTE: chartPalette,\n    }\n\n    const [dataset, setDataSet] = useState<MBDataSet>(\n        getDataSetFromLocalStorage\n    )\n    const [tfModel, setTFModel] = useState<MBModel>(getModelFromLocalStorage)\n    const [tab, setTab] = useState<number>(getTabFromLocalStorage)\n\n    /* Data and interface management */\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newTab: number\n    ) => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and model data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"tab\"] = newTab\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: undefined,\n                tab: newTab,\n            }\n        }\n\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setTab(newTab)\n    }\n\n    const handleDataChange = newDataSet => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous model and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"dataset\"] = newDataSet\n\n            // if dataset is changed, model should be reset too\n            modelEditorData[\"model\"] = new MBModel(MODEL_NAME)\n            setTFModel(new MBModel(MODEL_NAME))\n        } else {\n            modelEditorData = {\n                dataset: newDataSet,\n                model: undefined,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setDataSet(newDataSet)\n    }\n\n    const handleModelChange = async newModel => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"model\"] = newModel\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: newModel,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n\n        setTFModel(newModel)\n    }\n\n    const nextTab = () => {\n        if (tab == 0 && dataset.labels.length >= 2) {\n            setTab(1)\n        } else if (tab == 1 && tfModel.status == \"trained\") {\n            setTab(2)\n        }\n    }\n\n    return (\n        <Box mb={2}>\n            <h1>ML Model Editor</h1>\n            <p>\n                This page allows you to collect data from Jacdac sensors and use\n                them to train a neural network model that does classification.\n            </p>\n\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                <Tab label={`1 - Collect Data`} />\n                <Tab\n                    label={`2 - Train Model`}\n                    disabled={dataset.labels.length < 2}\n                />\n                <Tab\n                    label={`3 - Test Model`}\n                    disabled={\n                        dataset.labels.length < 2 ||\n                        tfModel.status !== \"trained\"\n                    }\n                />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <CollectData\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    dataset={dataset}\n                    onChange={handleDataChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <TrainModel\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    dataset={dataset}\n                    model={tfModel}\n                    onChange={handleModelChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <ModelOutput\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    model={tfModel}\n                />\n            </TabPanel>\n        </Box>\n    )\n}\n","import React from \"react\"\nimport ModelEditor from \"../../components/model-editor/ModelEditor\"\n\nexport default function Page() {\n    return <ModelEditor />\n}\n"],"names":["React","Card","CardContent","CardHeader","Grid","IconButton","DeleteIcon","Trend","ClassDataSetGrid","props","label","tables","handleDeleteTable","handleDelete","table","length","map","id","lazy","useEffect","useContext","useState","Button","TextField","InputAdornment","Autocomplete","PlayArrowIcon","StopIcon","DownloadIcon","DeleteAllIcon","NavigateNextIcon","AddIcon","IconButtonWithTooltip","ServiceManagerContext","JacdacContext","useChange","arrayConcatMany","isSensor","REPORT_UPDATE","throttle","ReadingFieldGrid","FieldDataSet","MBDataSet","arraysEqual","DATASET_NAME","Suspense","AppContext","DataSetPlot","LIVE_HORIZON","createDataSet","bus","registers","name","live","palette","fields","reg","colors","f","i","set","maxRows","CollectData","chartPalette","onChange","onNext","dataset","setDataSet","dataTimestamp","setDataTimestamp","classes","reactStyle","chartProps","fileStorage","toggleShowDeviceHostsDialog","readingRegisters","devices","device","services","filter","srv","specification","readingRegister","registerIdsChecked","setRegisterIdsChecked","totalRecordings","setTotalRecordings","recordingName","setRecordingName","isRecording","setIsRecording","liveRecording","setLiveRecording","undefined","setLiveDataTimestamp","newRecording","registerIds","indexOf","currentClassLabel","handleRegisterCheck","splice","push","sort","handleRecordingNameChange","event","target","value","trim","setCurrentClassLabel","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","datasetMatch","setDataSetMatch","recordingRegisters","samplingIntervalDelayi","parseInt","samplingCount","Math","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","error","startEnabled","handleSamplingIntervalChange","handleSamplingDurationChange","handleLabelChange","newLabel","handleDownloadDataSet","saveText","toCSV","handleDeleteDataSet","confirm","newDataSet","handleDataSetUpdate","resetDataCollection","stopRecording","interval","addRecording","Date","now","startRecording","startStreamingRegisters","console","log","streamers","subscribe","streamer","toggleRecording","handleDeleteRecording","recording","removeRecording","updateLiveData","timestamp","throttleUpdate","addRow","values","forEach","sendSetPackedAsync","setInterval","stopStreaming","clearInterval","matchingInputs","inputTypes","headers","handleNext","join","labels","classLabel","getRecordingsWithLabel","row","field","labelOptions","params","newValue","startAdornment","buttons","display","justifyContent","createStyles","Box","Tabs","Tab","TabPanel","makeStyles","useChartPalette","TrainModel","ModelOutput","MBModel","MODEL_EDITOR","MODEL_NAME","MODEL_EDITOR_STORAGE_KEY","useStyles","theme","root","marginBottom","spacing","grow","flexGrow","marginRight","width","segment","marginTop","trend","vmiddle","verticalAlign","getDataSetFromLocalStorage","storedDataJSON","localStorage","getItem","modelEditorData","JSON","parse","createFromFile","getModelFromLocalStorage","newModel","getTabFromLocalStorage","ModelPlayground","CHART_WIDTH","CHART_HEIGHT","MARK_SIZE","TOOLTIP_NUM_FORMAT","PALETTE","tfModel","setTFModel","tab","setTab","handleTabChange","newTab","model","setItem","stringify","handleDataChange","handleModelChange","nextTab","status","ModelEditor","Page"],"sourceRoot":""}