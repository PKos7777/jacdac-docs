{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRainGauge.tsx"],"names":["TILT","DashbaordRainGauge","props","service","services","variant","precipitationRegister","register","RainGaugeReg","Precipitation","useRegisterUnpackedValue","precipitation","clipId","useId","host","useServiceHost","tiltCount","useChange","h","level","tiltAngle","undefined","color","useWidgetTheme","background","controlBackground","active","textPrimary","a","useThrottledValue","l","clickeable","handleClick","event","preventDefault","stopPropagation","rain","refresh","buttonProps","useSvgButtonProps","Math","round","w","bw","bh","bx","by","sw","ty","fs","userSelect","roundWithPrecision"],"mappings":"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","file":"119-d8c0032d3f94f933494f.js","sourcesContent":["import React, {  } from \"react\"\nimport { RainGaugeReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceHost from \"../hooks/useServiceHost\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport RainGaugeServiceHost from \"../../../jacdac-ts/src/hosts/RainGaugeServiceHost\"\nimport useChange from \"../../jacdac/useChange\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { useId } from \"react-use-id-hook\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nconst TILT = 15\n\nexport default function DashbaordRainGauge(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const precipitationRegister = service.register(RainGaugeReg.Precipitation)\n    const [precipitation] = useRegisterUnpackedValue<[number]>(\n        precipitationRegister\n    )\n    const clipId = useId()\n    const host = useServiceHost<RainGaugeServiceHost>(service)\n    const tiltCount = useChange(host, h => h?.tiltCount)\n    const level = useChange(host, h => h?.level)\n    const tiltAngle =\n        tiltCount !== undefined ? (tiltCount % 2 ? -TILT : TILT) : 0\n    const color = host ? \"secondary\" : \"primary\"\n    const {\n        background,\n        controlBackground,\n        active,\n        textPrimary,\n    } = useWidgetTheme(color)\n    const a = useThrottledValue(tiltAngle, 45)\n    const l = useThrottledValue(level !== undefined ? level : 0.5, 1)\n    const clickeable = !!host\n    const handleClick = async (event: React.PointerEvent<SVGRectElement>) => {\n        event.preventDefault()\n        event.stopPropagation()\n        await host?.rain(0.25)\n        await precipitationRegister.refresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(\n        `rain gauge at level ${Math.round(25 + level * 100)}%`,\n        handleClick\n    )\n\n    const w = 128\n    const h = 64\n    const bw = w / 2\n    const bh = h / 3\n    const bx = (w - bw) / 2\n    const by = h - bh - 24\n    const sw = 1\n    const ty = h - 4\n    const fs = 8\n\n    if (tiltAngle === undefined) return <LoadingProgress />\n\n    return (\n        <SvgWidget width={w} height={h}>\n            <defs>\n                <clipPath id={clipId}>\n                    <rect\n                        transform={`rotate(${-a}, ${w / 2}, ${by + bh})`}\n                        x={0}\n                        y={by + bh * (1 - l)}\n                        width={w}\n                        height={h}\n                    />\n                </clipPath>\n            </defs>\n            <g transform={`rotate(${a}, ${w / 2}, ${by + bh})`}>\n                <rect\n                    x={bx}\n                    y={by}\n                    tabIndex={0}\n                    width={bw}\n                    height={bh}\n                    strokeWidth={sw}\n                    stroke={active}\n                    fill={background}\n                    aria-live=\"polite\"\n                    {...buttonProps}\n                    className={clickeable ? \"clickeable\" : undefined}\n                    role={clickeable ? \"button\" : undefined}\n                />\n                <rect\n                    x={bx}\n                    y={by}\n                    width={bw}\n                    height={bh}\n                    stroke={active}\n                    fill={active}\n                    aria-label={\"water\"}\n                    clipPath={`url(#${clipId})`}\n                    pointerEvents=\"none\"\n                    style={{ userSelect: \"none\" }}\n                />\n            </g>\n            <text\n                x={w / 2}\n                y={ty}\n                fontSize={fs}\n                textAnchor=\"middle\"\n                fill={textPrimary}\n                aria-label={`precipitation ${roundWithPrecision(\n                    precipitation || 0,\n                    1\n                )} millimeters`}\n            >\n                {roundWithPrecision(precipitation || 0, 1)}mm\n            </text>\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}