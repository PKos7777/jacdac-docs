{"version":3,"sources":["webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts"],"names":["refresh_env","registers","k","register","retry","val","undefined","refresh","unpackedValue","writeReg","reg","fmt","ev","sendSetPackedAsync","VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","writeRegister","jdreg","packFormat","lookup","e","root","type","object","fld","property","field","fields","f","value","refreshEnvironment","JDServiceClient","VMEnvironment","notifyOnChange","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","serviceEnv","getService","getRootName","Object","values","forEach","s","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","id","lit","useServiceRole","useState","setRole","useEffect","ROLE_CHANGE","ServiceRole","props","useContext","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","useChange","_","DashboardServiceWidgetItem","useRegisterUnpackedValue","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","expanded","visible","spec","useMemo","ids","filter","indexOf","slice","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_SETTINGS","SRV_PROTO_TEST","DashboardDevice","device","serviceFilter","toggleExpanded","variant","showAvatar","showHeader","useDeviceName","services","serviceClass","useDeviceSpecification","useMediaQueries","mobile","xs","serviceGridRef","useRef","intersection","useSnackbar","enqueueSnackbar","RESTART","console","debug","shortId","ServiceWidgets","useCallback","srv","isMixin","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","JacdacContext","bus","mgr","setMgr","ROLE_MANAGER_CHANGE"],"mappings":"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","file":"39504046960eea78697a10eb737b49eea4403ae4-7d4002a85b428ac11aa0.js","sourcesContent":["import { isEvent, isRegister } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\n\nexport async function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\n// TODO: you want [ev] to be PackedValues and handle the arrays yourself.\nasync function writeReg(reg: JDRegister, fmt: string, ev: any) {\n    await reg.sendSetPackedAsync(fmt, [ev], true)\n}\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public writeRegister(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        if (jdreg) {\n            writeReg(jdreg, jdreg.specification?.packFormat, ev)\n            return true\n        }\n        return false\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this._registers)\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(\n        private readonly notifyOnChange: () => void\n    ) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, this.notifyOnChange)\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.notifyOnChange()\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        return this._envs[root]\n    }\n\n    public refreshEnvironment() {\n        Object.values(this._envs).forEach(s => s?.refreshEnvironment())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return undefined\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public writeRegister(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.writeRegister(reg, ev)\n        }\n        return false\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        Object.values(this._envs).forEach(vs => vs.unmount())\n    }\n}\n","/*\nThe JD-VM runs a program, which is a set of handlers. Each handler is of the form\n•\twait on event/condition, followed by a\n•\tsequence of guarded commands – the sequence is executed atomically (though may suspend if it contains a wait)\nAfter a handler finishes executing, it restarts (there is an implicit event loop around all the handlers, as usual). \n \nWe will have a small key-value store to keep program state (perhaps we will have the ability to store lists of values as well as basic values) across the handler executions.\n \nCommands can talk to JD services (probably via roles), as well as read/write program state, and wait on events/expressions. Any command can be guarded by an expression, for conditional execution.\n \nExpressions can be against service registers (as in the test case) and program state.\n \n*/\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env(id.name))\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n} from \"@material-ui/core\"\nimport React, { useCallback, useEffect, useRef } from \"react\"\nimport {\n    RESTART,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { useSnackbar } from \"notistack\"\n\nconst ignoredServices = [SRV_CONTROL, SRV_LOGGER, SRV_SETTINGS, SRV_PROTO_TEST]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const { xs: mobile } = useMediaQueries()\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffect(() =>\n        device?.subscribe(RESTART, () => {\n            console.debug(`${device.shortId} restarted...`)\n            enqueueSnackbar(`${device.shortId} restarted...`, {\n                variant: \"warning\",\n            })\n        })\n    )\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.filter(srv => !serviceFilter || serviceFilter(srv))\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n"],"sourceRoot":""}