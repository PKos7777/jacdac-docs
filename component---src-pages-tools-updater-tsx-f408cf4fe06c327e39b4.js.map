{"version":3,"file":"component---src-pages-tools-updater-tsx-f408cf4fe06c327e39b4.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteForever.js","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/DeviceCard.tsx","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","import { ButtonProps } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@material-ui/core/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@material-ui/core/CardContent\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport {\n    SRV_CONTROL,\n    SRV_LOGGER,\n    ControlReg,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"./ServiceButton\"\nimport useChange from \"../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { CardActions, createStyles } from \"@material-ui/core\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"./alert/DeviceLostAlert\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {},\n        bullet: {\n            display: \"inline-block\",\n            margin: \"0 2px\",\n            transform: \"scale(0.8)\",\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    })\n)\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n    const classes = useStyles()\n    const services = useChange(device, () =>\n        device\n            .services()\n            .filter(\n                service =>\n                    service.serviceClass != SRV_CONTROL &&\n                    service.serviceClass != SRV_LOGGER\n            )\n    )\n\n    return (\n        <Card className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </Card>\n    )\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const classes = useStyles()\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreSelf: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport { CircularProgressProps, Box, CircularProgress, Typography } from \"@material-ui/core\";\n\nexport default function CircularProgressWithLabel(props: CircularProgressProps & { value: number }) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n","import { useContext, useState } from \"react\";\nimport { deviceSpecificationFromProductIdentifier, deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useEffectAsync from \"../useEffectAsync\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { BootloaderCmd, ControlReg, DEVICE_CHANGE, SRV_BOOTLOADER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useEventRaised from \"../../jacdac/useEventRaised\";\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\";\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () => bus.devices({ announced: true, ignoreSelf: true }))\n    const bootloaders = devices.filter(device => device.hasService(SRV_BOOTLOADER));\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device => device.service(0)?.register(ControlReg.ProductIdentifier))\n        .filter(reg => !!reg);\n\n    useEffectAsync(async (mounted) => {\n        let repos: string[] = [];\n        if (showAllRepos)\n            repos = deviceSpecifications().map(spec => spec.repo);\n        else {\n            const productIdentifiers: number[] = [];\n            // ask firmware registers\n            for (const register of registers) {\n                await register.refresh(true)\n                const productIdentifier = register.intValue;\n                if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                    productIdentifiers.push(productIdentifier);\n            }\n\n            // ask bootloaders\n            for (const bootloader of bootloaders) {\n                const boot = bootloader.services({ serviceClass: SRV_BOOTLOADER })[0];\n                const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                try {\n                    const resp = await boot.sendCmdAwaitResponseAsync(bl_announce);\n                    const [, , , productIdentifier] = resp.jdunpack<[number, number, number, number]>(\"u32 u32 u32 u32\");\n                    if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                        productIdentifiers.push(productIdentifier);\n                }\n                catch (e) {\n                    console.warn(`bootloader product identifier failed`, e)\n                }\n            }\n            repos = productIdentifiers.map(fw => deviceSpecificationFromProductIdentifier(fw)?.repo)\n                .filter(repo => !!repo);\n        }\n        if (mounted) {\n            const urepos = unique(repos);\n            setRepos(urepos)\n        }\n    }, [devices.map(dev => dev.id).join(), registers.map(reg => reg.id).join(), showAllRepos])\n    return repos;\n}","import React, { lazy, useState } from \"react\"\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    ListItem,\n    List,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\"\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\"\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader title={slug} />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {version && (\n                    <Typography variant=\"body2\">\n                        version <code>{version}</code>\n                    </Typography>\n                )}\n                {!!firmwareBlobs?.length && (\n                    <List dense>\n                        {firmwareBlobs.map(blob => (\n                            <ListItem key={blob.productIdentifier}>\n                                <ListItemText\n                                    primary={blob.name}\n                                    secondary={`0x${blob.productIdentifier.toString(\n                                        16\n                                    )}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n            </CardContent>\n            <CardActions>\n                {!downloading && (\n                    <Suspense>\n                        <ImportButton\n                            text={\"Import UF2 file\"}\n                            onFilesUploaded={handleFiles}\n                        />\n                    </Suspense>\n                )}\n                {!downloading && firmwareBlobs?.length && (\n                    <Button\n                        disabled={disabled}\n                        variant=\"text\"\n                        arial-label={\"Clear\"}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Button } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport React, { useContext, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [progress, setProgress] = useState(0)\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const flashing = useChange(device, d => !!d?.flashing)\n    const missing = !device || !blob\n    const disabled = flashing\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(\n                bus,\n                blob,\n                updateCandidates,\n                ignoreFirmwareCheck,\n                prog => {\n                    if (mounted()) setProgress(prog)\n                }\n            )\n            // trigger info\n            device.firmwareInfo = undefined\n        } catch (e) {\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return missing ? (\n        <Alert severity=\"info\">No firmware information available</Alert>\n    ) : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : firmwareInfo || update ? (\n        <>\n            {firmwareInfo && <Alert severity=\"success\">Up to date!</Alert>}\n            <Button\n                aria-label=\"flash firmware to device\"\n                disabled={disabled}\n                variant=\"contained\"\n                color={\"primary\"}\n                onClick={handleFlashing}\n            >\n                Flash\n            </Button>\n        </>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    DEVICE_CHANGE,\n    FIRMWARE_BLOBS_CHANGE,\n    SRV_BOOTLOADER,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport { scanFirmwares } from \"../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport useFirmwareBlobs from \"./firmware/useFirmwareBlobs\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { device } = props\n    const blobs = useFirmwareBlobs()\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(\n            b => firmwareInfo.productIdentifier == b.productIdentifier\n        )\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const scanning = useRef(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreSelf: true,\n            ignoreSimulators: true,\n            productIdentifier: true,\n        },\n        [safeBoot]\n    )\n        .filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n        .sort(\n            (l, r) =>\n                (l.firmwareInfo?.productIdentifier || 0) -\n                (r.firmwareInfo?.productIdentifier || 0)\n        )\n    const isFlashing = useChange(bus, () => devices.some(dev => dev.flashing))\n    const blobs = useFirmwareBlobs()\n    async function scan() {\n        if (!blobs?.length || isFlashing || scanning.current) return\n        console.log(`start scanning bus`)\n        try {\n            scanning.current = true\n            await scanFirmwares(bus)\n        } finally {\n            scanning.current = false\n        }\n    }\n    // load indexed db file once\n    useEffect(() => {\n        scan()\n    }, [isFlashing, blobs])\n    useEffect(\n        () =>\n            bus.subscribe([DEVICE_CHANGE, FIRMWARE_BLOBS_CHANGE], () => scan()),\n        []\n    )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Button, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\"\nimport AppContext from \"../AppContext\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\n\nexport default function SafeBootAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const [safeBoot, setSafeBoot] = useState(bus.safeBoot)\n    const firmwares = db?.firmwares\n\n    const handleRecovery = async () => {\n        const v = !safeBoot\n        setSafeBoot(v)\n    }\n    const handleClear = async () => {\n        await firmwares.clear()\n        enqueueSnackbar(\"firmwares cleared\", \"info\")\n    }\n\n    // turn on and off safeboot mode\n    useEffect(() => {\n        bus.safeBoot = safeBoot\n        return () => {\n            bus.safeBoot = false\n        }\n    }, [safeBoot])\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={safeBoot}\n                    onChange={handleRecovery}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            recovery mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        If your module is malfunctioning from the start, you can\n                        flash it in bootloader mode. Turn on recovery mode and\n                        unplug/replug any malfunctioning device to switch it to\n                        bootloader mode (glowing status LED). Once your module\n                        is flashed, turn off recovery mode and unplug/replug\n                        your module again.\n                    </Typography>\n                </Box>\n            </Alert>\n            {safeBoot && (\n                <Alert severity=\"warning\">\n                    <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        disabled={!firmwares}\n                        onClick={handleClear}\n                        startIcon={<DeleteForeverIcon />}\n                    >\n                        clear cache\n                    </Button>\n                    <Box mr={1}>\n                        <Typography component=\"span\" variant=\"caption\">\n                            Delete all firmware cached in the browser. The\n                            firmware will have to be deleted again from this\n                            interface.\n                        </Typography>\n                    </Box>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { MenuItem } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Typography } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useDevices from \"../hooks/useDevices\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.productIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreSelf: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useFirmwareBlobs()\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.productIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={enabled}\n                    onChange={handleToggle}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            manual mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { Box, Tab, Tabs } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport TabPanel from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\n\nexport default function Flash() {\n    const [tab, setTab] = useState(0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    return (\n        <Box mb={2}>\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                <Tab label={`Updates`} />\n                <Tab label={`Firmwares`} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert />\n            <ManualFirmwareAlert />\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return <>\n        <h1>Firmware Updater</h1>\n        <p>\n        This page allows you to update your Jacdac module with new firmware. Find the latest UF2 firmware file from your manufacturer \nand import it with the button below.\n            \n        </p>\n        <Flash />\n    </>\n}"],"names":["Button","React","ServiceButton","props","service","onClick","others","name","makeStyles","Card","CardContent","SRV_CONTROL","SRV_LOGGER","ControlReg","useChange","navigate","CardActions","createStyles","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","useStyles","root","bullet","display","margin","transform","title","fontSize","pos","marginBottom","navigateToService","spec","specification","shortId","DeviceDescription","device","register","_","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","classes","services","filter","serviceClass","map","id","Box","Alert","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","ConnectButton","NoSsr","theme","button","marginLeft","spacing","NoSsrConnectAlert","closeable","bus","transports","devices","b","ignoreSelf","length","transport","type","ConnectAlert","CircularProgress","Typography","CircularProgressWithLabel","Math","round","value","FormControlLabel","Switch","SwitchWithLabel","label","rest","useState","deviceSpecificationFromProductIdentifier","deviceSpecifications","useEffectAsync","unique","BootloaderCmd","DEVICE_CHANGE","SRV_BOOTLOADER","useEventRaised","Packet","useFirmwareRepos","showAllRepos","repos","setRepos","announced","bootloaders","hasService","registers","ProductIdentifier","reg","mounted","repo","productIdentifiers","refresh","productIdentifier","intValue","undefined","indexOf","push","bootloader","boot","bl_announce","onlyHeader","Info","resp","sendCmdAwaitResponseAsync","jdunpack","e","console","warn","fw","urepos","dev","join","lazy","CardHeader","ListItem","List","ListItemText","useFirmwareBlob","Suspense","ImportButton","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","setFirmwareFile","firmwareBlobs","disabled","version","handleFiles","files","file","handleClear","blob","toString","Grid","useGridBreakpoints","FirmwareCard","FirmwareCardGrid","gridBreakpoints","safeBoot","firmwareRepos","firmwareRepo","flashFirmwareBlob","updateApplicable","AppContext","useMounted","FlashDeviceButton","ignoreFirmwareCheck","progress","setProgress","firmwareInfo","d","update","flashing","missing","handleFlashing","updateCandidates","prog","useEffect","useRef","FIRMWARE_BLOBS_CHANGE","scanFirmwares","useDevices","useFirmwareBlobs","UpdateDeviceCard","blobs","find","UpdateDeviceList","scanning","ignoreSimulators","sort","l","r","isFlashing","some","scan","current","log","subscribe","DbContext","DeleteForeverIcon","SafeBootAlert","db","enqueueSnackbar","setSafeBoot","firmwares","handleRecovery","v","clear","MenuItem","SelectWithLabel","SelectDevice","deviceId","onChange","handleDeviceChange","ev","target","node","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","Tab","Tabs","TabPanel","Flash","tab","setTab","handleTabChange","event","newValue","Page"],"sourceRoot":""}