{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRainGauge.tsx"],"names":["TILT","DashbaordRainGauge","props","service","services","variant","precipitationRegister","register","RainGaugeReg","Precipitation","useRegisterUnpackedValue","precipitation","clipId","useId","host","useServiceHost","tiltCount","useChange","h","level","tiltAngle","undefined","color","useWidgetTheme","background","controlBackground","active","textPrimary","a","useThrottledValue","l","clickeable","handleClick","event","preventDefault","stopPropagation","rain","refresh","buttonProps","useSvgButtonProps","Math","round","w","bw","bh","bx","by","sw","ty","fs","userSelect","roundWithPrecision"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAG,EAAb;AAEe,SAASC,kBAAT,CAA4BC,KAA5B,EAA0D;AAAA,MAC7DC,OAD6D,GAC9BD,KAD8B,CAC7DC,OAD6D;AAAA,MACpDC,QADoD,GAC9BF,KAD8B,CACpDE,QADoD;AAAA,MAC1CC,OAD0C,GAC9BH,KAD8B,CAC1CG,OAD0C;AAGrE,MAAMC,qBAAqB,GAAGH,OAAO,CAACI,QAAR,CAAiBC,mFAAY,CAACC,aAA9B,CAA9B;;AAHqE,8BAI7CC,iGAAwB,CAAWJ,qBAAX,CAJqB;AAAA,MAI9DK,aAJ8D;;AAKrE,MAAMC,MAAM,GAAGC,wEAAK,EAApB;AACA,MAAMC,IAAI,GAAGC,6EAAc,CAAuBZ,OAAvB,CAA3B;AACA,MAAMa,SAAS,GAAGC,yEAAS,CAACH,IAAD,EAAO,UAAAI,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEF,SAAP;AAAA,GAAR,CAA3B;AACA,MAAMG,KAAK,GAAGF,yEAAS,CAACH,IAAD,EAAO,UAAAI,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,KAAP;AAAA,GAAR,CAAvB;AACA,MAAMC,SAAS,GAAGJ,SAAS,KAAKK,SAAd,GAA2BL,SAAS,GAAG,CAAZ,GAAgB,CAAChB,IAAjB,GAAwBA,IAAnD,GAA2D,CAA7E;AACA,MAAMsB,KAAK,GAAGR,IAAI,GAAG,WAAH,GAAiB,SAAnC;;AAVqE,wBAWNS,+EAAc,CAACD,KAAD,CAXR;AAAA,MAW7DE,UAX6D,mBAW7DA,UAX6D;AAAA,MAWjDC,iBAXiD,mBAWjDA,iBAXiD;AAAA,MAW9BC,MAX8B,mBAW9BA,MAX8B;AAAA,MAWtBC,WAXsB,mBAWtBA,WAXsB;;AAYrE,MAAMC,CAAC,GAAGC,gFAAiB,CAACT,SAAD,EAAY,EAAZ,CAA3B;AACA,MAAMU,CAAC,GAAGD,gFAAiB,CAACV,KAAK,KAAKE,SAAV,GAAsBF,KAAtB,GAA8B,GAA/B,EAAoC,CAApC,CAA3B;AACA,MAAMY,UAAU,GAAG,CAAC,CAACjB,IAArB;;AACA,MAAMkB,WAAW;AAAA,wMAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAChBA,mBAAK,CAACC,cAAN;AACAD,mBAAK,CAACE,eAAN;AAFgB;AAAA,qBAGVrB,IAHU,aAGVA,IAHU,uBAGVA,IAAI,CAAEsB,IAAN,CAAW,IAAX,CAHU;;AAAA;AAAA;AAAA,qBAIV9B,qBAAqB,CAAC+B,OAAtB,EAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXL,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAMA,MAAMM,WAAW,GAAGC,iFAAiB,0BAAwCC,IAAI,CAACC,KAAL,CAAW,KAAKtB,KAAK,GAAG,GAAxB,CAAxC,QAAyEa,WAAzE,CAArC;AAEA,MAAMU,CAAC,GAAG,GAAV;AACA,MAAMxB,CAAC,GAAG,EAAV;AACA,MAAMyB,EAAE,GAAGD,CAAC,GAAG,CAAf;AACA,MAAME,EAAE,GAAG1B,CAAC,GAAG,CAAf;AACA,MAAM2B,EAAE,GAAG,CAACH,CAAC,GAAGC,EAAL,IAAW,CAAtB;AACA,MAAMG,EAAE,GAAG5B,CAAC,GAAG0B,EAAJ,GAAS,EAApB;AACA,MAAMG,EAAE,GAAG,CAAX;AACA,MAAMC,EAAE,GAAG9B,CAAC,GAAG,CAAf;AACA,MAAM+B,EAAE,GAAG,CAAX;AAEA,sBAAO,2DAAC,kEAAD;AACH,SAAK,EAAEP,CADJ;AACO,UAAM,EAAExB;AADf,kBAEH,sFACI;AAAU,MAAE,EAAEN;AAAd,kBACI;AAAM,aAAS,cAAY,CAACgB,CAAb,UAAmBc,CAAC,GAAG,CAAvB,WAA6BI,EAAE,GAAGF,EAAlC,OAAf;AACI,KAAC,EAAE,CADP;AACU,KAAC,EAAEE,EAAE,GAAGF,EAAE,IAAI,IAAId,CAAR,CADpB;AAEI,SAAK,EAAEY,CAFX;AAGI,UAAM,EAAExB;AAHZ,IADJ,CADJ,CAFG,eAUH;AAAG,aAAS,cAAYU,CAAZ,UAAkBc,CAAC,GAAG,CAAtB,WAA4BI,EAAE,GAAGF,EAAjC;AAAZ,kBACI;AAAM,KAAC,EAAEC,EAAT;AAAa,KAAC,EAAEC,EAAhB;AACI,YAAQ,EAAE,CADd;AAEI,SAAK,EAAEH,EAFX;AAGI,UAAM,EAAEC,EAHZ;AAII,eAAW,EAAEG,EAJjB;AAKI,UAAM,EAAErB,MALZ;AAMI,QAAI,EAAEF,UANV;AAOI,iBAAU;AAPd,KAQQc,WARR;AASI,aAAS,EAAEP,UAAU,GAAG,YAAH,GAAkBV,SAT3C;AAUI,QAAI,EAAEU,UAAU,GAAG,QAAH,GAAcV;AAVlC,KADJ,eAaI;AAAM,KAAC,EAAEwB,EAAT;AAAa,KAAC,EAAEC,EAAhB;AACI,SAAK,EAAEH,EADX;AAEI,UAAM,EAAEC,EAFZ;AAGI,UAAM,EAAElB,MAHZ;AAII,QAAI,EAAEA,MAJV;AAKI,kBAAY,OALhB;AAMI,YAAQ,YAAUd,MAAV,MANZ;AAOI,iBAAa,EAAC,MAPlB;AAQI,SAAK,EAAE;AAAEsC,gBAAU,EAAE;AAAd;AARX,IAbJ,CAVG,eAkCH;AAAM,KAAC,EAAER,CAAC,GAAG,CAAb;AAAgB,KAAC,EAAEM,EAAnB;AAAuB,YAAQ,EAAEC,EAAjC;AAAqC,cAAU,EAAC,QAAhD;AAAyD,QAAI,EAAEtB,WAA/D;AACI,qCAA6BwB,6FAAkB,CAACxC,aAAa,IAAI,CAAlB,EAAqB,CAArB,CAA/C;AADJ,KAEKwC,6FAAkB,CAACxC,aAAa,IAAI,CAAlB,EAAqB,CAArB,CAFvB,OAlCG,CAAP;AAuCH,C","file":"86-5f222fdf28c6bfbb918a.js","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { CHANGE, RainGaugeReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\nimport RainGaugeServiceHost from \"../../../jacdac-ts/src/hosts/RainGaugeServiceHost\"\nimport useChange from \"../../jacdac/useChange\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport { useId } from \"react-use-id-hook\";\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\";\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\";\n\nconst TILT = 15;\n\nexport default function DashbaordRainGauge(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const precipitationRegister = service.register(RainGaugeReg.Precipitation);\n    const [precipitation] = useRegisterUnpackedValue<[number]>(precipitationRegister)\n    const clipId = useId();\n    const host = useServiceHost<RainGaugeServiceHost>(service)\n    const tiltCount = useChange(host, h => h?.tiltCount);\n    const level = useChange(host, h => h?.level);\n    const tiltAngle = tiltCount !== undefined ? (tiltCount % 2 ? -TILT : TILT) : 0;\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textPrimary } = useWidgetTheme(color)\n    const a = useThrottledValue(tiltAngle, 45)\n    const l = useThrottledValue(level !== undefined ? level : 0.5, 1);\n    const clickeable = !!host;\n    const handleClick = async (event: React.PointerEvent<SVGRectElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        await host?.rain(0.25);\n        await precipitationRegister.refresh();\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(`rain gauge at level ${Math.round(25 + level * 100)}%`, handleClick)\n\n    const w = 128;\n    const h = 64;\n    const bw = w / 2;\n    const bh = h / 3;\n    const bx = (w - bw) / 2;\n    const by = h - bh - 24;\n    const sw = 1;\n    const ty = h - 4;\n    const fs = 8;\n\n    return <SvgWidget\n        width={w} height={h}>\n        <defs>\n            <clipPath id={clipId}>\n                <rect transform={`rotate(${-a}, ${w / 2}, ${by + bh})`}\n                    x={0} y={by + bh * (1 - l)}\n                    width={w}\n                    height={h} />\n            </clipPath>\n        </defs>\n        <g transform={`rotate(${a}, ${w / 2}, ${by + bh})`}>\n            <rect x={bx} y={by}\n                tabIndex={0}\n                width={bw}\n                height={bh}\n                strokeWidth={sw}\n                stroke={active}\n                fill={background}\n                aria-live=\"polite\"\n                {...buttonProps}\n                className={clickeable ? \"clickeable\" : undefined}\n                role={clickeable ? \"button\" : undefined}\n            />\n            <rect x={bx} y={by}\n                width={bw}\n                height={bh}\n                stroke={active}\n                fill={active}\n                aria-label={\"water\"}\n                clipPath={`url(#${clipId})`}\n                pointerEvents=\"none\"\n                style={{ userSelect: \"none\" }}\n            />\n        </g>\n        <text x={w / 2} y={ty} fontSize={fs} textAnchor=\"middle\" fill={textPrimary}\n            aria-label={`precipitation ${roundWithPrecision(precipitation || 0, 1)} millimeters`}>\n            {roundWithPrecision(precipitation || 0, 1)}mm\n        </text>\n    </SvgWidget>;\n}"],"sourceRoot":""}