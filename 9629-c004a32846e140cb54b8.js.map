{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardAnalogButton.tsx"],"names":["ACTIVE_SPEED","INACTIVE_SPEED","DashboardAnalogButton","props","service","pressureRegister","register","AnalogButtonReg","useRegisterUnpackedValue","pressure","activeThreshold","widgetSize","server","useServiceServer","useState","down","setDown","color","label","useWidgetTheme","background","controlBackground","active","handleDown","handleUp","buttonProps","useSvgButtonProps","useAnimationFrame","reading","values","p","keepAnimating","setValues","sendGetAsync","undefined","buttonActive","w","mo","r","cx","cy","rp","ri","ps","range","a","d","describeArc"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,IAAMA,YAAY,GAAG,IAArB;AACA,IAAMC,cAAc,GAAG,GAAvB;AAEe,SAASC,qBAAT,CAA+BC,KAA/B,EAA6D;AAAA,MAChEC,OADgE,GACpDD,KADoD,CAChEC,OADgE;AAExE,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAR,CAAiBC,uGAAjB,CAAzB;;AAFwE,8BAGrDC,4FAAwB,CACvCH,gBADuC,EAEvCF,KAFuC,CAH6B;AAAA,MAGjEM,QAHiE;;AAAA,+BAO9CD,4FAAwB,CAC9CJ,OAAO,CAACE,QAAR,CAAiBC,qHAAjB,CAD8C,EAE9CJ,KAF8C,CAPsB;AAAA,MAOjEO,eAPiE,8BAWxE;;;AACA,MAAMC,UAAU,4BAAhB;AACA,MAAMC,MAAM,GAAGC,yEAAgB,CAAqBT,OAArB,CAA/B;;AAbwE,kBAchDU,+CAAQ,CAAC,KAAD,CAdwC;AAAA,MAcjEC,IAdiE;AAAA,MAc3DC,OAd2D;;AAexE,MAAMC,KAAK,GAAGL,MAAM,GAAG,WAAH,GAAiB,SAArC;AACA,MAAMM,KAAK,wBAAsBT,QAAjC;;AAhBwE,wBAiBtBU,yEAAc,CAACF,KAAD,CAjBQ;AAAA,MAiBhEG,UAjBgE,mBAiBhEA,UAjBgE;AAAA,MAiBpDC,iBAjBoD,mBAiBpDA,iBAjBoD;AAAA,MAiBjCC,MAjBiC,mBAiBjCA,MAjBiC;;AAkBxE,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBP,WAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAGA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBR,WAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAGA,MAAMS,WAAW,GAAGC,0EAAiB,CACjCR,KADiC,EAEjCN,MAAM,IAAIW,UAFuB,EAGjCX,MAAM,IAAIY,QAHuB,CAArC;AAMAG,4EAAiB,CAAC,YAAM;AACpB,QAAI,CAACf,MAAL,EAAa,OAAO,KAAP;;AADO,gCAERA,MAAM,CAACgB,OAAP,CAAeC,MAAf,EAFQ;AAAA,QAEbC,CAFa;;AAGpB,QAAIC,aAAa,GAAG,IAApB;;AACA,QAAIhB,IAAJ,EAAU;AACN,UAAIe,CAAC,GAAG,IAAI9B,YAAZ,EAA0B;AACtBY,cAAM,CAACgB,OAAP,CAAeI,SAAf,CAAyB,CAAC,CAAD,CAAzB;AACAD,qBAAa,GAAG,KAAhB;AACH,OAHD,MAGOnB,MAAM,CAACgB,OAAP,CAAeI,SAAf,CAAyB,CAACF,CAAC,GAAG9B,YAAL,CAAzB;AACV,KALD,MAKO;AACH,UAAI8B,CAAC,GAAG7B,cAAR,EAAwB;AACpBW,cAAM,CAACgB,OAAP,CAAeI,SAAf,CAAyB,CAAC,CAAD,CAAzB;AACAD,qBAAa,GAAG,KAAhB;AACH,OAHD,MAGOnB,MAAM,CAACgB,OAAP,CAAeI,SAAf,CAAyB,CAACF,CAAC,GAAG7B,cAAL,CAAzB;AACV;;AACDW,UAAM,CAACgB,OAAP,CAAeK,YAAf,GAfoB,CAeU;;AAC9B,WAAOF,aAAP;AACH,GAjBgB,EAiBd,CAAChB,IAAD,CAjBc,CAAjB;AAmBA,MAAIN,QAAQ,KAAKyB,SAAjB,EAA4B,oBAAO,iDAAC,iEAAD,OAAP;AAE5B,MAAMC,YAAY,GAAG1B,QAAQ,GAAGC,eAAhC;AACA,MAAM0B,CAAC,GAAG,EAAV;AACA,MAAMC,EAAE,GAAGtB,IAAI,GAAG,CAAH,GAAO,CAAtB;AACA,MAAMuB,CAAC,GAAGF,CAAC,GAAG,CAAd;AACA,MAAMG,EAAE,GAAGD,CAAX;AACA,MAAME,EAAE,GAAGF,CAAX;AACA,MAAMG,EAAE,GAAGH,CAAC,GAAGD,EAAf;AACA,MAAMK,EAAE,GAAGD,EAAE,GAAGJ,EAAhB;AACA,MAAMM,EAAE,GAAGN,EAAX;AAEA,MAAMO,KAAK,GAAG,GAAd;AACA,MAAMC,CAAC,GAAGpC,QAAQ,GAAGmC,KAArB;AACA,MAAME,CAAC,GAAGC,wEAAW,CAACR,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAa,CAAb,EAAgBI,CAAhB,CAArB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI,iDAAC,gEAAD;AAAW,SAAK,EAAET,CAAlB;AAAqB,QAAI,EAAEzB;AAA3B,kBACI;AACI,KAAC,EAAE,CADP;AAEI,KAAC,EAAE,CAFP;AAGI,MAAE,EAAE,CAHR;AAII,MAAE,EAAE,CAJR;AAKI,SAAK,EAAEyB,CALX;AAMI,UAAM,EAAEA,CANZ;AAOI,QAAI,EAAEhB;AAPV,IADJ,EAUKX,QAAQ,iBACL;AACI,KAAC,EAAEqC,CADP;AAEI,UAAM,EAAExB,MAFZ;AAGI,iBAAa,EAAE,OAHnB;AAII,eAAW,EAAEqB;AAJjB,IAXR,eAkBI;AACI,MAAE,EAAEJ,EADR;AAEI,MAAE,EAAEF,EAFR;AAGI,KAAC,EAAEA,EAAE,GAAG,CAHZ;AAII,wCAAgC3B,eAJpC;AAKI,QAAI,EAAEW,iBALV;AAMI,aAAS,cAAYuB,KAAK,GAAGlC,eAApB,UAAwC6B,EAAxC,UAA+CC,EAA/C;AANb,IAlBJ,eA0BI;AACI,MAAE,EAAED,EADR;AAEI,MAAE,EAAEC,EAFR;AAGI,KAAC,EAAEE,EAHP;AAII,iBAAU,QAJd;AAKI,QAAI,EAAEP,YAAY,GAAGb,MAAH,GAAYD;AALlC,KAMQI,WANR,EA1BJ,CADJ;AAqCH,C","file":"9629-c004a32846e140cb54b8.js","sourcesContent":["import React, { useState } from \"react\"\nimport { AnalogButtonReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { describeArc } from \"../widgets/svgutils\"\nimport AnalogSensorServer from \"../../../jacdac-ts/src/servers/analogsensorserver\"\nimport useAnimationFrame from \"../hooks/useAnimationFrame\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nconst ACTIVE_SPEED = 0.05\nconst INACTIVE_SPEED = 0.1\n\nexport default function DashboardAnalogButton(props: DashboardServiceProps) {\n    const { service } = props\n    const pressureRegister = service.register(AnalogButtonReg.Pressure)\n    const [pressure] = useRegisterUnpackedValue<[number]>(\n        pressureRegister,\n        props\n    )\n    const [activeThreshold] = useRegisterUnpackedValue<[number]>(\n        service.register(AnalogButtonReg.ActiveThreshold),\n        props\n    )\n    //const [buttonVariant] = useRegisterUnpackedValue<[AnalogButtonVariant]>(service.register(AnalogButtonReg.Variant));\n    const widgetSize = `clamp(3rem, 10vw, 16vw)`\n    const server = useServiceServer<AnalogSensorServer>(service)\n    const [down, setDown] = useState(false)\n    const color = server ? \"secondary\" : \"primary\"\n    const label = `button pressure ${pressure}`\n    const { background, controlBackground, active } = useWidgetTheme(color)\n    const handleDown = () => {\n        setDown(true)\n    }\n    const handleUp = () => {\n        setDown(false)\n    }\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(\n        label,\n        server && handleDown,\n        server && handleUp\n    )\n\n    useAnimationFrame(() => {\n        if (!server) return false\n        const [p] = server.reading.values()\n        let keepAnimating = true\n        if (down) {\n            if (p > 1 - ACTIVE_SPEED) {\n                server.reading.setValues([1])\n                keepAnimating = false\n            } else server.reading.setValues([p + ACTIVE_SPEED])\n        } else {\n            if (p < INACTIVE_SPEED) {\n                server.reading.setValues([0])\n                keepAnimating = false\n            } else server.reading.setValues([p - INACTIVE_SPEED])\n        }\n        server.reading.sendGetAsync() // refresh ui\n        return keepAnimating\n    }, [down])\n\n    if (pressure === undefined) return <LoadingProgress />\n\n    const buttonActive = pressure > activeThreshold\n    const w = 64\n    const mo = down ? 3 : 5\n    const r = w / 2\n    const cx = r\n    const cy = r\n    const rp = r - mo\n    const ri = rp - mo\n    const ps = mo\n\n    const range = 360\n    const a = pressure * range\n    const d = describeArc(cx, cy, rp, 0, a)\n\n    /*\n        {buttonVariant === AnalogButtonVariant.Capacitive && <path transform={`translate(20,20)`} aria-hidden={true}\n            pointerEvents=\"none\"\n            style={{ userSelect: \"none\" }}\n            fill={background}\n            d=\"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"></path>}\n            */\n\n    return (\n        <SvgWidget width={w} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                rx={2}\n                ry={2}\n                width={w}\n                height={w}\n                fill={background}\n            />\n            {pressure && (\n                <path\n                    d={d}\n                    stroke={active}\n                    strokeLinecap={\"round\"}\n                    strokeWidth={ps}\n                />\n            )}\n            <circle\n                cx={cx}\n                cy={mo}\n                r={mo / 3}\n                aria-label={`active threshold ${activeThreshold}`}\n                fill={controlBackground}\n                transform={`rotate(${range * activeThreshold}, ${cx}, ${cy})`}\n            />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                aria-live=\"polite\"\n                fill={buttonActive ? active : controlBackground}\n                {...buttonProps}\n            />\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}