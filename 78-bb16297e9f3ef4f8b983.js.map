{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRoleManager.tsx"],"names":["DashboardRoleManager","props","service","autoBindRegister","register","RoleManagerReg","AutoBind","useRegisterUnpackedValue","autoBind","AllRolesAllocated","allRolesAllocated","handleAutoBind","sendSetBoolAsync","autoBindLabel","useId","allRolesLabel"],"mappings":";;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEe,SAASA,oBAAT,CAA8BC,KAA9B,EAA4D;AAAA,MAC/DC,OAD+D,GACnDD,KADmD,CAC/DC,OAD+D;AAEvE,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAR,CAAiBC,qFAAc,CAACC,QAAhC,CAAzB;;AAFuE,8BAGpDC,iGAAwB,CAAYJ,gBAAZ,CAH4B;AAAA,MAGhEK,QAHgE;;AAAA,+BAI3CD,iGAAwB,CAAYL,OAAO,CAACE,QAAR,CAAiBC,qFAAc,CAACI,iBAAhC,CAAZ,CAJmB;AAAA,MAIhEC,iBAJgE;;AAKvE,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMR,gBAAgB,CAACS,gBAAjB,CAAkC,CAACJ,QAAnC,EAA6C,IAA7C,CAAN;AAAA,GAAvB;;AACA,MAAMK,aAAa,GAAGC,uEAAK,EAA3B;AACA,MAAMC,aAAa,GAAGD,uEAAK,EAA3B;AAEA,sBAAO,qIACH,2DAAC,iEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,2DAAC,iEAAD;AAAQ,uBAAiBC,aAAzB;AAAwC,SAAK,EAAEL,iBAA/C;AAAkE,YAAQ,EAAE;AAA5E,IADJ,eAEI;AAAO,MAAE,EAAEK;AAAX,2BAFJ,CADG,eAKH,2DAAC,iEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,2DAAC,iEAAD;AAAQ,uBAAiBF,aAAzB;AAAwC,SAAK,EAAEL,QAA/C;AAAyD,YAAQ,EAAEG;AAAnE,IADJ,eAEI;AAAO,MAAE,EAAEE;AAAX,kCAFJ,CALG,CAAP;AAUH,C","file":"78-bb16297e9f3ef4f8b983.js","sourcesContent":["\nimport { Grid, Switch } from \"@material-ui/core\";\nimport React from \"react\";\nimport { RoleManagerReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport { useId } from \"react-use-id-hook\";\n\nexport default function DashboardRoleManager(props: DashboardServiceProps) {\n    const { service } = props;\n    const autoBindRegister = service.register(RoleManagerReg.AutoBind);\n    const [autoBind] = useRegisterUnpackedValue<[boolean]>(autoBindRegister);\n    const [allRolesAllocated] = useRegisterUnpackedValue<[boolean]>(service.register(RoleManagerReg.AllRolesAllocated))\n    const handleAutoBind = () => autoBindRegister.sendSetBoolAsync(!autoBind, true);\n    const autoBindLabel = useId();\n    const allRolesLabel = useId();\n\n    return <>\n        <Grid item xs={12}>\n            <Switch aria-labelledby={allRolesLabel} value={allRolesAllocated} disabled={true} />\n            <label id={allRolesLabel}>all roles allocated</label>\n        </Grid>\n        <Grid item xs={12}>\n            <Switch aria-labelledby={autoBindLabel} value={autoBind} onChange={handleAutoBind} />\n            <label id={autoBindLabel}>assign roles automatically</label>\n        </Grid>\n    </>\n}"],"sourceRoot":""}