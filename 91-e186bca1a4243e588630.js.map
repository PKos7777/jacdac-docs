{"version":3,"sources":["webpack:///./src/components/devices/useDeviceStatusLightStyle.ts","webpack:///./src/components/widgets/SvgWidget.tsx","webpack:///./src/components/widgets/useWidgetTheme.ts","webpack:///./jacdac-ts/src/jdom/color.ts","webpack:///./src/components/hooks/useLedAnimationStyle.ts","webpack:///./src/jacdac/useRegisterValue.ts","webpack:///./src/components/StatusLEDAnimation.tsx"],"names":["statusHue","statusSaturation","bootloaderAnimation","identifyAnimation","startupAnimation","connectedAnimation","disconnectedAnimation","panicFrames","statusAnimation","status","useDeviceStatusLightStyle","device","options","register","useChange","d","service","ControlReg","StatusLight","bootloader","hasService","SRV_BOOTLOADER","identifying","registerAnimation","useRegisterUnpackedValue","animation","useLedAnimationStyle","SvgWidget","props","width","height","size","background","children","role","title","viewBox","tabIndex","h","aspectRatio","vertical","position","undefined","useWidgetTheme","color","theme","useTheme","palette","useContext","DarkModeContext","darkMode","active","primary","main","secondary","info","backgroundColor","default","grey","controlBackground","textPrimary","text","textProps","fill","alignmentBaseline","dominantBaseline","textAnchor","pointerEvents","letterSpacing","style","userSelect","hsvToCss","hue","saturation","value","brightness","monochrome","csshue","csssat","cssval","hsv_to_hsl","s","l","mixl","alpha","v","interpolate","frames","time","framet","nframes","length","i","frame","frame1","ratio","ratiom1","repetitions","cssProperty","step","interval","useMemo","className","helmetStyle","Math","random","replace","DURATION","property","total8ms","reduce","t","row","totals","kf","t8ms","forEach","sat","duration","csscolor","percent","roundWithPrecision","KEYFRAME_DURATION","nkframes","ceil","kframei","kt","round","map","toString","join","useRegisterHumanValue","useState","humanValue","setValue","useEffect","subscribe","REPORT_UPDATE","useRegisterIntValue","intValue","unpackedValue","useRegisterStringValue","stringValue","useRegisterBoolValue","boolValue","StatusLEDAnimation","count","n","wc","w","r","cx","cy","Array","_","capitalize"],"mappings":";;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA,IAAMA,SAAS,GAAG,EAAlB;AACA,IAAMC,gBAAgB,GAAG,GAAzB,C,CAEA;;AACA,IAAMC,mBAAqC,GAAG,CAC1C,CAD0C,EAE1C,CACI,CAACF,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,MAAM,CAAxC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,GAAlC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,MAAM,CAAxC,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,GAAlC,CAJJ,CAF0C,CAA9C,C,CASA;;AACA,IAAME,iBAAmC,GAAG,CACxC,CADwC,EAExC,CACI,CAACH,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,KAAK,CAAxC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,GAAnC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,MAAM,CAAvC,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,GAAjC,CAJJ,CAFwC,CAA5C,C,CASA;AACA;;AACA,IAAMG,gBAAkC,GAAG,CACvC,CADuC,EAEvC,CACI,CAACJ,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,MAAM,CAAzC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,GAAnC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,IAAI,GAAJ,GAAU,IAAxC,EAA8C,MAAM,CAApD,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,IAAI,GAAJ,GAAU,IAAxC,EAA8C,GAA9C,CAJJ,EAKI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,MAAM,CAAzC,CALJ,EAMI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,GAAnC,CANJ,EAOI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,GAAjC,CAPJ,CAFuC,CAA3C,C,CAYA;;AACA,IAAMI,kBAAoC,GAAG,CACzC,CADyC,EAEzC,CACI,CAACL,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,MAAM,CAAvC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,GAAjC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,KAAK,CAAvC,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,GAAlC,CAJJ,EAKI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,CAA9B,EAAiC,GAAjC,CALJ,CAFyC,CAA7C,C,CAUA;;AACA,IAAMK,qBAAuC,GAAG,CAC5C,CAD4C,EAE5C,CACI,CAACN,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,KAAK,CAAxC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,GAAnC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,MAAM,CAAxC,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,GAAlC,CAJJ,CAF4C,CAAhD,C,CASA;;AACA,IAAMM,WAA6B,GAAG,CAClC,EADkC,EAElC,CACI,CAACP,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,KAAK,CAAxC,CADJ,EAEI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,GAA9B,EAAmC,GAAnC,CAFJ,EAGI,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,KAAK,CAAvC,CAHJ,EAII,CAACD,SAAD,EAAYC,gBAAZ,EAA8B,EAA9B,EAAkC,GAAlC,CAJJ,CAFkC,CAAtC;AAYO,SAASO,eAAT,CAAyBC,MAAzB,EAA8D;AACjE,UAAQA,MAAR;AACI,SAAK,SAAL;AAAgB,aAAOL,gBAAP;;AAChB,SAAK,UAAL;AAAiB,aAAOD,iBAAP;;AACjB,SAAK,WAAL;AAAkB,aAAOE,kBAAP;;AAClB,SAAK,cAAL;AAAqB,aAAOC,qBAAP;;AACrB,SAAK,OAAL;AAAc,aAAOC,WAAP;;AACd,SAAK,YAAL;AAAmB,aAAOL,mBAAP;;AACnB;AAAS,aAAO,CAAC,CAAD,EAAI,EAAJ,CAAP;AAPb;AASH;AAEc,SAASQ,yBAAT,CAAmCC,MAAnC,EAAqDC,OAArD,EAAkF;AAC7F,MAAMC,QAAQ,GAAGC,yEAAS,CAACH,MAAD,EAAS,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACC,OAAF,CAAU,CAAV,EAAaH,QAAb,CAAsBI,gFAAU,CAACC,WAAjC,CAAJ;AAAA,GAAV,CAA1B;AACA,MAAMC,UAAU,GAAGL,yEAAS,CAACH,MAAD,EAAS,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACK,UAAF,CAAaC,qFAAb,CAAJ;AAAA,GAAV,CAA5B;AACA,MAAMC,WAAW,GAAGR,yEAAS,CAACH,MAAD,EAAS,UAAAI,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEO,WAAP;AAAA,GAAV,CAA7B;AACA,MAAMC,iBAAiB,GAAGC,iGAAwB,CAAmBX,QAAnB,CAAxB,IAAwD,CAAC,CAAD,EAAI,EAAJ,CAAlF,CAJ6F,CAM7F;;AACA,MAAMY,SAA2B,GAAGH,WAAW,GAAGnB,iBAAH,GACzCgB,UAAU,GAAGjB,mBAAH,GACNqB,iBAFV;AAIA,SAAOG,mFAAoB,CAACD,SAAD,EAAYb,OAAZ,CAA3B;AACH,C;;;;;;;;ACtGD;AAAA;AAAA;AAAA;AAEe,SAASe,SAAT,CAAmBC,KAAnB,EAUZ;AAAA,MACSC,KADT,GACgGD,KADhG,CACSC,KADT;AAAA,MACgBC,MADhB,GACgGF,KADhG,CACgBE,MADhB;AAAA,oBACgGF,KADhG,CACwBG,IADxB;AAAA,MACwBA,IADxB,4BAC+B,MAD/B;AAAA,MACuCC,UADvC,GACgGJ,KADhG,CACuCI,UADvC;AAAA,MACmDC,QADnD,GACgGL,KADhG,CACmDK,QADnD;AAAA,MAC6DC,IAD7D,GACgGN,KADhG,CAC6DM,IAD7D;AAAA,MACmEC,KADnE,GACgGP,KADhG,CACmEO,KADnE;AAAA,MAC0EC,OAD1E,GACgGR,KADhG,CAC0EQ,OAD1E;AAAA,MACmFC,QADnF,GACgGT,KADhG,CACmFS,QADnF;AAEC,MAAMC,CAAC,GAAGR,MAAM,IAAID,KAApB;AACA,MAAMU,WAAW,GAAGV,KAAK,GAAGC,MAA5B;AACA,MAAMU,QAAQ,GAAGD,WAAW,GAAG,CAA/B;AAEA,sBAAO;AAAK,SAAK,EAAG;AAChBE,cAAQ,EAAE,UADM;AAEhBX,YAAM,EAAEU,QAAQ,GAAGT,IAAH,GAAUW,SAFV;AAGhBb,WAAK,EAAEW,QAAQ,GAAGE,SAAH,GAAeX;AAHd;AAAb,kBAKH;AACI,SAAK,EAAC,4BADV;AAEI,YAAQ,EAAEM,QAFd;AAGI,WAAO,EAAED,OAAO,aAAWP,KAAX,SAAoBS,CAHxC;AAII,kBAAYH,KAJhB;AAKI,SAAK,EAAG;AACJL,YAAM,EAAEU,QAAQ,GAAG,MAAH,GAAYE,SADxB;AAEJb,WAAK,EAAEW,QAAQ,GAAIE,SAAJ,GAAgB;AAF3B,KALZ;AASI,QAAI,EAAER,IAAI,IAAI;AATlB,KAUKF,UAAU,iBAAI;AAAM,KAAC,EAAE,CAAT;AAAY,KAAC,EAAE,CAAf;AAAkB,SAAK,EAAEH,KAAzB;AAAgC,UAAM,EAAEC,MAAxC;AAAgD,QAAI,EAAEE,UAAtD;AAAkE,MAAE,EAAE,CAAtE;AAAyE,MAAE,EAAE;AAA7E,IAVnB,EAWKC,QAXL,CALG,CAAP;AAmBH,C;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEe,SAASU,cAAT,CAAwBC,KAAxB,EAAyD;AACpE,MAAMC,KAAK,GAAGC,yEAAQ,EAAtB;AADoE,MAE5DC,OAF4D,GAEhDF,KAFgD,CAE5DE,OAF4D;AAAA,MAG5Df,UAH4D,GAG7Ce,OAH6C,CAG5Df,UAH4D;;AAAA,oBAI/CgB,wDAAU,CAACC,mEAAD,CAJqC;AAAA,MAI5DC,QAJ4D,eAI5DA,QAJ4D;;AAMpE,MAAMC,MAAc,GAAGP,KAAK,KAAK,SAAV,GAAsBG,OAAO,CAACK,OAAR,CAAgBC,IAAtC,GACjBT,KAAK,KAAK,WAAV,GAAwBG,OAAO,CAACO,SAAR,CAAkBD,IAA1C,GACIN,OAAO,CAACQ,IAAR,CAAaF,IAFvB;AAGA,MAAMG,eAAe,GAAGN,QAAQ,KAAK,MAAb,GAAsBlB,UAAU,CAACyB,OAAjC,GAA2CV,OAAO,CAACW,IAAR,CAAa,GAAb,CAAnE;AACA,MAAMC,iBAAiB,GAAGT,QAAQ,KAAK,MAAb,GAAsBH,OAAO,CAACW,IAAR,CAAa,GAAb,CAAtB,GAA0CX,OAAO,CAACW,IAAR,CAAa,GAAb,CAApE;AACA,MAAME,WAAW,GAAGb,OAAO,CAACc,IAAR,CAAaT,OAAjC;AACA,MAAMU,SAAmC,GAAG;AACxCC,QAAI,EAAEH,WADkC;AAExCI,qBAAiB,EAAE,SAFqB;AAGxCC,oBAAgB,EAAE,QAHsB;AAIxCC,cAAU,EAAE,QAJ4B;AAKxCC,iBAAa,EAAE,MALyB;AAMxCC,iBAAa,EAAE,CANyB;AAOxCC,SAAK,EAAE;AACHC,gBAAU,EAAE,MADT;AAEHH,mBAAa,EAAE;AAFZ;AAPiC,GAA5C;AAaA,SAAO;AACHnC,cAAU,EAAEwB,eADT;AAEHG,qBAAiB,EAAjBA,iBAFG;AAGHR,UAAM,EAANA,MAHG;AAIHS,eAAW,EAAXA,WAJG;AAKHE,aAAS,EAATA;AALG,GAAP;AAOH,C;;;;;;;;ACpCD;AAAO,SAASS,QAAT,CAAkBC,GAAlB,EAA+BC,UAA/B,EAAmDC,KAAnD,EAAkEC,UAAlE,EAAsFC,UAAtF,EAA4G;AAC/G,MAAMC,MAAM,GAAGL,GAAG,GAAG,GAAN,GAAY,IAA3B;AACA,MAAMM,MAAM,GAAG,CAACF,UAAU,GAAG,IAAH,GAAUH,UAArB,IAAmC,IAAlD;AACA,MAAMM,MAAM,GAAGL,KAAK,GAAG,IAAvB;;AAH+G,oBAI7FM,UAAU,CAACH,MAAD,EAASC,MAAT,EAAiBC,MAAjB,CAJmF;AAAA,MAIxGzC,CAJwG;AAAA,MAIrG2C,CAJqG;AAAA,MAIlGC,CAJkG;;AAK/G,MAAMC,IAAI,GAAG,GAAb;AACA,MAAMC,KAAK,GAAG,CAACD,IAAI,GAAG,CAAC,IAAIA,IAAL,IAAaD,CAArB,IAA0BP,UAAxC;AAEA,mBAAerC,CAAf,UAAqB2C,CAAC,GAAG,GAAzB,WAAkCC,CAAC,GAAG,GAAtC,WAA+CE,KAA/C;AACH;;AAED,SAASJ,UAAT,CAAoB1C,CAApB,EAA+B2C,CAA/B,EAA0CI,CAA1C,EAAqD;AACjD;AACA,MAAMH,CAAC,GAAG,CAAC,IAAID,CAAL,IAAUI,CAAV,GAAc,CAAxB;;AAEA,MAAIH,CAAC,IAAI,CAAT,EAAY;AACR,QAAIA,CAAC,IAAI,CAAT,EAAY;AACRD,OAAC,GAAG,CAAJ;AACH,KAFD,MAEO,IAAIC,CAAC,GAAG,GAAR,EAAa;AAChBD,OAAC,GAAGA,CAAC,GAAGI,CAAJ,IAASH,CAAC,GAAG,CAAb,CAAJ;AACH,KAFM,MAEA;AACHD,OAAC,GAAGA,CAAC,GAAGI,CAAJ,IAAS,IAAIH,CAAC,GAAG,CAAjB,CAAJ;AACH;AACJ;;AAED,SAAO,CAAC5C,CAAD,EAAI2C,CAAJ,EAAOC,CAAP,CAAP;AACH,C;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAUA,SAASI,WAAT,CAAqBC,MAArB,EAAkDC,IAAlD,EAAgE;AAC5D,MAAIC,MAAM,GAAG,CAAb;AACA,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAvB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAApB,EAA6B,EAAEE,CAA/B,EAAkC;AAC9B,QAAMC,KAAK,GAAGN,MAAM,CAACK,CAAD,CAApB;;AACA,QAAIA,CAAC,IAAIF,OAAO,GAAG,CAAf,IAAqBF,IAAI,IAAIC,MAAR,IAAkBD,IAAI,GAAGC,MAAM,GAAGI,KAAK,CAAC,CAAD,CAAhE,EAAsE;AAClE;AACA,UAAMC,MAAM,GAAGF,CAAC,IAAIF,OAAO,GAAG,CAAf,GAAmBH,MAAM,CAAC,CAAD,CAAzB,GAA+BA,MAAM,CAACK,CAAC,GAAG,CAAL,CAApD;AACA,UAAMG,KAAK,GAAG,CAACP,IAAI,GAAGC,MAAR,IAAkBI,KAAK,CAAC,CAAD,CAArC;AACA,UAAMG,OAAO,GAAG,IAAID,KAApB;AACA,aAAO;AACHvB,WAAG,EAAEuB,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAb,GAAmBG,OAAO,GAAGF,MAAM,CAAC,CAAD,CADrC;AAEHrB,kBAAU,EAAEsB,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAb,GAAmBG,OAAO,GAAGF,MAAM,CAAC,CAAD,CAF5C;AAGHpB,aAAK,EAAEqB,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAb,GAAmBG,OAAO,GAAGF,MAAM,CAAC,CAAD;AAHvC,OAAP;AAKH,KAVD,MAUO;AACH;AACAL,YAAM,IAAII,KAAK,CAAC,CAAD,CAAf,CAFG,CAEiB;AACvB;AACJ;;AAED,SAAO;AAAErB,OAAG,EAAE,CAAP;AAAUC,cAAU,EAAE,CAAtB;AAAyBC,SAAK,EAAE;AAAhC,GAAP;AACH;;AAEc,SAAShD,oBAAT,CAA8BD,SAA9B,EAA2Db,OAA3D,EAAwF;AAAA,MAC5FqF,WAD4F,GACrExE,SADqE;AAAA,MAC/E8D,MAD+E,GACrE9D,SADqE;;AAAA,aAE/Cb,OAAO,IAAI,EAFoC;AAAA,MAE3FgE,UAF2F,QAE3FA,UAF2F;AAAA,MAE/EsB,WAF+E,QAE/EA,WAF+E;AAAA,MAElEC,IAFkE,QAElEA,IAFkE;AAAA,MAE5DC,QAF4D,QAE5DA,QAF4D,EAGnG;;;AAHmG,iBAIhEC,qDAAO,CAAC,YAAM;AAC7C,QAAI,EAACd,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEI,MAAT,KAAmBM,WAAW,GAAG,CAArC,EACI,OAAO;AAAEK,eAAS,EAAE,EAAb;AAAiBC,iBAAW,EAAE7D;AAA9B,KAAP;AAEJ,QAAM4D,SAAS,GAAG,OAAO,CAACE,IAAI,CAACC,MAAL,KAAgB,EAAjB,EAAqBC,OAArB,CAA6B,OAA7B,EAAsC,EAAtC,CAAzB;AACA,QAAMC,QAAQ,GAAG,CAAjB;AACA,QAAMC,QAAQ,GAAGV,WAAW,IAAI,kBAAhC;AACA,QAAMW,QAAQ,GAAGtB,MAAM,CAACuB,MAAP,CAAc,UAACC,CAAD,EAAIC,GAAJ;AAAA,aAAYD,CAAC,GAAGC,GAAG,CAACL,QAAD,CAAnB;AAAA,KAAd,EAA6C,CAA7C,CAAjB;AACA,QAAMM,MAAM,GAAIJ,QAAQ,GAAG,CAAZ,GAAiB,IAAjB,GAAwB,CAACT,QAAQ,IAAI,CAAb,IAAkB,IAAzD;AAEA,QAAIc,EAAE,mBAAiBZ,SAAjB,SAAN;;AACA,QAAIH,IAAJ,EAAU;AACN,UAAIgB,IAAI,GAAG,CAAX;AACA5B,YAAM,CAAC6B,OAAP,CAAe,UAAAvB,KAAK,EAAI;AAAA,YACbrB,GADa,GACgBqB,KADhB;AAAA,YACRwB,GADQ,GACgBxB,KADhB;AAAA,YACHnB,KADG,GACgBmB,KADhB;AAAA,YACIyB,QADJ,GACgBzB,KADhB;AAEpB,YAAM0B,QAAQ,GAAGhD,kFAAQ,CAACC,GAAD,EAAM6C,GAAN,EAAW3C,KAAX,EAAkB,IAAlB,EAAwBE,UAAxB,CAAzB;AACA,YAAM4C,OAAO,GAAIL,IAAI,GAAG,CAAP,GAAW,IAAZ,GAAoBF,MAApB,GAA6B,GAA7C;AACAC,UAAE,WAASO,4FAAkB,CAACD,OAAD,EAAU,CAAV,CAA3B,YAA8CZ,QAA9C,UAA2DW,QAA3D,WAAF;AACAJ,YAAI,IAAIG,QAAR,CALoB,CAMrB;AACF,OAPD;AAQH,KAVD,MAUO;AACH;AACA,UAAMI,iBAAiB,GAAG,MAAM,CAAhC;AACA,UAAMC,QAAQ,GAAGnB,IAAI,CAACoB,IAAL,CAAUf,QAAQ,GAAGa,iBAArB,CAAjB;;AACA,WAAK,IAAIG,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGF,QAAhC,EAA0C,EAAEE,OAA5C,EAAqD;AACjD,YAAMC,EAAE,GAAGD,OAAO,GAAIF,QAAX,GAAuBd,QAAlC;;AADiD,2BAEdvB,WAAW,CAACC,MAAD,EAASuC,EAAT,CAFG;AAAA,YAEzCtD,GAFyC,gBAEzCA,GAFyC;AAAA,YAEpCC,UAFoC,gBAEpCA,UAFoC;AAAA,YAExBC,KAFwB,gBAExBA,KAFwB,EAGjD;;;AACA,YAAM8C,OAAO,GAAGhB,IAAI,CAACuB,KAAL,CAAWF,OAAO,IAAIF,QAAQ,GAAG,CAAf,CAAP,GAA2B,GAAtC,CAAhB;AACA,YAAMJ,QAAQ,GAAGhD,kFAAQ,CAACC,GAAD,EAAMC,UAAN,EAAkBC,KAAlB,EAAyB,IAAzB,EAA+BE,UAA/B,CAAzB;AACAsC,UAAE,WAASO,4FAAkB,CAACD,OAAD,EAAU,CAAV,CAA3B,YAA8CZ,QAA9C,UAA2DW,QAA3D,WAAF;AACH;AACJ;;AAEDL,MAAE,SAAF,CAnC6C,CAmChC;AACb;;AACAA,MAAE,UAAQZ,SAAR,gCACYW,MADZ,4BAEQX,SAFR,iGAKmB,CAACL,WAAD,GAAe,UAAf,GAA4BA,WAL/C,UAAF;AAOA,WAAO;AACHM,iBAAW,EAAEW,EADV;AAEHZ,eAAS,EAATA;AAFG,KAAP;AAIH,GAhDyC,EAgDvC,CAACf,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEyC,GAAR,CAAY,UAAAnC,KAAK;AAAA,WAAIA,KAAK,CAACoC,QAAN,EAAJ;AAAA,GAAjB,EAAuCC,IAAvC,EAAD,EAAgDtD,UAAhD,EAA4DuB,IAA5D,EAAkED,WAAlE,EAA+EE,QAA/E,EAAyFH,WAAzF,CAhDuC,CAJyD;AAAA,MAI3FM,WAJ2F,YAI3FA,WAJ2F;AAAA,MAI9ED,SAJ8E,YAI9EA,SAJ8E;;AAsDnG,SAAO;AAAEA,aAAS,EAATA,SAAF;AAAaC,eAAW,EAAXA;AAAb,GAAP;AACH,C;;;;;;;;AC7FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGO,SAAS4B,qBAAT,CAA+BtH,QAA/B,EAA6D;AAAA,kBACtCuH,sDAAQ,CAASvH,QAAT,aAASA,QAAT,uBAASA,QAAQ,CAAEwH,UAAnB,CAD8B;AAAA,MACzD3D,KADyD;AAAA,MAClD4D,QADkD,iBAEhE;;;AACAC,yDAAS,CAAC;AAAA,WAAM1H,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAE2H,SAAV,CAAoBC,oFAApB,EAAmC,YAAM;AACrDH,cAAQ,CAACzH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEwH,UAAX,CAAR;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAACxH,QAAD,CAFK,CAAT;AAGA,SAAO6D,KAAP;AACH;AAEM,SAASgE,mBAAT,CAA6B7H,QAA7B,EAA2D;AAAA,mBACpCuH,sDAAQ,CAASvH,QAAT,aAASA,QAAT,uBAASA,QAAQ,CAAE8H,QAAnB,CAD4B;AAAA,MACvDjE,KADuD;AAAA,MAChD4D,QADgD,kBAE9D;;;AACAC,yDAAS,CAAC;AAAA,WAAM1H,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAE2H,SAAV,CAAoBC,oFAApB,EAAmC,YAAM;AACrDH,cAAQ,CAACzH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAE8H,QAAX,CAAR;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAAC9H,QAAD,CAFK,CAAT;AAGA,SAAO6D,KAAP;AACH;AAEM,SAASlD,wBAAT,CAAmDX,QAAnD,EAA4E;AAAA,mBACrDuH,sDAAQ,CAAIvH,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAE+H,aAAd,CAD6C;AAAA,MACxElE,KADwE;AAAA,MACjE4D,QADiE;;AAE/EC,yDAAS,CAAC;AAAA,WAAM1H,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAE2H,SAAV,CAAoBC,oFAApB,EAAmC,YAAM;AACrDH,cAAQ,CAACzH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAE+H,aAAX,CAAR;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAAC/H,QAAD,CAFK,CAAT;AAGA,SAAO6D,KAAK,IAAK,EAAjB;AACH;AAEM,SAASmE,sBAAT,CAAgChI,QAAhC,EAA8D;AAAA,mBACvCuH,sDAAQ,CAASvH,QAAT,aAASA,QAAT,uBAASA,QAAQ,CAAEiI,WAAnB,CAD+B;AAAA,MAC1DpE,KAD0D;AAAA,MACnD4D,QADmD,kBAEjE;;;AACAC,yDAAS,CAAC;AAAA,WAAM1H,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAE2H,SAAV,CAAoBC,oFAApB,EAAmC,YAAM;AACrDH,cAAQ,CAACzH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEiI,WAAX,CAAR;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAACjI,QAAD,CAFK,CAAT;AAGA,SAAO6D,KAAP;AACH;AAEM,SAASqE,oBAAT,CAA8BlI,QAA9B,EAA6D;AAAA,mBACtCuH,sDAAQ,CAAUvH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEmI,SAApB,CAD8B;AAAA,MACzDtE,KADyD;AAAA,MAClD4D,QADkD,kBAEhE;;;AACAC,yDAAS,CAAC;AAAA,WAAM1H,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAE2H,SAAV,CAAoBC,oFAApB,EAAmC,YAAM;AACrDH,cAAQ,CAACzH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEmI,SAAX,CAAR;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAACnI,QAAD,CAFK,CAAT;AAGA,SAAO6D,KAAP;AACH,C;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuE,kBAAT,CAA4BrH,KAA5B,EAEZ;AAAA,MACSnB,MADT,GACoBmB,KADpB,CACSnB,MADT;AAGC,MAAI2F,QAAQ,GAAG,CAAf;AACA,MAAI8C,KAAK,GAAG,CAAZ;;AACA,UAAQzI,MAAR;AACI,SAAK,WAAL;AAAkByI,WAAK,GAAG,CAAR;AAAW;;AAC7B,SAAK,SAAL;AAAgB9C,cAAQ,GAAG,IAAX;AAAiB;;AACjC,SAAK,UAAL;AAAiBA,cAAQ,GAAG,IAAX;AAAiB;;AAClC,SAAK,OAAL;AAAcA,cAAQ,GAAG,IAAX;AAAiB;AAJnC;;AAMA,MAAMb,MAAM,GAAG/E,kGAAe,CAACC,MAAD,CAA9B;;AAXD,8BAYoCiB,mFAAoB,CAAC6D,MAAD,EAAS;AAC5DW,eAAW,EAAE,MAD+C;AAE5DtB,cAAU,EAAE,IAFgD;AAG5DuB,QAAI,EAAE,IAHsD;AAI5DC,YAAQ,EAARA;AAJ4D,GAAT,CAZxD;AAAA,MAYSG,WAZT,yBAYSA,WAZT;AAAA,MAYsBD,SAZtB,yBAYsBA,SAZtB;;AAAA,wBAkB+B3D,+EAAc,EAlB7C;AAAA,MAkBSgB,iBAlBT,mBAkBSA,iBAlBT;;AAoBC,MAAMwF,CAAC,GAAGD,KAAK,IAAI,CAAnB;AACA,MAAME,EAAE,GAAG,EAAX;AACA,MAAM9G,CAAC,GAAG8G,EAAV;AACA,MAAMC,CAAC,GAAGD,EAAE,GAAGD,CAAL,GAAS,CAAnB;AACA,MAAMG,CAAC,GAAG,CAACF,EAAE,IAAI,CAAP,IAAY,CAAtB;AACA,MAAMG,EAAE,GAAGH,EAAE,IAAI,CAAjB;AACA,MAAMI,EAAE,GAAGlH,CAAC,IAAI,CAAhB;AACA,sBAAO,oFACH,2DAAC,4DAAD,qBACI,0EAAQiE,WAAR,CADJ,CADG,eAIH,2DAAC,kEAAD;AAAW,SAAK,EAAE8C,CAAlB;AAAqB,UAAM,EAAE/G,CAA7B;AAAgC,QAAI,EAAE;AAAtC,KACKmH,KAAK,CAACN,CAAD,CAAL,CAASpF,IAAT,CAAc,CAAd,EAAiBiE,GAAjB,CAAqB,UAAC0B,CAAD,EAAI9D,CAAJ;AAAA,wBAAU;AAAG,SAAG,EAAEA,CAAR;AAAW,eAAS,iBAAewD,EAAE,GAAGxD,CAApB;AAApB,oBAC5B;AAAQ,QAAE,EAAE2D,EAAZ;AAAgB,QAAE,EAAEC,EAApB;AAAwB,OAAC,EAAEF,CAA3B;AAA8B,UAAI,EAAE3F;AAApC,MAD4B,eAE5B;AAAQ,QAAE,EAAE4F,EAAZ;AAAgB,QAAE,EAAEC,EAApB;AAAwB,OAAC,EAAEF,CAA3B;AAA8B,eAAS,EAAEhD,SAAzC;AAAoD,YAAM,EAAE3C,iBAA5D;AAA+E,iBAAW,EAAE;AAA5F,MAF4B,CAAV;AAAA,GAArB,CADL,CAJG,EAUFgG,yEAAU,CAAClJ,MAAD,CAVR,CAAP;AAYH,C","file":"91-e186bca1a4243e588630.js","sourcesContent":["import { LedAnimationData, LedAnimationFrame } from \"../../../jacdac-ts/src/hosts/ledservicehost\";\nimport { ControlReg, SRV_BOOTLOADER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport useChange from \"../../jacdac/useChange\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useLedAnimationStyle, { LedAnimationProps } from \"../hooks/useLedAnimationStyle\";\n\nconst statusHue = 32\nconst statusSaturation = 255\n\n//Every 524ms it changes from 5.9% and 1.6% (i.e. 1 sec duty cycle)\nconst bootloaderAnimation: LedAnimationData = [\n    0,\n    [\n        [statusHue, statusSaturation, 96, 524 / 8],\n        [statusHue, statusSaturation, 96, 0.1],\n        [statusHue, statusSaturation, 72, 524 / 8],\n        [statusHue, statusSaturation, 72, 0.1],\n    ]\n];\n// 50ms every 150ms (50 on, 100 off) seven times (i.e. for 1 second)\nconst identifyAnimation: LedAnimationData = [\n    7,\n    [\n        [statusHue, statusSaturation, 255, 50 / 8],\n        [statusHue, statusSaturation, 255, 0.1],\n        [statusHue, statusSaturation, 0, 100 / 8],\n        [statusHue, statusSaturation, 0, 0.1],\n    ]\n];\n// lights at 100% for 270ms, then 5.9% for rest of 530ms, \n// then goes into application that turns it on full for 200ms\nconst startupAnimation: LedAnimationData = [\n    1,\n    [\n        [statusHue, statusSaturation, 255, 270 / 8],\n        [statusHue, statusSaturation, 255, 0.1],\n        [statusHue, statusSaturation, 6 / 100 * 0xff, 530 / 8],\n        [statusHue, statusSaturation, 6 / 100 * 0xff, 0.1],\n        [statusHue, statusSaturation, 255, 200 / 8],\n        [statusHue, statusSaturation, 255, 0.1],\n        [statusHue, statusSaturation, 0, 0.1],\n    ]\n];\n// Synchronized fast blink 50us every 500ms\nconst connectedAnimation: LedAnimationData = [\n    0,\n    [\n        [statusHue, statusSaturation, 0, 500 / 8],\n        [statusHue, statusSaturation, 0, 0.1],\n        [statusHue, statusSaturation, 96, 24 / 8],\n        [statusHue, statusSaturation, 96, 0.1],\n        [statusHue, statusSaturation, 0, 0.1],\n    ]\n];\n//5ms every 250ms\nconst disconnectedAnimation: LedAnimationData = [\n    0,\n    [\n        [statusHue, statusSaturation, 128, 40 / 8],\n        [statusHue, statusSaturation, 128, 0.1],\n        [statusHue, statusSaturation, 16, 250 / 8],\n        [statusHue, statusSaturation, 16, 0.1],\n    ]\n];\n// fast blink 70ms on, 70ms off - 30 times (4.2 seconds) before a reboot\nconst panicFrames: LedAnimationData = [\n    30,\n    [\n        [statusHue, statusSaturation, 128, 70 / 8],\n        [statusHue, statusSaturation, 128, 0.1],\n        [statusHue, statusSaturation, 16, 70 / 8],\n        [statusHue, statusSaturation, 16, 0.1],\n    ]\n];\n\nexport type LEDStatus = \"startup\" | \"identify\" | \"connected\" | \"disconnected\" | \"panic\" | \"bootloader\";\n\nexport function statusAnimation(status: LEDStatus): LedAnimationData {\n    switch (status) {\n        case \"startup\": return startupAnimation;\n        case \"identify\": return identifyAnimation;\n        case \"connected\": return connectedAnimation;\n        case \"disconnected\": return disconnectedAnimation;\n        case \"panic\": return panicFrames;\n        case \"bootloader\": return bootloaderAnimation;\n        default: return [0, []];\n    }\n}\n\nexport default function useDeviceStatusLightStyle(device: JDDevice, options?: LedAnimationProps) {\n    const register = useChange(device, d => d.service(0).register(ControlReg.StatusLight));\n    const bootloader = useChange(device, d => d.hasService(SRV_BOOTLOADER));\n    const identifying = useChange(device, d => d?.identifying)\n    const registerAnimation = useRegisterUnpackedValue<LedAnimationData>(register) || [0, []];\n\n    // pick animation step\n    const animation: LedAnimationData = identifying ? identifyAnimation\n        : bootloader ? bootloaderAnimation\n            : registerAnimation;\n\n    return useLedAnimationStyle(animation, options);\n}","import React, { ReactNode } from \"react\";\n\nexport default function SvgWidget(props: {\n    width: number,\n    height?: number,\n    size?: string,\n    role?: string,\n    title?: string,\n    viewBox?: string,\n    tabIndex?: number,\n    background?: string,\n    children: ReactNode\n}) {\n    const { width, height, size = \"100%\", background, children, role, title, viewBox, tabIndex } = props;\n    const h = height || width;\n    const aspectRatio = width / height;\n    const vertical = aspectRatio < 1;\n\n    return <div style={({\n        position: \"relative\",\n        height: vertical ? size : undefined,\n        width: vertical ? undefined : size,\n    })}>\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            tabIndex={tabIndex}\n            viewBox={viewBox || `0 0 ${width} ${h}`}\n            aria-label={title}\n            style={({ \n                height: vertical ? \"100%\" : undefined,\n                width: vertical ?  undefined : \"100%\",\n            })}\n            role={role || \"group\"}>\n            {background && <rect x={0} y={0} width={width} height={height} fill={background} rx={1} ry={1} />}\n            {children}\n        </svg>\n    </div>\n}","import { createStyles, makeStyles, useTheme } from \"@material-ui/core\";\nimport { SVGProps, useContext } from \"react\";\nimport DarkModeContext from \"../ui/DarkModeContext\"\n\nexport default function useWidgetTheme(color?: \"primary\" | \"secondary\") {\n    const theme = useTheme();\n    const { palette } = theme;\n    const { background } = palette;\n    const { darkMode } = useContext(DarkModeContext);\n\n    const active: string = color === \"primary\" ? palette.primary.main\n        : color === \"secondary\" ? palette.secondary.main\n            : palette.info.main;\n    const backgroundColor = darkMode === \"dark\" ? background.default : palette.grey[800];\n    const controlBackground = darkMode === \"dark\" ? palette.grey[800] : palette.grey[400]\n    const textPrimary = palette.text.primary\n    const textProps: SVGProps<SVGTextElement> = {\n        fill: textPrimary,\n        alignmentBaseline: \"central\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\",\n        pointerEvents: \"none\",\n        letterSpacing: 0,\n        style: {\n            userSelect: \"none\",\n            pointerEvents: \"none\"\n        }\n    }\n\n    return {\n        background: backgroundColor,\n        controlBackground,\n        active,\n        textPrimary,\n        textProps\n    }\n}","export function hsvToCss(hue: number, saturation: number, value: number, brightness: number, monochrome?: boolean) {\n    const csshue = hue * 360 / 0xff;\n    const csssat = (monochrome ? 0xff : saturation) / 0xff;\n    const cssval = value / 0xff;\n    const [h, s, l] = hsv_to_hsl(csshue, csssat, cssval)\n    const mixl = 0.3;\n    const alpha = (mixl + (1 - mixl) * l) * brightness;\n\n    return `hsla(${h}, ${s * 100}%, ${l * 100}%, ${alpha}`\n}\n\nfunction hsv_to_hsl(h: number, s: number, v: number) {\n    // both hsv and hsl values are in [0, 1]\n    const l = (2 - s) * v / 2;\n\n    if (l != 0) {\n        if (l == 1) {\n            s = 0\n        } else if (l < 0.5) {\n            s = s * v / (l * 2)\n        } else {\n            s = s * v / (2 - l * 2)\n        }\n    }\n\n    return [h, s, l]\n}","import { useMemo } from \"react\";\nimport { useId } from \"react-use-id-hook\"\nimport { LedAnimationData, LedAnimationFrame } from \"../../../jacdac-ts/src/hosts/ledservicehost\";\nimport { hsvToCss } from \"../../../jacdac-ts/src/jdom/color\";\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\";\n\nexport interface LedAnimationProps {\n    monochrome?: boolean,\n    cssProperty?: \"border\" | \"background-color\" | \"color\" | \"fill\" | \"stroke\",\n    step?: boolean,\n    repeat?: number,\n    interval?: number\n}\n\nfunction interpolate(frames: LedAnimationFrame[], time: number) {\n    let framet = 0;\n    const nframes = frames.length;\n    for (let i = 0; i < nframes; ++i) {\n        const frame = frames[i];\n        if (i == nframes - 1 || (time >= framet && time < framet + frame[3])) {\n            // found time interval\n            const frame1 = i == nframes - 1 ? frames[0] : frames[i + 1]\n            const ratio = (time - framet) / frame[3];\n            const ratiom1 = 1 - ratio;\n            return {\n                hue: ratio * frame[0] + ratiom1 * frame1[0],\n                saturation: ratio * frame[1] + ratiom1 * frame1[1],\n                value: ratio * frame[2] + ratiom1 * frame1[2],\n            }\n        } else {\n            // keep adding time\n            framet += frame[3]; // current start time of frame\n        }\n    }\n\n    return { hue: 0, saturation: 0, value: 0 };\n}\n\nexport default function useLedAnimationStyle(animation: LedAnimationData, options?: LedAnimationProps) {\n    const [repetitions, frames] = animation;\n    const { monochrome, cssProperty, step, interval } = options || {};\n    // generate a CSS animation for the curren frames\n    const { helmetStyle, className } = useMemo(() => {\n        if (!frames?.length || repetitions < 0)\n            return { className: \"\", helmetStyle: undefined }\n\n        const className = \"a-\" + (Math.random() + \"\").replace(/^.*\\./, '');\n        const DURATION = 3;\n        const property = cssProperty || \"background-color\";\n        const total8ms = frames.reduce((t, row) => t + row[DURATION], 0);\n        const totals = (total8ms * 8) / 1000 + (interval || 0) / 1000;\n\n        let kf = `@keyframes ${className} {\\n`;\n        if (step) {\n            let t8ms = 0;\n            frames.forEach(frame => {\n                const [hue, sat, value, duration] = frame;\n                const csscolor = hsvToCss(hue, sat, value, 0xff, monochrome)\n                const percent = (t8ms * 8 / 1000) / totals * 100;\n                kf += `  ${roundWithPrecision(percent, 5)}% { ${property}: ${csscolor}); }\\n`\n                t8ms += duration;\n               // console.log({ total8ms, totals, t8ms, duration, percent })\n            })\n        } else {\n            // 30fps\n            const KEYFRAME_DURATION = 30 >> 3;\n            const nkframes = Math.ceil(total8ms / KEYFRAME_DURATION);\n            for (let kframei = 0; kframei < nkframes; ++kframei) {\n                const kt = kframei / (nkframes) * total8ms;\n                const { hue, saturation, value } = interpolate(frames, kt);\n                // generate new keyframe\n                const percent = Math.round(kframei / (nkframes - 1) * 100)\n                const csscolor = hsvToCss(hue, saturation, value, 0xff, monochrome)\n                kf += `  ${roundWithPrecision(percent, 5)}% { ${property}: ${csscolor}); }\\n`\n            }\n        }\n\n        kf += `}\\n`; // @keyframes\n        // class\n        kf += `.${className} {\nanimation-duration: ${totals}s;\nanimation-name: ${className};\nanimation-delay: 0s;\nanimation-timing-function: linear;\nanimation-iteration-count: ${!repetitions ? 'infinite' : repetitions};\n}`;\n        return {\n            helmetStyle: kf,\n            className\n        }\n    }, [frames?.map(frame => frame.toString()).join(), monochrome, step, cssProperty, interval, repetitions]);\n\n    return { className, helmetStyle }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { REPORT_UPDATE } from \"../../jacdac-ts/src/jdom/constants\";\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\";\n\nexport function useRegisterHumanValue(register: JDRegister): string {\n    const [value, setValue] = useState<string>(register?.humanValue)\n    // update value\n    useEffect(() => register?.subscribe(REPORT_UPDATE, () => {\n        setValue(register?.humanValue)\n    }), [register])\n    return value;\n}\n\nexport function useRegisterIntValue(register: JDRegister): number {\n    const [value, setValue] = useState<number>(register?.intValue)\n    // update value\n    useEffect(() => register?.subscribe(REPORT_UPDATE, () => {\n        setValue(register?.intValue)\n    }), [register])\n    return value;\n}\n\nexport function useRegisterUnpackedValue<T extends any[]>(register: JDRegister): T {\n    const [value, setValue] = useState<T>(register?.unpackedValue as T)\n    useEffect(() => register?.subscribe(REPORT_UPDATE, () => {\n        setValue(register?.unpackedValue as T)\n    }), [register])\n    return value || ([] as T);\n}\n\nexport function useRegisterStringValue(register: JDRegister): string {\n    const [value, setValue] = useState<string>(register?.stringValue)\n    // update value\n    useEffect(() => register?.subscribe(REPORT_UPDATE, () => {\n        setValue(register?.stringValue)\n    }), [register])\n    return value;\n}\n\nexport function useRegisterBoolValue(register: JDRegister): boolean {\n    const [value, setValue] = useState<boolean>(register?.boolValue)\n    // update value\n    useEffect(() => register?.subscribe(REPORT_UPDATE, () => {\n        setValue(register?.boolValue)\n    }), [register])\n    return value;\n}\n","import React from \"react\";\nimport { statusAnimation } from \"./devices/useDeviceStatusLightStyle\";\nimport useLedAnimationStyle from \"./hooks/useLedAnimationStyle\";\nimport SvgWidget from \"./widgets/SvgWidget\"\nimport Helmet from \"react-helmet\"\nimport useWidgetTheme from \"./widgets/useWidgetTheme\";\nimport { capitalize } from \"@material-ui/core\";\n\nexport default function StatusLEDAnimation(props: {\n    status: \"startup\" | \"identify\" | \"connected\" | \"disconnected\" | \"panic\" | \"bootloader\"\n}) {\n    const { status } = props;\n\n    let interval = 0;\n    let count = 1;\n    switch (status) {\n        case \"connected\": count = 5; break;\n        case \"startup\": interval = 2000; break;\n        case \"identify\": interval = 2000; break;\n        case \"panic\": interval = 5000; break;\n    }\n    const frames = statusAnimation(status);\n    const { helmetStyle, className } = useLedAnimationStyle(frames, {\n        cssProperty: \"fill\",\n        monochrome: true,\n        step: true,\n        interval\n    });\n    const { controlBackground } = useWidgetTheme();\n\n    const n = count || 1;\n    const wc = 32;\n    const h = wc;\n    const w = wc * n + 6;\n    const r = (wc >> 1) - 1;\n    const cx = wc >> 1;\n    const cy = h >> 1;\n    return <h2>\n        <Helmet>\n            <style>{helmetStyle}</style>\n        </Helmet>\n        <SvgWidget width={w} height={h} size={\"1em\"}>\n            {Array(n).fill(0).map((_, i) => <g key={i} transform={`translate(${wc * i}, 0)`}>\n                <circle cx={cx} cy={cy} r={r} fill={controlBackground} />\n                <circle cx={cx} cy={cy} r={r} className={className} stroke={controlBackground} strokeWidth={1} />\n            </g>)}\n        </SvgWidget>\n        {capitalize(status)}\n    </h2>\n}"],"sourceRoot":""}