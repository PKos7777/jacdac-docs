{"version":3,"file":"component---src-pages-tools-prototest-tsx-d070fa9d3551985d734b.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/components/TestCard.tsx","webpack://jacdac-docs/./src/pages/tools/prototest.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const classes = useStyles()\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreSelf: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { Typography } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n}) {\n    const { value, mode, download, url, caption, actions } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport { toHex } from \"../../jacdac-ts/src/jdom/utils\"\nimport CmdButton from \"./CmdButton\"\nimport Snippet from \"./ui/Snippet\"\n\nexport type TestLogger = (name: string, ...msg: any) => void\nexport type Test = (log: TestLogger) => Promise<void>\n\nexport default function TestCard(props: {\n    title: string\n    subheader?: string\n    children?: JSX.Element | JSX.Element[]\n    onTest: Test\n    autoRun?: boolean\n}) {\n    const { title, subheader, onTest, children, autoRun } = props\n    const [output, setOutput] = useState(\"\")\n\n    const runTest = async () => {\n        const log: string[] = []\n\n        const toValue = (msg: any) => {\n            if (msg === undefined || msg === null) return \"\"\n            else if (typeof msg === \"string\") return msg\n            else if (msg instanceof Uint8Array) return toHex(msg)\n            else if (Array.isArray(msg)) return msg.map(toValue)\n            else return JSON.stringify(msg)\n        }\n\n        const logger = (msg: any) => {\n            if (msg instanceof Error) log.push(msg + \"\")\n            if (typeof msg === \"object\") {\n                Object.keys(msg).forEach(k =>\n                    log.push(`${k}: ${toValue(msg[k])}`)\n                )\n            } else log.push(toValue(msg))\n        }\n\n        try {\n            await onTest(logger)\n        } catch (e) {\n            logger(e)\n            throw e\n        } finally {\n            setOutput(log.join(\"\\n\"))\n        }\n    }\n\n    const handleClick = async () => await runTest()\n\n    return (\n        <Card>\n            <CardHeader title={title} subheader={subheader} />\n            <CardContent>\n                {children}\n                {output && <Snippet value={output} />}\n            </CardContent>\n            <CardActions>\n                <CmdButton\n                    variant=\"outlined\"\n                    onClick={handleClick}\n                    disableReset={true}\n                    autoRun={autoRun}\n                >\n                    Test\n                </CmdButton>\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid, Switch, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport {\n    bufferEq,\n    pick,\n    randomRange,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    ProtoTestCmd,\n    ProtoTestReg,\n    SRV_PROTO_TEST,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport JDField from \"../../../jacdac-ts/src/jdom/field\"\nimport {\n    jdpack,\n    jdpackEqual,\n    jdunpack,\n    PackedValues,\n} from \"../../../jacdac-ts/src/jdom/pack\"\nimport DeviceName from \"../../components/devices/DeviceName\"\nimport DeviceActions from \"../../components/DeviceActions\"\nimport useEffectAsync from \"../../components/useEffectAsync\"\nimport TestCard from \"../../components/TestCard\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport Alert from \"../../components/ui/Alert\"\nimport ProtocolTestServer from \"../../../jacdac-ts/src/jdom/servers/protocoltestserver\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { cryptoRandomUint32 } from \"../../../jacdac-ts/src/jdom/random\"\nimport JDServerServiceProvider from \"../../../jacdac-ts/src/jdom/servers/serverserviceprovider\"\nimport { useId } from \"react-use-id-hook\"\n\nfunction randomFieldPayload(field: JDField) {\n    const { specification } = field\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let r: any = undefined\n    switch (specification.type) {\n        case \"bool\":\n            r = Math.random() > 0.5 ? 1 : 0\n            break\n        case \"i8\":\n        case \"i16\":\n        case \"i32\":\n        case \"u8\":\n        case \"u16\":\n        case \"u32\": {\n            const unsigned = specification.type[0] === \"u\"\n            const n = Math.min(30, parseInt(specification.type.slice(1)))\n            const min = pick(\n                specification.typicalMin,\n                specification.absoluteMin,\n                unsigned ? 0 : -((1 << (n - 1)) - 1)\n            )\n            const max = pick(\n                specification.typicalMax,\n                specification.absoluteMax,\n                unsigned ? (1 << n) - 1 : (1 << (n - 1)) - 1\n            )\n            r = randomRange(min, max)\n            break\n        }\n        case \"bytes\": {\n            // maxBytes?\n            const a = cryptoRandomUint32(randomRange(1, 3))\n            r = new Uint8Array(a.buffer)\n            break\n        }\n        case \"string\":\n        case \"string0\": {\n            const ch_a = \"a\".charCodeAt(0)\n            const ch_z = \"z\".charCodeAt(0)\n            const n = randomRange(4, 10)\n            let s = \"\"\n            for (let i = 0; i < n; ++i) {\n                s += String.fromCharCode(randomRange(ch_a, ch_z))\n            }\n            r = s\n            break\n        }\n    }\n\n    return r\n}\n\nfunction randomPayload<T extends PackedValues>(\n    packFormat: string,\n    fields: JDField[]\n): T {\n    if (!packFormat) throw new Error(\"pack format unknown\")\n    const rs = fields.map(randomFieldPayload)\n    if (rs.some(r => r === undefined))\n        throw new Error(\"unsupported data layout\")\n    return rs as T\n}\n\nfunction RegisterProtocolTest(props: {\n    rw: JDRegister\n    ro: JDRegister\n    ev: JDEvent\n}) {\n    const { rw, ro, ev } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { specification, fields } = rw\n    const name = specification.name.replace(/^rw_/, \"\")\n\n    // event code and command code are the same as rw register\n    useEffectAsync(async () => {\n        await rw.sendGetAsync()\n        await ro.sendGetAsync()\n    }, [])\n\n    const testRwRo = async log => {\n        log(`-- testing rw`)\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n\n        // setup observer for event counts\n        const evCount = ev.count\n\n        // send over packet\n        await rw.sendSetAsync(data)\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n\n        // check ro\n        log(`-- testing ro`)\n        await ro.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        const ropayload = jdunpack(ro.data, packFormat)\n        log({ ropayload })\n        if (!jdpackEqual(packFormat, payload, ropayload))\n            throw new Error(`expected ro ${payload}, got ${ropayload}`)\n\n        // the event should have triggered once\n        log(`-- testing event`)\n        if (packFormat !== \"u8\" && evCount + 1 !== ev.count)\n            throw new Error(`expected 1 event, got ${ev.count - evCount}`)\n    }\n\n    const testCommand = async log => {\n        log(`-- testing cmd`)\n\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n        // send over cmd packet\n        await rw.service.sendPacketAsync(Packet.from(rw.code, data))\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n    }\n\n    const test = async log => {\n        log(`- testing no acks`)\n        rw.service.registersUseAcks = false\n        await testRwRo(log)\n        await testCommand(log)\n        log(`- testing acks`)\n        rw.service.registersUseAcks = true\n        await testRwRo(log)\n        await testCommand(log)\n    }\n\n    return (\n        <TestCard\n            title={name}\n            subheader={specification.packFormat || \"?\"}\n            onTest={test}\n        />\n    )\n}\n\nfunction ServiceProtocolTest(props: { service: JDService }) {\n    const { service } = props\n    const { device } = service\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    const regs = service.registers()\n    const rws = service\n        .registers()\n        .filter(reg => reg.specification.kind == \"rw\")\n        .map(rw => {\n            const roname = rw.name.replace(/^rw_/, \"ro_\")\n            const ro = regs.find(\n                r =>\n                    r.specification.kind === \"ro\" &&\n                    r.specification.name === roname\n            )\n            const ev = service.event(rw.code)\n            return { rw, ro, ev }\n        })\n\n    const outPipeTest = async log => {\n        // fill bytes with data\n        const rw = service.register(ProtoTestReg.RwBytes)\n        const [data] = randomPayload<[Uint8Array]>(\"b\", rw.fields)\n        log(`data: ${toHex(data)}`)\n        // send over cmd packet\n        rw.service.registersUseAcks = true\n        await rw.sendSetAsync(data)\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        log(`data recv: ${toHex(rw.data)}`)\n        if (!bufferEq(data, rw.data))\n            throw new Error(\n                `rw write failed, expected ${toHex(data)}, got ${toHex(\n                    rw.data\n                )}`\n            )\n        // read packet back\n        const recv = await service.receiveWithInPipe<[number]>(\n            ProtoTestCmd.CReportPipe,\n            \"u8\"\n        )\n        const recvu = new Uint8Array(recv.map(buf => buf[0]))\n        log(`received ${toHex(recvu)}`)\n        if (!bufferEq(data, recvu))\n            throw new Error(\n                `expected ${toHex(data)}, got ${toHex(recv.map(buf => buf[0]))}`\n            )\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={10}>\n                <Typography variant=\"h4\">\n                    <DeviceName device={device} />\n                </Typography>\n            </Grid>\n            <Grid item xs={2}>\n                <DeviceActions device={device} showReset={true} />\n            </Grid>\n            {rws?.map(rw => (\n                <Grid key={rw.rw.id} item xs={12} md={6}>\n                    <RegisterProtocolTest {...rw} />\n                </Grid>\n            ))}\n            <Grid key={\"cpipe\"} item xs={12} md={6}>\n                <TestCard\n                    title={\"out pipe\"}\n                    subheader={\"\"}\n                    onTest={outPipeTest}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ProtocolTest() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const labelId = useId()\n    const switchId = useId()\n    const [host, setHost] = useState(false)\n    const services = useChange(bus, b =>\n        b.services({ serviceClass: SRV_PROTO_TEST })\n    )\n\n    const toggleHost = () => setHost(!host)\n\n    // add virtual device\n    useEffect(() => {\n        if (!host) return () => {}\n\n        const d = new JDServerServiceProvider(\"test\", [\n            new ProtocolTestServer(),\n        ])\n        bus.addServiceProvider(d)\n        return () => bus.removeServiceProvider(d)\n    }, [host])\n\n    return (\n        <>\n            <h1>Protocol Test</h1>\n            <p>\n                A helper page to test the Jacdac protocol against a &nbsp;\n                <Link to=\"/services/prototest/\">protocol test</Link> service.\n            </p>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid key=\"connect\" item xs={12}>\n                    <ConnectAlert serviceClass={SRV_PROTO_TEST} />\n                </Grid>\n                {services?.map(service => (\n                    <Grid key={service.id} item xs={12}>\n                        <ServiceProtocolTest service={service} />\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        <AlertTitle>Developer zone</AlertTitle>\n                        <Switch\n                            id={switchId}\n                            checked={host}\n                            onChange={toggleHost}\n                        />\n                        <label id={labelId} htmlFor={switchId}>\n                            Add simulator\n                        </label>\n                    </Alert>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["Box","createStyles","makeStyles","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","ConnectButton","NoSsr","useChange","useStyles","theme","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","closeable","bus","transports","devices","b","ignoreSelf","spec","length","name","map","transport","type","ConnectAlert","Typography","CodeBlock","Snippet","value","mode","download","url","caption","actions","v","className","Card","CardActions","CardContent","CardHeader","useState","toHex","CmdButton","TestCard","title","subheader","onTest","children","autoRun","output","setOutput","runTest","log","toValue","msg","undefined","Uint8Array","Array","isArray","JSON","stringify","logger","Error","push","Object","keys","forEach","k","e","join","handleClick","Grid","Switch","useEffect","bufferEq","pick","randomRange","ProtoTestCmd","ProtoTestReg","SRV_PROTO_TEST","jdpack","jdpackEqual","jdunpack","DeviceName","DeviceActions","useEffectAsync","Packet","AlertTitle","ProtocolTestServer","Link","cryptoRandomUint32","JDServerServiceProvider","useId","randomFieldPayload","field","specification","r","Math","random","unsigned","n","min","parseInt","slice","typicalMin","absoluteMin","max","typicalMax","absoluteMax","a","buffer","ch_a","charCodeAt","ch_z","s","i","String","fromCharCode","randomPayload","packFormat","fields","rs","some","RegisterProtocolTest","rw","ro","ev","replace","sendGetAsync","testRwRo","payload","data","evCount","count","sendSetAsync","delay","rwdata","rwpayload","ropayload","testCommand","service","sendPacketAsync","from","code","test","registersUseAcks","ServiceProtocolTest","device","regs","registers","rws","filter","reg","kind","roname","find","event","outPipeTest","register","RwBytes","recv","receiveWithInPipe","CReportPipe","recvu","buf","id","ProtocolTest","labelId","switchId","host","setHost","services","toggleHost","d","addServiceProvider","removeServiceProvider"],"sourceRoot":""}