{"version":3,"file":"9979-d5caeb649179e591329a.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,SAASO,yBAAT,CACXC,KADW,EAEb;AACE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,MAAME,YAAY,GAAGJ,oEAAW,CAACG,OAAD,EAAUR,4FAAV,CAAhC;AACA,MAAMW,kBAAkB,GAAGN,oEAAW,CAACG,OAAD,EAAUR,wGAAV,CAAtC;AACA,MAAMa,YAAY,GAAGR,oEAAW,CAACG,OAAD,EAAUR,4FAAV,CAAhC;AACA,MAAMe,eAAe,GAAGV,oEAAW,CAACG,OAAD,EAAUR,kGAAV,CAAnC;AAEA,MAAM,CAACiB,IAAD,IAAShB,4FAAwB,CAAeQ,YAAf,EAA6BF,KAA7B,CAAvC;AACA,MAAM,CAACW,UAAU,GAAG,CAAd,IAAmBjB,4FAAwB,CAC7CU,kBAD6C,EAE7CJ,KAF6C,CAAjD;AAIA,MAAM,CAACY,IAAD,IAASlB,4FAAwB,CAAWY,YAAX,EAAyBN,KAAzB,CAAvC;AACA,MAAM,CAACa,OAAD,IAAYnB,4FAAwB,CAAWc,eAAX,EAA4BR,KAA5B,CAA1C;AACA,MAAMc,MAAM,GAAGnB,yEAAgB,CAACM,OAAD,CAA/B;AACA,MAAMc,KAAK,GAAGD,MAAM,GAAG,WAAH,GAAiB,SAArC;AACAlB,EAAAA,mEAAS,CAACkB,MAAD,CAAT;;AACA,MAAME,YAAY,GAAIC,OAAD,IAAyB;AAC1Cf,IAAAA,YAAY,CAACgB,YAAb,CAA0BD,OAA1B,EAAmC,IAAnC;AACH,GAFD;;AAGA,sBACI,iDAAC,6DAAD;AACI,QAAI,EAAEP,IADV;AAEI,cAAU,EAAEC,UAFhB;AAGI,QAAI,EAAEC,IAHV;AAII,WAAO,EAAEC,OAJb;AAKI,SAAK,EAAEE,KALX;AAMI,YAAQ,EAAEC;AANd,IADJ;AAUH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardLEDMatrix.tsx"],"sourcesContent":["import React from \"react\"\nimport { LedMatrixReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useChange from \"../../jacdac/useChange\"\nimport LEDMatrixWidget from \"../widgets/LEDMatrixWidget\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardLEDMatrixDisplay(\n    props: DashboardServiceProps\n) {\n    const { service } = props\n\n    const ledsRegister = useRegister(service, LedMatrixReg.Leds)\n    const brightnessRegister = useRegister(service, LedMatrixReg.Brightness)\n    const rowsRegister = useRegister(service, LedMatrixReg.Rows)\n    const columnsRegister = useRegister(service, LedMatrixReg.Columns)\n\n    const [leds] = useRegisterUnpackedValue<[Uint8Array]>(ledsRegister, props)\n    const [brightness = 0] = useRegisterUnpackedValue<[number]>(\n        brightnessRegister,\n        props\n    )\n    const [rows] = useRegisterUnpackedValue<[number]>(rowsRegister, props)\n    const [columns] = useRegisterUnpackedValue<[number]>(columnsRegister, props)\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    useChange(server)\n    const handleChange = (newLeds: Uint8Array) => {\n        ledsRegister.sendSetAsync(newLeds, true)\n    }\n    return (\n        <LEDMatrixWidget\n            leds={leds}\n            brightness={brightness}\n            rows={rows}\n            columns={columns}\n            color={color}\n            onChange={handleChange}\n        />\n    )\n}\n"],"names":["React","LedMatrixReg","useRegisterUnpackedValue","useServiceServer","useChange","LEDMatrixWidget","useRegister","DashboardLEDMatrixDisplay","props","service","ledsRegister","Leds","brightnessRegister","Brightness","rowsRegister","Rows","columnsRegister","Columns","leds","brightness","rows","columns","server","color","handleChange","newLeds","sendSetAsync"],"sourceRoot":""}