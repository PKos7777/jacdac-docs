{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/BugReport.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./src/components/ImportButton.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/compile.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/runner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/blockly/BlockRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/blockly/BlockFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/blockly/dsl/servicesdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/toolsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/loopsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/logicdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/mathdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/jsondsl.ts","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["DropzoneDialog","lazy","ImportButton","props","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","className","useState","open","setOpen","handleOpen","handleSave","files","length","handleClose","VMFunctions","id","args","prompt","context","toIdentifier","type","name","toMemberExpression","root","field","object","property","computed","handlerVisitor","handler","visitITE","visitCommand","commands","forEach","visitBase","base","ite","else","then","compileProgram","prog","newProgram","roles","slice","handlers","map","h","removeIfThenElse","errors","newSequence","labels","labelId","time","end","push","command","callee","arguments","expr","assert","pop","cmd","getServiceFromRole","info","role","shortId","find","pair","def","serviceSpecificationFromName","serviceShortId","service","checkProgram","allErrors","goodHandlers","errorFun","e","sourceId","undefined","message","symbolResolver","SpecSymbolResolver","checker","VMChecker","_","errorCount","c","checkCommand","registers","s","split","fld","register","events","event","VMInternalStatus","VM_WAKE_SLEEPER","VMJumpException","label","Error","VMTimerException","ms","VMCommandEvaluator","parent","env","gc","_regSaved","_changeSaved","_started","trace","msg","evalExpression","VMExprEvaluator","lookup","eval","checkExpression","start","inst","evaluate","neededStart","Running","values","a","sendCommandAsync","Completed","hasEvent","regValue","ev","unparse","reg","writeRegisterAsync","writeLocal","watch","Stopped","VMError","VMCode","VMCommandRunner","handlerId","_status","_eval","val","stepAsync","status","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","index","reset","gotoTop","Ready","commandIndex","cancel","unsubscribe","wake","next","runToCompletionAsync","singleStep","singleStepCheckBreakAsync","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","VM_EVENT","vmt","Sleeping","sleepAsync","JDEventSource","isEveryHandler","VMStatus","VMProgramRunner","bus","roleManager","program","_handlerRunners","_roles","_waitQueue","_everyQueue","_runQueue","_sleepQueue","_watch","_breaks","_in_run","compiled","console","warn","_env","VMEnvironment","_waitRunMutex","Mutex","_breaksMutex","_sleepMutex","mount","subscribe","CHANGE","waitingToRunning","wakeSleeper","initializeRoleManagement","setStatus","TRACE","value","oldValue","lookupWatch","setBreakpointsAsync","breaks","acquire","b","clearBreakpointsAsync","ret","setTimeout","handlerRunner","startAsync","setRoles","stopSleepers","runAsync","debug","resumeAsync","Paused","getCurrentRunner","runHandlerAsync","postProcessHandler","newHead","emitBreakpoint","refreshRegistersAsync","atTop","oneStep","brkCommand","VMRoleNoServiceException","done","shift","moveToWait","unshift","waitCopy","handlersStarted","newRunners","sleepingRunners","findIndex","hs","indexOf","splice","consumeEvent","clearTimeout","p","addRoleService","getService","serviceChanged","r","rv","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoRun","useContext","JacdacContext","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","run","useEffect","newTestRunner","unmount","ERROR","handleTrace","Flags","VMDiagnostics","JSON","stringify","RoleChip","BlockContext","workspace","server","useServiceServer","handleRoleClick","specification","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","twinBlock","getTopBlocks","TWIN_BLOCK","inputList","fieldRow","f","getVariable","newBlock","variable","setValue","getId","m","getMetrics","moveBy","viewWidth","viewHeight","initSvg","render","centerOnBlock","handleDelete","removeServiceProvider","device","BlockRoles","useChange","useWorkspaceBreakpoints","breakpoints","useMemo","arrayConcatMany","filter","meta","setBreakpointHighlight","highlightBlock","VMRunnerButtons","t","indeterminate","setIndeterminate","breakpoint","setBreakpoint","pausing","paused","mounted","useMounted","handleRun","handleCancel","handleResume","handlePause","handleStep","code","VMStartSimulatorButton","toggleShowDeviceHostsDialog","LoadButton","handleFiles","file","jsfile","parse","xml","dom","Xml","clear","SaveButton","workspaceXml","json","url","encodeURIComponent","BlockFileButtons","VMToolbar","makeVMBase","block","processErrors","workspaceJSONToVMProgram","dsls","variables","v","BUILTIN_TYPES","EmptyExpression","blockToExpression","blockIn","blockToExpressionInner","inputs","log","raw","definition","resolveServiceBlockDefinition","d","Blockly","dslName","dsl","res","compileExpressionToVM","template","fields","blockToCommand","thenHandler","elseHandler","child","addCommands","children","exprErrors","ifThenElse","concat","dslRes","compileCommandToVM","nop","blocks","top","topEvent","topErrors","topMeta","compileEventToVM","expression","isBooleanField","isStringField","toBlocklyType","encoding","JSON_TYPE","BOOLEAN_TYPE","STRING_TYPE","isNumericType","NUMBER_TYPE","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","JoystickReg","get","commandColor","ServicesBlockDomainSpecificLanguage","supportedServices","createServiceColor","theme","sensorColor","palette","success","main","otherColor","serviceColor","isSensor","createBlocks","options","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","ServoAngleField","SRV_BUZZER","BuzzerCmd","NoteField","lookupCustomShadow","cs","serviceHelp","withPrefix","fieldsSupported","pkt","every","fieldName","fieldToShadow","unit","test","defaultValue","min","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","humanify","camelName","toLowerCase","fieldVariable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","join","isEnabledRegister","customMessage","allServices","serviceSpecifications","resolveService","cls","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","SRV_HID_KEYBOARD","message0","args0","KeyboardKeyField","colour","inputsInline","previousStatement","CODE_STATEMENT_TYPE","nextStatement","tooltip","helpUrl","SRV_LED","color","LEDColorField","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","LEDMatrixField","eventBlocks","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","output","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","Object","keys","members","member","registerNumericsGetBlocks","re","registerSetBlocks","commandBlocks","_serviceBlocks","eventFieldGroups","_eventFieldBlocks","_runtimeBlocks","ROLE_BOUND_EVENT_BLOCK","ROLE_BOUND_BLOCK","SET_STATUS_LIGHT_BLOCK","createCategory","source","liveServices","blockServices","usedEvents","Set","eventName","jdBlocks","services","uniqueMap","toolboxServices","srvid","sort","l","localeCompare","servicesCategories","serviceBlocks","contents","has","button","callbackKey","cat","commonCategory","toString","eventInfo","serviceCommand","exprsErrors","flatMap","servicesDSL","toolsDSL","TwinField","INSPECT_BLOCK","JDomTreeField","WATCH_BLOCK","WatchValueField","loopsDsl","WAIT_BLOCK","ON_START_BLOCK","REPEAT_EVERY_BLOCK","interval","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","logicDsl","A","B","BOOL","left","right","op","operator","argument","prefix","ADD","MULTIPLY","DIVIDE","MINUS","mathDSL","style","extensions","NUM","JSON_FIELD_TYPE","JSON_OBJECT_BLOCK","JSON_FIELD_SET_BLOCK","JSON_FIELD_GET_TEMPLATE","JSON_FIELD_VALUE_TYPE","PRIMITIVE_TYPES","jsonDSL","VM_SOURCE_STORAGE_KEY","VMEditorWithContext","workspaceJSON","setWarnings","setProgram","autoStart","error","ws","jacdacServices","VMEditor","variablesDsl","shadowDsl","fieldsDsl","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6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","file":"component---src-pages-tools-vm-editor-tsx-111b152306f8910efea3.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n","export interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    roles?: string[]\n    errors?: VMError[]\n    // this handler support the editing experience but\n    // should not be compiled down or debugged\n    meta?: boolean\n}\n\nexport interface VMRole {\n    role: string\n    serviceShortId: string\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport type VMFunctionNames =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"watch\"\n\nexport const VMFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleConnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is connected`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleDisconnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is disconnected`,\n        context: \"command\",\n    },\n]\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    VMBase,\n    VMCommand,\n    VMError,\n    VMHandler,\n    VMIfThenElse,\n    VMProgram,\n    VMFunctions\n} from \"./ir\"\nimport {\n    VMChecker,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram(prog: VMProgram) {\n    const newProgram: VMProgram = { roles: prog.roles.slice(0), handlers: [] }\n    newProgram.handlers = prog.handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[]\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        symbolResolver.roles = []\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            h.roles = symbolResolver.roles\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors,\n    }\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./ir\"\nimport RoleManager from \"../servers/rolemanager\"\nimport { VMEnvironment, VMRoleNoServiceException } from \"./environment\"\nimport { VMExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ROLE_BOUND, ROLE_UNBOUND, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./compile\"\nimport { VM_EVENT, VMCode } from \"./events\"\nimport { VMError, Mutex } from \"./utils\"\nimport { assert, SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nenum VMInternalStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nconst VM_WAKE_SLEEPER = \"vmWakeSleeper\"\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException extends Error {\n    constructor(public label: string) {\n        super()\n    }\n}\n\nclass VMTimerException extends Error {\n    constructor(public ms: number) {\n        super()\n    }\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMInternalStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMInternalStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMInternalStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMInternalStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMInternalStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMInternalStatus.Completed\n                        : VMInternalStatus.Running\n                }\n                return VMInternalStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMInternalStatus.Completed\n                    : VMInternalStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMInternalStatus.Completed\n                }\n                return VMInternalStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"halt\": {\n                return VMInternalStatus.Stopped\n            }\n            case \"nop\": {\n                return VMInternalStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            case \"onRoleConnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            case \"onRoleDisonnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            default:\n                throw new VMError(\n                    VMCode.InternalError,\n                    `Unknown instruction ${this.inst}`\n                )\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMInternalStatus = VMInternalStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMInternalStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMInternalStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMInternalStatus.Stopped\n            : this._commandIndex === undefined\n            ? VMInternalStatus.Ready\n            : this._currentCommand.status === VMInternalStatus.Completed &&\n              this._commandIndex < this.handler.commands.length - 1\n            ? VMInternalStatus.Running\n            : this._currentCommand.status\n    }\n\n    get command() {\n        return this._currentCommand\n    }\n\n    get atTop() {\n        return (\n            this.status === VMInternalStatus.Running && this._commandIndex === 0\n        )\n    }\n\n    gotoTop() {\n        if (\n            this.status === VMInternalStatus.Ready &&\n            this.handler.commands.length\n        )\n            this.commandIndex = 0\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMInternalStatus.Completed\n            this.next()\n        }\n    }\n\n    // run-to-completion semantics\n    // returns command if breakpoint encountered when not single stepping\n    async runToCompletionAsync(singleStep = false) {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync(singleStep)) && !singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if (singleStep || (await this.singleStepCheckBreakAsync()))\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMInternalStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(VMCode.InternalError, \"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync(singleStep = false) {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (!singleStep && (await this.parent.breakpointOnAsync(sid))) {\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.parent.emit(VM_EVENT, VMCode.CommandStarted, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMInternalStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                const vmt = e as VMTimerException\n                this._currentCommand.status = VMInternalStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.CommandFailed,\n                    this._currentCommand.gc.sourceId\n                )\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMInternalStatus.Completed)\n            this.parent.emit(\n                VM_EVENT,\n                VMCode.CommandCompleted,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMInternalStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    ms: number\n    handlerRunner: VMHandlerRunner\n    handler?: VMHandler\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandler) {\n    assert(!!h)\n    if (h.commands.length) {\n        const cmd = (h.commands[0] as VMCommand).command\n            .callee as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport enum VMStatus {\n    Stopped = \"stopped\",\n    Running = \"running\",\n    Paused = \"paused\",\n}\n\nexport class VMProgramRunner extends JDClient {\n    // program, environment\n    private _handlerRunners: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _roles: VMRole[] = []\n    // running\n    private _status: VMStatus\n    private _waitQueue: VMHandlerRunner[] = []\n    private _everyQueue: VMHandlerRunner[] = []\n    private _runQueue: VMHandlerRunner[] = []\n    private _waitRunMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n    // debugging\n    private _watch: SMap<any> = {}\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors.length) {\n            console.warn(\"ERRORS\", errors)\n        }\n        // data structures for running program\n        this._status = VMStatus.Stopped\n        this._env = new VMEnvironment(registers, events)\n        this._handlerRunners = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        // TODO: can't add multiple handlers until we have deduplicate CHANGE on Event\n        /*\n        const len = this._handlerRunners.length\n        compiled.handlers.forEach((h, index) =>\n            this._handlerRunners.push(\n                new VMHandlerRunner(this, len + index, this._env, h)\n            )\n        )*/\n\n        this._waitRunMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex = new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.waitingToRunning()\n            })\n        )\n        this.mount(\n            this.subscribe(\n                VM_WAKE_SLEEPER,\n                async (h: VMHandlerRunner | VMHandler) => {\n                    await this.wakeSleeper(h)\n                }\n            )\n        )\n        this.initializeRoleManagement()\n    }\n\n    // control of VM\n    get status() {\n        return this._status\n    }\n\n    private setStatus(s: VMStatus) {\n        if (s !== this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    watch(sourceId: string, value: WatchValueType) {\n        const oldValue = this._watch[sourceId]\n        if (oldValue !== value) {\n            this._watch[sourceId] = value\n            this.emit(VM_EVENT, VMCode.WatchChange, sourceId)\n        }\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n\n    // utility called by handlerRunner\n    async sleepAsync(\n        h: VMHandlerRunner,\n        ms: number,\n        handler: VMHandler = undefined\n    ) {\n        assert(h.status === VMInternalStatus.Sleeping)\n        await this._sleepMutex.acquire(async () => {\n            const id = setTimeout(() => {\n                this.emit(VM_WAKE_SLEEPER, h ? h : handler)\n            }, ms)\n            this._sleepQueue.push({ ms, handlerRunner: h, id, handler })\n        })\n    }\n\n    async startAsync() {\n        if (this.status !== VMStatus.Stopped) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            await this._waitRunMutex.acquire(async () => {\n                this._waitQueue = this._handlerRunners.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n                this._runQueue = []\n                this._everyQueue = []\n                this.stopSleepers()\n                // make sure to have another handler for every\n                /*\n                for (const h of this._waitQueue) {\n                    if (isEveryHandler(h.handler)) {\n                        const dup = new VMHandlerRunner(\n                            this,\n                            undefined,\n                            this._env,\n                            h.handler\n                        )\n                        dup.reset()\n                        this._everyQueue.push(dup)\n                    }\n                }*/\n            })\n            this.clearBreakpointsAsync()\n            this.setStatus(VMStatus.Running)\n            this.waitingToRunning()\n            this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    cancel() {\n        if (this.status === VMStatus.Stopped) return // nothing to cancel\n        this.setStatus(VMStatus.Stopped)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"resume\")\n        this.setStatus(VMStatus.Running)\n        await this.runAsync()\n    }\n\n    private async getCurrentRunner() {\n        return await this._waitRunMutex.acquire(async () => {\n            if (this._runQueue.length) return this._runQueue[0]\n            return undefined\n        })\n    }\n\n    async stepAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"step\")\n        const h = await this.getCurrentRunner()\n        if (h) {\n            await this.runHandlerAsync(h, true)\n            await this.postProcessHandler(h)\n            const newHead = await this.getCurrentRunner()\n            if (newHead && newHead !== h) {\n                this.emitBreakpoint(newHead)\n            }\n        }\n    }\n\n    private _in_run = false\n    private async runAsync() {\n        if (this.status === VMStatus.Stopped) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            let h: VMHandlerRunner = undefined\n            while (\n                this.status === VMStatus.Running &&\n                (h = await this.getCurrentRunner())\n            ) {\n                assert(!h.atTop)\n                await this.runHandlerAsync(h)\n                await this.postProcessHandler(h)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    private emitBreakpoint(h: VMHandlerRunner) {\n        this.emit(\n            VM_EVENT,\n            VMCode.Breakpoint,\n            h,\n            h.status === VMInternalStatus.Completed\n                ? \"\"\n                : h.command.gc?.sourceId\n        )\n    }\n\n    private async runHandlerAsync(h: VMHandlerRunner, oneStep = false) {\n        try {\n            const brkCommand = await h.runToCompletionAsync(oneStep)\n            if ((brkCommand && !oneStep) || this.status === VMStatus.Paused) {\n                this.setStatus(VMStatus.Paused)\n                this.emitBreakpoint(h)\n            }\n            if (h.status === VMInternalStatus.Completed) {\n                h.reset()\n            }\n        } catch (e) {\n            if (e instanceof VMRoleNoServiceException) {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.RoleMissing,\n                    (e as VMRoleNoServiceException).role\n                )\n            } else {\n                console.debug(e)\n                this.emit(VM_EVENT, VMCode.InternalError, e)\n            }\n            // on handler error, reset the handler\n            h.reset()\n        }\n    }\n\n    private async postProcessHandler(h: VMHandlerRunner) {\n        if (\n            h.status === VMInternalStatus.Ready ||\n            h.status === VMInternalStatus.Sleeping\n        ) {\n            let done: VMHandlerRunner = undefined\n            await this._waitRunMutex.acquire(async () => {\n                assert(!!this._runQueue.length)\n                assert(h === this._runQueue[0])\n                done = this._runQueue.shift()\n                const moveToWait = h.status === VMInternalStatus.Ready\n                if (moveToWait && !isEveryHandler(h.handler)) {\n                    this._waitQueue.push(done)\n                    done = undefined\n                }\n            })\n            if (\n                done &&\n                h.status === VMInternalStatus.Ready &&\n                isEveryHandler(h.handler)\n            ) {\n                if (this.status === VMStatus.Running)\n                    await this.runHandlerAsync(h)\n                else if (this.status === VMStatus.Paused) {\n                    await this._waitRunMutex.acquire(async () => {\n                        this._runQueue.unshift(h)\n                        // this.emitBreakpoint(h)\n                    })\n                }\n            }\n        }\n    }\n\n    // call this whenever some event/change arises\n    private async waitingToRunning() {\n        if (this.status !== VMStatus.Stopped) {\n            let waitCopy: VMHandlerRunner[] = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this.status === VMStatus.Paused && this._runQueue.length)\n                    return\n                waitCopy = this._waitQueue.slice(0)\n            })\n            if (!waitCopy) return\n            const handlersStarted: VMHandler[] = []\n            const newRunners: VMHandlerRunner[] = []\n            const sleepingRunners: VMHandlerRunner[] = []\n            for (const h of waitCopy) {\n                await this.runHandlerAsync(h, true)\n                if (h.status === VMInternalStatus.Sleeping) {\n                    sleepingRunners.push(h)\n                } else if (\n                    !h.atTop &&\n                    handlersStarted.findIndex(hs => hs === h.handler) === -1\n                ) {\n                    newRunners.push(h)\n                    handlersStarted.push(h.handler)\n                }\n            }\n            await this._waitRunMutex.acquire(async () => {\n                newRunners.forEach(h => {\n                    this._runQueue.push(h)\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0) this._waitQueue.splice(index, 1)\n                })\n                sleepingRunners.forEach(h => {\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0) this._waitQueue.splice(index, 1)\n                })\n            })\n            this._env.consumeEvent()\n            this.runAsync()\n        }\n    }\n\n    private async stopSleepers() {\n        await this._sleepMutex.acquire(async () => {\n            for (const s of this._sleepQueue) {\n                clearTimeout(s.id)\n            }\n            this._sleepQueue = []\n        })\n    }\n\n    private async wakeSleeper(h: VMHandlerRunner | VMHandler) {\n        try {\n            // let handlerMs: number = undefined\n            let handlerRunner: VMHandlerRunner = undefined\n            // let handler: VMHandler = undefined\n            await this._sleepMutex.acquire(async () => {\n                const index = this._sleepQueue.findIndex(\n                    p => p?.handlerRunner === h // || p?.handler === h\n                )\n                assert(index >= 0)\n                if (index >= 0) {\n                    const p = this._sleepQueue[index]\n                    //  handlerMs = p.ms\n                    handlerRunner = p.handlerRunner\n                    // handler = p?.handler\n                    this._sleepQueue.splice(index, 1)\n                    // clearTimeout(p.id)\n                }\n            })\n            if (this.status === VMStatus.Stopped) return\n            // this logic is to deal with starting a handler rather than a runner\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                if (!handlerRunner && isEveryHandler(handler)) {\n                    const index = this._everyQueue.findIndex(\n                        h => h.handler === handler\n                    )\n                    if (index >= 0) {\n                        handlerRunner = this._everyQueue[index]\n                        this._everyQueue.splice(index, 1)\n                        handlerRunner.gotoTop()\n                    }\n                }*/\n                if (handlerRunner) {\n                    // transition to the run queue\n                    handlerRunner.wake()\n                    this._runQueue.push(handlerRunner)\n                }\n            })\n            /*\n            const theHandler = handlerRunner?.handler || handler\n            if (isEveryHandler(theHandler)) {\n                // setup next\n                this.sleepAsync(undefined, handlerMs, theHandler)\n            }*/\n            if (handlerRunner) {\n                if (this.status === VMStatus.Running)\n                    this.runAsync()\n                else if (this.status === VMStatus.Paused) {\n                    this.emitBreakpoint(await this.getCurrentRunner())\n                }\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, async (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/runner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoRun: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoRun)\n\n    const run = async () => {\n        _setAutoStart(!!autoRun)\n        await runner.startAsync()\n    }\n    const cancel = async () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: { program: VMProgram }) {\n    const { program } = props\n    return (\n        <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">VM</Typography>\n            <CodeBlock\n                className=\"json\"\n                downloadName={\"test.json.vm\"}\n                downloadText={JSON.stringify(program, null, 2)}\n            >\n                {JSON.stringify(program, null, 2)}\n            </CodeBlock>\n        </Grid>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable } from \"blockly\"\nimport { TWIN_BLOCK } from \"./toolbox\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport BlockContext from \"./BlockContext\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    handleRoleClick: () => void\n}) {\n    const { workspace } = useContext(BlockContext)\n    const { role, service, serviceShortId } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function BlockRoles() {\n    const { roleManager } = useContext(BlockContext)\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport useChange from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/runner\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Chip, Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_EVENT, VMCode } from \"../../../jacdac-ts/src/vm/events\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport useMounted from \"../hooks/useMounted\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport BugReportIcon from \"@material-ui/icons/BugReport\"\nimport BlockContext from \"../blockly/BlockContext\"\n\nfunction useWorkspaceBreakpoints(program: VMProgram) {\n    const { workspace } = useContext(BlockContext)\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers\n                    ?.filter(h => !h.meta) // don't debug watch statements\n                    .map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpointHighlight = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpointHighlight,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    const status = useChange(runner, t => t?.status)\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [indeterminate, setIndeterminate] = useState(false)\n    const [breakpoint, setBreakpoint] = useState<string>(undefined)\n    const pausing = breakpoint === \"\"\n    const paused = !!breakpoint?.length\n    const mounted = useMounted()\n    const disabled = indeterminate || !runner\n    const { breakpoints, setBreakpointHighlight } =\n        useWorkspaceBreakpoints(program)\n\n    //console.log(\"runner status\", status)\n\n    const handleRun = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await run()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleCancel = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.clearBreakpointsAsync()\n            setBreakpoint(undefined)\n            await cancel()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleResume = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await runner.clearBreakpointsAsync()\n            await runner.resumeAsync()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handlePause = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.setBreakpointsAsync(breakpoints)\n            await runner.resumeAsync()\n            setBreakpoint(\"\")\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleStep = () => runner.stepAsync()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_EVENT,\n                (code: VMCode, _?: VMHandler, sourceId?: string) => {\n                    if (code === VMCode.Breakpoint) {\n                        if (mounted()) setBreakpoint(sourceId)\n                    }\n                }\n            ),\n        [runner]\n    )\n\n    // setting blockly breakpoint\n    useEffect(() => {\n        setBreakpointHighlight(breakpoint)\n        return () => setBreakpointHighlight(undefined)\n    }, [breakpoint])\n\n    // reset breakpoint in ui when runner, paused mode changes\n    useEffect(() => setBreakpoint(undefined), [runner])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    color={stopped ? \"primary\" : \"default\"}\n                    onClick={\n                        paused\n                            ? handleResume\n                            : stopped\n                            ? handleRun\n                            : handleCancel\n                    }\n                >\n                    {paused || stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithProgress\n                    title={pausing ? \"cancel pause\" : paused ? \"step\" : \"pause\"}\n                    disabled={disabled}\n                    indeterminate={pausing}\n                    onClick={\n                        pausing\n                            ? handleResume\n                            : paused\n                            ? handleStep\n                            : handlePause\n                    }\n                >\n                    {paused ? <PlayForWorkIcon /> : <PauseIcon />}\n                </IconButtonWithProgress>\n            </Grid>\n            {(pausing || paused) && (\n                <Grid item>\n                    <Chip\n                        icon={<BugReportIcon />}\n                        label={pausing ? \"pausing\" : \"paused\"}\n                        color={\"secondary\"}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/file\"\nimport BlockContext from \"./BlockContext\"\n\nfunction LoadButton() {\n    const { workspace } = useContext(BlockContext)\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction SaveButton() {\n    const { workspaceXml } = useContext(BlockContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json = {\n        xml: workspaceXml,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function BlockFileButtons() {\n    return (\n        <>\n            <Grid item>\n                <SaveButton />\n            </Grid>\n            <Grid item>\n                <LoadButton />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport BlockRoles from \"../blockly/BlockRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport BlockFileButtons from \"../blockly/BlockFileButtons\"\n\nexport default function VMToolbar(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <BlockFileButtons />\n            <VMRunnerButtons runner={runner} run={run} cancel={cancel} />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <BlockRoles />\n        </Grid>\n    )\n}\n","import { BlockJSON, WorkspaceJSON } from \"../blockly/jsongenerator\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    VMIfThenElse,\n    VMError,\n} from \"../../../jacdac-ts/src/vm/ir\"\nimport { toIdentifier, RoleEvent } from \"../../../jacdac-ts/src/vm/compile\"\n\nimport { assert } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    BUILTIN_TYPES,\n    resolveServiceBlockDefinition,\n} from \"../blockly/toolbox\"\nimport Blockly from \"blockly\"\nimport BlockDomainSpecificLanguage from \"../blockly/dsl/dsl\"\n\nexport interface ExpressionWithErrors {\n    expr: jsep.Expression\n    errors: VMError[]\n}\n\nexport interface CmdWithErrors {\n    cmd: VMBase\n    errors: VMError[]\n}\n\nexport const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n    return {\n        sourceId: block.id,\n        type: \"cmd\",\n        command,\n    } as VMBase\n}\n\nexport const processErrors = (block: BlockJSON, errors: VMError[]) => {\n    return errors.map((e: VMError) => {\n        return {\n            sourceId: e.sourceId ? e.sourceId : block.id,\n            message: e.message,\n        }\n    })\n}\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON,\n    dsls: BlockDomainSpecificLanguage[]\n): VMProgram {\n    console.debug(`compile vm`, { workspace, dsls })\n\n    if (!workspace) return undefined\n\n    const roles: VMRole[] = workspace.variables\n        .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n        .map(v => ({ role: v.name, serviceShortId: v.type }))\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            const definition = resolveServiceBlockDefinition(type)\n            if (!definition) {\n                console.warn(`unknown block ${type}`, {\n                    type,\n                    ev,\n                    block,\n                    d: Blockly.Blocks[type],\n                })\n            } else {\n                const { dsl: dslName } = definition\n                const dsl = dsls.find(d => d.id === dslName)\n                const res = dsl?.compileExpressionToVM?.({\n                    event: ev,\n                    definition,\n                    block,\n                    blockToExpressionInner,\n                })\n                if (res) {\n                    if (res.errors) res.errors.forEach(e => errors.push(e))\n                    return res.expr\n                }\n\n                const { template } = definition\n                if (template === \"shadow\") {\n                    const field = inputs[0].fields[\"value\"]\n                    const v = field.value\n                    return <jsep.Literal>{\n                        type: \"Literal\",\n                        value: v,\n                        raw: v + \"\",\n                    }\n                }\n\n                errors.push({\n                    sourceId: block.id,\n                    message: `unknown block ${type}`,\n                })\n                console.warn(`unsupported block ${type}`, {\n                    ev,\n                    block,\n                    definition,\n                })\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        console.debug(`block2c`, { event, type, block, inputs })\n        switch (type) {\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const definition = resolveServiceBlockDefinition(type)\n                if (definition) {\n                    const { dsl: dslName } = definition\n                    const dsl = dsls.find(dsl => dsl.id === dslName)\n                    const dslRes = dsl?.compileCommandToVM?.({\n                        event,\n                        block,\n                        definition,\n                        blockToExpression,\n                    })\n                    if (dslRes) {\n                        dslRes.errors = processErrors(block, dslRes.errors)\n                        return dslRes\n                    }\n                }\n                console.warn(`unsupported block ${type}`, { block })\n                return {\n                    cmd: undefined,\n                    errors: [\n                        {\n                            sourceId: block.id,\n                            message: `unsupported block ${type}`,\n                        },\n                    ],\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks\n            ?.filter(child => !!child)\n            .forEach(child => {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child)\n                    if (cmd) handler.commands.push(cmd)\n                    errors.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    } else {\n                        console.debug(e)\n                    }\n                }\n            })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks\n        .map(top => {\n            const { type } = top\n            let command: jsep.CallExpression\n            let topEvent: RoleEvent\n            let topErrors: VMError[]\n            let topMeta = false\n            const definition = resolveServiceBlockDefinition(type)\n            assert(!!definition)\n            const { template, dsl: dslName } = definition\n            const dsl = dslName && dsls?.find(d => d.id === dslName)\n\n            try {\n                const { expression, errors, event, meta } =\n                    dsl?.compileEventToVM?.({\n                        block: top,\n                        definition,\n                        blockToExpression,\n                    }) || {}\n                command = expression as jsep.CallExpression\n                topErrors = errors\n                topEvent = event\n                topMeta = meta\n\n                // if dsl didn't compile anything try again\n                if (!command && !topErrors?.length) {\n                    switch (template) {\n                        case \"meta\": {\n                            break\n                        }\n                        default: {\n                            topErrors = [\n                                {\n                                    sourceId: top.id,\n                                    message: `unsupported block ${type}`,\n                                },\n                            ]\n                            console.debug(\n                                `unsupported handler template ${template} for ${type}`,\n                                { top }\n                            )\n                            break\n                        }\n                    }\n                }\n            } catch (e) {\n                console.debug(e)\n                if (e instanceof EmptyExpression) {\n                    return undefined\n                } else {\n                    throw e\n                }\n            }\n\n            // nothing to compile here\n            if (!command && !topErrors?.length) return undefined\n\n            const handler: VMHandler = {\n                commands: [\n                    {\n                        sourceId: top.id,\n                        type: \"cmd\",\n                        command,\n                    } as VMBase,\n                ],\n                errors: topErrors || [],\n                meta: !!topMeta,\n            }\n\n            addCommands(topEvent, top.children, handler)\n            return handler\n        })\n        .filter(handler => !!handler)\n\n    return {\n        roles,\n        handlers,\n    }\n}\n","import { Theme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../../jacdac-ts/src/jdom/flags\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecificationFromName,\n    serviceSpecifications,\n} from \"../../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../../jacdac-ts/src/jdom/utils\"\nimport {\n    toIdentifier,\n    toMemberExpression,\n} from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport KeyboardKeyField from \"../fields/KeyboardKeyField\"\nimport LEDColorField from \"../fields/LEDColorField\"\nimport LEDMatrixField from \"../fields/LEDMatrixField\"\nimport NoteField from \"../fields/NoteField\"\nimport ServoAngleField from \"../fields/ServoAngleField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    BOOLEAN_TYPE,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    CommandBlockDefinition,\n    ROLE_BOUND_BLOCK,\n    CustomBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    JSON_TYPE,\n    NUMBER_TYPE,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    ServiceBlockDefinition,\n    SET_STATUS_LIGHT_BLOCK,\n    STRING_TYPE,\n    ValueInputDefinition,\n    VariableInputDefinition,\n    ROLE_BOUND_EVENT_BLOCK,\n} from \"../toolbox\"\nimport { ExpressionWithErrors, makeVMBase } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage, {\n    CompileCommandToVMOptions,\n    CompileEventToVMOptions,\n    CompileEventToVMResult,\n    CompileExpressionToVMOptions,\n    CreateBlocksOptions,\n    CreateCategoryOptions,\n} from \"./dsl\"\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return field.encoding === \"JSON\"\n        ? JSON_TYPE\n        : isBooleanField(field)\n        ? BOOLEAN_TYPE\n        : isStringField(field)\n        ? STRING_TYPE\n        : isNumericType(field)\n        ? NUMBER_TYPE\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nconst commandColor = \"#8c6a1d\"\n\nexport class ServicesBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"jacdacServices\"\n    supportedServices: jdspec.ServiceSpec[] = []\n    private _serviceBlocks: ServiceBlockDefinition[]\n    private _eventFieldBlocks: EventFieldDefinition[]\n    private _runtimeBlocks: BlockDefinition[]\n\n    private createServiceColor(theme: Theme) {\n        const sensorColor = theme.palette.success.main\n        const otherColor = theme.palette.info.main\n        const serviceColor = (srv: jdspec.ServiceSpec) =>\n            isSensor(srv) ? sensorColor : otherColor\n        return serviceColor\n    }\n\n    createBlocks(options: CreateBlocksOptions) {\n        const { theme } = options\n        const serviceColor = this.createServiceColor(theme)\n        // blocks\n        const customShadows = [\n            {\n                serviceClass: SRV_SERVO,\n                kind: \"rw\",\n                identifier: ServoReg.Angle,\n                field: \"_\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: ServoAngleField.SHADOW.type,\n                },\n            },\n            {\n                serviceClass: SRV_BUZZER,\n                kind: \"command\",\n                identifier: BuzzerCmd.PlayNote,\n                field: \"frequency\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: NoteField.SHADOW.type,\n                },\n            },\n        ]\n        const lookupCustomShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customShadows.find(\n                cs =>\n                    cs.serviceClass === service.classIdentifier &&\n                    cs.kind == info.kind &&\n                    cs.identifier === info.identifier &&\n                    cs.field == field.name\n            )?.shadow\n\n        const serviceHelp = (service: jdspec.ServiceSpec) =>\n            withPrefix(`/services/${service.shortId}`)\n        const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n            pkt.fields.every(toBlocklyType)\n        const fieldName = (\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) => (field.name === \"_\" ? reg.name : field.name)\n        const fieldToShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ): BlockReference =>\n            lookupCustomShadow(service, info, field) ||\n            (isBooleanField(field)\n                ? { kind: \"block\", type: \"jacdac_on_off\" }\n                : isStringField(field)\n                ? { kind: \"block\", type: \"text\" }\n                : field.unit === \"°\"\n                ? {\n                      kind: \"block\",\n                      type: \"jacdac_angle\",\n                  }\n                : field.unit === \"/\"\n                ? { kind: \"block\", type: \"jacdac_ratio\" }\n                : /^%/.test(field.unit)\n                ? { kind: \"block\", type: \"jacdac_percent\" }\n                : field.type === \"u8\"\n                ? { kind: \"block\", type: \"jacdac_byte\" }\n                : {\n                      kind: \"block\",\n                      type: \"math_number\",\n                      value: field.defaultValue || 0,\n                      min: field.typicalMin || field.absoluteMin,\n                      max: field.typicalMax || field.absoluteMax,\n                  })\n        const variableName = (srv: jdspec.ServiceSpec) =>\n            `${humanify(srv.camelName).toLowerCase()} 1`\n        const fieldVariable = (\n            service: jdspec.ServiceSpec\n        ): VariableInputDefinition => ({\n            type: \"field_variable\",\n            name: \"role\",\n            variable: variableName(service),\n            variableTypes: [service.shortId],\n            defaultType: service.shortId,\n        })\n        const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n            info.fields.map(field => ({\n                type: \"input_value\",\n                name: fieldName(info, field),\n                check: toBlocklyType(field),\n            }))\n        const fieldsToValues = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo\n        ) =>\n            toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n                info.fields,\n                field => fieldName(info, field),\n                field => fieldToShadow(service, info, field)\n            )\n        const fieldsToMessage = (info: jdspec.PacketInfo) =>\n            info.fields\n                .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n                .join(\" \")\n        const isEnabledRegister = (info: jdspec.PacketInfo) =>\n            info.fields.length === 1 &&\n            info.fields[0].type === \"bool\" &&\n            info.name === \"enabled\"\n        const customMessage = (\n            srv: jdspec.ServiceSpec,\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customMessages.find(\n                m =>\n                    m.service === srv.classIdentifier &&\n                    m.register === reg.identifier &&\n                    m.field === field.name\n            )\n\n        const allServices = serviceSpecifications()\n        this.supportedServices = allServices\n            .filter(\n                service =>\n                    !/^_/.test(service.shortId) &&\n                    service.status !== \"deprecated\"\n            )\n            .filter(\n                service => ignoredServices.indexOf(service.classIdentifier) < 0\n            )\n        const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n            allServices.filter(srv => srv.classIdentifier === cls)\n        const registers = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isRegister(pkt) &&\n                            !pkt.lowLevel &&\n                            includedRegisters.indexOf(pkt.identifier) > -1\n                    )\n                    .map(register => ({\n                        service,\n                        register,\n                    }))\n            )\n        )\n        const events = this.supportedServices\n            .map(service => ({\n                service,\n                events: service.packets.filter(\n                    pkt =>\n                        isEvent(pkt) &&\n                        !pkt.lowLevel &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                ),\n            }))\n            .filter(kv => !!kv.events.length)\n        const commands = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isCommand(pkt) &&\n                            !pkt.lowLevel &&\n                            fieldsSupported(pkt)\n                    )\n                    .map(pkt => ({\n                        service,\n                        command: pkt,\n                    }))\n            )\n        )\n\n        const customBlockDefinitions: CustomBlockDefinition[] = [\n            ...resolveService(SRV_HID_KEYBOARD).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `key`,\n                        message0: `send %1 key %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: KeyboardKeyField.KEY,\n                                name: \"combo\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Send a keyboard key combo`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.key(combo.selectors, combo.modifiers)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `fade`,\n                        message0: `fade %1 to %2 at speed %3`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"color\",\n                                check: \"Number\",\n                            },\n                            {\n                                type: \"input_value\",\n                                name: \"speed\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            color: {\n                                kind: \"block\",\n                                type: LEDColorField.SHADOW.type,\n                            },\n                            speed: {\n                                kind: \"block\",\n                                type: \"jacdac_ratio\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Fade LED color`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `set_digits`,\n                        message0: `set %1 digits to %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"digits\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            digits: {\n                                kind: \"block\",\n                                type: \"math_number\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display a number of the screen`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED_MATRIX).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `show_leds`,\n                        message0: `show %1 leds %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: LEDMatrixField.KEY,\n                                name: \"leds\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display LEDs on the LED matrix`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n        ].map(def => {\n            def.type = `jacdac_custom_${def.service.shortId.toLowerCase()}_${\n                def.type\n            }`\n            return def\n        })\n\n        const eventBlocks = events.map<EventBlockDefinition>(\n            ({ service, events }) => ({\n                kind: \"block\",\n                type: `jacdac_events_${service.shortId}`,\n                message0: `on %1 %2`,\n                args0: [\n                    fieldVariable(service),\n                    <InputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: events.map(event => [\n                            humanify(event.name),\n                            event.name,\n                        ]),\n                    },\n                ],\n                colour: serviceColor(service),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                tooltip: `Events for the ${service.name} service`,\n                helpUrl: serviceHelp(service),\n                service,\n                events,\n                template: \"event\",\n            })\n        )\n\n        const registerChangeByEventBlocks = registers\n            .filter(\n                ({ service }) =>\n                    !service.packets.some(\n                        pkt =>\n                            isEvent(pkt) &&\n                            ignoredEvents.indexOf(pkt.identifier) < 0\n                    )\n            )\n            .filter(\n                ({ register }) =>\n                    register.fields.length === 1 &&\n                    isNumericType(register.fields[0]) &&\n                    register.identifier !== SystemReg.Intensity\n            )\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n                message0: `on %1 ${humanify(register.name)} change by %2`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ].filter(v => !!v),\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: serviceColor(service),\n                tooltip: `Event raised when ${register.name} changes`,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_change_event\",\n            }))\n\n        const [registerSimples, registerComposites] = splitFilter(\n            registers,\n            reg => reg.register.fields.length == 1\n        )\n        const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n            registerSimples,\n            ({ register }) => !!toBlocklyType(register.fields[0])\n        )\n        const registerSimplesGetBlocks =\n            registerSimpleTypes.map<RegisterBlockDefinition>(\n                ({ service, register }) => ({\n                    kind: \"block\",\n                    type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                    message0:\n                        customMessage(service, register, register.fields[0])\n                            ?.get || `%1 ${humanify(register.name)}`,\n                    args0: [fieldVariable(service)],\n                    inputsInline: true,\n                    output: toBlocklyType(register.fields[0]),\n                    colour: serviceColor(service),\n                    tooltip: register.description,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    register,\n                    field: register.fields[0],\n\n                    template: \"register_get\",\n                })\n            )\n        const registerSimpleEnumTypes = registerSimpleOthers\n            .filter(\n                ({ service, register }) =>\n                    !!enumInfo(service, register.fields[0])\n            )\n            .map(({ service, register }) => ({\n                service,\n                register,\n                field: register.fields[0],\n                einfo: enumInfo(service, register.fields[0]),\n            }))\n        const registerCompositeEnumTypes = arrayConcatMany(\n            registerComposites.map(({ service, register }) =>\n                register.fields\n                    .map(field => ({\n                        service,\n                        register,\n                        field,\n                        einfo: enumInfo(service, field),\n                    }))\n                    .filter(({ einfo }) => !!einfo)\n            )\n        )\n        const registerEnumGetBlocks = [\n            ...registerSimpleEnumTypes,\n            ...registerCompositeEnumTypes,\n        ].map<RegisterBlockDefinition>(\n            ({ service, register, field, einfo }) => ({\n                kind: \"block\",\n                type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n                message0:\n                    customMessage(service, register, field)?.get ||\n                    `%1 ${humanify(register.name)}${\n                        field.name === \"_\" ? \"\" : ` ${field.name}`\n                    } %2`,\n                args0: [\n                    fieldVariable(service),\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: field.name,\n                        options: Object.keys(einfo.members).map(member => [\n                            humanify(member),\n                            member,\n                        ]),\n                    },\n                ],\n                inputsInline: true,\n                output: \"Boolean\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field,\n\n                template: \"register_get\",\n            })\n        )\n\n        const registerNumericsGetBlocks = registerComposites\n            .filter(re => re.register.fields.some(isNumericType))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n                message0: `%1 ${humanify(register.name)}${\n                    register.fields.length > 1 ? ` %2` : \"\"\n                }`,\n                args0: [\n                    fieldVariable(service),\n                    register.fields.length > 1\n                        ? <OptionsInputDefinition>{\n                              type: \"field_dropdown\",\n                              name: \"field\",\n                              options: register.fields\n                                  .filter(f => isNumericType(f))\n                                  .map(field => [\n                                      humanify(field.name),\n                                      fieldName(register, field),\n                                  ]),\n                          }\n                        : undefined,\n                ].filter(v => !!v),\n                inputsInline: true,\n                output: \"Number\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_get\",\n            }))\n\n        const registerSetBlocks = registers\n            .filter(({ register }) => register.kind === \"rw\")\n            .filter(({ register }) => fieldsSupported(register))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_set_${service.shortId}_${register.name}`,\n                message0: isEnabledRegister(register)\n                    ? `set %1 %2`\n                    : `set %1 ${register.name} to ${\n                          register.fields.length === 1\n                              ? \"%2\"\n                              : fieldsToMessage(register)\n                      }`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ],\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"register_set\",\n            }))\n\n        const commandBlocks = commands.map<CommandBlockDefinition>(\n            ({ service, command }) => ({\n                kind: \"block\",\n                type: `jacdac_command_${service.shortId}_${command.name}`,\n                message0: !command.fields.length\n                    ? `${humanify(command.name)} %1`\n                    : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                          command\n                      )}`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(command),\n                ],\n                values: fieldsToValues(service, command),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: command.description,\n                helpUrl: serviceHelp(service),\n                service,\n                command,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"command\",\n            })\n        )\n\n        this._serviceBlocks = [\n            ...eventBlocks,\n            ...registerChangeByEventBlocks,\n            ...registerSimplesGetBlocks,\n            ...registerEnumGetBlocks,\n            ...registerNumericsGetBlocks,\n            ...registerSetBlocks,\n            ...customBlockDefinitions,\n            ...commandBlocks,\n        ]\n\n        const eventFieldGroups = [\n            {\n                output: NUMBER_TYPE,\n                filter: isNumericType,\n            },\n            {\n                output: BOOLEAN_TYPE,\n                filter: isBooleanField,\n            },\n            {\n                output: STRING_TYPE,\n                filter: (f: jdspec.PacketMember) =>\n                    isStringField(f) && f.encoding !== \"JSON\",\n            },\n            {\n                output: JSON_TYPE,\n                filter: (f: jdspec.PacketMember) =>\n                    isStringField(f) && f.encoding === \"JSON\",\n            },\n        ]\n        // generate accessor blocks for event data with numbers\n        this._eventFieldBlocks = arrayConcatMany(\n            arrayConcatMany(\n                eventFieldGroups.map(({ output, filter }) =>\n                    events.map(({ service, events }) =>\n                        events\n                            .filter(\n                                event => event.fields.filter(filter).length > 0\n                            )\n                            .map(event => ({ service, event }))\n                            .map(\n                                ({ service, event }) =>\n                                    <EventFieldDefinition>{\n                                        kind: \"block\",\n                                        type: `jacdac_event_field_${output.toLowerCase()}_${\n                                            service.shortId\n                                        }_${event.name}`,\n                                        message0: `${event.name} %1`,\n                                        args0: [\n                                            <InputDefinition>{\n                                                type: \"field_dropdown\",\n                                                name: \"field\",\n                                                options: event.fields.map(\n                                                    field => [\n                                                        humanify(field.name),\n                                                        field.name,\n                                                    ]\n                                                ),\n                                            },\n                                        ],\n                                        colour: serviceColor(service),\n                                        inputsInline: true,\n                                        tooltip: `Data fields of the ${event.name} event`,\n                                        helpUrl: serviceHelp(service),\n                                        service,\n                                        event,\n                                        output,\n                                        template: \"event_field\",\n                                    }\n                            )\n                    )\n                )\n            )\n        )\n\n        this._runtimeBlocks = [\n            {\n                kind: \"block\",\n                type: ROLE_BOUND_EVENT_BLOCK,\n                message0: \"on %1 %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: [\n                            [\"bound\", \"bound\"],\n                            [\"unbound\", \"unbound\"],\n                        ],\n                    },\n                ],\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"role_binding_event\",\n            },\n            {\n                kind: \"block\",\n                type: ROLE_BOUND_BLOCK,\n                message0: \"%1 bound\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                ],\n                output: \"Boolean\",\n                inputsInline: true,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"role_bound\",\n            },\n            {\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                message0: \"set %1 status light to %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"all\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"color\",\n                        check: \"Number\",\n                    },\n                ],\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n                inputsInline: true,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Sets the color on the status light\",\n                helpUrl: \"\",\n            },\n        ]\n\n        return [\n            ...this._serviceBlocks,\n            ...this._eventFieldBlocks,\n            ...this._runtimeBlocks,\n        ]\n    }\n\n    createCategory(options: CreateCategoryOptions) {\n        const { theme, source, liveServices } = options\n        const serviceColor = this.createServiceColor(theme)\n\n        const blockServices =\n            source?.variables\n                .map(v => v.type)\n                .filter(type => !!serviceSpecificationFromName(type)) || []\n        const usedEvents: Set<jdspec.PacketInfo> = new Set(\n            source?.blocks\n                ?.map(block => ({\n                    block,\n                    definition: resolveServiceBlockDefinition(block.type),\n                }))\n                .filter(({ definition }) => definition.template === \"event\")\n                .map(({ block, definition }) => {\n                    const eventName = block.inputs[0].fields[\"event\"]\n                        .value as string\n                    return (definition as EventBlockDefinition).events.find(\n                        ev => ev.name === eventName\n                    )\n                })\n                .filter(ev => !!ev)\n        )\n        const jdBlocks = this._serviceBlocks.filter(block => !!block.service)\n        const services = uniqueMap(\n            jdBlocks,\n            block => block.service.shortId,\n            block => block.service\n        )\n\n        const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n            Flags.diagnostics\n                ? services\n                : [\n                      ...blockServices\n                          .map(srvid =>\n                              services.find(\n                                  service => service.shortId === srvid\n                              )\n                          )\n                          .filter(srv => !!srv),\n                      ...liveServices.map(srv => srv.specification),\n                  ],\n            srv => srv.shortId,\n            srv => srv\n        )\n            .filter(\n                srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0\n            )\n            .sort((l, r) => l.name.localeCompare(r.name))\n\n        const servicesCategories: CategoryDefinition[] = toolboxServices\n            .map(service => ({\n                service,\n                serviceBlocks: this._serviceBlocks.filter(\n                    block => block.service === service\n                ),\n            }))\n            .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n                kind: \"category\",\n                name: service.name,\n                colour: serviceColor(service),\n                contents: [\n                    ...serviceBlocks.map<BlockReference>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n                    ...this._eventFieldBlocks\n                        .filter(\n                            ev =>\n                                ev.service === service &&\n                                usedEvents.has(ev.event)\n                        )\n                        .map<BlockReference>(block => ({\n                            kind: \"block\",\n                            type: block.type,\n                            values: block.values,\n                        })),\n                ],\n                button: {\n                    kind: \"button\",\n                    text: `Add ${service.name} role`,\n                    callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                    service,\n                },\n            }))\n            .filter(cat => !!cat.contents?.length)\n\n        const commonCategory: CategoryDefinition = {\n            kind: \"category\",\n            name: \"Roles\",\n            colour: commandColor,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ROLE_BOUND_EVENT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ROLE_BOUND_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: SET_STATUS_LIGHT_BLOCK,\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                    },\n                },\n            ],\n        }\n\n        return [...servicesCategories, commonCategory]\n    }\n\n    compileEventToVM(options: CompileEventToVMOptions): CompileEventToVMResult {\n        const { block, definition, blockToExpression } = options\n        const { inputs } = block\n        const { template } = definition\n\n        switch (template) {\n            case \"event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { value: eventName } = inputs[0].fields[\"event\"]\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    },\n                    event: {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    },\n                }\n            }\n            case \"register_change_event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    undefined,\n                    inputs[0].child\n                )\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    },\n                    errors,\n                }\n            }\n        }\n\n        return undefined\n    }\n\n    compileExpressionToVM(\n        options: CompileExpressionToVMOptions\n    ): ExpressionWithErrors {\n        const { event, definition, block } = options\n        const { inputs, id } = block\n        const { template } = definition\n        switch (template) {\n            case \"register_get\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { value: role } = inputs[0].fields[\"role\"]\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        role as string,\n                        field\n                            ? toMemberExpression(\n                                  register.name,\n                                  field.value as string\n                              )\n                            : register.name\n                    ),\n                    errors: [],\n                }\n            }\n            case \"event_field\": {\n                const { event: eventInfo } = definition as EventFieldDefinition\n                const errors: VMError[] = []\n                if (event.event !== eventInfo.name) {\n                    errors.push({\n                        sourceId: id,\n                        message: `Event ${eventInfo.name} is not available in this handler.`,\n                    })\n                }\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        event.role,\n                        toMemberExpression(event.event, field.value as string)\n                    ),\n                    errors,\n                }\n            }\n            default:\n                return undefined\n        }\n    }\n\n    compileCommandToVM(options: CompileCommandToVMOptions) {\n        const { event, block, definition, blockToExpression } = options\n        const { template } = definition\n        const { inputs } = block\n        switch (template) {\n            case \"register_set\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                const { value: role } = inputs[0].fields.role\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role as string, register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"writeRegister\"),\n                    }),\n                    errors,\n                }\n            }\n            case \"command\": {\n                const { command: serviceCommand } =\n                    definition as CommandBlockDefinition\n                const { value: role } = inputs[0].fields.role\n                const exprsErrors = inputs.map(a =>\n                    blockToExpression(event, a.child)\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: exprsErrors.map(p => p.expr),\n                        callee: toMemberExpression(\n                            role as string,\n                            serviceCommand.name\n                        ),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n        }\n\n        return undefined\n    }\n}\nconst servicesDSL = new ServicesBlockDomainSpecificLanguage()\nexport default servicesDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport JDomTreeField from \"../fields/JDomTreeField\"\nimport TwinField from \"../fields/TwinField\"\nimport WatchValueField from \"../fields/WatchValueField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    InputDefinition,\n    INSPECT_BLOCK,\n    TWIN_BLOCK,\n    VariableInputDefinition,\n    WATCH_BLOCK,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport servicesDSL from \"./servicesdsl\"\n\nconst colour = \"#888\"\n\nconst toolsDSL: BlockDomainSpecificLanguage = {\n    id: \"tools\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"Number\", \"Boolean\", \"String\"],\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n        },\n    ],\n    createCategory: () => [\n        {\n            kind: \"sep\",\n        },\n        {\n            kind: \"category\",\n            name: \"Tools\",\n            colour: colour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: WATCH_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: TWIN_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: INSPECT_BLOCK,\n                },\n            ],\n        },\n    ],\n\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === WATCH_BLOCK) {\n            const { inputs } = block\n            const { expr, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: <jsep.CallExpression>{\n                    type: \"CallExpression\",\n                    arguments: [expr],\n                    callee: toIdentifier(\"watch\"),\n                },\n                errors,\n                meta: true,\n            }\n        }\n\n        return undefined\n    },\n}\n\nexport default toolsDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMCommand } from \"../../../../jacdac-ts/src/vm/ir\"\nimport {\n    BlockReference,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    InputDefinition,\n    ON_START_BLOCK,\n    REPEAT_EVERY_BLOCK,\n    SeparatorDefinition,\n    ValueInputDefinition,\n    WAIT_BLOCK,\n} from \"../toolbox\"\nimport { makeVMBase, processErrors } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst colour = \"#4fbac9\"\nconst loopsDsl: BlockDomainSpecificLanguage = {\n    id: \"loops\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: CODE_STATEMENT_TYPE,\n            nextStatement: CODE_STATEMENT_TYPE,\n            colour,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: ON_START_BLOCK,\n            message0: `on start`,\n            args0: [],\n            colour,\n            inputsInline: true,\n            tooltip: `Runs code when the device starts`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n    ],\n\n    createCategory: () => [\n        <SeparatorDefinition>{\n            kind: \"sep\",\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Events\",\n            colour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: REPEAT_EVERY_BLOCK,\n                    values: {\n                        interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ON_START_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: WAIT_BLOCK,\n                    values: {\n                        time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n            ].filter(b => !!b),\n        },\n    ],\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === ON_START_BLOCK) {\n            // TODO\n            return undefined\n        } else if (type === REPEAT_EVERY_BLOCK) {\n            const { inputs } = block\n            const { expr: time, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: (\n                    makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }) as VMCommand\n                ).command,\n                errors: processErrors(block, errors),\n            }\n        }\n        return undefined\n    },\n    compileCommandToVM: ({ event, block, blockToExpression }) => {\n        const { type } = block\n        if (type === WAIT_BLOCK) {\n            const { inputs } = block\n            {\n                const { expr: time, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }),\n                    errors: processErrors(block, errors),\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default loopsDsl\n","import { ExpressionWithErrors } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n}\n\nconst logicDsl: BlockDomainSpecificLanguage = {\n    id: \"logic\",\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Logic\",\n            colour: \"%{BKY_LOGIC_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"dynamic_if\",\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_compare\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_operation\",\n                    values: {\n                        A: { kind: \"block\", type: \"logic_boolean\" },\n                        B: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_negate\",\n                    values: {\n                        BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_boolean\",\n                },\n            ],\n        },\n    ],\n    compileExpressionToVM: ({\n        event,\n        block,\n        blockToExpressionInner,\n    }): ExpressionWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case \"logic_operation\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n            case \"logic_negate\": {\n                const argument = blockToExpressionInner(event, inputs[0].child)\n                return {\n                    expr: <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    },\n                    errors: [],\n                }\n            }\n            case \"logic_compare\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default logicDsl\n","import { ExpressionWithErrors } from \"../../vm/VMgenerator\"\nimport {\n    CategoryDefinition,\n    OptionsInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst ops = {\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nconst mathDSL: BlockDomainSpecificLanguage = {\n    id: \"jacdacmath\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random_range\",\n            message0: \"random from %1 to %2\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"min\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"max\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            inputsInline: true,\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_clamp\",\n            message0: \"clamp %1 in [%2, %3]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"minInclusive\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"maxInclusive\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ],\n    createCategory: () => [\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Math\",\n            colour: \"%{BKY_MATH_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_arithmetic\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_single\",\n                    values: {\n                        NUM: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                { kind: \"block\", type: \"jacdac_math_random\" },\n                { kind: \"block\", type: \"jacdac_math_random_range\" },\n                { kind: \"block\", type: \"jacdac_math_map\" },\n                { kind: \"block\", type: \"math_number\" },\n            ],\n        },\n    ],\n    compileExpressionToVM: ({\n        event,\n        block,\n        blockToExpressionInner,\n    }): ExpressionWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case \"math_single\": // built-in blockly\n            case \"jacdac_math_single\": {\n                const argument = blockToExpressionInner(event, inputs[0].child)\n                const op = inputs[0].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    },\n                    errors: [],\n                }\n            }\n            case \"math_arithmetic\": // built-in blockly\n            case \"jacdac_math_arithmetic\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n        }\n        return undefined\n    },\n}\n\nexport default mathDSL\n","import {\n    BlockDefinition,\n    BlockReference,\n    DummyInputDefinition,\n    JSON_TYPE,\n    PRIMITIVE_TYPES,\n    StatementInputDefinition,\n    TextInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage, {\n    CompileExpressionToVMOptions,\n} from \"./dsl\"\n\nconst colour = \"#654321\"\nconst JSON_FIELD_TYPE = \"JSONField\"\nconst JSON_OBJECT_BLOCK = \"json_object\"\nconst JSON_FIELD_SET_BLOCK = \"json_field_set\"\nconst JSON_FIELD_GET_TEMPLATE = \"jsonFieldGet\"\nconst JSON_FIELD_VALUE_TYPE = [...PRIMITIVE_TYPES, JSON_TYPE]\n\nconst jsonDSL: BlockDomainSpecificLanguage = {\n    id: \"json\",\n    createBlocks: () => [\n        <BlockDefinition>{\n            kind: \"block\",\n            type: JSON_OBJECT_BLOCK,\n            message0: \"{ %1 %2 }\",\n            args0: [\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                <StatementInputDefinition>{\n                    type: \"input_statement\",\n                    name: \"fields\",\n                    check: JSON_FIELD_TYPE,\n                },\n            ],\n            output: JSON_TYPE,\n            colour,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: JSON_FIELD_SET_BLOCK,\n            message0: \"%1: %2\",\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: JSON_FIELD_VALUE_TYPE,\n                },\n            ],\n            previousStatement: JSON_FIELD_TYPE,\n            nextStatement: JSON_FIELD_TYPE,\n            colour,\n        },\n        ...PRIMITIVE_TYPES.map(\n            output =>\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: `json_field_get_as_${output.toLowerCase()}`,\n                    message0: `%1 [ %2 ] as ${output.toLowerCase()}`,\n                    args0: [\n                        <ValueInputDefinition>{\n                            type: \"input_value\",\n                            name: \"value\",\n                            check: JSON_TYPE,\n                        },\n                        <TextInputDefinition>{\n                            type: \"field_input\",\n                            name: \"name\",\n                        },\n                    ],\n                    output,\n                    colour,\n                    template: JSON_FIELD_GET_TEMPLATE,\n                }\n        ),\n    ],\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"JSON\",\n            colour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: JSON_OBJECT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: JSON_FIELD_SET_BLOCK,\n                    values: {\n                        value: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                ...PRIMITIVE_TYPES.map(output => ({\n                    kind: \"block\",\n                    type: `json_field_get_as_${output.toLowerCase()}`,\n                    values: {\n                        value: <BlockReference>{\n                            kind: \"block\",\n                            type: \"variables_get\",\n                            check: JSON_TYPE,\n                        },\n                    },\n                })),\n            ],\n        },\n    ],\n\n    compileExpressionToVM(options: CompileExpressionToVMOptions) {\n        const { event, block, definition, blockToExpressionInner } = options\n        const { type } = block\n        const { template } = definition\n        if (type === JSON_OBJECT_BLOCK) {\n            // TODO\n        } else if (type === JSON_FIELD_SET_BLOCK) {\n            // TODO\n        } else if (template === JSON_FIELD_GET_TEMPLATE) {\n            // TODO: genearte JSON\n            console.log(\"json expr\", {\n                event,\n                block,\n                definition,\n                blockToExpressionInner,\n            })\n            return undefined\n        }\n        // don't know\n        return undefined\n    },\n}\n\nexport default jsonDSL\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useVMRunner from \"./useVMRunner\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport BlockContext, { BlockProvider } from \"../blockly/BlockContext\"\nimport BlockDiagnostics from \"../blockly/BlockDiagnostics\"\nimport servicesDSL from \"../blockly/dsl/servicesdsl\"\nimport toolsDSL from \"../blockly/dsl/toolsdsl\"\nimport loopsDsl from \"../blockly/dsl/loopsdsl\"\nimport logicDsl from \"../blockly/dsl/logicdsl\"\nimport mathDSL from \"../blockly/dsl/mathdsl\"\nimport variablesDsl from \"../blockly/dsl/variablesdsl\"\nimport shadowDsl from \"../blockly/dsl/shadowdsl\"\nimport fieldsDsl from \"../blockly/dsl/fieldsdsl\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport { BlocklyWorkspaceWithServices } from \"../blockly/WorkspaceContext\"\nimport BlockEditor from \"../blockly/BlockEditor\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport jsonDSL from \"../blockly/dsl/jsondsl\"\n\nconst VM_SOURCE_STORAGE_KEY = \"tools:vmeditor\"\nfunction VMEditorWithContext() {\n    const { dsls, workspace, workspaceJSON, roleManager, setWarnings } =\n        useContext(BlockContext)\n    const [program, setProgram] = useState<VMProgram>()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    useEffect(() => {\n        try {\n            const newProgram = workspaceJSONToVMProgram(workspaceJSON, dsls)\n            if (JSON.stringify(newProgram) !== JSON.stringify(program))\n                setProgram(newProgram)\n        } catch (e) {\n            console.error(e)\n            setProgram(undefined)\n        }\n    }, [dsls, workspaceJSON])\n    useEffect(\n        () => program && roleManager?.setRoles(program.roles),\n        [roleManager, program]\n    )\n    useEffect(\n        () =>\n            setWarnings(arrayConcatMany(program?.handlers.map(h => h.errors))),\n        [program]\n    )\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <VMToolbar runner={runner} run={run} cancel={cancel} />\n            </Grid>\n            <Grid item xs={12}>\n                <BlockEditor />\n            </Grid>\n            {Flags.diagnostics && (\n                <>\n                    <VMDiagnostics program={program} />\n                    <BlockDiagnostics />\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function VMEditor() {\n    const dsls = useMemo(() => {\n        return [\n            servicesDSL,\n            loopsDsl,\n            logicDsl,\n            mathDSL,\n            jsonDSL,\n            variablesDsl,\n            toolsDSL,\n            shadowDsl,\n            fieldsDsl,\n        ]\n    }, [])\n\n    return (\n        <NoSsr>\n            <BlockProvider storageKey={VM_SOURCE_STORAGE_KEY} dsls={dsls}>\n                <VMEditorWithContext />\n            </BlockProvider>\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}