{"version":3,"file":"86bd1a670c99d16a75c30550d9a7c34f0739ff9c-b308e6741b87f105143c.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACgB;AACjB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,kCAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAK;AACpB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,IAAI;AACJ;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6B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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./src/components/blockly/dsl/datadsl.ts","webpack://jacdac-docs/./src/components/fs/FileSystemChip.tsx","webpack://jacdac-docs/./src/components/fs/FileNewFileChip.tsx","webpack://jacdac-docs/./src/components/fs/FileSystemNodeChip.tsx","webpack://jacdac-docs/./src/components/fs/FileTabs.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/ban-types */\nimport {\n    Block,\n    Events,\n    FieldVariable,\n    Variables,\n    Workspace,\n    alert,\n} from \"blockly\"\nimport BuiltinDataSetField from \"../fields/BuiltinDataSetField\"\nimport DataColumnChooserField from \"../fields/DataColumnChooserField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    ButtonDefinition,\n    CategoryDefinition,\n    DATA_SCIENCE_STATEMENT_TYPE,\n    identityTransformData,\n    NumberInputDefinition,\n    OptionsInputDefinition,\n    VariableInputDefinition,\n    TextInputDefinition,\n    SeparatorDefinition,\n    DataColumnInputDefinition,\n    DummyInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport postTransformData from \"./workers/data.proxy\"\nimport type {\n    DataSelectRequest,\n    DataDropRequest,\n    DataArrangeRequest,\n    DataFilterColumnsRequest,\n    DataFilterStringRequest,\n    DataSummarizeRequest,\n    DataSummarizeByGroupRequest,\n    DataMutateColumnsRequest,\n    DataMutateNumberRequest,\n    DataCountRequest,\n    DataBinRequest,\n    DataCorrelationRequest,\n    DataLinearRegressionRequest,\n} from \"../../../workers/data/dist/node_modules/data.worker\"\nimport {\n    BlockWithServices,\n    resolveBlockServices,\n    resolveWorkspaceServices,\n} from \"../WorkspaceContext\"\nimport FileSaveField from \"../fields/FileSaveField\"\nimport { saveCSV } from \"./workers/csv.proxy\"\nimport FileOpenField from \"../fields/FileOpenField\"\nimport palette from \"./palette\"\nimport {\n    tidyResolveFieldColumn,\n    tidyResolveFieldColumns,\n    tidySlice,\n} from \"../fields/tidy\"\nimport DataTableField from \"../fields/DataTableField\"\nimport DataPreviewField from \"../fields/DataPreviewField\"\nimport ScatterPlotField from \"../fields/chart/ScatterPlotField\"\nimport { importCSVFilesIntoWorkspace } from \"../../fs/fs\"\n\nconst DATA_ARRANGE_BLOCK = \"data_arrange\"\nconst DATA_SELECT_BLOCK = \"data_select\"\nconst DATA_DROP_BLOCK = \"data_drop\"\nconst DATA_FILTER_COLUMNS_BLOCK = \"data_filter_columns\"\nconst DATA_FILTER_STRING_BLOCK = \"data_filter_string\"\nconst DATA_MUTATE_COLUMNS_BLOCK = \"data_mutate_columns\"\nconst DATA_MUTATE_NUMBER_BLOCK = \"data_mutate_number\"\nconst DATA_SLICE_BLOCK = \"data_slice\"\nconst DATA_SUMMARIZE_BLOCK = \"data_summarize\"\nconst DATA_SUMMARIZE_BY_GROUP_BLOCK = \"data_summarize_by_group\"\nconst DATA_COUNT_BLOCK = \"data_count\"\nconst DATA_ADD_VARIABLE_CALLBACK = \"data_add_variable\"\nconst DATA_DATAVARIABLE_READ_BLOCK = \"data_dataset_read\"\nconst DATA_DATAVARIABLE_WRITE_BLOCK = \"data_dataset_write\"\nconst DATA_DATASET_BUILTIN_BLOCK = \"data_dataset_builtin\"\nconst DATA_ADD_DATASET_CALLBACK = \"data_add_dataset_variable\"\nconst DATA_TABLE_TYPE = \"DataTable\"\nconst DATA_BIN_BLOCK = \"data_bin\"\nconst DATA_CORRELATION_BLOCK = \"data_correlation\"\nconst DATA_LINEAR_REGRESSION_BLOCK = \"data_linear_regression\"\nconst DATA_LOAD_FILE_BLOCK = \"data_load_file\"\nconst DATA_SAVE_FILE_BLOCK = \"data_save_file\"\nconst DATA_COMMENT_BLOCK = \"data_comment_block\"\n\nconst [datasetColour, operatorsColour, computeColour, statisticsColour] =\n    palette()\nconst dataVariablesColour = \"%{BKY_VARIABLES_HUE}\"\nconst calcOptions = [\n    \"mean\",\n    \"median\",\n    \"min\",\n    \"max\",\n    \"sum\",\n    \"deviation\",\n    \"variance\",\n].map(n => [n, n])\nconst dataDsl: BlockDomainSpecificLanguage = {\n    id: \"dataScience\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: DATA_ARRANGE_BLOCK,\n            message0: \"arrange %1 %2\",\n            colour: operatorsColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"order\",\n                    options: [\n                        [\"ascending\", \"ascending\"],\n                        [\"descending\", \"descending\"],\n                    ],\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: any[]) => {\n                const column = tidyResolveFieldColumn(data, b, \"column\")\n                const order = b.getFieldValue(\"order\")\n                const descending = order === \"descending\"\n                if (!column) return Promise.resolve(data)\n                return postTransformData(<DataArrangeRequest>{\n                    type: \"arrange\",\n                    column,\n                    descending,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_DROP_BLOCK,\n            message0: \"drop %1 %2 %3\",\n            colour: operatorsColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column1\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column2\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column3\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            transformData: (b: Block, data: object[]) => {\n                const columns = [1, 2, 3]\n                    .map(column =>\n                        tidyResolveFieldColumn(data, b, `column${column}`)\n                    )\n                    .filter(c => !!c)\n                if (!columns?.length) return Promise.resolve(data)\n                return postTransformData(<DataDropRequest>{\n                    type: \"drop\",\n                    columns,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_SELECT_BLOCK,\n            message0: \"select %1 %2 %3 %4\",\n            colour: operatorsColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column1\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column2\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column3\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column4\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            transformData: (b: Block, data: object[]) => {\n                const columns = [1, 2, 3, 4]\n                    .map(column =>\n                        tidyResolveFieldColumn(data, b, `column${column}`)\n                    )\n                    .filter(c => !!c)\n                if (!columns?.length) return Promise.resolve(data)\n                return postTransformData(<DataSelectRequest>{\n                    type: \"select\",\n                    columns,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_FILTER_COLUMNS_BLOCK,\n            message0: \"filter %1 %2 %3\",\n            colour: operatorsColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column1\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"logic\",\n                    options: [\n                        [\">\", \"gt\"],\n                        [\"<\", \"lt\"],\n                        [\">=\", \"ge\"],\n                        [\"<=\", \"le\"],\n                        [\"==\", \"eq\"],\n                        [\"!=\", \"ne\"],\n                    ],\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column2\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            transformData: (b: Block, data: object[]) => {\n                const columns = [1, 2]\n                    .map(column =>\n                        tidyResolveFieldColumn(data, b, `column${column}`)\n                    )\n                    .filter(c => !!c)\n                const logic = b.getFieldValue(\"logic\")\n                if (columns.length !== 2) return Promise.resolve(data)\n                return postTransformData(<DataFilterColumnsRequest>{\n                    type: \"filter_columns\",\n                    columns,\n                    logic,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_FILTER_STRING_BLOCK,\n            message0: \"filter %1 %2 %3\",\n            colour: operatorsColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"logic\",\n                    options: [\n                        [\">\", \"gt\"],\n                        [\"<\", \"lt\"],\n                        [\">=\", \"ge\"],\n                        [\"<=\", \"le\"],\n                        [\"==\", \"eq\"],\n                        [\"!=\", \"ne\"],\n                    ],\n                },\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"rhs\",\n                    spellcheck: false,\n                    text: \"0\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            transformData: (b: Block, data: object[]) => {\n                const column = tidyResolveFieldColumn(data, b, \"column\")\n                const logic = b.getFieldValue(\"logic\")\n                const rhs = b.getFieldValue(\"rhs\")\n                if (!column) return Promise.resolve(data)\n                return postTransformData(<DataFilterStringRequest>{\n                    type: \"filter_string\",\n                    column,\n                    logic,\n                    rhs,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_MUTATE_COLUMNS_BLOCK,\n            message0: \"compute column %1 as %2 %3 %4\",\n            colour: computeColour,\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"newcolumn\",\n                    spellcheck: false,\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"lhs\",\n                    dataType: \"number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"logic\",\n                    options: [\n                        [\"+\", \"plus\"],\n                        [\"-\", \"minus\"],\n                        [\"*\", \"mult\"],\n                        [\"/\", \"div\"],\n                        [\">\", \"gt\"],\n                        [\"<\", \"lt\"],\n                        [\">=\", \"ge\"],\n                        [\"<=\", \"le\"],\n                        [\"==\", \"eq\"],\n                        [\"!=\", \"ne\"],\n                    ],\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"rhs\",\n                    dataType: \"number\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            transformData: (b: Block, data: object[]) => {\n                const newcolumn = b.getFieldValue(\"newcolumn\")\n                const lhs = tidyResolveFieldColumn(data, b, \"lhs\", {\n                    type: \"number\",\n                })\n                const rhs = tidyResolveFieldColumn(data, b, \"rhs\", {\n                    type: \"number\",\n                })\n                const logic = b.getFieldValue(\"logic\")\n                if (!newcolumn || !lhs || !rhs) return Promise.resolve(data)\n                return postTransformData(<DataMutateColumnsRequest>{\n                    type: \"mutate_columns\",\n                    newcolumn,\n                    lhs,\n                    rhs,\n                    logic,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_MUTATE_NUMBER_BLOCK,\n            message0: \"compute column %1 as %2 %3 %4\",\n            colour: computeColour,\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"newcolumn\",\n                    spellcheck: false,\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"lhs\",\n                    dataType: \"number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"logic\",\n                    options: [\n                        [\"+\", \"plus\"],\n                        [\"-\", \"minus\"],\n                        [\"*\", \"mult\"],\n                        [\"/\", \"div\"],\n                        [\">\", \"gt\"],\n                        [\"<\", \"lt\"],\n                        [\">=\", \"ge\"],\n                        [\"<=\", \"le\"],\n                        [\"==\", \"eq\"],\n                        [\"!=\", \"ne\"],\n                    ],\n                },\n                <NumberInputDefinition>{\n                    type: \"field_number\",\n                    name: \"rhs\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: object[]) => {\n                const newcolumn = b.getFieldValue(\"newcolumn\")\n                const lhs = tidyResolveFieldColumn(data, b, \"lhs\", {\n                    type: \"number\",\n                })\n                const rhs = b.getFieldValue(\"rhs\")\n                const logic = b.getFieldValue(\"logic\")\n                if (!newcolumn || !lhs) return Promise.resolve(data)\n                return postTransformData(<DataMutateNumberRequest>{\n                    type: \"mutate_number\",\n                    newcolumn,\n                    lhs,\n                    rhs,\n                    logic,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_SUMMARIZE_BLOCK,\n            message0: \"summarize %1 calculate %2\",\n            colour: computeColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                    dataType: \"number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"calc\",\n                    options: calcOptions,\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: any[]) => {\n                const columns = tidyResolveFieldColumns(data, b, \"column\", {\n                    type: \"number\",\n                })\n                const calc = b.getFieldValue(\"calc\")\n                return postTransformData(<DataSummarizeRequest>{\n                    type: \"summarize\",\n                    columns,\n                    calc,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_SUMMARIZE_BY_GROUP_BLOCK,\n            message0: \"group %1 by %2 calculate %3\",\n            colour: computeColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"by\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"calc\",\n                    options: calcOptions,\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: any[]) => {\n                const column = tidyResolveFieldColumn(data, b, \"column\")\n                const by = tidyResolveFieldColumn(data, b, \"by\")\n                const calc = b.getFieldValue(\"calc\")\n                if (!by) return Promise.resolve([])\n                return postTransformData(<DataSummarizeByGroupRequest>{\n                    type: \"summarize_by_group\",\n                    column,\n                    by,\n                    calc,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_SLICE_BLOCK,\n            message0: \"slice %1 rows from %2\",\n            colour: operatorsColour,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_number\",\n                    name: \"count\",\n                    min: 1,\n                    precision: 1,\n                    value: 100,\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"operator\",\n                    options: [\n                        [\"head\", \"head\"],\n                        [\"tail\", \"tail\"],\n                        [\"sample\", \"sample\"],\n                    ],\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: any[]) => {\n                const count = b.getFieldValue(\"count\")\n                const operator = b.getFieldValue(\"operator\")\n                return tidySlice(data, {\n                    sliceHead: operator === \"head\" ? count : undefined,\n                    sliceTail: operator === \"tail\" ? count : undefined,\n                    sliceSample: operator === \"sample\" ? count : undefined,\n                })\n            },\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: DATA_COUNT_BLOCK,\n            message0: \"count distinct %1\",\n            colour: computeColour,\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            dataPreviewField: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            transformData: (b: Block, data: any[]) => {\n                const column = tidyResolveFieldColumn(data, b, \"column\")\n                if (!column) return Promise.resolve([])\n                return postTransformData(<DataCountRequest>{\n                    type: \"count\",\n                    column,\n                    data,\n                })\n            },\n            template: \"meta\",\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_DATASET_BUILTIN_BLOCK,\n            message0: \"dataset %1\",\n            tooltip: \"Loads a builtin dataset\",\n            args0: [\n                {\n                    type: BuiltinDataSetField.KEY,\n                    name: \"dataset\",\n                },\n            ],\n            inputsInline: false,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: datasetColour,\n            template: \"meta\",\n            dataPreviewField: true,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_DATAVARIABLE_READ_BLOCK,\n            message0: \"dataset variable %1\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"data\",\n                    variable: \"data\",\n                    variableTypes: [DATA_TABLE_TYPE],\n                    defaultType: DATA_TABLE_TYPE,\n                },\n            ],\n            inputsInline: false,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: dataVariablesColour,\n            template: \"meta\",\n            dataPreviewField: \"after\",\n            transformData: (b: Block) => {\n                const services = resolveBlockServices(b)\n                const data = services?.data\n                return Promise.resolve(data)\n            },\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_DATAVARIABLE_WRITE_BLOCK,\n            message0: \"store in dataset variable %1\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"data\",\n                    variable: \"data\",\n                    variableTypes: [DATA_TABLE_TYPE],\n                    defaultType: DATA_TABLE_TYPE,\n                },\n            ],\n            inputsInline: false,\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: dataVariablesColour,\n            template: \"meta\",\n            dataPreviewField: \"after\",\n            transformData: (b: Block, data: object[]) => {\n                // grab the variable from the block\n                const variable = b.getFieldValue(\"data\")\n                if (!variable) return Promise.resolve(undefined)\n                const readBlocks = b.workspace.getBlocksByType(\n                    DATA_DATAVARIABLE_READ_BLOCK,\n                    false\n                )\n                const readServices = readBlocks\n                    .filter(b => b.isEnabled())\n                    .filter(b => b.getFieldValue(\"data\") === variable)\n                    .map(b => (b as BlockWithServices).jacdacServices)\n                    .filter(services => !!services)\n                readServices.forEach(services => (services.data = data))\n                return Promise.resolve(data)\n            },\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_BIN_BLOCK,\n            message0: \"bin by %1\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"column\",\n                    dataType: \"number\",\n                },\n            ],\n            inputsInline: false,\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: computeColour,\n            template: \"meta\",\n            dataPreviewField: true,\n            transformData: async (b: Block, data: object[]) => {\n                const column = tidyResolveFieldColumn(data, b, \"column\", {\n                    type: \"number\",\n                })\n                if (!column) return Promise.resolve([])\n                return postTransformData(<DataBinRequest>{\n                    type: \"bin\",\n                    column,\n                    data,\n                })\n            },\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_CORRELATION_BLOCK,\n            message0: \"correlation of %1 %2 %3 %4 %5\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"x\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"y\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataPreviewField.KEY,\n                    name: \"preview\",\n                    compare: true,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: DataTableField.KEY,\n                    name: \"table\",\n                    transformed: true,\n                    small: true,\n                },\n            ],\n            inputsInline: false,\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: statisticsColour,\n            template: \"meta\",\n            dataPreviewField: false,\n            passthroughData: true,\n            transformData: async (b: Block, data: object[]) => {\n                const column1 = tidyResolveFieldColumn(data, b, \"x\", {\n                    type: \"number\",\n                })\n                const column2 = tidyResolveFieldColumn(data, b, \"y\", {\n                    type: \"number\",\n                })\n                if (!column1 || !column2) return Promise.resolve([])\n                return postTransformData(<DataCorrelationRequest>{\n                    type: \"correlation\",\n                    column1,\n                    column2,\n                    data,\n                })\n            },\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: DATA_LINEAR_REGRESSION_BLOCK,\n            message0: \"linear regression of x %1 y %2 %3 %4 %5\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"x\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"y\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataPreviewField.KEY,\n                    name: \"preview\",\n                    compare: true,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: ScatterPlotField.KEY,\n                    name: \"plot\",\n                    linearRegression: true,\n                },\n            ],\n            inputsInline: false,\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: statisticsColour,\n            template: \"meta\",\n            dataPreviewField: false,\n            passthroughData: true,\n            transformData: async (b: Block, data: object[]) => {\n                const column1 = tidyResolveFieldColumn(data, b, \"x\", {\n                    type: \"number\",\n                })\n                const column2 = tidyResolveFieldColumn(data, b, \"y\", {\n                    type: \"number\",\n                })\n                if (!column1 || !column2) return Promise.resolve([])\n                return postTransformData(<DataLinearRegressionRequest>{\n                    type: \"linear_regression\",\n                    column1,\n                    column2,\n                    data,\n                })\n            },\n        },\n        {\n            kind: \"block\",\n            type: DATA_LOAD_FILE_BLOCK,\n            message0: \"load dataset from file %1\",\n            args0: [\n                {\n                    type: FileOpenField.KEY,\n                    name: \"file\",\n                },\n            ],\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: datasetColour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: true,\n            transformData: identityTransformData,\n        },\n        {\n            kind: \"block\",\n            type: DATA_SAVE_FILE_BLOCK,\n            message0: \"save dataset to file %1\",\n            args0: [\n                {\n                    type: FileSaveField.KEY,\n                    name: \"file\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: datasetColour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: \"after\",\n            transformData: async (block, data) => {\n                const file = block.getField(\"file\") as FileSaveField\n                if (file?.fileHandle && data)\n                    await saveCSV(file.fileHandle, data)\n                return data\n            },\n        },\n        {\n            kind: \"block\",\n            type: DATA_COMMENT_BLOCK,\n            message0: \"comment %1 %2 %3\",\n            args0: [\n                {\n                    type: DataPreviewField.KEY,\n                    name: \"preview\",\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: \"field_multilinetext\",\n                    name: \"text\",\n                    text: \"And then...\",\n                    spellcheck: true,\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour: operatorsColour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n    ],\n    createCategory: () => [\n        <SeparatorDefinition>{\n            kind: \"sep\",\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Data sets\",\n            colour: datasetColour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_DATASET_BUILTIN_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_LOAD_FILE_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_SAVE_FILE_BLOCK,\n                },\n                <ButtonDefinition>{\n                    kind: \"button\",\n                    text: \"Import dataset\",\n                    callbackKey: DATA_ADD_DATASET_CALLBACK,\n                    callback: (workspace: Workspace) => {\n                        const services = resolveWorkspaceServices(workspace)\n                        const directory = services?.workingDirectory\n                        if (!directory)\n                            alert(\n                                \"You need to open a directory to import a dataset.\"\n                            )\n                        else {\n                            importCSVFilesIntoWorkspace(directory.handle)\n                                .then(() => directory.sync())\n                                .then(() => alert(\"Datasets imported!\"))\n                        }\n                    },\n                },\n            ],\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Organize\",\n            colour: operatorsColour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_COMMENT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_ARRANGE_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_SELECT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_DROP_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_FILTER_COLUMNS_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_FILTER_STRING_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_SLICE_BLOCK,\n                },\n            ],\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Compute\",\n            colour: computeColour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_MUTATE_COLUMNS_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_MUTATE_NUMBER_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_SUMMARIZE_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_SUMMARIZE_BY_GROUP_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_COUNT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_BIN_BLOCK,\n                },\n            ],\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Statistics\",\n            colour: statisticsColour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_CORRELATION_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_LINEAR_REGRESSION_BLOCK,\n                },\n            ],\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Data variables\",\n            colour: dataVariablesColour,\n            contents: [\n                <ButtonDefinition>{\n                    kind: \"button\",\n                    text: `Add dataset variable`,\n                    callbackKey: DATA_ADD_VARIABLE_CALLBACK,\n                    callback: workspace =>\n                        Variables.createVariableButtonHandler(\n                            workspace,\n                            null,\n                            DATA_TABLE_TYPE\n                        ),\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_DATAVARIABLE_READ_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: DATA_DATAVARIABLE_WRITE_BLOCK,\n                },\n            ],\n        },\n    ],\n    createWorkspaceChangeListener: () => (event: Events.Abstract) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { type, blockId } = event as any\n        const isBlockChange =\n            type === Events.BLOCK_CHANGE || type === Events.BLOCK_MOVE\n\n        if (isBlockChange || type === Events.FINISHED_LOADING) {\n            const workspace = event.getEventWorkspace_()\n            if (isBlockChange) {\n                const block = workspace.getBlockById(blockId)\n                if (block?.type !== DATA_DATAVARIABLE_WRITE_BLOCK) return // nothing so see here\n            }\n\n            // collect set variables blocks,\n            // and make sure only 1 of them is enabled\n            const setvars = workspace\n                .getBlocksByType(DATA_DATAVARIABLE_WRITE_BLOCK, true)\n                .filter(b => b.isEnabled())\n\n            // mark and sweep variables, leaving one 1 enabled per kind\n            const marked = {}\n            while (setvars.length) {\n                const block = setvars.shift()\n                const variable = (\n                    block.getField(\"data\") as FieldVariable\n                ).getVariable()\n                if (variable) {\n                    const name = variable.name\n                    if (marked[name]) {\n                        if (block.isEnabled()) {\n                            block.setEnabled(false)\n                            block.unplug(true)\n                        }\n                    } else marked[name] = true\n                }\n            }\n        }\n    },\n}\nexport default dataDsl\n\nexport function resolveUsedDataVariables(block: Block): {\n    reads?: string[]\n    write?: string\n} {\n    const { type } = block\n    if (type === DATA_DATAVARIABLE_READ_BLOCK) {\n        const field = block.getField(\"data\") as FieldVariable\n        const variable = field.getVariable()\n        if (variable)\n            return {\n                reads: [variable.name],\n            }\n    } else if (type === DATA_DATAVARIABLE_WRITE_BLOCK) {\n        const field = block.getField(\"data\") as FieldVariable\n        const variable = field.getVariable()\n        if (variable)\n            return {\n                write: variable.name,\n            }\n    }\n\n    return {}\n}\n","import { Chip } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport FileSystemContext from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FileSystemChip() {\n    const { fileSystem, showDirectoryPicker } = useContext(FileSystemContext)\n    const root = useChange(fileSystem, _ => _?.root)\n    const handleOpenDirectory = showDirectoryPicker\n    const handleCloseDirectory = () => (fileSystem.root = undefined)\n\n    if (!fileSystem) return null\n\n    return (\n        <Chip\n            clickable\n            avatar={<OpenInBrowserIcon />}\n            label={root?.name || \"open directory\"}\n            onClick={handleOpenDirectory}\n            onDelete={root ? handleCloseDirectory : undefined}\n        />\n    )\n}\n","import {\n    Chip,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    TextField,\n    DialogActions,\n    Button,\n} from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useId } from \"react-use-id-hook\"\nimport FileSystemContext from \"../FileSystemContext\"\n\nexport default function FileNewFileChip(props: {\n    name?: string\n    content: string\n    label?: string\n    extension?: string\n}) {\n    const {\n        name: newFileName,\n        content: newFileContent,\n        label,\n        extension,\n    } = props\n    const { fileSystem } = useContext(FileSystemContext)\n    const [open, setOpen] = useState(false)\n    const [value, setValue] = useState(\"\")\n    const valueId = useId()\n\n    const handleOpen = () => {\n        setValue(\"\")\n        setOpen(true)\n    }\n    const handleOk = async () => {\n        setOpen(false)\n        let name = value.toLocaleLowerCase().replace(/\\s+/g, \"\")\n        if (newFileName)\n            await fileSystem.createWorkingDirectory(\n                name,\n                newFileName,\n                newFileContent\n            )\n        else {\n            if (extension) name += `.${extension}`\n            const d = fileSystem.workingDirectory || fileSystem.root\n            const f = await d.fileAsync(name, { create: true })\n            await f.write(newFileContent)\n            fileSystem.workingFile = f\n        }\n    }\n    const handleCancel = () => setOpen(false)\n    const handleValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n    }\n\n    return (\n        <>\n            <Chip\n                clickable\n                label={label || \"new...\"}\n                icon={<AddIcon />}\n                onClick={handleOpen}\n            />\n            <Dialog open={open} fullWidth={true}>\n                <DialogContent>\n                    <DialogContentText>Choose a project name</DialogContentText>\n                    <TextField\n                        id={valueId}\n                        value={value}\n                        label=\"Value\"\n                        fullWidth={true}\n                        onChange={handleValueChange}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" onClick={handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!value}\n                        onClick={handleOk}\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n","import { Chip } from \"@material-ui/core\"\nimport React from \"react\"\nimport { FileSystemNode } from \"./fsdom\"\n\nexport default function FileSystemNodeChip(props: {\n    node: FileSystemNode\n    selected?: boolean\n    onClick: () => void\n}) {\n    const { node, selected, onClick } = props\n    const { name } = node\n    return (\n        <Chip\n            clickable\n            label={name.replace(/\\.json$/i, \"\")}\n            color={selected ? \"primary\" : undefined}\n            onClick={onClick}\n        />\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext, useRef } from \"react\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport FileSystemContext from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport FileSystemChip from \"./FileSystemChip\"\nimport FileNewFileChip from \"./FileNewFileChip\"\nimport FileSystemNodeChip from \"./FileSystemNodeChip\"\n\nexport default function FileTabs(props: {\n    newFileName?: string\n    newFileExtension?: string\n    newFileContent?: string\n    newFileLabel?: string\n    hideDirectories?: boolean\n    hideFiles?: boolean\n    directoryFilter?: (directory: string) => boolean\n    fileFilter?: (file: string) => boolean\n}) {\n    const {\n        newFileName,\n        newFileContent,\n        hideDirectories,\n        hideFiles,\n        directoryFilter,\n        fileFilter,\n        newFileLabel,\n        newFileExtension\n    } = props\n    const { fileSystem } = useContext(FileSystemContext)\n    const root = useChange(fileSystem, _ => _?.root)\n    const workingDirectory = useChange(fileSystem, _ => _?.workingDirectory)\n    const workingFile = useChange(fileSystem, _ => _?.workingFile)\n    const directories = useChange(root, _ =>\n        _?.directories?.filter(d => !directoryFilter || directoryFilter(d.name))\n    )\n    const files = useChange(root, _ =>\n        _?.files?.filter(d => !fileFilter || fileFilter(d.name))\n    )\n    const gridRef = useRef()\n    const keyboardProps = useKeyboardNavigationProps(gridRef.current)\n    const handleDirectorySelected = handle => () =>\n        (fileSystem.workingDirectory = handle)\n    const handleFileSelected = handle => () => (fileSystem.workingFile = handle)\n\n    if (!fileSystem) return null\n\n    return (\n        <Grid ref={gridRef} container spacing={1} {...keyboardProps}>\n            <Grid item>\n                <FileSystemChip />\n            </Grid>\n            {!hideDirectories &&\n                directories?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingDirectory}\n                            onClick={handleDirectorySelected(node)}\n                        />\n                    </Grid>\n                ))}\n            {!hideFiles &&\n                files?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingFile}\n                            onClick={handleFileSelected(node)}\n                        />\n                    </Grid>\n                ))}\n            {root && newFileContent && (\n                <Grid item>\n                    <FileNewFileChip\n                        name={newFileName}\n                        content={newFileContent}\n                        label={newFileLabel}\n                        extension={newFileExtension}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React, { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\";\n\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\n\nexport default function useArrowKeys(options: {\n    onLeft?: () => void,\n    onRight?: () => void,\n    onUp?: () => void,\n    onDown?: () => void,\n    symmetric?: boolean;\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options;\n\n    if (!onLeft && !onUp && !onRight && !onDown)\n        return undefined;\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft)\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e);\n        const handler = handlers[charCode];\n        if (handler) {\n            e.preventDefault();\n            handler();\n        }\n    }\n}\n","import React from \"react\"\n\nexport default function useKeyboardNavigation(parentRef: Element) {\n    const query = '[tabindex=\"0\"]';\n    const onMove = (offset: number) => () => {\n        console.log('keyboard move', { offset })\n        const focusable = Array.from<SVGElement>(parentRef?.querySelectorAll(query) || []);\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement);\n            const next = ((me + offset) + focusable.length) % focusable.length;\n            focusable[next].focus();\n        }\n    }\n    return onMove;\n}","import useArrowKeys from \"./useArrowKeys\";\nimport useKeyboardNavigation from \"./useKeyboardNavigation\";\n\nexport default function useKeyboardNavigationProps(parentRef: Element, vertical?: boolean) {\n    const onMove = useKeyboardNavigation(parentRef);\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    });\n\n    return {\n        onKeyDown: parentRef && onKeyDown\n    }\n}"],"names":["Events","Variables","alert","BuiltinDataSetField","DataColumnChooserField","DATA_SCIENCE_STATEMENT_TYPE","identityTransformData","postTransformData","resolveBlockServices","resolveWorkspaceServices","FileSaveField","saveCSV","FileOpenField","palette","tidyResolveFieldColumn","tidyResolveFieldColumns","tidySlice","DataTableField","DataPreviewField","ScatterPlotField","importCSVFilesIntoWorkspace","DATA_ARRANGE_BLOCK","DATA_SELECT_BLOCK","DATA_DROP_BLOCK","DATA_FILTER_COLUMNS_BLOCK","DATA_FILTER_STRING_BLOCK","DATA_MUTATE_COLUMNS_BLOCK","DATA_MUTATE_NUMBER_BLOCK","DATA_SLICE_BLOCK","DATA_SUMMARIZE_BLOCK","DATA_SUMMARIZE_BY_GROUP_BLOCK","DATA_COUNT_BLOCK","DATA_ADD_VARIABLE_CALLBACK","DATA_DATAVARIABLE_READ_BLOCK","DATA_DATAVARIABLE_WRITE_BLOCK","DATA_DATASET_BUILTIN_BLOCK","DATA_ADD_DATASET_CALLBACK","DATA_TABLE_TYPE","DATA_BIN_BLOCK","DATA_CORRELATION_BLOCK","DATA_LINEAR_REGRESSION_BLOCK","DATA_LOAD_FILE_BLOCK","DATA_SAVE_FILE_BLOCK","DATA_COMMENT_BLOCK","datasetColour","operatorsColour","computeColour","statisticsColour","dataVariablesColour","calcOptions","map","n","dataDsl","id","createBlocks","kind","type","message0","colour","args0","KEY","name","options","previousStatement","nextStatement","dataPreviewField","transformData","b","data","column","order","getFieldValue","descending","Promise","resolve","template","columns","filter","c","length","logic","spellcheck","text","rhs","dataType","newcolumn","lhs","calc","by","min","precision","value","count","operator","sliceHead","undefined","sliceTail","sliceSample","tooltip","inputsInline","variable","variableTypes","defaultType","services","readBlocks","workspace","getBlocksByType","readServices","isEnabled","jacdacServices","forEach","compare","transformed","small","passthroughData","column1","column2","linearRegression","block","file","getField","fileHandle","createCategory","contents","callbackKey","callback","directory","workingDirectory","handle","then","sync","createVariableButtonHandler","createWorkspaceChangeListener","event","blockId","isBlockChange","BLOCK_CHANGE","BLOCK_MOVE","FINISHED_LOADING","getEventWorkspace_","getBlockById","setvars","marked","shift","getVariable","setEnabled","unplug","resolveUsedDataVariables","field","reads","write","Chip","React","useContext","OpenInBrowserIcon","FileSystemContext","useChange","FileSystemChip","fileSystem","showDirectoryPicker","root","_","handleOpenDirectory","handleCloseDirectory","Dialog","DialogContent","DialogContentText","TextField","DialogActions","Button","useState","AddIcon","useId","FileNewFileChip","props","newFileName","content","newFileContent","label","extension","open","setOpen","setValue","valueId","handleOpen","handleOk","toLocaleLowerCase","replace","createWorkingDirectory","d","f","fileAsync","create","workingFile","handleCancel","handleValueChange","target","FileSystemNodeChip","node","selected","onClick","Grid","useRef","useKeyboardNavigationProps","FileTabs","hideDirectories","hideFiles","directoryFilter","fileFilter","newFileLabel","newFileExtension","directories","files","gridRef","keyboardProps","current","handleDirectorySelected","handleFileSelected","keyCodeFromEvent","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","useArrowKeys","onLeft","onUp","onRight","onDown","symmetric","handlers","e","charCode","handler","preventDefault","useKeyboardNavigation","parentRef","query","onMove","offset","console","log","focusable","Array","from","querySelectorAll","me","findIndex","document","activeElement","next","focus","vertical","onKeyDown"],"sourceRoot":""}