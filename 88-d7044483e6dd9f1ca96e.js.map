{"version":3,"sources":["webpack:///./src/components/hooks/useArrowKeys.ts","webpack:///./src/components/hooks/useKeyboardNavigation.ts","webpack:///./src/components/hooks/useKeyboardNavigationProps.ts","webpack:///./src/components/hooks/usePlayTone.ts","webpack:///./src/components/dashboard/DashboardBuzzer.tsx"],"names":["LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","useArrowKeys","options","onLeft","onUp","onRight","onDown","symmetric","undefined","handlers","e","charCode","keyCodeFromEvent","handler","preventDefault","useKeyboardNavigation","parentRef","query","onMove","offset","console","log","focusable","Array","from","querySelectorAll","length","me","findIndex","f","document","activeElement","next","focus","useKeyboardNavigationProps","vertical","onKeyDown","VOLUME_GAIN","usePlayTone","defaultVolume","contextRef","useRef","volumeRef","useEffect","current","close","setVolume","v","isNaN","gain","value","playTone","frequency","duration","tone","createOscillator","type","connect","start","stop","currentTime","onClickActivateAudioContext","ctx","window","AudioContext","webkitAudioContext","buffer","createBuffer","source","createBufferSource","destination","volumeNode","createGain","error","useStyles","makeStyles","createStyles","btn","minWidth","padding","DashboardBuzzer","props","service","classes","gridRef","host","useServiceHost","color","volumeRegister","register","BuzzerReg","Volume","useRegisterUnpackedValue","volume","keyboardProps","subscribe","BuzzerServiceHost","PLAY_TONE","args","notes","name","sendPlayTone","vol","period","duty","data","jdpack","sendCmdAsync","BuzzerCmd","PlayTone","handlePointerEnter","ev","buttons","handlePlayTone","handleChange","newValue","sendSetPackedAsync","map","note"],"mappings":"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","file":"88-d7044483e6dd9f1ca96e.js","sourcesContent":["import React, { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\";\n\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\n\nexport default function useArrowKeys(options: {\n    onLeft?: () => void,\n    onRight?: () => void,\n    onUp?: () => void,\n    onDown?: () => void,\n    symmetric?: boolean;\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options;\n\n    if (!onLeft && !onUp && !onRight && !onDown)\n        return undefined;\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft)\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e);\n        const handler = handlers[charCode];\n        if (handler) {\n            e.preventDefault();\n            handler();\n        }\n    }\n}\n","import React from \"react\"\n\nexport default function useKeyboardNavigation(parentRef: Element) {\n    const query = '[tabindex=\"0\"]';\n    const onMove = (offset: number) => () => {\n        console.log('keyboard move', { offset })\n        const focusable = Array.from<SVGElement>(parentRef?.querySelectorAll(query) || []);\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement);\n            const next = ((me + offset) + focusable.length) % focusable.length;\n            focusable[next].focus();\n        }\n    }\n    return onMove;\n}","import useArrowKeys from \"./useArrowKeys\";\nimport useKeyboardNavigation from \"./useKeyboardNavigation\";\n\nexport default function useKeyboardNavigationProps(parentRef: Element, vertical?: boolean) {\n    const onMove = useKeyboardNavigation(parentRef);\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    });\n\n    return {\n        onKeyDown: parentRef && onKeyDown\n    }\n}","import { useEffect, useRef, useState } from \"react\";\n\nconst VOLUME_GAIN = 0.5;\n\nexport default function usePlayTone(defaultVolume?: number) {\n    const contextRef = useRef<AudioContext>();\n    const volumeRef = useRef<GainNode>();\n\n    // final cleanup\n    useEffect(() => () => contextRef.current?.close(), [])\n\n    const setVolume = (v: number) => {\n        if (volumeRef.current && !isNaN(v)) {\n            volumeRef.current.gain.value = v * VOLUME_GAIN;\n        }\n    }\n\n    const playTone = (frequency: number, duration: number) => {\n        if (!contextRef.current) return;\n        try {\n            const tone = contextRef.current.createOscillator();\n            tone.type = \"sawtooth\";\n            tone.connect(volumeRef.current);\n            tone.frequency.value = frequency; // update frequency\n            tone.start(); // start and stop\n            tone.stop(contextRef.current.currentTime + duration / 1000);\n        }\n        catch (e) {\n            console.log(e)\n        }\n    }\n\n    // needs to be initiated in onClick on safari mobile\n    const onClickActivateAudioContext = () => {\n        if (contextRef.current) return;\n\n        try {\n            const ctx = contextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n\n            // play silence sound within onlick to unlock it\n            const buffer = ctx.createBuffer(1, 1, 22050);\n            const source = ctx.createBufferSource();\n            source.buffer = buffer;\n            source.connect(ctx.destination);\n            source.start();\n\n            // output node with volume\n            const volumeNode = volumeRef.current = ctx.createGain();\n            volumeNode.connect(ctx.destination);\n            volumeNode.gain.value = (defaultVolume !== undefined ? defaultVolume : 0.2) * VOLUME_GAIN;\n        }\n        catch (e) {\n            contextRef.current = undefined;\n            volumeRef.current = undefined;\n            console.error(e);\n        }\n    }\n\n    return {\n        onClickActivateAudioContext,\n        setVolume,\n        playTone\n    }\n}\n","\nimport { Button, createStyles, Grid, makeStyles, Slider } from \"@material-ui/core\";\nimport React, { useEffect, useRef } from \"react\";\nimport { BuzzerCmd, BuzzerReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\";\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport usePlayTone from \"../hooks/usePlayTone\";\nimport BuzzerServiceHost from \"../../../jacdac-ts/src/hosts/buzzerservicehost\";\n\nconst useStyles = makeStyles(() => createStyles({\n    btn: {\n        minWidth: \"1em\",\n        padding: \"1em 0.75em 1em 0.75em\"\n    }\n}));\n\nexport default function DashboardBuzzer(props: DashboardServiceProps) {\n    const { service } = props;\n    const classes = useStyles();\n    const gridRef = useRef<HTMLDivElement>();\n    const host = useServiceHost<BuzzerServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const volumeRegister = service.register(BuzzerReg.Volume);\n    const [volume] = useRegisterUnpackedValue<[number]>(volumeRegister)\n    const keyboardProps = useKeyboardNavigationProps(gridRef.current)\n    const { playTone, setVolume, onClickActivateAudioContext } = usePlayTone(volume);\n\n    // listen for playTone commands from the buzzer\n    useEffect(() => host?.subscribe<[number, number]>(BuzzerServiceHost.PLAY_TONE, args => {\n        playTone?.(args[0], args[1])\n    }), [host]);\n\n    const notes = [\n        { name: \"C\", frequency: 261.64 },\n        { name: \"D\", frequency: 293.68 },\n        { name: \"E\", frequency: 329.64 },\n        { name: \"F\", frequency: 349.24 },\n        { name: \"G\", frequency: 392.00 },\n        { name: \"A\", frequency: 440 },\n        { name: \"B\", frequency: 493.92 },\n    ];\n    const sendPlayTone = async (f: number) => {\n        if (host)\n            onClickActivateAudioContext(); // enable audio context within click handler\n        const vol = 1;\n        const period = 1000000 / f;\n        const duty = period * vol / 2;\n        const duration = 400;\n        const data = jdpack<[number, number, number]>(\"u16 u16 u16\", [period, duty, duration])\n        await service.sendCmdAsync(BuzzerCmd.PlayTone, data)\n    }\n    const handlePointerEnter = (f: number) => (ev: any) => {\n        if (ev.buttons)\n            sendPlayTone(f)\n    }\n    const handlePlayTone = (f: number) => () => sendPlayTone(f)\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        volumeRegister.sendSetPackedAsync(\"u0.8\", [newValue], true);\n    }\n    useEffect(() => setVolume(volume), [volume]);\n\n    return <Grid ref={gridRef} container alignItems=\"center\" alignContent=\"space-between\">\n        {notes.map(note => <Grid key={note.frequency} item xs><Button\n            className={classes.btn}\n            size=\"small\"\n            variant=\"outlined\"\n            onPointerEnter={handlePointerEnter(note.frequency)}\n            onPointerDown={handlePlayTone(note.frequency)}\n            {...keyboardProps}\n        >{note.name}</Button>\n        </Grid>)}\n        {volume !== undefined && <Grid item xs={12}>\n            <Slider\n                valueLabelDisplay=\"off\"\n                min={0} max={1} step={0.05}\n                aria-label=\"volume\"\n                value={volume}\n                color={color}\n                onChange={handleChange}\n            />\n        </Grid>}\n    </Grid>\n}\n"],"sourceRoot":""}