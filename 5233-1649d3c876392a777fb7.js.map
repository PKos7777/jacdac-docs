{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardHIDMouse.tsx"],"names":["useStyles","makeStyles","theme","createStyles","capture","cursor","borderColor","palette","primary","main","action","active","DashboardHIDMouse","props","service","classes","server","useServiceServer","useState","observed","setObserved","sendButton","buttons","event","data","jdpack","sendCmdAsync","HidMouseCmd","sendMove","dx","dy","sendWheel","serverValue","useChange","_","lastCommand","value","preview","handleMouseDown","ev","renderHidMouseButtons","handleMouseUp","handleKeyDown","stopPropagation","preventDefault","key","HidMouseButton","HidMouseButtonEvent"],"mappings":"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","file":"5233-1649d3c876392a777fb7.js","sourcesContent":["import React, { KeyboardEvent, MouseEvent, useState } from \"react\"\nimport { createStyles, Grid, makeStyles, Typography } from \"@material-ui/core\"\nimport {\n    HidMouseButton,\n    HidMouseButtonEvent,\n    HidMouseCmd,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport HIDMouseServer, {\n    renderHidMouseButtons,\n} from \"../../../jacdac-ts/src/servers/hidmouseserver\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        capture: {\n            cursor: \"pointer\",\n            \"&:hover\": {\n                borderColor: theme.palette.primary.main,\n            },\n            \"&:focus\": {\n                borderColor: theme.palette.action.active,\n            },\n        },\n    })\n)\n\nexport default function DashboardHIDMouse(props: DashboardServiceProps) {\n    const { service } = props\n    const classes = useStyles()\n    const server = useServiceServer<HIDMouseServer>(service)\n    const [observed, setObserved] = useState(\"\")\n    const sendButton = async (\n        buttons: HidMouseButton,\n        event: HidMouseButtonEvent\n    ) => {\n        const data = jdpack<[HidMouseButton, HidMouseButtonEvent]>(\"u16 u8\", [\n            buttons,\n            event,\n        ])\n        await service.sendCmdAsync(HidMouseCmd.SetButton, data)\n    }\n    const sendMove = async (dx: number, dy: number) => {\n        const data = jdpack<[number, number, number]>(\"i16 i16 u16\", [\n            dx,\n            dy,\n            100,\n        ])\n        await service.sendCmdAsync(HidMouseCmd.Move, data)\n    }\n    const sendWheel = async (dy: number) => {\n        const data = jdpack<[number, number]>(\"i16 u16\", [dy, 100])\n        await service.sendCmdAsync(HidMouseCmd.Wheel, data)\n    }\n    const serverValue = useChange(server, _ => _?.lastCommand)\n    const value = serverValue || \"...\"\n    const preview = serverValue || observed\n    const handleMouseDown = (ev: MouseEvent<HTMLPreElement>) => {\n        const { buttons } = ev\n        setObserved(`set button ${renderHidMouseButtons(buttons)} down`)\n    }\n    const handleMouseUp = (ev: MouseEvent<HTMLPreElement>) => {\n        const { buttons } = ev\n        setObserved(`set button ${renderHidMouseButtons(buttons)} up`)\n    }\n    const handleKeyDown = async (ev: KeyboardEvent<HTMLPreElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        const { key } = ev\n        switch (key) {\n            case \"l\":\n                sendButton(HidMouseButton.Left, HidMouseButtonEvent.Click)\n                break\n            case \"r\":\n                sendButton(HidMouseButton.Right, HidMouseButtonEvent.Click)\n                break\n            case \"m\":\n                sendButton(HidMouseButton.Middle, HidMouseButtonEvent.Click)\n                break\n            case \"ArrowRight\":\n                sendMove(10, 0)\n                break\n            case \"ArrowLeft\":\n                sendMove(-10, 0)\n                break\n            case \"ArrowUp\":\n                sendMove(0, -10)\n                break\n            case \"ArrowDown\":\n                sendMove(0, 10)\n                break\n            case \"w\":\n                sendWheel(-10)\n                break\n            case \"s\":\n                sendWheel(10)\n                break\n        }\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <pre\n                    className={classes.capture}\n                    tabIndex={0}\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onKeyDown={handleKeyDown}\n                >\n                    {value || \"...\"}\n                </pre>\n                <Typography variant=\"caption\">\n                    focus and type l(eft), r(ight), m(iddle) for buttons, arrow\n                    keys to move, w(heel up), d(wheel down) for the wheel\n                </Typography>\n            </Grid>\n            {preview && (\n                <Grid item xs={12}>\n                    <Typography variant=\"caption\" component=\"pre\">\n                        mouse preview: {preview || \"...\"}\n                    </Typography>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"sourceRoot":""}