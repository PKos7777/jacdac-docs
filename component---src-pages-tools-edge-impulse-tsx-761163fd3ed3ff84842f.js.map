{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/Accordion.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/CheckCircleOutline.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/ExpandMore.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionActions/AccordionActions.js","webpack://jacdac-docs/./src/components/ApiKeyAccordion.tsx","webpack://jacdac-docs/./src/components/ReadingFieldGrid.tsx","webpack://jacdac-docs/./src/pages/tools/edge-impulse.tsx"],"names":["ApiKeyAccordion","props","apiName","validateKey","instructions","title","useDbValue","apiKey","value","setApiKey","setValue","apiKeyId","useId","useState","key","setKey","expanded","setExpanded","validated","setValidated","useSnackbar","enqueueSnackbar","useEffectAsync","mounted","statusCode","undefined","handleApiChange","event","target","handleSave","handleReset","handleExpanded","display","useStyles","makeStyles","createStyles","vmiddle","verticalAlign","ReadingFieldGridItem","register","handleRegisterCheck","recording","registerChecked","liveDataSet","gridBreakpoints","useGridBreakpoints","classes","deviceName","useDeviceName","service","device","handleCheck","id","name","fields","map","field","color","colorOf","ReadingFieldGrid","readingRegisters","registerIdsChecked","indexOf","EDGE_IMPULSE_API_KEY","IDLE","STARTING","SAMPLING","UPLOADING","SAMPLING_STATE","EdgeImpulseClient","aggregator","inputRegisters","palette","connectionState","DISCONNECT","samplingState","handleMessage","bind","handleOpen","handleError","handleReport","handlePing","aggregatorClient","SensorAggregatorClient","subscribeSample","mount","disconnect","unmount","clearSampling","_pingInterval","clearInterval","_ws","w","close","e","console","debug","setConnectionState","state","emit","CONNECTION_STATE","log","setSamplingState","CHANGE","send","msg","JSON","stringify","resolveFirmwareIdentifier","firmwareIdentifier","deviceSpec","deviceSpecificationFromFirmwareIdentifier","_hello","version","deviceId","deviceType","toString","connection","sensors","reg","serviceName","serviceClass","join","maxSampleLengthS","frequencies","hello","reconnect","connect","data","pong","parse","ERROR","err","CONNECT","sample","startSampling","row","connected","sampling","some","r","bus","timestamp","_sample","startTimestamp","lastProgressTimestamp","sampleStarted","ds","dataSet","addRow","REPORT_RECEIVE","PROGRESS","progress","length","stopSampling","uploadData","payload","protected","ver","alg","iat","Date","now","signature","device_name","device_type","interval_ms","interval","headers","h","i","units","values","fetch","path","method","label","body","then","resp","text","filename","generatedFilename","finally","sampleFinished","ev","FieldDataSet","unsubscribers","aggregatorConfig","samplingInterval","samplesInWindow","inputs","serviceIndex","setInputs","collect","forEach","unsub","CONNECTING","WebSocket","onmessage","onopen","onerror","setInterval","currentProjectInfo","valid","apiFetch","rsj","success","errorStatus","projectId","projects","project","API_ROOT","url","options","Accept","status","error","statusText","json","message","deviceInfo","renameDevice","JDClient","ApiKeyManager","useEdgeImpulseProjectInfo","info","setInfo","ProjectInfo","disabled","dataSummary","dataCount","logo","ModelDownloadButton","setModel","theme","useTheme","downloading","setDownloading","setError","download","downloads","find","type","handleDownload","blob","res","readBlobToUint8Array","bytes","spacing","link","AggregatorCard","selected","onChecked","handleChecked","Acquisition","client","setClient","samplingProgress","setSamplingProgress","setDeviceInfo","useChartPalette","generatedSampleName","useEffect","c","ip","subscribe","v","p","rename","EdgeImpulse","useContext","JacdacContext","model","setRegisterIdsChecked","aggregatorId","setAggregatorId","gridBreakPoints","aggregators","useChange","services","SRV_SENSOR_AGGREGATOR","currentAggregator","srv","devices","isSensor","specification","readingRegister","filter","handleAggregatorChecked","splice","push","sort","SRV_MODEL_RUNNER"],"mappings":";;;;;;;;;;;;;AAAiD;AACE;AACsB;AACtB;AACpC;AACf,SAAS,oEAAc,SAAS,qEAAe,SAAS,gFAA0B,SAAS,qEAAe;AAC1G,C;;;;;;;;;;;;;;;;;;;;;ACN0D;AACA;AACY;AACoB;AAC3D;AACO;AACd;AAC4B;AACjB;AACN;AACiB;AACI;AACC;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,wDAAwD,KAAK;AAC7D,gBAAgB;;AAEhB,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA,6BAA6B,6CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,uDAAQ;AACvE;AACA,cAAc,oGAAwB;;AAEtC,uBAAuB,sEAAa;AACpC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,0FAAc;AACtC;AACA;;AAEA,qBAAqB,8CAAiB;AACtC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,8BAA8B,mDAAsB;AACpD,+BAA+B,oFAAQ;AACvC;AACA;;AAEA,qBAAqB,0CAAa;AAClC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,gDAAmB,CAAC,oDAAK,EAAE,oFAAQ;AACzD,eAAe,sDAAI;AACnB;AACA;AACA,GAAG,uBAAuB,gDAAmB,CAAC,kFAAyB;AACvE;AACA,GAAG,yBAAyB,gDAAmB,sBAAsB,oFAAQ;AAC7E;AACA;AACA,GAAG,iCAAiC,gDAAmB;AACvD;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,qEAAU;AACzB;AACA,CAAC,YAAY,E;;;;;;;;;ACtJkB;AAC/B;AACA;AACA,UAAU,gBAAgB,IAAI,yDAAyD;AACvF;;AAEA,uBAAuB,gDAAmB,GAAG;;AAE7C,IAAI,KAAqC,EAAE,EAE1C;;AAED,yDAAe,gBAAgB,E;;;;;;;;;;;;;;ACZ2B;AACgC;AAC3D;AACP;AACsB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6CAAgB;AACpD;AACA;AACA,cAAc,oGAAwB;;AAEtC,sBAAsB,gDAAmB,QAAQ,oFAAQ;AACzD,eAAe,sDAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,mBAAmB,E;;;;;;;;;;;;;;;;;AC3BsC;AACgC;AAC1F;;AAE+B;AACP;AACe;AACA;AACO;AACe;AACtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,mHAAmH,KAAK;AACxH,gBAAgB;;AAEhB,6DAA6D,KAAK;AAClE,eAAe;;AAEf,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6CAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC,wBAAwB,2CAAc;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B,6CAAgB,CAAC,yEAAgB;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBA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","file":"component---src-pages-tools-edge-impulse-tsx-761163fd3ed3ff84842f.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar AccordionActions = /*#__PURE__*/React.forwardRef(function AccordionActions(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionActions'\n})(AccordionActions);","import React, { useState } from \"react\"\nimport useDbValue from \"./useDbValue\"\nimport useEffectAsync from \"./useEffectAsync\"\nimport Alert from \"./ui/Alert\"\nimport {\n    AccordionActions,\n    AccordionSummary,\n    AccordionDetails,\n    Accordion,\n    Typography,\n    TextField,\n    Box,\n} from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\"\nimport { useSnackbar } from \"notistack\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function ApiKeyAccordion(props: {\n    apiName: string\n    title?: string\n    validateKey?: (key: string) => Promise<{ statusCode: number }>\n    instructions: JSX.Element | JSX.Element[]\n}) {\n    const { apiName, validateKey, instructions, title } = props\n    const { value: apiKey, setValue: setApiKey } = useDbValue(apiName, \"\")\n    const apiKeyId = useId()\n    const [key, setKey] = useState(\"\")\n    const [expanded, setExpanded] = useState(!apiKey)\n    const [validated, setValidated] = useState(false)\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffectAsync(\n        async mounted => {\n            if (!apiKey) {\n                setValidated(false)\n            } else {\n                const { statusCode } = validateKey\n                    ? await validateKey(apiKey)\n                    : { statusCode: 200 }\n                if (!mounted()) return\n                if (statusCode === 200) {\n                    setValidated(true)\n                    setExpanded(false)\n                } else {\n                    setValidated(false)\n                    if (statusCode === 403) setApiKey(undefined)\n                }\n            }\n        },\n        [apiKey]\n    )\n\n    const handleApiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setKey(event.target.value)\n    }\n    const handleSave = () => {\n        setApiKey(key)\n        setKey(\"\")\n        enqueueSnackbar(\"key saved...\")\n    }\n    const handleReset = () => {\n        setApiKey(\"\")\n        enqueueSnackbar(\"key cleared...\")\n    }\n\n    const handleExpanded = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Accordion expanded={expanded} onChange={handleExpanded}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body1\">{`${\n                    title || \"API key\"\n                } Configuration`}</Typography>\n                {validated && (\n                    <Box ml={1} color=\"success.main\">\n                        <CheckCircleOutlineIcon />\n                    </Box>\n                )}\n            </AccordionSummary>\n            <AccordionDetails style={{ display: \"block\" }}>\n                {validated && (\n                    <Alert severity={\"success\"}>API key ready!</Alert>\n                )}\n                {instructions}\n                <TextField\n                    id={apiKeyId}\n                    autoFocus\n                    label=\"API key\"\n                    fullWidth\n                    value={key}\n                    type=\"password\"\n                    onChange={handleApiChange}\n                />\n            </AccordionDetails>\n            <AccordionActions>\n                <Button\n                    aria-label=\"save api key\"\n                    disabled={!key}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSave}\n                >\n                    Save\n                </Button>\n                <Button\n                    aria-label=\"clear api key\"\n                    disabled={!apiKey}\n                    variant=\"contained\"\n                    onClick={handleReset}\n                >\n                    Clear\n                </Button>\n            </AccordionActions>\n        </Accordion>\n    )\n}\n","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    createStyles,\n    Grid,\n    makeStyles,\n    Switch,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport DeviceActions from \"./DeviceActions\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport useDeviceName from \"./devices/useDeviceName\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister\n    handleRegisterCheck: (register: JDRegister) => void\n    recording: boolean\n    registerChecked: boolean\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        register,\n        handleRegisterCheck,\n        recording,\n        registerChecked,\n        liveDataSet,\n    } = props\n    const gridBreakpoints = useGridBreakpoints()\n    const classes = useStyles()\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return (\n        <Grid item {...gridBreakpoints} key={\"source\" + register.id}>\n            <Card>\n                <CardHeader\n                    subheader={register.service.name}\n                    title={`${deviceName}/${register.name}`}\n                    action={\n                        <DeviceActions\n                            device={register.service.device}\n                            showReset={true}\n                        />\n                    }\n                />\n                <CardContent>\n                    {register.fields.map(field => (\n                        <span key={field.id}>\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"large\"\n                                style={{\n                                    color:\n                                        (registerChecked &&\n                                            liveDataSet?.colorOf(field)) ||\n                                        \"#ccc\",\n                                }}\n                            />\n                            {field.name}\n                        </span>\n                    ))}\n                </CardContent>\n                <CardActions>\n                    <Switch\n                        disabled={recording}\n                        onChange={handleCheck}\n                        checked={registerChecked}\n                    />\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[]\n    registerIdsChecked: string[]\n    recording?: boolean\n    handleRegisterCheck: (register: JDRegister) => void\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        readingRegisters,\n        registerIdsChecked,\n        recording,\n        handleRegisterCheck,\n        liveDataSet,\n    } = props\n\n    return (\n        <Grid container spacing={2}>\n            {readingRegisters.map(register => {\n                const registerChecked =\n                    registerIdsChecked.indexOf(register.id) > -1\n                return (\n                    <ReadingFieldGridItem\n                        key={register.id}\n                        register={register}\n                        registerChecked={registerChecked}\n                        recording={recording}\n                        handleRegisterCheck={handleRegisterCheck}\n                        liveDataSet={liveDataSet}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    CircularProgress,\n    Grid,\n    Switch,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport useDbValue from \"../../components/useDbValue\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\"\nimport DeviceCardHeader from \"../../components/DeviceCardHeader\"\nimport Alert from \"../../components/ui/Alert\"\nimport useEffectAsync from \"../../components/useEffectAsync\"\nimport {\n    CHANGE,\n    CONNECT,\n    CONNECTING,\n    CONNECTION_STATE,\n    DISCONNECT,\n    ERROR,\n    PROGRESS,\n    REPORT_RECEIVE,\n    SRV_MODEL_RUNNER,\n    SRV_SENSOR_AGGREGATOR,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport FieldDataSet from \"../../components/FieldDataSet\"\nimport {\n    deviceSpecificationFromFirmwareIdentifier,\n    isSensor,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport CircularProgressWithLabel from \"../../components/ui/CircularProgressWithLabel\"\nimport Trend from \"../../components/Trend\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport ServiceList from \"../../components/ServiceList\"\nimport { ModelActions, ModelContent } from \"./model-uploader\"\nimport { readBlobToUint8Array } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDeviceName from \"../../components/devices/useDeviceName\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport ReadingFieldGrid from \"../../components/ReadingFieldGrid\"\nimport useChartPalette from \"../../components/useChartPalette\"\nimport {\n    SensorAggregatorClient,\n    SensorAggregatorConfig,\n} from \"../../../jacdac-ts/src/jdom/sensoraggregatorclient\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport ApiKeyAccordion from \"../../components/ApiKeyAccordion\"\n\nconst EDGE_IMPULSE_API_KEY = \"edgeimpulseapikey\"\n\nconst IDLE = \"idle\"\nconst STARTING = \"starting\"\nconst SAMPLING = \"sampling\"\nconst UPLOADING = \"uploading\"\n\nconst SAMPLING_STATE = \"samplingState\"\n\ninterface EdgeImpulseResponse {\n    success: boolean\n    error?: string\n    // HTTP status code\n    errorStatus?: number\n}\n\ninterface EdgeImpulseHello {\n    hello?: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    err?: any\n}\n\ninterface EdgeImpulseSensorInfo {\n    name: string\n    maxSampleLengthS: number\n    frequencies: number[]\n}\n\ninterface EdgeImpulseRemoteManagementInfo {\n    version: number\n    apiKey: string\n    deviceId: string\n    deviceType: string\n    connection: string\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceInfo {\n    id: number\n    deviceId: string\n    name: string\n    created: string\n    lastSeen: string\n    deviceType: string\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceResponse extends EdgeImpulseResponse {\n    device?: EdgeImpulseDeviceInfo\n}\n\ninterface EdgeImpulseSample extends EdgeImpulseResponse {\n    label: string\n    length: number\n    path: string\n    hmacKey: string\n    interval: number\n    sensor: string\n}\n\ninterface EdgeImpulseSampling extends EdgeImpulseSample {\n    dataSet?: FieldDataSet\n    startTimestamp?: number\n    lastProgressTimestamp?: number\n    generatedFilename?: string\n    aggregatorConfig?: SensorAggregatorConfig\n    unsubscribers?: (() => void)[]\n}\n\ninterface EdgeImpulseProjectInfo {\n    id: number\n    name: string\n    logo?: string\n}\n\ninterface EdgeImpulseProject extends EdgeImpulseResponse {\n    project: EdgeImpulseProjectInfo\n    devices: EdgeImpulseDeviceInfo[]\n    impulse: {\n        created: boolean\n        configured: boolean\n        complete: boolean\n    }\n    dataSummary: {\n        totalLengthMs: number\n        labels: string[]\n        dataCount: number\n    }\n    downloads: {\n        name: string\n        type: string\n        size: string\n        link: string\n    }[]\n}\n\ninterface EdgeImpulseProjects extends EdgeImpulseResponse {\n    projects: EdgeImpulseProjectInfo[]\n}\n\n/*\nA client for the EdgeImpulse remote management\nhttps://docs.edgeimpulse.com/reference#remote-management\n*/\nclass EdgeImpulseClient extends JDClient {\n    private _ws: WebSocket\n    public connectionState = DISCONNECT\n    public samplingState = IDLE\n    private _hello: EdgeImpulseRemoteManagementInfo\n    private _sample: EdgeImpulseSampling\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _pingInterval: any\n    private pong: boolean\n    private aggregatorClient: SensorAggregatorClient\n\n    constructor(\n        private readonly apiKey: string,\n        private readonly aggregator: JDService,\n        private readonly inputRegisters: JDRegister[],\n        private readonly palette: string[]\n    ) {\n        super()\n\n        this.handleMessage = this.handleMessage.bind(this)\n        this.handleOpen = this.handleOpen.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.handleReport = this.handleReport.bind(this)\n        this.handlePing = this.handlePing.bind(this)\n\n        this.aggregatorClient = new SensorAggregatorClient(this.aggregator)\n        this.aggregatorClient.subscribeSample(this.handleReport)\n\n        this.mount(() => this.disconnect())\n        this.mount(() => this.aggregatorClient.unmount())\n    }\n\n    get dataSet() {\n        return this._sample?.dataSet\n    }\n\n    disconnect() {\n        this.clearSampling()\n        if (this._pingInterval) {\n            clearInterval(this._pingInterval)\n            this._pingInterval = undefined\n        }\n        // stop socket\n        if (this._ws) {\n            const w = this._ws\n            this._ws = undefined\n            try {\n                w.close()\n            } catch (e) {\n                console.debug(e)\n            } finally {\n                this.setConnectionState(DISCONNECT)\n            }\n        }\n    }\n\n    private setConnectionState(state: string) {\n        if (this.connectionState !== state) {\n            this.connectionState = state\n            this.emit(CONNECTION_STATE, this.connectionState)\n            console.log(`ei: connection state changed`, this.connectionState)\n        }\n    }\n\n    private setSamplingState(state: string) {\n        if (this.samplingState !== state) {\n            this.samplingState = state\n            this.emit(SAMPLING_STATE, this.samplingState)\n            this.emit(CHANGE)\n            console.log(`ei: sampling state changed`, this.samplingState)\n        }\n    }\n\n    private send(msg: unknown) {\n        this._ws?.send(JSON.stringify(msg))\n    }\n\n    private async handleOpen() {\n        console.log(`ws: open`)\n        const service = this.aggregator\n        const { device } = service\n\n        // fetch device spec\n        const firmwareIdentifier = await service.device.resolveFirmwareIdentifier()\n        const deviceSpec = deviceSpecificationFromFirmwareIdentifier(\n            firmwareIdentifier\n        )\n\n        this._hello = {\n            version: 2,\n            apiKey: this.apiKey,\n            deviceId: device.deviceId,\n            deviceType:\n                deviceSpec?.name ||\n                firmwareIdentifier?.toString(16) ||\n                \"Jacdac device\",\n            connection: \"ip\", // direct connection\n            sensors: [\n                {\n                    name: this.inputRegisters\n                        .map(reg => serviceName(reg.service.serviceClass))\n                        .join(\",\"),\n                    maxSampleLengthS: 10000,\n                    frequencies: [50, 30, 20, 10],\n                },\n            ],\n        }\n        this.send({\n            hello: this._hello,\n        })\n    }\n\n    private reconnect() {\n        this.disconnect()\n        this.connect()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private handleMessage(msg: any) {\n        // response to ping?\n        if (msg.data === \"pong\") {\n            this.pong = true\n            return\n        }\n\n        const data = JSON.parse(msg.data)\n        if (data.hello !== undefined) {\n            const hello = data as EdgeImpulseHello\n            if (!hello.hello) {\n                this.emit(ERROR, hello.err)\n                this.disconnect()\n            } else {\n                this.setConnectionState(CONNECT)\n            }\n        } else if (data.sample) {\n            const sample = data.sample as EdgeImpulseSample\n            this.startSampling(sample)\n        }\n    }\n\n    get connected() {\n        return this.connectionState === CONNECT\n    }\n\n    get sampling() {\n        return this.samplingState !== IDLE\n    }\n\n    get generatedSampleName() {\n        return this._sample?.generatedFilename\n    }\n\n    get aggregatorConfig() {\n        return this._sample?.aggregatorConfig\n    }\n\n    private handleReport(row: number[]) {\n        console.log(`ei: aggregator report`, this.connected, this.sampling)\n        if (!this.connected) return // ignore\n\n        // partial data? ignore\n        if (row.some(r => r === undefined)) return\n\n        const { bus } = this.aggregator.device\n        const { timestamp } = bus\n        // first sample, notify we're started\n        if (this.samplingState == STARTING) {\n            this._sample.startTimestamp = this._sample.lastProgressTimestamp = timestamp\n            this.send({ sampleStarted: true })\n            this.setSamplingState(SAMPLING)\n        }\n        // store sample\n        if (this.samplingState == SAMPLING) {\n            const ds = this.dataSet\n            ds.addRow(row)\n            this.emit(REPORT_RECEIVE)\n\n            // debounced progress update\n            if (timestamp - this._sample.lastProgressTimestamp > 100) {\n                this._sample.lastProgressTimestamp = timestamp\n                this.emit(PROGRESS, this.progress)\n            }\n\n            if (\n                timestamp - this._sample.startTimestamp >=\n                this._sample.length\n            ) {\n                // first stop the sampling\n                this.stopSampling()\n                // we're done!\n                this.emit(PROGRESS, this.progress)\n                // and upload...\n                this.uploadData()\n            }\n        }\n    }\n\n    private uploadData(): Promise<void> {\n        this.setSamplingState(UPLOADING)\n        const ds = this.dataSet\n        const payload = {\n            protected: {\n                ver: \"v1\",\n                alg: \"none\",\n                iat: Date.now(),\n            },\n            signature: \"\",\n            payload: {\n                device_name: this._hello.deviceId,\n                device_type: this._hello.deviceType,\n                interval_ms: this._sample.interval,\n                sensors: ds.headers.map((h, i) => ({\n                    name: ds.headers[i],\n                    units: ds.units[i] || \"/\",\n                })),\n                values: ds.data(true),\n            },\n        }\n        console.log(`payload`, payload)\n        // upload dataset\n        // https://docs.edgeimpulse.com/reference#ingestion-api\n        return fetch(`https://ingestion.edgeimpulse.com${this._sample.path}`, {\n            method: \"POST\",\n            headers: {\n                \"x-api-key\": this.apiKey,\n                \"x-label\": this._sample.label,\n                \"x-file-name\": ds.name,\n                \"x-disallow-duplicates\": \"true\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(payload),\n        })\n            .then(async resp => {\n                // response contains the filename\n                const filename = await resp.text()\n                this._sample.generatedFilename = filename\n            })\n            .finally(() => {\n                this.send({\n                    sampleFinished: true,\n                })\n                this.setSamplingState(IDLE)\n            })\n    }\n\n    private handleError(ev: Event) {\n        this.emit(ERROR, ev)\n        this.reconnect()\n    }\n\n    private async startSampling(sample: EdgeImpulseSample) {\n        this._sample = sample\n        this._sample.dataSet = FieldDataSet.create(\n            this.aggregator.device.bus,\n            this.inputRegisters,\n            \"sample\",\n            this.palette\n        )\n        this._sample.unsubscribers = []\n        this.send({ sample: true })\n        this.setSamplingState(STARTING)\n\n        // prepare configuration\n        this._sample.aggregatorConfig = {\n            samplingInterval: this._sample.interval,\n            samplesInWindow: 10,\n            inputs: this.inputRegisters.map(reg => ({\n                serviceClass: reg.service.serviceClass,\n                deviceId: reg.service.device.deviceId,\n                serviceIndex: reg.service.serviceIndex,\n            })),\n        }\n\n        console.log(`ei: input`, this._sample.aggregatorConfig)\n        // setup aggregator client\n        await this.aggregatorClient.setInputs(this._sample.aggregatorConfig)\n        // schedule data collection, ask a few more samples\n        await this.aggregatorClient.collect(this._sample.length * 1.1)\n    }\n\n    private stopSampling() {\n        const sample = this._sample\n        if (sample) {\n            sample.unsubscribers.forEach(unsub => {\n                try {\n                    unsub()\n                } catch (e) {\n                    console.log(e)\n                }\n            })\n            sample.unsubscribers = []\n        }\n    }\n\n    private clearSampling() {\n        this.stopSampling()\n        if (this._sample) {\n            this._sample = undefined\n            this._hello = undefined\n            this.setSamplingState(IDLE)\n        }\n    }\n\n    connect() {\n        if (this._ws) return // already connected\n\n        console.log(`ei: connect`)\n        this.setConnectionState(CONNECTING)\n        this._ws = new WebSocket(\"wss://remote-mgmt.edgeimpulse.com\")\n        this._ws.onmessage = this.handleMessage\n        this._ws.onopen = this.handleOpen\n        this._ws.onerror = this.handleError\n\n        this.pong = true\n        this._pingInterval = setInterval(this.handlePing, 3000)\n    }\n\n    private handlePing() {\n        if (!this.connected) return\n\n        if (!this.pong) {\n            // the socket did not response\n            console.log(`missing pong`)\n            this.reconnect()\n        } else {\n            // send a new ping and wait for pong\n            this.pong = false\n            this._ws.send(\"ping\")\n        }\n    }\n\n    get progress() {\n        const timestamp = this.aggregator.device.bus.timestamp\n        return (\n            this.samplingState !== IDLE &&\n            (timestamp - this._sample.startTimestamp) / this._sample.length\n        )\n    }\n\n    static async currentProjectInfo(\n        apiKey: string\n    ): Promise<{\n        valid: boolean\n        errorStatus?: number\n        project?: EdgeImpulseProject\n    }> {\n        if (!apiKey) return { valid: false }\n\n        const rsj = await EdgeImpulseClient.apiFetch<EdgeImpulseProjects>(\n            apiKey,\n            \"projects\"\n        )\n        if (!rsj.success) {\n            return {\n                valid: false,\n                errorStatus: rsj.errorStatus,\n            }\n        }\n\n        // the API returns the current project when using the API key\n        const projectId = rsj.projects?.[0]?.id\n        if (!rsj?.success || projectId === undefined) {\n            return {\n                valid: true,\n                errorStatus: 402,\n            }\n        }\n\n        const project = await EdgeImpulseClient.apiFetch<EdgeImpulseProject>(\n            apiKey,\n            projectId\n        )\n        return {\n            valid: true,\n            errorStatus: project.errorStatus,\n            project,\n        }\n    }\n\n    static async apiFetch<T extends EdgeImpulseResponse>(\n        apiKey: string,\n        path: string | number,\n        body?: unknown\n    ): Promise<T> {\n        const API_ROOT = \"https://studio.edgeimpulse.com/v1/api/\"\n        const url = `${API_ROOT}${path}`\n        const options: RequestInit = {\n            method: body ? \"POST\" : \"GET\",\n            headers: {\n                \"x-api-key\": apiKey,\n                Accept: \"application/json\",\n            },\n            body: body && JSON.stringify(body),\n        }\n        if (options.method === \"POST\")\n            options.headers[\"Content-Type\"] = \"application/json\"\n\n        const resp = await fetch(url, options)\n        if (resp.status !== 200)\n            return {\n                success: false,\n                errorStatus: resp.status,\n                error: resp.statusText,\n            } as T\n        try {\n            const payload = (await resp.json()) as T\n            return payload\n        } catch (e) {\n            return {\n                success: false,\n                errorStatus: 500,\n                error: e.message,\n            } as T\n        }\n    }\n\n    static async deviceInfo(\n        apiKey: string,\n        projectId: number,\n        deviceId: string\n    ): Promise<EdgeImpulseDeviceResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseDeviceResponse>(\n            apiKey,\n            `${projectId}/device/${deviceId}`\n        )\n    }\n\n    static async renameDevice(\n        apiKey: string,\n        projectId: number,\n        deviceId: string,\n        name: string\n    ): Promise<EdgeImpulseResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseResponse>(\n            apiKey,\n            `${projectId}/devices/${deviceId}/rename`,\n            { name }\n        )\n    }\n}\n\nfunction ApiKeyManager() {\n    const validateKey = async (key: string) => {\n        const r = await EdgeImpulseClient.currentProjectInfo(key)\n        return {\n            statusCode: (r?.valid && 200) || r?.errorStatus || 500,\n        }\n    }\n    return (\n        <ApiKeyAccordion\n            apiName={EDGE_IMPULSE_API_KEY}\n            validateKey={validateKey}\n            instructions={\n                <p>\n                    To get an <b>API key</b>, navigate to &nbsp;\n                    <Link\n                        to=\"https://studio.edgeimpulse.com/studio/8698/keys\"\n                        target=\"_blank\"\n                    >\n                        https://studio.edgeimpulse.com/studio/8698/keys\n                    </Link>\n                    &nbsp; and generate a new key.\n                </p>\n            }\n        />\n    )\n}\n\nfunction useEdgeImpulseProjectInfo(apiKey: string) {\n    const [info, setInfo] = useState<EdgeImpulseProject>(undefined)\n\n    useEffectAsync(\n        async mounted => {\n            if (!apiKey) {\n                if (mounted()) setInfo(undefined)\n            } else {\n                const r = await EdgeImpulseClient.currentProjectInfo(apiKey)\n                if (mounted()) setInfo(r?.project)\n            }\n        },\n        [apiKey]\n    )\n\n    return info\n}\n\nfunction ProjectInfo(props: { info: EdgeImpulseProject }) {\n    const { info } = props\n    const disabled = !info?.success\n\n    return (\n        <Card>\n            <CardHeader\n                title={info?.project?.name || \"...\"}\n                subheader={\n                    info?.dataSummary &&\n                    `${info?.dataSummary?.dataCount} samples`\n                }\n            />\n            {info?.project?.logo && <CardMedia image={info?.project?.logo} />}\n            <CardActions>\n                <Button\n                    disabled={disabled}\n                    target=\"_blank\"\n                    href={`https://studio.edgeimpulse.com/studio/${info?.project?.id}/`}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Open EdgeImpulse\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nfunction ModelDownloadButton(props: {\n    apiKey: string\n    info: EdgeImpulseProject\n    setModel: (blob: Uint8Array) => void\n}) {\n    const { apiKey, info, setModel } = props\n    const theme = useTheme()\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const download = info?.downloads.find(\n        download => download.type === \"TensorFlow Lite (float32)\"\n    )\n\n    const handleDownload = (url: string) => async () => {\n        try {\n            setDownloading(true)\n            setError(\"\")\n            const resp = await fetch(url, {\n                headers: {\n                    \"x-api-key\": apiKey,\n                },\n            })\n            const res = await resp.blob()\n            const bytes = await readBlobToUint8Array(res)\n            setModel(bytes)\n        } catch (e) {\n            console.log(e)\n            setError(\"Oops, download failed.\")\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Box mb={1}>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            <Button\n                variant=\"contained\"\n                disabled={!download || downloading}\n                startIcon={\n                    downloading ? (\n                        <CircularProgress size={theme.spacing(2)} />\n                    ) : (\n                        <GetAppIcon />\n                    )\n                }\n                onClick={handleDownload(\n                    `https://studio.edgeimpulse.com${download?.link}`\n                )}\n            >\n                DOWNLOAD MODEL\n            </Button>\n        </Box>\n    )\n}\n\nfunction AggregatorCard(props: {\n    aggregator: JDService\n    selected: boolean\n    onChecked: () => void\n}) {\n    const { aggregator, selected, onChecked } = props\n    const { device } = aggregator\n\n    const handleChecked = () => onChecked()\n\n    return (\n        <Card>\n            <DeviceCardHeader device={device} showMedia={true} />\n            <CardContent>\n                <Switch checked={selected} onChange={handleChecked} />\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction Acquisition(props: {\n    aggregator: JDService\n    inputs: JDRegister[]\n    apiKey: string\n    info: EdgeImpulseProjectInfo\n}) {\n    const { aggregator, inputs, apiKey, info } = props\n\n    const { device } = aggregator\n    const [client, setClient] = useState<EdgeImpulseClient>(undefined)\n    const [error, setError] = useState(\"\")\n    const [connectionState, setConnectionState] = useState(DISCONNECT)\n    const [samplingState, setSamplingState] = useState(IDLE)\n    const [samplingProgress, setSamplingProgress] = useState(0)\n    const [, setDeviceInfo] = useState<EdgeImpulseDeviceInfo>(undefined)\n    const { deviceId } = device\n    const deviceName = useDeviceName(device, false)\n    const projectId = info?.id\n    const palette = useChartPalette()\n\n    const connected = connectionState === CONNECT\n    const sampling = samplingState !== IDLE\n    const dataSet = client?.dataSet\n    const generatedSampleName = client?.generatedSampleName\n    const aggregatorConfig = client?.aggregatorConfig\n\n    useEffect(() => {\n        if (!apiKey || !aggregator || !inputs?.length) {\n            setClient(undefined)\n            setError(undefined)\n            return undefined\n        } else {\n            console.log(`ei: start client`)\n            const c = new EdgeImpulseClient(apiKey, aggregator, inputs, palette)\n            c.connect()\n            setClient(c)\n            setError(undefined)\n            return () => c.unmount()\n        }\n    }, [apiKey, aggregator, inputs?.map(ip => ip.id).join(\",\")])\n    // subscribe to client changes\n    useEffect(\n        () =>\n            client?.subscribe(CONNECTION_STATE, (v: string) =>\n                setConnectionState(v)\n            ),\n        [client]\n    )\n    // subscribe to client changes\n    useEffect(\n        () =>\n            client?.subscribe(SAMPLING_STATE, (v: string) =>\n                setSamplingState(v)\n            ),\n        [client]\n    )\n    // listen to errors\n    useEffect(() => client?.subscribe(ERROR, (e: string) => setError(e)), [\n        client,\n    ])\n    // progress\n    useEffect(\n        () =>\n            client?.subscribe(PROGRESS, (p: number) =>\n                setSamplingProgress(p * 100)\n            ),\n        [client]\n    )\n\n    // name checking\n    useEffectAsync(async () => {\n        if (!apiKey || projectId === undefined) {\n            setDeviceInfo(undefined)\n        } else {\n            const resp = await EdgeImpulseClient.deviceInfo(\n                apiKey,\n                projectId,\n                deviceId\n            )\n            const info = resp.success && resp.device\n            if (info && info.name !== deviceName) {\n                // no name assigned, use current\n                if (info.name === deviceId) {\n                    console.log(`ei: sync name`)\n                    const rename = await EdgeImpulseClient.renameDevice(\n                        apiKey,\n                        projectId,\n                        deviceId,\n                        deviceName\n                    )\n                    if (rename.success) {\n                        info.name = deviceName\n                    }\n                }\n            }\n            setDeviceInfo(info)\n        }\n    }, [apiKey, projectId, deviceName])\n\n    return (\n        <Box>\n            {connected && (\n                <Alert severity={\"success\"}>Connected to EdgeImpulse</Alert>\n            )}\n            {error && <Alert severity={\"error\"}>{error}</Alert>}\n            {sampling && (\n                <Alert severity={\"info\"}>\n                    <AlertTitle>Sampling...</AlertTitle>\n                    <CircularProgressWithLabel value={samplingProgress} />\n                </Alert>\n            )}\n            {!!dataSet && <Trend dataSet={dataSet} />}\n            {generatedSampleName && (\n                <Typography variant=\"body2\">\n                    sample name: {generatedSampleName}\n                </Typography>\n            )}\n            {aggregatorConfig && (\n                <pre>{JSON.stringify(aggregatorConfig, null, 2)}</pre>\n            )}\n        </Box>\n    )\n}\n\nexport default function EdgeImpulse() {\n    const { value: apiKey } = useDbValue(EDGE_IMPULSE_API_KEY, \"\")\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [model, setModel] = useState<Uint8Array>(undefined)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const gridBreakPoints = useGridBreakpoints()\n    const info = useEdgeImpulseProjectInfo(apiKey)\n\n    const aggregators: JDService[] = useChange(bus, bus =>\n        bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR })\n    )\n    const currentAggregator: JDService =\n        aggregators.find(srv => srv.id == aggregatorId) || aggregators[0]\n    const readingRegisters = useChange(bus, bus =>\n        bus\n            .devices()\n            .map(\n                device =>\n                    device.services().find(srv => isSensor(srv.specification))\n                        ?.readingRegister\n            )\n            .filter(reg => !!reg)\n    )\n    const inputs = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? \"\" : srv?.id\n        setAggregatorId(id)\n    }\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n    }\n\n    return (\n        <>\n            <h1>Edge Impulse</h1>\n            <p>\n                Use Jacdac to inject data and download models into{\" \"}\n                <Link href=\"https://studio.edgeimpulse.com\">\n                    https://studio.edgeimpulse.com\n                </Link>\n                .\n            </p>\n            <ConnectAlert />\n            <ApiKeyManager />\n            <Box mb={1} />\n            <ProjectInfo info={info} />\n            <h3>Data</h3>\n            <h4>Select Sensors</h4>\n            {!readingRegisters?.length && (\n                <Alert severity=\"info\">No sensor found...</Alert>\n            )}\n            {!!readingRegisters.length && (\n                <ReadingFieldGrid\n                    readingRegisters={readingRegisters}\n                    registerIdsChecked={registerIdsChecked}\n                    handleRegisterCheck={handleRegisterCheck}\n                />\n            )}\n            <h4>Select Sensor Aggregator</h4>\n            {!aggregators?.length && (\n                <Alert severity=\"info\">No data aggregator found...</Alert>\n            )}\n            <Grid container spacing={2}>\n                {aggregators.map(aggregator => (\n                    <Grid key={aggregator.id} item {...gridBreakPoints}>\n                        <AggregatorCard\n                            aggregator={aggregator}\n                            selected={currentAggregator === aggregator}\n                            onChecked={handleAggregatorChecked(aggregator)}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <h4>Acquisition status</h4>\n            {!currentAggregator && (\n                <Alert severity=\"info\">No data aggregator selected...</Alert>\n            )}\n            {!inputs?.length && (\n                <Alert severity=\"info\">\n                    Select sensors to collect data from...\n                </Alert>\n            )}\n            {currentAggregator && !!inputs?.length && (\n                <Acquisition\n                    aggregator={currentAggregator}\n                    inputs={inputs}\n                    apiKey={apiKey}\n                    info={info?.project}\n                />\n            )}\n            <h3>Deployment</h3>\n            {model && (\n                <Box mb={1}>\n                    <Alert severity=\"success\">Model downloaded!</Alert>\n                </Box>\n            )}\n            <ModelDownloadButton\n                apiKey={apiKey}\n                info={info}\n                setModel={setModel}\n            />\n            <ServiceList\n                serviceClass={SRV_MODEL_RUNNER}\n                content={service => <ModelContent service={service} />}\n                actions={service => (\n                    <ModelActions service={service} model={model} />\n                )}\n                alertMissing={\"No model runner found...\"}\n            />\n        </>\n    )\n}\n"],"sourceRoot":""}