{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/HourglassEmpty.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayCircleFilled.js","webpack://jacdac-docs/./jacdac-ts/jacdac-spec/spectool/jdtestfuns.ts","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx","webpack://jacdac-docs/./src/components/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack://jacdac-docs/./jacdac-ts/src/test/testrunner.ts","webpack://jacdac-docs/./src/components/test/ServiceTestRunner.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts"],"names":["getTestCommandFunctions","testFunctions","filter","f","context","getTestExpressionFunctions","id","args","prompt","undefined","useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","specification","useDeviceSpecification","imageUrl","useDeviceImage","name","DeviceFirmwareVersionChip","firmwareVersionRegister","service","register","ControlReg","useRegisterUnpackedValue","firmwareVersion","DeviceTemperatureChip","tempRegister","temperature","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","identifierToUrlPath","deviceId","s","join","useServiceRole","useState","role","setRole","useEffect","subscribe","ROLE_CHANGE","console","log","ServiceRole","useContext","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","useChange","_","DashboardServiceWidgetItem","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","expanded","visible","spec","registers","useMemo","packets","ids","pkt","isRegister","map","identifier","indexOf","slice","reg","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","length","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CTRL","SRV_LOGGER","SRV_SETTINGS","DashboardDevice","toggleExpanded","variant","showHeader","useDeviceName","services","serviceClass","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","serviceGridRef","useRef","intersection","ServiceWidgets","useCallback","srv","isMixin","dependencyId","padding","paddingBottom","serviceIndex","JacdacContext","bus","mgr","setMgr","ROLE_MANAGER_CHANGE","JDTestCommandStatus","JDTestStatus","commandStatusToTestStatus","status","Active","Passed","Failed","NotReady","RequiresUserInput","cmdToTestFunction","cmd","call","callee","find","t","unparse","e","type","ae","elements","caller","arguments","computed","object","property","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","start","exprStack","tos","eval","visitExpression","pop","getStartVal","r","v","push","goal","error","ev","top","le","lhs","rhs","val","lit","value","JDCommandEvaluator","testRunner","command","_prompt","_progress","_status","_startExpressions","_rangeComplete","_eventsComplete","testFun","startExprs","exprVisitor","p","ce","eventList","forEach","child","findIndex","exprEval","createPrompt","replaceId","a","i","replaceVal","aStart","roundWithPrecision","toString","replace","setEvent","checkExpression","expr","getStart","evaluate","Math","abs","pretify","regSaved","regValue","amtSaved","beginSaved","endSaved","hasEvent","consumeEvent","shift","event","jdreg","serviceTestRunner","fmt","packFormat","sendSetPackedAsync","fld","lookup","JDTestCommandRunner","_output","message","progress","_commmandEvaluator","reset","output","envChange","isActive","newOutput","finish","cancel","finishCommand","emit","CHANGE","JDEventSource","JDTestRunner","testSpec","commands","testCommands","c","_commandIndex","_currentEvent","commandIndex","refreshEnvironment","next","newStatus","currentCommand","eventChange","ret","description","index","refresh_env","k","retry","refresh","unpackedValue","JDServiceTestRunner","_testIndex","_registers","_events","tests","serviceSpec","serviceSpecificationFromClassIdentifier","events","eventName","isEvent","mount","EVENT","currentTest","regName","field","fields","stats","total","success","failed","indeterminate","test","testIndex","ct","JDServiceClient","TestStatusIcon","TestListItem","onSelectTest","selected","handleSelectTest","TestList","CommandStatusIcon","CommandListItem","handleAnswer","ActiveTest","handleRestart","handleNext","ServiceTestRunner","serviceTest","serviceTestFromServiceClass","factory","useServiceClient","useGridBreakpoints","itemCount","drawerType","xs","sm","md","lg","xl","DrawerType","deps","client","setClient","unmount"],"mappings":"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","file":"859a83de993caea7524bf57c2975f3be6812c8c3-895846f5491fb5314623.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdtest.d.ts\" />\n\nexport type JDTestFunctions =\n    | \"changes\"\n    | \"ask\"\n    | \"check\"\n    | \"increases\"\n    | \"decreases\"\n    | \"increasesBy\"\n    | \"decreasesBy\"\n    | \"stepsUpTo\"\n    | \"stepsDownTo\"\n    | \"events\"\n    | \"awaitEvent\"\n    | \"nextEvent\"\n    | \"assign\"\n    | \"closeTo\"\n\nexport function getTestCommandFunctions() {\n    return testFunctions.filter(f => f.context === \"command\" || f.context === \"either\")\n}\n\nexport function getTestExpressionFunctions() {\n    return testFunctions.filter(f => f.context === \"expression\" || f.context === \"either\")\n}\n\nconst testFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"changes\",\n        args: [\"register\"],\n        prompt: `check that {1} changes`,\n        context: \"command\",\n    },\n    {\n        id: \"ask\",\n        args: [],\n        prompt: undefined,\n        context: \"command\",\n    },\n    {\n        id: \"events\",\n        args: [\"events\"],\n        prompt: `check that events {1} are observed`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true] ],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"nextEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `next event must be {1}, then check {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"assign\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"check\",\n        args: [\"boolean\"],\n        prompt: `check that {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"increases\",\n        args: [\"register\"],\n        prompt: `check that {1} increases`,\n        context: \"command\",\n    },\n    {\n        id: \"decreases\",\n        args: [\"register\"],\n        prompt: `check that {1} decreases`,\n        context: \"command\",\n    },\n    {\n        id: \"increasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that  {1} (initially {1:val}) increases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"decreasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that {1} (initially {1:val}) decreases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsUpTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step up (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsDownTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step down (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"start\",\n        args: [\"any\"],\n        prompt: undefined,\n        context: \"expression\",\n    },\n    {\n        id: \"closeTo\",\n        args: [\"number\", \"number\", \"number\"],\n        prompt: `evaluate {1} until it is close to {2:val}, as given by error {3:val}`,\n        context: \"either\",\n    },\n]\n","import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./devices/DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./devices/DeviceAvatar\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = device\n        ?.service(0)\n        ?.register(ControlReg.FirmwareVersion)\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n\n    return (\n        (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || (\n            <></>\n        )\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    return (\n        (temperature !== undefined && (\n            <Chip size=\"small\" label={`${temperature}°`} />\n        )) || <></>\n    )\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={<DeviceActions device={device} showReset={true} showSettings={showSettings} />}\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        console.log(\"role change\", { service })\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React, { useCallback, useRef } from \"react\"\nimport {\n    SRV_CTRL,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER, SRV_SETTINGS]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n    getTestCommandFunctions,\n    JDTestFunctions,\n} from \"../../jacdac-spec/spectool/jdtestfuns\"\nimport { exprVisitor } from \"../../jacdac-spec/spectool/jdutils\"\n\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { JDService } from \"../jdom/service\"\nimport { JDRegister } from \"../jdom/register\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport {\n    isEvent,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n} from \"../jdom/spec\"\nimport { roundWithPrecision } from \"../jdom/utils\"\n\nexport enum JDTestCommandStatus {\n    NotReady,\n    Active,\n    RequiresUserInput,\n    Passed,\n    Failed,\n}\n\nexport enum JDTestStatus {\n    NotReady,\n    Active,\n    Passed,\n    Failed,\n}\n\nfunction commandStatusToTestStatus(status: JDTestCommandStatus) {\n    switch (status) {\n        case JDTestCommandStatus.Active:\n            return JDTestStatus.Active\n        case JDTestCommandStatus.Passed:\n            return JDTestStatus.Passed\n        case JDTestCommandStatus.Failed:\n            return JDTestStatus.Failed\n        case JDTestCommandStatus.NotReady:\n            return JDTestStatus.NotReady\n        case JDTestCommandStatus.RequiresUserInput:\n            return JDTestStatus.Active\n    }\n}\n\nfunction cmdToTestFunction(cmd: jdtest.TestCommandSpec) {\n    const id = (<jsep.Identifier>cmd.call.callee).name\n    return getTestCommandFunctions().find(t => t.id == id)\n}\n\nfunction unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\ntype SMap<T> = { [v: string]: T }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype StartMap = { e: jsep.Expression; v: any }[]\n\ntype GetValue = (root: string, fld: string) => any\n\nclass JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private start: StartMap) {}\n\n    private tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    private getStartVal(e: jsep.Expression) {\n        return this.start.find(r => r.e === e).v\n    }\n\n    private visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                const caller = <jsep.CallExpression>e\n                const callee = <jsep.Identifier>caller.callee\n                switch (callee.name) {\n                    case \"start\": {\n                        this.exprStack.push(\n                            this.getStartVal(caller.arguments[0])\n                        )\n                        return\n                    }\n                    case \"closeTo\": {\n                        const args = caller.arguments\n                        const goal = this.getStartVal(args[1])\n                        const error = this.getStartVal(args[2])\n                        this.visitExpression(args[0])\n                        const ev = this.exprStack.pop()\n                        this.exprStack.push(\n                            ev >= goal - error && ev <= goal + error\n                        )\n                        break\n                    }\n                    default: // ERROR\n                }\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // member expressions are of form [register|event].field\n                const root = e as jsep.MemberExpression\n                const lhs = root.object as jsep.Identifier\n                const rhs = root.property as jsep.Identifier\n                const val = this.env(lhs.name, rhs.name)\n                // console.log(`${lhs.name}.${rhs.name} = ${val}`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env(id.name, \"\"))\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n\nclass JDCommandEvaluator {\n    private _prompt = \"\"\n    private _progress = \"\"\n    private _status = JDTestCommandStatus.Active\n    private _startExpressions: StartMap = []\n    private _rangeComplete: number = undefined\n    private _eventsComplete: string[] = undefined\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {}\n\n    public get prompt() {\n        return this._prompt\n    }\n    public get status() {\n        return this._status\n    }\n    public get progress() {\n        return this._progress\n    }\n\n    private get env() {\n        return (root: string, fld = \"\") => {\n            return this.testRunner.serviceTestRunner.lookup(root, fld)\n        }\n    }\n\n    // TODO: define an interface between test runner and command evaluator\n    // TODO: so this all can be done modularly\n    public start() {\n        this._startExpressions = []\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        const startExprs: jsep.Expression[] = []\n        switch (testFun.id as JDTestFunctions) {\n            case \"check\":\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                exprVisitor(null, args, (p, ce: jsep.CallExpression) => {\n                    if (ce.type !== \"CallExpression\") return\n                    if ((<jsep.Identifier>ce.callee).name === \"start\")\n                        startExprs.push(ce.arguments[0])\n                    else if ((<jsep.Identifier>ce.callee).name === \"closeTo\") {\n                        startExprs.push(ce.arguments[1])\n                        startExprs.push(ce.arguments[2])\n                    }\n                })\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                startExprs.push(args[0])\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\":\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                startExprs.push(args[0])\n                startExprs.push(args[1])\n                break\n            }\n            case \"closeTo\": {\n                startExprs.push(args[1])\n                startExprs.push(args[2])\n                break\n            }\n            case \"assign\": {\n                startExprs.push(args[1])\n                break\n            }\n            case \"events\": {\n                const eventList = this.command.call\n                    .arguments[0] as jsep.ArrayExpression\n                this._eventsComplete = (eventList.elements as jsep.Identifier[]).map(\n                    id => id.name\n                )\n                break\n            }\n        }\n        // evaluate the start expressions and store the results\n        startExprs.forEach(child => {\n            if (this._startExpressions.findIndex(r => r.e === child) < 0) {\n                const exprEval = new JDExprEvaluator(this.env, [])\n                this._startExpressions.push({\n                    e: child,\n                    v: exprEval.eval(child),\n                })\n            }\n        })\n        this.createPrompt()\n    }\n\n    private createPrompt() {\n        const testFun = cmdToTestFunction(this.command)\n        const replaceId = this.command.call.arguments.map((a, i) => {\n            return [`{${i + 1}}`, unparse(a)]\n        })\n        const replaceVal = this.command.call.arguments.map((a, i) => {\n            const aStart = this._startExpressions.find(r => r.e === a)\n            return [\n                `{${i + 1}:val}`,\n                aStart && aStart.v\n                    ? roundWithPrecision(aStart.v, 3).toString()\n                    : unparse(a),\n            ]\n        })\n        this._prompt =\n            testFun.id === \"ask\" || testFun.id === \"say\"\n                ? this.command.prompt.slice(0)\n                : testFun.prompt.slice(0)\n        replaceId.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n        replaceVal.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n    }\n\n    public setEvent(ev: string) {}\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(this.env, this._startExpressions)\n        return expr.eval(e)\n            ? JDTestCommandStatus.Passed\n            : JDTestCommandStatus.Active\n    }\n\n    private getStart(e: jsep.Expression) {\n        return this._startExpressions.find(r => r.e === e)\n    }\n\n    public evaluate() {\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        this._status = JDTestCommandStatus.Active\n        this._progress = \"\"\n        switch (testFun.id as JDTestFunctions) {\n            case \"ask\": {\n                this._status = JDTestCommandStatus.RequiresUserInput\n                break\n            }\n            case \"check\": {\n                this._status = this.checkExpression(args[0])\n                break\n            }\n            case \"closeTo\": {\n                const goal = this.getStart(args[1])\n                const error = this.getStart(args[2])\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(args[0]) as number\n                if (Math.abs(ev - goal.v) <= error.v)\n                    this._status = JDTestCommandStatus.Passed\n                this._progress = `current: ${pretify(ev)}; goal: ${pretify(\n                    goal.v\n                )}; error: ${pretify(error.v)}`\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                const regSaved = this._startExpressions.find(\n                    r => r.e === args[0]\n                )\n                const regValue = this.env(unparse(args[0]))\n                const status =\n                    regValue &&\n                    regSaved.v &&\n                    ((testFun.id === \"changes\" && regValue !== regSaved.v) ||\n                        (testFun.id === \"increases\" && regValue > regSaved.v) ||\n                        (testFun.id === \"decreases\" && regValue < regSaved.v))\n                        ? JDTestCommandStatus.Passed\n                        : JDTestCommandStatus.Active\n                this._status = status\n                regSaved.v = regValue\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                const regSaved = this.getStart(args[0])\n                const amtSaved = this.getStart(args[1])\n                const regValue = this.env(unparse(args[0]))\n                if (testFun.id === \"increasesBy\") {\n                    if (regValue >= regSaved.v + amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    } else if (\n                        regValue >= regSaved.v &&\n                        regValue < regSaved.v + amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )}, goal: ${pretify(regSaved.v + amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                } else {\n                    if (regValue <= regSaved.v - amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                        this._progress = \"completed\"\n                    } else if (\n                        regValue <= regSaved.v &&\n                        regValue > regSaved.v - amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )} goal: ${pretify(regSaved.v - amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                }\n                break\n            }\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                this._status = JDTestCommandStatus.Active\n                const regValue = this.env(unparse(args[0]))\n                const beginSaved = this.getStart(args[0])\n                const endSaved = this.getStart(args[1])\n                if (this._rangeComplete === undefined) {\n                    this._rangeComplete = regValue\n                } else {\n                    if (\n                        regValue ===\n                        this._rangeComplete +\n                            (testFun.id == \"stepsUpTo\" ? 1 : -1)\n                    )\n                        this._rangeComplete = regValue\n                    if (this._rangeComplete === endSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    }\n                }\n                if (this._rangeComplete != undefined) {\n                    this._progress =\n                        testFun.id == \"stepsUpTo\"\n                            ? `from ${pretify(beginSaved.v)} up to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                            : `from ${pretify(beginSaved.v)} down to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                }\n                break\n            }\n            case \"events\": {\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev === this._eventsComplete[0]) {\n                        this._eventsComplete.shift()\n                        if (this._eventsComplete.length === 0)\n                            this._status = JDTestCommandStatus.Passed\n                    } else {\n                        this._status = JDTestCommandStatus.Failed\n                    }\n                    this._progress = `got event ${ev}; remaining = [${this._eventsComplete}]`\n                } else {\n                    this._progress = `no events received; remaining = [${this._eventsComplete}]`\n                }\n                break\n            }\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                const event = args[0] as jsep.Identifier\n                this._progress = `waiting for event ${event.name}`\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev !== event.name) {\n                        if (testFun.id === \"nextEvent\")\n                            this._status = JDTestCommandStatus.Failed\n                    } else {\n                        // this._status = JDTestCommandStatus.Passed\n                        this._status = this.checkExpression(\n                            this.command.call.arguments[1]\n                        )\n                    }\n                } else {\n                    this._progress = `no events received; ${this._progress}`\n                }\n                break\n            }\n            case \"assign\": {\n                const reg = args[0] as jsep.Identifier\n                const jdreg = this.testRunner.serviceTestRunner.registers[\n                    reg.name\n                ]\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(args[1])\n                if (jdreg) {\n                    const fmt = jdreg.specification?.packFormat\n                    jdreg.sendSetPackedAsync(fmt, [ev])\n                    this._status = JDTestCommandStatus.Passed\n                    this._progress = `wrote ${ev} to register ${reg.name}`\n                }\n            }\n        }\n\n        function pretify(v: number) {\n            return roundWithPrecision(v, 3)\n        }\n    }\n}\n\nexport interface JDCommandOutput {\n    message: string\n    progress: string\n}\n\nexport class JDTestCommandRunner extends JDEventSource {\n    private _status = JDTestCommandStatus.NotReady\n    private _output: JDCommandOutput = { message: \"\", progress: \"\" }\n    private _commmandEvaluator: JDCommandEvaluator = null\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {\n        super()\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestCommandStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestCommandStatus.Failed &&\n            this.status !== JDTestCommandStatus.Passed\n        )\n    }\n\n    get isActive(): boolean {\n        return (\n            this.status === JDTestCommandStatus.Active ||\n            this.status === JDTestCommandStatus.RequiresUserInput\n        )\n    }\n\n    get output() {\n        return this._output\n    }\n\n    set output(value: JDCommandOutput) {\n        if (\n            !this._output ||\n            this._output.message !== value.message ||\n            this._output.progress !== value.progress\n        ) {\n            this._output = value\n            this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.status = JDTestCommandStatus.NotReady\n        this.output = { message: \"\", progress: \"\" }\n        this._commmandEvaluator = null\n    }\n\n    start() {\n        this.status = JDTestCommandStatus.Active\n        this._commmandEvaluator = new JDCommandEvaluator(\n            this.testRunner,\n            this.command\n        )\n        this._commmandEvaluator.start()\n        this.envChange()\n    }\n\n    envChange() {\n        if (this.isActive) {\n            this._commmandEvaluator.evaluate()\n            const newOutput: JDCommandOutput = {\n                message: this._commmandEvaluator.prompt,\n                progress: this._commmandEvaluator.progress,\n            }\n            this.output = newOutput\n            if (\n                this._commmandEvaluator.status ===\n                JDTestCommandStatus.RequiresUserInput\n            )\n                this.status = JDTestCommandStatus.RequiresUserInput\n            else this.finish(this._commmandEvaluator.status)\n        }\n    }\n\n    cancel() {\n        this.finish(JDTestCommandStatus.Failed)\n    }\n\n    finish(s: JDTestCommandStatus) {\n        if (\n            this.isActive &&\n            (s === JDTestCommandStatus.Failed ||\n                s === JDTestCommandStatus.Passed)\n        ) {\n            this.status = s\n            this.testRunner.finishCommand()\n        }\n    }\n}\n\nexport class JDTestRunner extends JDEventSource {\n    private _status = JDTestStatus.NotReady\n    private _commandIndex: number\n    private _currentEvent: string\n    public readonly commands: JDTestCommandRunner[]\n\n    constructor(\n        public readonly serviceTestRunner: JDServiceTestRunner,\n        private readonly testSpec: jdtest.TestSpec\n    ) {\n        super()\n        this.commands = testSpec.testCommands.map(\n            c => new JDTestCommandRunner(this, c)\n        )\n    }\n\n    public reset() {\n        if (this.status !== JDTestStatus.NotReady) {\n            this._status = JDTestStatus.NotReady\n            this._commandIndex = undefined\n            this._currentEvent = undefined\n            this.commands.forEach(t => t.reset())\n            this.emit(CHANGE)\n        }\n    }\n\n    start() {\n        this.reset()\n        this.status = JDTestStatus.Active\n        this.commandIndex = 0\n        this.serviceTestRunner.refreshEnvironment()\n    }\n\n    next() {\n        this.serviceTestRunner.next()\n    }\n\n    cancel() {\n        this.finish(JDTestStatus.Failed)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestStatus.Failed &&\n            this.status !== JDTestStatus.Passed\n        )\n    }\n\n    get description() {\n        return this.testSpec.description\n    }\n\n    get prompt() {\n        return this.testSpec.prompt\n    }\n\n    finish(newStatus: JDTestStatus) {\n        if (this.status === JDTestStatus.Active) {\n            this.status = newStatus\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    private set commandIndex(index: number) {\n        if (this._commandIndex !== index) {\n            this._commandIndex = index\n            this.currentCommand?.start()\n            this.emit(CHANGE)\n        }\n    }\n\n    public envChange() {\n        if (this.status === JDTestStatus.Active) {\n            this.currentCommand?.envChange()\n        }\n    }\n\n    public eventChange(event: string) {\n        if (this.status === JDTestStatus.Active) {\n            this._currentEvent = event\n            this.envChange()\n        }\n    }\n\n    public get hasEvent() {\n        return this._currentEvent != undefined\n    }\n\n    public consumeEvent() {\n        const ret = this._currentEvent\n        this._currentEvent = undefined\n        return ret\n    }\n\n    public finishCommand() {\n        if (this.commandIndex === this.commands.length - 1)\n            this.finish(commandStatusToTestStatus(this.currentCommand.status))\n        else this.commandIndex++\n    }\n\n    get currentCommand() {\n        return this.commands[this._commandIndex]\n    }\n}\n\nasync function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\nexport class JDServiceTestRunner extends JDServiceClient {\n    private _testIndex = -1\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n    public readonly tests: JDTestRunner[]\n\n    constructor(\n        public readonly testSpec: jdtest.ServiceTestSpec,\n        service: JDService\n    ) {\n        super(service)\n        this.tests = this.testSpec.tests.map(t => new JDTestRunner(this, t))\n        const serviceSpec = serviceSpecificationFromClassIdentifier(\n            service.serviceClass\n        )\n        this.testSpec.tests.forEach(t => {\n            t.events.forEach(eventName => {\n                if (!this.events[eventName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isEvent(pkt) && pkt.name === eventName\n                    )\n                    const event = service.event(pkt.identifier)\n                    this.events[eventName] = event\n                    this.mount(\n                        event.subscribe(EVENT, () => {\n                            this.currentTest?.eventChange(eventName)\n                        })\n                    )\n                }\n            })\n            t.registers.forEach(regName => {\n                if (!this._registers[regName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isRegister(pkt) && pkt.name === regName\n                    )\n                    const register = service.register(pkt.identifier)\n                    this._registers[regName] = register\n                    this.mount(\n                        register.subscribe(CHANGE, () => {\n                            this.currentTest?.envChange()\n                        })\n                    )\n                }\n            })\n        })\n        this.start()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(root: string, fld = \"\"): any {\n        if (root in this.registers) {\n            if (!fld) return this.registers[root].unpackedValue?.[0]\n            else {\n                const field = this.registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this.events) {\n            const field = this.events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this.registers)\n    }\n\n    public get registers() {\n        return this._registers\n    }\n\n    public get events() {\n        return this._events\n    }\n\n    private get testIndex() {\n        return this._testIndex\n    }\n\n    private set testIndex(index: number) {\n        if (this._testIndex !== index) {\n            // stop previous test if needed\n            const ct = this.currentTest\n            if (ct) {\n                if (ct.status === JDTestStatus.Active) {\n                    ct.cancel()\n                }\n            }\n\n            // update test\n            this._testIndex = index\n            this.emit(CHANGE)\n        }\n    }\n\n    public stats() {\n        const r = {\n            total: this.tests.length,\n            success: 0,\n            failed: 0,\n            indeterminate: 0,\n        }\n        for (const test of this.tests) {\n            switch (test.status) {\n                case JDTestStatus.Failed:\n                    r.failed++\n                    break\n                case JDTestStatus.Passed:\n                    r.success++\n                    break\n                default:\n                    r.indeterminate++\n            }\n        }\n        return r\n    }\n\n    public start() {\n        this.tests.forEach(t => t.reset())\n        this.testIndex = 0\n    }\n\n    public next() {\n        this.testIndex++\n    }\n\n    get currentTest() {\n        return this.tests[this._testIndex]\n    }\n\n    set currentTest(test: JDTestRunner) {\n        const index = this.tests.indexOf(test)\n        if (index > -1) this.testIndex = index\n    }\n}\n","import React, { useCallback, useEffect } from \"react\"\nimport useServiceClient from \"../useServiceClient\"\nimport {\n    Grid,\n    Button,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    Typography,\n    Card,\n    CardContent,\n    CardActions,\n    Box,\n    ListSubheader,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    JDServiceTestRunner,\n    JDTestRunner,\n    JDTestStatus,\n    JDTestCommandRunner,\n    JDTestCommandStatus,\n} from \"../../../jacdac-ts/src/test/testrunner\"\nimport ErrorIcon from \"@material-ui/icons/Error\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\n\nfunction TestStatusIcon(props: { test: JDTestRunner }) {\n    const { test } = props\n    const status = useChange(test, t => t.status)\n\n    switch (status) {\n        case JDTestStatus.Active:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction TestListItem(props: {\n    test: JDTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { test, currentTest, onSelectTest } = props\n    const description = useChange(test, t => t.description)\n    const selected = test === currentTest\n    const handleSelectTest = () => onSelectTest(test)\n\n    return (\n        <ListItem selected={selected} button onClick={handleSelectTest}>\n            <ListItemIcon>\n                <TestStatusIcon test={test} />\n            </ListItemIcon>\n            <ListItemText primary={description} />\n        </ListItem>\n    )\n}\n\nfunction TestList(props: {\n    testRunner: JDServiceTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { testRunner, currentTest, onSelectTest } = props\n    const { tests } = testRunner\n    const stats = useChange(testRunner, r => r.stats())\n\n    return (\n        <Card>\n            <CardContent>\n                <List\n                    dense={true}\n                    subheader={\n                        <ListSubheader>\n                            {`${stats.total} tests, ${stats.success} success, ${stats.failed} failed`}\n                        </ListSubheader>\n                    }\n                >\n                    {tests?.map((test, i) => (\n                        <TestListItem\n                            key={i}\n                            test={test}\n                            currentTest={currentTest}\n                            onSelectTest={onSelectTest}\n                        />\n                    ))}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CommandStatusIcon(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const status = useChange(command, c => c.status)\n\n    switch (status) {\n        case JDTestCommandStatus.Active:\n        case JDTestCommandStatus.RequiresUserInput:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestCommandStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestCommandStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction CommandListItem(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const { message, progress } = useChange(command, c => c.output)\n    const status = useChange(command, c => c.status)\n    const handleAnswer = (status: JDTestCommandStatus) => () =>\n        command.finish(status)\n    return (\n        <>\n            <ListItem selected={status === JDTestCommandStatus.Active}>\n                <ListItemIcon>\n                    <CommandStatusIcon command={command} />\n                </ListItemIcon>\n                <ListItemText\n                    primary={message}\n                    secondary={progress}\n                />\n            </ListItem>\n            {status === JDTestCommandStatus.RequiresUserInput && (\n                <ListItem>\n\n                    <ListItemSecondaryAction>\n                        <Grid container spacing={1}>\n                            <Grid item><Button\n                                variant=\"outlined\"\n                                onClick={handleAnswer(JDTestCommandStatus.Passed)}\n                            >\n                                Yes\n                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleAnswer(JDTestCommandStatus.Failed)}\n                                >\n                                    No\n                    </Button>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )}\n\n        </>\n    )\n}\n\nfunction ActiveTest(props: { test: JDTestRunner }) {\n    const { test } = props\n    const { commands } = test\n    const status = useChange(test, t => t.status)\n    const handleRestart = () => test.start()\n    const handleNext = () => test.next()\n    // auto start\n    useEffect(() => test.start(), [test])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">DO</Typography>\n                <Box m={2}>\n                    <Typography variant=\"body1\">{test.prompt}</Typography>\n                </Box>\n                <Typography variant=\"h5\">TEST</Typography>\n                <List dense={false}>\n                    {commands.map((cmd, i) => (\n                        <CommandListItem key={i} command={cmd} />\n                    ))}\n                </List>\n                {status === JDTestStatus.Passed && (\n                    <Alert severity=\"success\">Test passed</Alert>\n                )}\n                {status === JDTestStatus.Failed && (\n                    <Alert severity=\"error\">Test failed</Alert>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant={\n                        status === JDTestStatus.Active\n                            ? \"outlined\"\n                            : \"contained\"\n                    }\n                    color={\n                        status === JDTestStatus.Passed ? \"primary\" : undefined\n                    }\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n                <Button variant=\"outlined\" onClick={handleRestart}>\n                    Restart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function ServiceTestRunner(props: {\n    service: JDService\n    serviceTest?: jdtest.ServiceTestSpec\n}) {\n    const {\n        service,\n        serviceTest = serviceTestFromServiceClass(service.serviceClass),\n    } = props\n    const factory = useCallback(\n        service => serviceTest && new JDServiceTestRunner(serviceTest, service),\n        [service, serviceTest]\n    )\n    const testRunner = useServiceClient(service, factory)\n    const currentTest = useChange(testRunner, t => t?.currentTest)\n    const handleSelectTest = (test: JDTestRunner) => {\n        testRunner.currentTest = test\n    }\n\n    if (!serviceTest)\n        return (\n            <Alert severity=\"warning\">\n                Sorry, there are no tests available for service{\" \"}\n                {service.specification.name}.\n            </Alert>\n        )\n\n    if (!testRunner) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={3}>\n                <TestList\n                    testRunner={testRunner}\n                    currentTest={currentTest}\n                    onSelectTest={handleSelectTest}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                {currentTest ? <ActiveTest test={currentTest} /> : <Alert severity={\"info\"}>\n                    Select a test to get started.\n                </Alert>}\n            </Grid>\n            {service && (\n                <Grid item xs={3}>\n                    <DashboardDevice\n                        showAvatar={true}\n                        showHeader={true}\n                        device={service.device}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}