{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/SaveAlt.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/sensoraggregatorclient.ts","webpack://jacdac-docs/./src/components/ReadingFieldGrid.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/EventSelect.tsx","webpack://jacdac-docs/./src/components/DataSetGrid.tsx","webpack://jacdac-docs/./src/pages/tools/collector.tsx"],"names":["SensorAggregatorClient","service","registersUseAcks","setInputs","cfg","error","mapType","tp","SensorAggregatorSampleType","msg","Error","inputs","totalSampleSize","map","input","deviceId","serviceIndex","serviceClass","specification","serviceSpecificationFromClassIdentifier","toString","freeze","readingReg","packets","find","isReading","sampleType","undefined","sampleSize","sampleShift","fields","field","Math","abs","storage","shift","bufferConcat","fromHex","Uint8Array","jdpack","JD_SERIAL_MAX_PAYLOAD_SIZE","unshift","samplingInterval","samplesInWindow","register","SensorAggregatorReg","sendSetAsync","bufferConcatMany","collect","numSamples","sendSetPackedAsync","subscribeSample","handler","reg","mount","subscribe","REPORT_RECEIVE","bufferToArray","data","NumberFormat","getReg","id","f","refresh","stats","info","r","intValue","Object","keys","JDServiceClient","useStyles","makeStyles","createStyles","vmiddle","verticalAlign","ReadingFieldGridItem","props","handleRegisterCheck","recording","registerChecked","liveDataSet","gridBreakpoints","useGridBreakpoints","classes","deviceName","useDeviceName","device","handleCheck","name","color","colorOf","ReadingFieldGrid","readingRegisters","registerIdsChecked","indexOf","itemCount","useContext","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","theme","formControl","minWidth","selectEmpty","marginTop","spacing","EventSelect","eventId","onChange","label","filter","className","JacdacContext","bus","events","useChange","arrayConcatMany","devices","services","event","selectedEvent","node","handleChange","ev","target","value","clsx","qualifiedName","friendlyName","DataSetGrid","tables","handleDeleteTable","ServiceManagerContext","fileStorage","length","handleDownload","table","sep","csv","toCSV","saveText","handelDelete","rows","prettyDuration","duration","headers","join","root","marginBottom","grow","flexGrow","marginRight","segment","row","buttons","trend","width","LIVE_HORIZON","createDataSet","registers","live","palette","colors","i","set","FieldDataSet","maxRows","Collector","useState","setRegisterIdsChecked","aggregatorId","setAggregatorId","setRecording","setTables","setRecordingLength","prefix","setPrefix","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","setLiveDataSet","setLiveDataTimestamp","triggerEventId","setTriggerEventId","chartPalette","useChartPalette","srv","isSensor","readingRegister","recordingRegisters","aggregators","SRV_SENSOR_AGGREGATOR","aggregator","samplingIntervalDelayi","parseInt","samplingCount","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","triggerEvent","startEnabled","useEffect","un","EVENT","toggleRecording","createSensorConfig","saveConfig","sensorConfig","JSON","stringify","newDataSet","registerIds","splice","push","sort","stopRecording","startRecording","client","startStreamingRegisters","console","log","streamers","REPORT_UPDATE","streamer","handleSamplingIntervalChange","trim","handleSamplingDurationChange","handlePrefixChange","handleTriggerChange","handleAggregatorChecked","updateLiveData","timestamp","throttleUpdate","throttle","addRow","values","forEach","sendSetIntAsync","interval","setInterval","stopStreaming","clearInterval","startAdornment"],"mappings":"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","file":"component---src-pages-tools-collector-tsx-0dc3a9608117192d048c.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import {\n    SensorAggregatorReg,\n    SensorAggregatorSampleType,\n} from \"../../jacdac-spec/dist/specconstants\"\nimport { bufferToArray, NumberFormat } from \"./buffer\"\nimport { JD_SERIAL_MAX_PAYLOAD_SIZE, REPORT_RECEIVE } from \"./constants\"\nimport { jdpack } from \"./pack\"\nimport { JDRegister } from \"./register\"\nimport { JDService } from \"./service\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { isReading, serviceSpecificationFromClassIdentifier } from \"./spec\"\nimport { bufferConcat, bufferConcatMany, fromHex } from \"./utils\"\n\nexport interface SensorAggregatorInputConfig {\n    serviceClass: number\n    // if specified, also specify serviceIndex\n    deviceId?: string\n    serviceIndex?: number\n}\n\nexport interface SensorAggregatorConfig {\n    samplingInterval: number // ms\n    samplesInWindow: number\n    inputs: SensorAggregatorInputConfig[]\n}\n\nexport interface SensorAggregatorStats {\n    numSamples: number\n    sampleSize: number\n}\n\nexport class SensorAggregatorClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        this.service.registersUseAcks = true\n    }\n\n    async setInputs(cfg: SensorAggregatorConfig) {\n        function error(msg: string) {\n            throw new Error(\"Aggregator inputs: \" + msg)\n        }\n        function mapType(tp: number) {\n            switch (tp) {\n                case 1:\n                    return SensorAggregatorSampleType.U8\n                case 2:\n                    return SensorAggregatorSampleType.U16\n                case 4:\n                    return SensorAggregatorSampleType.U32\n                case -1:\n                    return SensorAggregatorSampleType.I8\n                case -2:\n                    return SensorAggregatorSampleType.I16\n                case -4:\n                    return SensorAggregatorSampleType.I32\n                default:\n                    error(\"unknown storage type\")\n            }\n        }\n\n        if (!cfg || !cfg.inputs) error(\"invalid input format\")\n\n        let totalSampleSize = 0\n        const inputs = cfg.inputs?.map(input => {\n            const { deviceId, serviceIndex, serviceClass } = input\n            if (!!deviceId !== !!serviceIndex)\n                error(`deviceId and serviceIndex must be specified together`)\n            const specification = serviceSpecificationFromClassIdentifier(\n                serviceClass\n            )\n            if (!specification)\n                error(\n                    `missing specification from service 0x${serviceClass.toString(\n                        16\n                    )}`\n                )\n            const freeze = !!deviceId\n            const readingReg = specification.packets.find(isReading)\n            if (!readingReg)\n                error(\n                    `service 0x${serviceClass.toString(\n                        16\n                    )} does not have a reading register`\n                )\n            let sampleType: SensorAggregatorSampleType = undefined\n            let sampleSize = 0\n            let sampleShift = 0\n            for (const field of readingReg.fields) {\n                sampleSize += Math.abs(field.storage)\n                if (sampleType === undefined) {\n                    sampleType = mapType(field.storage)\n                    sampleShift = field.shift || 0\n                }\n                if (\n                    sampleType != mapType(field.storage) ||\n                    sampleShift != (field.shift || 0)\n                )\n                    error(\"heterogenous field types\")\n            }\n            totalSampleSize += sampleSize\n            return bufferConcat(\n                freeze ? fromHex(deviceId) : new Uint8Array(8),\n                jdpack(\"u32 u8 u8 u8 i8\", [\n                    serviceClass,\n                    freeze ? serviceIndex : 0,\n                    sampleSize,\n                    sampleType,\n                    sampleShift,\n                ])\n            )\n        })\n\n        if (totalSampleSize > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            error(\"samples won't fit in packet\")\n\n        // u32 is x[4]\n        inputs.unshift(\n            jdpack(\"u16 u16 u32\", [\n                cfg.samplingInterval,\n                cfg.samplesInWindow,\n                0,\n            ])\n        )\n        await this.service\n            .register(SensorAggregatorReg.Inputs)\n            .sendSetAsync(bufferConcatMany(inputs))\n    }\n\n    async collect(numSamples: number) {\n        await this.service\n            .register(SensorAggregatorReg.StreamingSamples)\n            .sendSetPackedAsync(\"u32\", [numSamples])\n    }\n\n    subscribeSample(handler: (sample: number[]) => void): () => void {\n        const reg = this.service.register(SensorAggregatorReg.CurrentSample)\n        return this.mount(\n            reg.subscribe(REPORT_RECEIVE, () =>\n                handler(bufferToArray(reg.data, NumberFormat.Float32LE))\n            )\n        )\n    }\n\n    private async getReg(id: SensorAggregatorReg, f: (v: JDRegister) => any) {\n        const reg = this.service.register(id)\n        await reg.refresh()\n        return f(reg)\n    }\n\n    async stats(): Promise<SensorAggregatorStats> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const info: any = {\n            numSamples: this.getReg(\n                SensorAggregatorReg.NumSamples,\n                r => r.intValue\n            ),\n            sampleSize: this.getReg(\n                SensorAggregatorReg.SampleSize,\n                r => r.intValue\n            ),\n        }\n        for (const id of Object.keys(info)) {\n            info[id] = await info[id]\n        }\n        return info\n    }\n}\n","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    createStyles,\n    Grid,\n    makeStyles,\n    Switch,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport DeviceActions from \"./DeviceActions\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport useDeviceName from \"./devices/useDeviceName\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister\n    handleRegisterCheck: (register: JDRegister) => void\n    recording: boolean\n    registerChecked: boolean\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        register,\n        handleRegisterCheck,\n        recording,\n        registerChecked,\n        liveDataSet,\n    } = props\n    const gridBreakpoints = useGridBreakpoints()\n    const classes = useStyles()\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return (\n        <Grid item {...gridBreakpoints} key={\"source\" + register.id}>\n            <Card>\n                <CardHeader\n                    subheader={register.service.name}\n                    title={`${deviceName}/${register.name}`}\n                    action={\n                        <DeviceActions\n                            device={register.service.device}\n                            showReset={true}\n                        />\n                    }\n                />\n                <CardContent>\n                    {register.fields.map(field => (\n                        <span key={field.id}>\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"large\"\n                                style={{\n                                    color:\n                                        (registerChecked &&\n                                            liveDataSet?.colorOf(field)) ||\n                                        \"#ccc\",\n                                }}\n                            />\n                            {field.name}\n                        </span>\n                    ))}\n                </CardContent>\n                <CardActions>\n                    <Switch\n                        disabled={recording}\n                        onChange={handleCheck}\n                        checked={registerChecked}\n                    />\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[]\n    registerIdsChecked: string[]\n    recording?: boolean\n    handleRegisterCheck: (register: JDRegister) => void\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        readingRegisters,\n        registerIdsChecked,\n        recording,\n        handleRegisterCheck,\n        liveDataSet,\n    } = props\n\n    return (\n        <Grid container spacing={2}>\n            {readingRegisters.map(register => {\n                const registerChecked =\n                    registerIdsChecked.indexOf(register.id) > -1\n                return (\n                    <ReadingFieldGridItem\n                        key={register.id}\n                        register={register}\n                        registerChecked={registerChecked}\n                        recording={recording}\n                        handleRegisterCheck={handleRegisterCheck}\n                        liveDataSet={liveDataSet}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import React, { useContext } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n// tslint:disable-next-line: no-submodule-imports\nimport InputLabel from '@material-ui/core/InputLabel';\n// tslint:disable-next-line: no-submodule-imports\nimport MenuItem from '@material-ui/core/MenuItem';\n// tslint:disable-next-line: no-submodule-imports\nimport FormHelperText from '@material-ui/core/FormHelperText';\n// tslint:disable-next-line: no-submodule-imports\nimport FormControl from '@material-ui/core/FormControl';\n// tslint:disable-next-line: no-submodule-imports\nimport Select from '@material-ui/core/Select';\nimport { JDEvent } from '../../jacdac-ts/src/jdom/event';\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport useChange from '../jacdac/useChange';\nimport clsx from 'clsx';\nimport { arrayConcatMany } from '../../jacdac-ts/src/jdom/utils';\nimport { JDDevice } from '../../jacdac-ts/src/jdom/device';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\nexport default function EventSelect(props: {\n    eventId: string,\n    onChange: (eventId: string) => void,\n    label: string,\n    filter?: (event: JDEvent) => boolean,\n    className?: string\n}) {\n    const { eventId, onChange, label, filter, className } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const events: JDEvent[] = useChange(bus, () => arrayConcatMany(arrayConcatMany(\n        bus.devices().map((device: JDDevice) => device.services()\n            .map(service => service.events.filter(event => !filter || filter(event)))\n        )\n    )))\n    const selectedEvent = bus.node(eventId) as JDEvent\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string);\n    };\n\n    return (\n        <FormControl variant=\"outlined\" className={clsx(className, classes.formControl)}>\n            <InputLabel key=\"label\">{label}</InputLabel>\n            <Select\n                key=\"select\"\n                value={selectedEvent ? eventId : \"\"}\n                onChange={handleChange}\n                label={selectedEvent?.qualifiedName}>\n                <MenuItem key={\"none\"} value={\"\"}>\n                    <em>None</em>\n                </MenuItem>\n                {events.map(ev => <MenuItem key={ev.id} value={ev.id}>{ev.friendlyName}</MenuItem>)}\n            </Select>\n        </FormControl>\n    );\n}","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@material-ui/core\";\nimport { Button, IconButton } from \"gatsby-theme-material-ui\";\nimport React, { useContext } from \"react\";\nimport { prettyDuration } from \"../../jacdac-ts/src/jdom/pretty\";\nimport ServiceManagerContext from \"./ServiceManagerContext\";\nimport Trend from \"./Trend\";\nimport useGridBreakpoints from './useGridBreakpoints';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FieldDataSet from \"./FieldDataSet\";\n\n\nexport default function DataSetGrid(props: {\n    tables: FieldDataSet[],\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { tables, handleDeleteTable } = props;\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const gridBreakpoints = useGridBreakpoints(tables?.length)\n\n    const handleDownload = (table: FieldDataSet) => () => {\n        const sep = ','\n        const csv = table.toCSV(sep)\n        fileStorage.saveText(`${table.name}.csv`, csv)\n    }\n    const handelDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n    return <Grid container spacing={2}>\n        {tables.map((table) =>\n            <Grid item {...gridBreakpoints} key={`result` + table.id}>\n                <Card>\n                    <CardHeader\n                        subheader={`${table.rows.length} rows, ${prettyDuration(table.duration)}`} />\n                    <CardContent>\n                        <div>{table.headers.join(', ')}</div>\n                        <Trend dataSet={table} height={8} mini={true} />\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<SaveAltIcon />}\n                            onClick={handleDownload(table)}>\n                            Save\n                        </Button>\n                        {handleDeleteTable &&\n                            <IconButton onClick={handelDelete(table)}>\n                                <DeleteIcon />\n                            </IconButton>}\n                    </CardActions>\n                </Card>\n            </Grid>)}\n    </Grid>\n}","import React, { useState, useContext, useEffect } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Button, TextField, InputAdornment, createStyles, Switch, Card, CardActions } from '@material-ui/core';\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from '@material-ui/icons/Stop';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from '@material-ui/icons/Save';\nimport useChange from '../../jacdac/useChange';\nimport { JDBus } from '../../../jacdac-ts/src/jdom/bus'\nimport FieldDataSet from '../../components/FieldDataSet';\nimport Trend from '../../components/Trend';\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../../components/ui/Alert\";\nimport EventSelect from '../../components/EventSelect';\nimport { JDEvent } from '../../../jacdac-ts/src/jdom/event';\nimport { EVENT, REPORT_UPDATE, SRV_SENSOR_AGGREGATOR } from '../../../jacdac-ts/src/jdom/constants';\nimport { arrayConcatMany, throttle } from '../../../jacdac-ts/src/jdom/utils';\nimport DataSetGrid from '../../components/DataSetGrid';\nimport { JDRegister } from '../../../jacdac-ts/src/jdom/register';\nimport ReadingFieldGrid from '../../components/ReadingFieldGrid';\nimport DeviceCardHeader from '../../components/DeviceCardHeader';\nimport { SensorAggregatorClient } from '../../../jacdac-ts/src/jdom/sensoraggregatorclient';\nimport { Link } from 'gatsby-theme-material-ui';\nimport { JDService } from '../../../jacdac-ts/src/jdom/service';\nimport ServiceManagerContext from '../../components/ServiceManagerContext';\nimport useChartPalette from '../../components/useChartPalette';\nimport { isSensor } from '../../../jacdac-ts/src/jdom/spec';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        marginBottom: theme.spacing(1)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    field: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1.5)\n    },\n    segment: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    row: {\n        marginBottom: theme.spacing(0.5)\n    },\n    buttons: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(2)\n    },\n    trend: {\n        width: theme.spacing(10)\n    },\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live)\n        set.maxRows = LIVE_HORIZON + 4\n\n    return set;\n}\n\nexport default function Collector() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const [recording, setRecording] = useState(false)\n    const [tables, setTables] = useState<FieldDataSet[]>([])\n    const [, setRecordingLength] = useState(0)\n    const [prefix, setPrefix] = useState(\"data\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"100\")\n    const [samplingDuration, setSamplingDuration] = useState(\"10\")\n    const [liveDataSet, setLiveDataSet] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const chartPalette = useChartPalette()\n    const readingRegisters = useChange(bus, bus =>\n        bus.devices().map(device => device\n            .services().find(srv => isSensor(srv.specification))\n            ?.readingRegister\n        ).filter(reg => !!reg))\n    const recordingRegisters = readingRegisters\n        .filter(reg => registerIdsChecked.indexOf(reg.id) > -1)\n    const aggregators: JDService[] = useChange(bus, bus => bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR }))\n    const aggregator: JDService = aggregators.find(srv => srv.id == aggregatorId)\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(parseFloat(samplingDuration) * 1000 / samplingIntervalDelayi)\n    const errorSamplingIntervalDelay = isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const triggerEvent = bus.node(triggerEventId) as JDEvent;\n    const startEnabled = !!recordingRegisters?.length\n\n    useEffect(() => {\n        //console.log(`trigger event`, triggerEventId, triggerEvent)\n        const un = triggerEvent?.subscribe(EVENT, () => {\n            //console.log(`trigger toggle recoring`, recording)\n            toggleRecording()\n        })\n        //console.log(`mounted`, triggerEvent)\n        return () => {\n            //console.log(`unmount trigger`)\n            if (un) un()\n        }\n    }, [triggerEvent, recording, registerIdsChecked, liveDataSet])\n\n    const createSensorConfig = () => ({\n        samplingInterval: samplingIntervalDelayi,\n        samplesInWindow: 10,\n        inputs: recordingRegisters.map(reg => ({\n            serviceClass: reg.service.serviceClass\n        }))\n    })\n    const saveConfig = () => {\n        const sensorConfig = JSON.stringify(createSensorConfig(), null, 2)\n        fileStorage.saveText(`${prefix || \"jacdac\"}-sensor-config.json`, sensorConfig)\n    }\n    const newDataSet = (registerIds: string[], live: boolean) => registerIds.length\n        ? createDataSet(\n            bus,\n            readingRegisters.filter(reg => registerIds.indexOf(reg.id) > -1),\n            `${prefix || \"data\"}${tables.length}`,\n            live,\n            chartPalette)\n        : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1)\n            registerIdsChecked.splice(i, 1)\n        else\n            registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveDataSet(newDataSet(registerIdsChecked, true))\n    }\n    const stopRecording = () => {\n        if (recording) {\n            //console.log(`stop recording`, liveDataSet)\n            setTables([liveDataSet, ...tables])\n            setLiveDataSet(newDataSet(registerIdsChecked, true))\n            setRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!recording && recordingRegisters.length) {\n            setLiveDataSet(newDataSet(registerIdsChecked, false))\n            setRecording(true)\n            if (aggregator) {\n                const client = new SensorAggregatorClient(aggregator)\n                await client.setInputs(createSensorConfig())\n                client.collect(samplingCount)\n            }\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg => reg.subscribe(REPORT_UPDATE, () => { }))\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (recording)\n            stopRecording()\n        else\n            startRecording()\n    }\n    const handleSamplingIntervalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handlePrefixChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPrefix(event.target.value.trim())\n    }\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n    const handleDeleteTable = (table: FieldDataSet) => {\n        const i = tables.indexOf(table)\n        if (i > -1) {\n            tables.splice(i, 1)\n            setTables([...tables])\n        }\n    }\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? '' : srv?.id\n        setAggregatorId(id);\n    }\n    const updateLiveData = () => {\n        setLiveDataSet(liveDataSet);\n        setRecordingLength(liveDataSet.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveDataSet) return;\n        //console.log(values)\n        liveDataSet.addRow(values)\n        if (recording && liveDataSet.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return;\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg => reg.sendSetIntAsync(samplingIntervalDelayi));\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error || (aggregator && recording)) return undefined;\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi);\n        const stopStreaming = startStreamingRegisters()\n        return () => {\n            clearInterval(interval);\n            stopStreaming();\n        }\n    }, [recording, samplingIntervalDelayi, samplingCount, registerIdsChecked, aggregator]);\n    useEffect(() => {\n        if (aggregator) {\n            const client = new SensorAggregatorClient(aggregator)\n            return client.subscribeSample(values => addRow(values))\n        }\n        return () => { }\n    }, [recording, liveDataSet, registerIdsChecked, aggregator])\n\n    return <div className={classes.root}>\n        <h1>Data Collector</h1>\n        <p>\n            Use this page to collect streaming data from Jacdac devices into various output formats.\n        </p>\n        {!!aggregators.length && <div key=\"aggregators\">\n            <h3>(Optional) Choose a data aggregator</h3>\n            <p>A <Link to=\"/services/aggregator\">data aggregator</Link> service collects collects sensor data on the bus and returns an aggregated at regular intervals.</p>\n            <Grid container>\n                {aggregators.map(aggregator => <Grid key={'aggregate' + aggregator.id} item xs={4}>\n                    <Card>\n                        <DeviceCardHeader device={aggregator.device} showMedia={true} />\n                        <CardActions>\n                            <Switch checked={aggregatorId == aggregator.id} disabled={recording} onChange={handleAggregatorChecked(aggregator)} />\n                        </CardActions>\n                    </Card>\n                </Grid>)}\n            </Grid>\n        </div>}\n        <div key=\"sensors\">\n            <h3>Choose sensors</h3>\n            {!readingRegisters.length && <Alert className={classes.grow} severity=\"info\">Waiting for sensor...</Alert>}\n            {!!readingRegisters.length && <ReadingFieldGrid\n                readingRegisters={readingRegisters}\n                registerIdsChecked={registerIdsChecked}\n                recording={recording}\n                liveDataSet={liveDataSet}\n                handleRegisterCheck={handleRegisterCheck}\n            />}\n        </div>\n        <div key=\"record\">\n            <h3>Record data</h3>\n            {aggregator && <p>Record the sensor input configuration in order to up your ML model later on.</p>}\n            <div className={classes.buttons}>\n                <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color={recording ? \"secondary\" : \"primary\"}\n                    aria-label=\"start/stop recording\"\n                    title=\"start/stop recording\"\n                    onClick={toggleRecording}\n                    startIcon={recording ? <StopIcon /> : <PlayArrowIcon />}\n                    disabled={!startEnabled}\n                >{recording ? \"Stop\" : \"Start\"}</Button>\n                {aggregator && <Button\n                    variant=\"contained\"\n                    title=\"save sensor input configuration\"\n                    onClick={saveConfig}\n                    startIcon={<SaveIcon />}\n                    disabled={recording}>\n                    Save configuration\n                </Button>}\n            </div>\n            <div className={classes.row}>\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingIntervalDelay}\n                    disabled={recording}\n                    label=\"Sampling interval\"\n                    value={samplingIntervalDelay}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">ms</InputAdornment>,\n                    }}\n                    onChange={handleSamplingIntervalChange} />\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingDuration}\n                    disabled={recording}\n                    label=\"Sampling duration\"\n                    value={samplingDuration}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">s</InputAdornment>,\n                    }}\n                    onChange={handleSamplingDurationChange} />\n                <TextField\n                    className={classes.field}\n                    disabled={recording}\n                    label=\"File name prefix\"\n                    value={prefix}\n                    variant=\"outlined\"\n                    onChange={handlePrefixChange} />\n                <EventSelect className={classes.field} eventId={triggerEventId} onChange={handleTriggerChange} label={\"Start Event\"} />\n            </div>\n        </div>\n        {liveDataSet && <Trend key=\"trends\" height={12} dataSet={liveDataSet} horizon={LIVE_HORIZON} dot={true} gradient={true} />}\n        {\n            !!tables.length && <div key=\"recordings\">\n                <h3>Recordings</h3>\n                <DataSetGrid tables={tables} handleDeleteTable={handleDeleteTable} />\n            </div>\n        }\n    </div >;\n\n    //{liveDataSet && <DataSetTable key=\"datasettable\" className={classes.segment} dataSet={liveDataSet} maxRows={3} minRows={3} />}\n\n}\n"],"sourceRoot":""}