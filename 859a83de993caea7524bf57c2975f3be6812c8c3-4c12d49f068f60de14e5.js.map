{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/HourglassEmpty.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayCircleFilled.js","webpack://jacdac-docs/./jacdac-ts/jacdac-spec/spectool/jdtestfuns.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx","webpack://jacdac-docs/./src/components/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack://jacdac-docs/./jacdac-ts/src/test/testrunner.ts","webpack://jacdac-docs/./src/components/test/ServiceTestRunner.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts"],"names":["getTestCommandFunctions","testFunctions","filter","f","context","getTestExpressionFunctions","id","args","prompt","undefined","refresh_env","registers","k","register","retry","val","refresh","unpackedValue","writeReg","reg","fmt","ev","sendSetPackedAsync","VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","writeRegister","jdreg","packFormat","lookup","e","root","type","object","fld","property","field","fields","value","refreshEnvironment","JDServiceClient","VMEnvironment","notifyOnChange","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","serviceEnv","getService","getRootName","Object","values","forEach","s","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","lit","useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","useDeviceSpecification","imageUrl","useDeviceImage","DeviceFirmwareVersionChip","firmwareVersionRegister","ControlReg","useRegisterUnpackedValue","firmwareVersion","DeviceTemperatureChip","tempRegister","temperature","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","identifierToUrlPath","deviceId","useServiceRole","useState","setRole","useEffect","ROLE_CHANGE","ServiceRole","useContext","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","useChange","_","DashboardServiceWidgetItem","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","expanded","visible","spec","useMemo","ids","indexOf","slice","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_SETTINGS","SRV_PROTO_TEST","DashboardDevice","serviceFilter","toggleExpanded","variant","showHeader","useDeviceName","services","serviceClass","useMediaQueries","mobile","xs","serviceGridRef","useRef","intersection","useSnackbar","enqueueSnackbar","RESTART","console","debug","shortId","ServiceWidgets","useCallback","srv","isMixin","dependencyId","padding","paddingBottom","serviceIndex","JacdacContext","bus","mgr","setMgr","ROLE_MANAGER_CHANGE","JDTestStatus","JDTestCommandStatus","commandStatusToTestStatus","status","Active","Passed","Failed","NotReady","RequiresUserInput","cmdToTestFunction","cmd","call","t","JDCommandEvaluator","testRunner","command","_prompt","_progress","_status","_startExpressions","_rangeComplete","_eventsComplete","start","ee","getStartVal","r","v","goal","error","testFun","startExprs","exprVisitor","p","ce","eventList","child","findIndex","exprEval","createPrompt","replaceId","a","i","replaceVal","aStart","roundWithPrecision","toString","replace","setEvent","checkExpression","expr","getStart","evaluate","Math","abs","pretify","regSaved","regValue","amtSaved","beginSaved","endSaved","shift","serviceTestRunner","JDTestCommandRunner","_output","message","progress","_commmandEvaluator","reset","output","envChange","isActive","newOutput","finish","cancel","finishCommand","emit","JDTestRunner","testSpec","commands","testCommands","c","_commandIndex","commandIndex","next","newStatus","currentCommand","eventChange","description","index","JDServiceTestRunner","_testIndex","_env","tests","events","substr","currentTest","stats","total","success","failed","indeterminate","test","testIndex","ct","TestStatusIcon","TestListItem","onSelectTest","selected","handleSelectTest","TestList","CommandStatusIcon","CommandListItem","handleAnswer","ActiveTest","handleRestart","handleNext","ServiceTestRunner","serviceTest","serviceTestFromServiceClass","factory","useServiceClient","useGridBreakpoints","itemCount","drawerType","sm","md","lg","xl","DrawerType","deps","client","setClient"],"mappings":"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","file":"859a83de993caea7524bf57c2975f3be6812c8c3-4c12d49f068f60de14e5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdtest.d.ts\" />\n\nexport type JDTestFunctions =\n    | \"changes\"\n    | \"ask\"\n    | \"check\"\n    | \"increases\"\n    | \"decreases\"\n    | \"increasesBy\"\n    | \"decreasesBy\"\n    | \"stepsUpTo\"\n    | \"stepsDownTo\"\n    | \"events\"\n    | \"awaitEvent\"\n    | \"nextEvent\"\n    | \"assign\"\n    | \"closeTo\"\n\nexport function getTestCommandFunctions() {\n    return testFunctions.filter(f => f.context === \"command\" || f.context === \"either\")\n}\n\nexport function getTestExpressionFunctions() {\n    return testFunctions.filter(f => f.context === \"expression\" || f.context === \"either\")\n}\n\nconst testFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"changes\",\n        args: [\"register\"],\n        prompt: `check that {1} changes`,\n        context: \"command\",\n    },\n    {\n        id: \"ask\",\n        args: [],\n        prompt: undefined,\n        context: \"command\",\n    },\n    {\n        id: \"events\",\n        args: [\"events\"],\n        prompt: `check that events {1} are observed`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true] ],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"nextEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `next event must be {1}, then check {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"assign\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"check\",\n        args: [\"boolean\"],\n        prompt: `check that {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"increases\",\n        args: [\"register\"],\n        prompt: `check that {1} increases`,\n        context: \"command\",\n    },\n    {\n        id: \"decreases\",\n        args: [\"register\"],\n        prompt: `check that {1} decreases`,\n        context: \"command\",\n    },\n    {\n        id: \"increasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that  {1} (initially {1:val}) increases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"decreasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `check that {1} (initially {1:val}) decreases by {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsUpTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step up (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"stepsDownTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step down (by ones) from {1:val} to {2:val}`,\n        context: \"command\",\n    },\n    {\n        id: \"start\",\n        args: [\"any\"],\n        prompt: undefined,\n        context: \"expression\",\n    },\n    {\n        id: \"closeTo\",\n        args: [\"number\", \"number\", \"number\"],\n        prompt: `evaluate {1} until it is close to {2:val}, as given by error {3:val}`,\n        context: \"either\",\n    },\n]\n","import { isEvent, isRegister } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\n\nexport async function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\n// TODO: you want [ev] to be PackedValues and handle the arrays yourself.\nasync function writeReg(reg: JDRegister, fmt: string, ev: any) {\n    await reg.sendSetPackedAsync(fmt, [ev], true)\n}\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public writeRegister(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        if (jdreg) {\n            writeReg(jdreg, jdreg.specification?.packFormat, ev)\n            return true\n        }\n        return false\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this._registers)\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(\n        private readonly notifyOnChange: () => void\n    ) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, this.notifyOnChange)\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.notifyOnChange()\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        return this._envs[root]\n    }\n\n    public refreshEnvironment() {\n        Object.values(this._envs).forEach(s => s?.refreshEnvironment())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return undefined\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public writeRegister(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.writeRegister(reg, ev)\n        }\n        return false\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        Object.values(this._envs).forEach(vs => vs.unmount())\n    }\n}\n","/*\nThe JD-VM runs a program, which is a set of handlers. Each handler is of the form\n•\twait on event/condition, followed by a\n•\tsequence of guarded commands – the sequence is executed atomically (though may suspend if it contains a wait)\nAfter a handler finishes executing, it restarts (there is an implicit event loop around all the handlers, as usual). \n \nWe will have a small key-value store to keep program state (perhaps we will have the ability to store lists of values as well as basic values) across the handler executions.\n \nCommands can talk to JD services (probably via roles), as well as read/write program state, and wait on events/expressions. Any command can be guarded by an expression, for conditional execution.\n \nExpressions can be against service registers (as in the test case) and program state.\n \n*/\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env(id.name))\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./devices/DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./devices/DeviceAvatar\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = device\n        ?.service(0)\n        ?.register(ControlReg.FirmwareVersion)\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n\n    return (\n        (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || (\n            <></>\n        )\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    return (\n        (temperature !== undefined && (\n            <Chip size=\"small\" label={`${temperature}°`} />\n        )) || <></>\n    )\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={<DeviceActions device={device} showReset={true} showSettings={showSettings} />}\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n} from \"@material-ui/core\"\nimport React, { useCallback, useEffect, useRef } from \"react\"\nimport {\n    RESTART,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { useSnackbar } from \"notistack\"\n\nconst ignoredServices = [SRV_CONTROL, SRV_LOGGER, SRV_SETTINGS, SRV_PROTO_TEST]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const { xs: mobile } = useMediaQueries()\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffect(() =>\n        device?.subscribe(RESTART, () => {\n            console.debug(`${device.shortId} restarted...`)\n            enqueueSnackbar(`${device.shortId} restarted...`, {\n                variant: \"warning\",\n            })\n        })\n    )\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.filter(srv => !serviceFilter || serviceFilter(srv))\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n    getTestCommandFunctions,\n    JDTestFunctions,\n} from \"../../jacdac-spec/spectool/jdtestfuns\"\nimport { exprVisitor } from \"../../jacdac-spec/spectool/jdutils\"\n\nimport { CHANGE } from \"../jdom/constants\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { JDService } from \"../jdom/service\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { roundWithPrecision } from \"../jdom/utils\"\nimport { unparse, JDExprEvaluator, CallEvaluator, StartMap } from \"../vm/expr\"\nimport { VMServiceEnvironment } from \"../vm/environment\"\n\nexport enum JDTestStatus {\n    NotReady,\n    Active,\n    Passed,\n    Failed,\n}\n\nexport enum JDTestCommandStatus {\n    NotReady,\n    Active,\n    RequiresUserInput,\n    Passed,\n    Failed\n}\n\nfunction commandStatusToTestStatus(status: JDTestCommandStatus) {\n    switch (status) {\n        case JDTestCommandStatus.Active:\n            return JDTestStatus.Active\n        case JDTestCommandStatus.Passed:\n            return JDTestStatus.Passed\n        case JDTestCommandStatus.Failed:\n            return JDTestStatus.Failed\n        case JDTestCommandStatus.NotReady:\n            return JDTestStatus.NotReady\n        case JDTestCommandStatus.RequiresUserInput:\n            return JDTestStatus.Active\n    }\n}\n\nfunction cmdToTestFunction(cmd: jdtest.TestCommandSpec) {\n    const id = (<jsep.Identifier>cmd.call.callee).name\n    return getTestCommandFunctions().find(t => t.id == id)\n}\n\nclass JDCommandEvaluator {\n    private _prompt = \"\"\n    private _progress = \"\"\n    private _status = JDTestCommandStatus.Active\n    private _startExpressions: StartMap = []\n    private _rangeComplete: number = undefined\n    private _eventsComplete: string[] = undefined\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {}\n\n    public get prompt() {\n        return this._prompt\n    }\n    public get status() {\n        return this._status\n    }\n    public get progress() {\n        return this._progress\n    }\n\n    private get env() {\n        return (e: jsep.MemberExpression | string) => {\n            return this.testRunner.serviceTestRunner.lookup(e)\n        }\n    }\n\n    private callEval(start: StartMap) : CallEvaluator {\n        return (caller: jsep.CallExpression, ee: JDExprEvaluator) => { \n            function getStartVal(e: jsep.Expression) {\n                return start.find(r => r.e === e).v\n            }\n            const callee = <jsep.Identifier>caller.callee\n            switch (callee.name) {\n                case \"start\": \n                    return getStartVal(caller.arguments[0]);\n                case \"closeTo\": {\n                    const args = caller.arguments\n                    const goal = getStartVal(args[1])\n                    const error = getStartVal(args[2])\n                    ee.visitExpression(args[0])\n                    const ev = ee.pop()\n                    return  ev >= goal - error && ev <= goal + error\n                }\n                default: // ERROR\n            }\n            return null;\n        }\n    }\n\n    // TODO: define an interface between test runner and command evaluator\n    // TODO: so this all can be done modularly\n    public start() {\n        this._startExpressions = []\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        const startExprs: jsep.Expression[] = []\n        switch (testFun.id as JDTestFunctions) {\n            case \"check\":\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                exprVisitor(null, args, (p, ce: jsep.CallExpression) => {\n                    if (ce.type !== \"CallExpression\") return\n                    if ((<jsep.Identifier>ce.callee).name === \"start\")\n                        startExprs.push(ce.arguments[0])\n                    else if ((<jsep.Identifier>ce.callee).name === \"closeTo\") {\n                        startExprs.push(ce.arguments[1])\n                        startExprs.push(ce.arguments[2])\n                    }\n                })\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                startExprs.push(args[0])\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\":\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                startExprs.push(args[0])\n                startExprs.push(args[1])\n                break\n            }\n            case \"closeTo\": {\n                startExprs.push(args[1])\n                startExprs.push(args[2])\n                break\n            }\n            case \"assign\": {\n                startExprs.push(args[1])\n                break\n            }\n            case \"events\": {\n                const eventList = this.command.call\n                    .arguments[0] as jsep.ArrayExpression\n                this._eventsComplete = (eventList.elements as jsep.Identifier[]).map(\n                    id => id.name\n                )\n                break\n            }\n        }\n        // evaluate the start expressions and store the results\n        startExprs.forEach(child => {\n            if (this._startExpressions.findIndex(r => r.e === child) < 0) {\n                const exprEval = new JDExprEvaluator(this.env, this.callEval([]))\n                this._startExpressions.push({\n                    e: child,\n                    v: exprEval.eval(child),\n                })\n            }\n        })\n        this.createPrompt()\n    }\n\n    private createPrompt() {\n        const testFun = cmdToTestFunction(this.command)\n        const replaceId = this.command.call.arguments.map((a, i) => {\n            return [`{${i + 1}}`, unparse(a)]\n        })\n        const replaceVal = this.command.call.arguments.map((a, i) => {\n            const aStart = this._startExpressions.find(r => r.e === a)\n            return [\n                `{${i + 1}:val}`,\n                aStart && aStart.v\n                    ? roundWithPrecision(aStart.v, 3).toString()\n                    : unparse(a),\n            ]\n        })\n        this._prompt =\n            testFun.id === \"ask\" || testFun.id === \"say\"\n                ? this.command.prompt.slice(0)\n                : testFun.prompt.slice(0)\n        replaceId.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n        replaceVal.forEach(\n            p => (this._prompt = this._prompt.replace(p[0], p[1]))\n        )\n    }\n\n    public setEvent(ev: string) {}\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(this.env, this.callEval(this._startExpressions))\n        return expr.eval(e)\n            ? JDTestCommandStatus.Passed\n            : JDTestCommandStatus.Active\n    }\n\n    private getStart(e: jsep.Expression) {\n        return this._startExpressions.find(r => r.e === e)\n    }\n\n    public evaluate() {\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        this._status = JDTestCommandStatus.Active\n        this._progress = \"\"\n        switch (testFun.id as JDTestFunctions) {\n            case \"ask\": {\n                this._status = JDTestCommandStatus.RequiresUserInput\n                break\n            }\n            case \"check\": {\n                this._status = this.checkExpression(args[0])\n                break\n            }\n            case \"closeTo\": {\n                const goal = this.getStart(args[1])\n                const error = this.getStart(args[2])\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this.callEval(this._startExpressions)\n                )\n                const ev = expr.eval(args[0]) as number\n                if (Math.abs(ev - goal.v) <= error.v)\n                    this._status = JDTestCommandStatus.Passed\n                this._progress = `current: ${pretify(ev)}; goal: ${pretify(\n                    goal.v\n                )}; error: ${pretify(error.v)}`\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                const regSaved = this._startExpressions.find(\n                    r => r.e === args[0]\n                )\n                const regValue = this.env(unparse(args[0]))\n                const status =\n                    regValue &&\n                    regSaved.v &&\n                    ((testFun.id === \"changes\" && regValue !== regSaved.v) ||\n                        (testFun.id === \"increases\" && regValue > regSaved.v) ||\n                        (testFun.id === \"decreases\" && regValue < regSaved.v))\n                        ? JDTestCommandStatus.Passed\n                        : JDTestCommandStatus.Active\n                this._status = status\n                regSaved.v = regValue\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                const regSaved = this.getStart(args[0])\n                const amtSaved = this.getStart(args[1])\n                const regValue = this.env(unparse(args[0]))\n                if (testFun.id === \"increasesBy\") {\n                    if (regValue >= regSaved.v + amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    } else if (\n                        regValue >= regSaved.v &&\n                        regValue < regSaved.v + amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )}, goal: ${pretify(regSaved.v + amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                } else {\n                    if (regValue <= regSaved.v - amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                        this._progress = \"completed\"\n                    } else if (\n                        regValue <= regSaved.v &&\n                        regValue > regSaved.v - amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${pretify(\n                            regValue\n                        )} goal: ${pretify(regSaved.v - amtSaved.v)}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                }\n                break\n            }\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                this._status = JDTestCommandStatus.Active\n                const regValue = this.env(unparse(args[0]))\n                const beginSaved = this.getStart(args[0])\n                const endSaved = this.getStart(args[1])\n                if (this._rangeComplete === undefined) {\n                    this._rangeComplete = regValue\n                } else {\n                    if (\n                        regValue ===\n                        this._rangeComplete +\n                            (testFun.id == \"stepsUpTo\" ? 1 : -1)\n                    )\n                        this._rangeComplete = regValue\n                    if (this._rangeComplete === endSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    }\n                }\n                if (this._rangeComplete != undefined) {\n                    this._progress =\n                        testFun.id == \"stepsUpTo\"\n                            ? `from ${pretify(beginSaved.v)} up to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                            : `from ${pretify(beginSaved.v)} down to ${pretify(\n                                  this._rangeComplete\n                              )}`\n                }\n                break\n            }\n            case \"events\": {\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev === this._eventsComplete[0]) {\n                        this._eventsComplete.shift()\n                        if (this._eventsComplete.length === 0)\n                            this._status = JDTestCommandStatus.Passed\n                    } else {\n                        this._status = JDTestCommandStatus.Failed\n                    }\n                    this._progress = `got event ${ev}; remaining = [${this._eventsComplete}]`\n                } else {\n                    this._progress = `no events received; remaining = [${this._eventsComplete}]`\n                }\n                break\n            }\n            case \"awaitEvent\":\n            case \"nextEvent\": {\n                const event = args[0] as jsep.Identifier\n                this._progress = `waiting for event ${event.name}`\n                if (this.testRunner.hasEvent) {\n                    const ev = this.testRunner.consumeEvent()\n                    if (ev !== event.name) {\n                        if (testFun.id === \"nextEvent\")\n                            this._status = JDTestCommandStatus.Failed\n                    } else {\n                        // this._status = JDTestCommandStatus.Passed\n                        this._status = this.checkExpression(\n                            this.command.call.arguments[1]\n                        )\n                    }\n                } else {\n                    this._progress = `no events received; ${this._progress}`\n                }\n                break\n            }\n            case \"assign\": {\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this.callEval(this._startExpressions)\n                )\n                const ev = expr.eval(args[1])\n                const reg = args[0] as jsep.Identifier\n                if (this.testRunner.serviceTestRunner.writeRegister(reg.name, ev)) {\n                    this._status = JDTestCommandStatus.Passed\n                    this._progress = `wrote ${ev} to register ${reg.name}`\n                }\n            }\n        }\n\n        function pretify(v: number) {\n            return roundWithPrecision(v, 3)\n        }\n    }\n}\n\nexport interface JDCommandOutput {\n    message: string\n    progress: string\n}\n\nexport class JDTestCommandRunner extends JDEventSource {\n    private _status = JDTestCommandStatus.NotReady\n    private _output: JDCommandOutput = { message: \"\", progress: \"\" }\n    private _commmandEvaluator: JDCommandEvaluator = null\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly command: jdtest.TestCommandSpec\n    ) {\n        super()\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestCommandStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestCommandStatus.Failed &&\n            this.status !== JDTestCommandStatus.Passed\n        )\n    }\n\n    get isActive(): boolean {\n        return (\n            this.status === JDTestCommandStatus.Active ||\n            this.status === JDTestCommandStatus.RequiresUserInput\n        )\n    }\n\n    get output() {\n        return this._output\n    }\n\n    set output(value: JDCommandOutput) {\n        if (\n            !this._output ||\n            this._output.message !== value.message ||\n            this._output.progress !== value.progress\n        ) {\n            this._output = value\n            this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.status = JDTestCommandStatus.NotReady\n        this.output = { message: \"\", progress: \"\" }\n        this._commmandEvaluator = null\n    }\n\n    start() {\n        this.status = JDTestCommandStatus.Active\n        this._commmandEvaluator = new JDCommandEvaluator(\n            this.testRunner,\n            this.command\n        )\n        this._commmandEvaluator.start()\n        this.envChange()\n    }\n\n    envChange() {\n        if (this.isActive) {\n            this._commmandEvaluator.evaluate()\n            const newOutput: JDCommandOutput = {\n                message: this._commmandEvaluator.prompt,\n                progress: this._commmandEvaluator.progress,\n            }\n            this.output = newOutput\n            if (\n                this._commmandEvaluator.status ===\n                JDTestCommandStatus.RequiresUserInput\n            )\n                this.status = JDTestCommandStatus.RequiresUserInput\n            else this.finish(this._commmandEvaluator.status)\n        }\n    }\n\n    cancel() {\n        this.finish(JDTestCommandStatus.Failed)\n    }\n\n    finish(s: JDTestCommandStatus) {\n        if (\n            this.isActive &&\n            (s === JDTestCommandStatus.Failed ||\n                s === JDTestCommandStatus.Passed)\n        ) {\n            this.status = s\n            this.testRunner.finishCommand()\n        }\n    }\n}\n\nexport class JDTestRunner extends JDEventSource {\n    private _status = JDTestStatus.NotReady\n    private _commandIndex: number\n    private _currentEvent: string\n    public readonly commands: JDTestCommandRunner[]\n\n    constructor(\n        public readonly serviceTestRunner: JDServiceTestRunner,\n        private readonly testSpec: jdtest.TestSpec\n    ) {\n        super()\n        this.commands = testSpec.testCommands.map(\n            c => new JDTestCommandRunner(this, c)\n        )\n    }\n\n    public reset() {\n        if (this.status !== JDTestStatus.NotReady) {\n            this._status = JDTestStatus.NotReady\n            this._commandIndex = undefined\n            this._currentEvent = undefined\n            this.commands.forEach(t => t.reset())\n            this.emit(CHANGE)\n        }\n    }\n\n    start() {\n        this.reset()\n        this.status = JDTestStatus.Active\n        this.commandIndex = 0\n        this.serviceTestRunner.refreshEnvironment()\n    }\n\n    next() {\n        this.serviceTestRunner.next()\n    }\n\n    cancel() {\n        this.finish(JDTestStatus.Failed)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestStatus.Failed &&\n            this.status !== JDTestStatus.Passed\n        )\n    }\n\n    get description() {\n        return this.testSpec.description\n    }\n\n    get prompt() {\n        return this.testSpec.prompt\n    }\n\n    finish(newStatus: JDTestStatus) {\n        if (this.status === JDTestStatus.Active) {\n            this.status = newStatus\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    private set commandIndex(index: number) {\n        if (this._commandIndex !== index) {\n            this._commandIndex = index\n            this.currentCommand?.start()\n            this.emit(CHANGE)\n        }\n    }\n\n    public envChange() {\n        if (this.status === JDTestStatus.Active) {\n            this.currentCommand?.envChange()\n        }\n    }\n\n    public eventChange(event: string) {\n        if (this.status === JDTestStatus.Active) {\n            this._currentEvent = event\n            this.envChange()\n        }\n    }\n\n    public get hasEvent() {\n        return this._currentEvent != undefined\n    }\n\n    public consumeEvent() {\n        const ret = this._currentEvent\n        this._currentEvent = undefined\n        return ret\n    }\n\n    public finishCommand() {\n        if (this.commandIndex === this.commands.length - 1)\n            this.finish(commandStatusToTestStatus(this.currentCommand.status))\n        else this.commandIndex++\n    }\n\n    get currentCommand() {\n        return this.commands[this._commandIndex]\n    }\n}\n\nexport class JDServiceTestRunner extends JDServiceClient {\n    private _testIndex = -1\n    private _env: VMServiceEnvironment;\n    public readonly tests: JDTestRunner[]\n\n    constructor(\n        public readonly testSpec: jdtest.ServiceTestSpec,\n        service: JDService\n    ) {\n        super(service)\n        this._env = new VMServiceEnvironment(service)\n        this.tests = this.testSpec.tests.map(t => new JDTestRunner(this, t))\n        this.testSpec.tests.forEach(t => {\n            t.events.forEach(s => {\n                let eventName = s.substr(s.indexOf(\".\")+1)\n                this._env.registerEvent(eventName, () => { this.currentTest?.eventChange(eventName) })\n            })\n            t.registers.forEach(s => {\n                let regName = s.substr(s.indexOf(\".\")+1)\n                this._env.registerRegister(regName, () => { this.currentTest?.envChange() })\n            })\n        })\n        this.start()\n    }\n\n    public refreshEnvironment() {\n        this._env.refreshEnvironment();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        return this._env.lookup(e)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public writeRegister(regName: string, val: any) {\n        return this._env.writeRegister(regName, val)\n    }\n\n    private get testIndex() {\n        return this._testIndex\n    }\n\n    private set testIndex(index: number) {\n        if (this._testIndex !== index) {\n            // stop previous test if needed\n            const ct = this.currentTest\n            if (ct) {\n                if (ct.status === JDTestStatus.Active) {\n                    ct.cancel()\n                }\n            }\n            // update test\n            this._testIndex = index\n            this.emit(CHANGE)\n        }\n    }\n\n    public stats() {\n        const r = {\n            total: this.tests.length,\n            success: 0,\n            failed: 0,\n            indeterminate: 0,\n        }\n        for (const test of this.tests) {\n            switch (test.status) {\n                case JDTestStatus.Failed:\n                    r.failed++\n                    break\n                case JDTestStatus.Passed:\n                    r.success++\n                    break\n                default:\n                    r.indeterminate++\n            }\n        }\n        return r\n    }\n\n    public start() {\n        this.tests.forEach(t => t.reset())\n        this.testIndex = 0\n    }\n\n    public next() {\n        this.testIndex++\n    }\n\n    get currentTest() {\n        return this.tests[this._testIndex]\n    }\n\n    set currentTest(test: JDTestRunner) {\n        const index = this.tests.indexOf(test)\n        if (index > -1) this.testIndex = index\n    }\n}\n","import React, { useCallback, useEffect } from \"react\"\nimport useServiceClient from \"../useServiceClient\"\nimport {\n    Grid,\n    Button,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    Typography,\n    Card,\n    CardContent,\n    CardActions,\n    Box,\n    ListSubheader,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    JDServiceTestRunner,\n    JDTestRunner,\n    JDTestStatus,\n    JDTestCommandRunner,\n    JDTestCommandStatus,\n} from \"../../../jacdac-ts/src/test/testrunner\"\nimport ErrorIcon from \"@material-ui/icons/Error\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\n\nfunction TestStatusIcon(props: { test: JDTestRunner }) {\n    const { test } = props\n    const status = useChange(test, t => t.status)\n\n    switch (status) {\n        case JDTestStatus.Active:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction TestListItem(props: {\n    test: JDTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { test, currentTest, onSelectTest } = props\n    const description = useChange(test, t => t.description)\n    const selected = test === currentTest\n    const handleSelectTest = () => onSelectTest(test)\n\n    return (\n        <ListItem selected={selected} button onClick={handleSelectTest}>\n            <ListItemIcon>\n                <TestStatusIcon test={test} />\n            </ListItemIcon>\n            <ListItemText primary={description} />\n        </ListItem>\n    )\n}\n\nfunction TestList(props: {\n    testRunner: JDServiceTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { testRunner, currentTest, onSelectTest } = props\n    const { tests } = testRunner\n    const stats = useChange(testRunner, r => r.stats())\n\n    return (\n        <Card>\n            <CardContent>\n                <List\n                    dense={true}\n                    subheader={\n                        <ListSubheader>\n                            {`${stats.total} tests, ${stats.success} success, ${stats.failed} failed`}\n                        </ListSubheader>\n                    }\n                >\n                    {tests?.map((test, i) => (\n                        <TestListItem\n                            key={i}\n                            test={test}\n                            currentTest={currentTest}\n                            onSelectTest={onSelectTest}\n                        />\n                    ))}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CommandStatusIcon(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const status = useChange(command, c => c.status)\n\n    switch (status) {\n        case JDTestCommandStatus.Active:\n        case JDTestCommandStatus.RequiresUserInput:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestCommandStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestCommandStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction CommandListItem(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const { message, progress } = useChange(command, c => c.output)\n    const status = useChange(command, c => c.status)\n    const handleAnswer = (status: JDTestCommandStatus) => () =>\n        command.finish(status)\n    return (\n        <>\n            <ListItem selected={status === JDTestCommandStatus.Active}>\n                <ListItemIcon>\n                    <CommandStatusIcon command={command} />\n                </ListItemIcon>\n                <ListItemText\n                    primary={message}\n                    secondary={progress}\n                />\n            </ListItem>\n            {status === JDTestCommandStatus.RequiresUserInput && (\n                <ListItem>\n\n                    <ListItemSecondaryAction>\n                        <Grid container spacing={1}>\n                            <Grid item><Button\n                                variant=\"outlined\"\n                                onClick={handleAnswer(JDTestCommandStatus.Passed)}\n                            >\n                                Yes\n                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleAnswer(JDTestCommandStatus.Failed)}\n                                >\n                                    No\n                    </Button>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )}\n\n        </>\n    )\n}\n\nfunction ActiveTest(props: { test: JDTestRunner }) {\n    const { test } = props\n    const { commands } = test\n    const status = useChange(test, t => t.status)\n    const handleRestart = () => test.start()\n    const handleNext = () => test.next()\n    // auto start\n    useEffect(() => test.start(), [test])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">DO</Typography>\n                <Box m={2}>\n                    <Typography variant=\"body1\">{test.prompt}</Typography>\n                </Box>\n                <Typography variant=\"h5\">TEST</Typography>\n                <List dense={false}>\n                    {commands.map((cmd, i) => (\n                        <CommandListItem key={i} command={cmd} />\n                    ))}\n                </List>\n                {status === JDTestStatus.Passed && (\n                    <Alert severity=\"success\">Test passed</Alert>\n                )}\n                {status === JDTestStatus.Failed && (\n                    <Alert severity=\"error\">Test failed</Alert>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant={\n                        status === JDTestStatus.Active\n                            ? \"outlined\"\n                            : \"contained\"\n                    }\n                    color={\n                        status === JDTestStatus.Passed ? \"primary\" : undefined\n                    }\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n                <Button variant=\"outlined\" onClick={handleRestart}>\n                    Restart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function ServiceTestRunner(props: {\n    service: JDService\n    serviceTest?: jdtest.ServiceTestSpec\n}) {\n    const {\n        service,\n        serviceTest = serviceTestFromServiceClass(service.serviceClass),\n    } = props\n    const factory = useCallback(\n        service => serviceTest && new JDServiceTestRunner(serviceTest, service),\n        [service, serviceTest]\n    )\n    const testRunner = useServiceClient(service, factory)\n    const currentTest = useChange(testRunner, t => t?.currentTest)\n    const handleSelectTest = (test: JDTestRunner) => {\n        testRunner.currentTest = test\n    }\n\n    if (!serviceTest)\n        return (\n            <Alert severity=\"warning\">\n                Sorry, there are no tests available for service{\" \"}\n                {service.specification.name}.\n            </Alert>\n        )\n\n    if (!testRunner) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={3}>\n                <TestList\n                    testRunner={testRunner}\n                    currentTest={currentTest}\n                    onSelectTest={handleSelectTest}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                {currentTest ? <ActiveTest test={currentTest} /> : <Alert severity={\"info\"}>\n                    Select a test to get started.\n                </Alert>}\n            </Grid>\n            {service && (\n                <Grid item xs={3}>\n                    <DashboardDevice\n                        showAvatar={true}\n                        showHeader={true}\n                        device={service.device}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}