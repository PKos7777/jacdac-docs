{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Remove.js","webpack://jacdac-docs/./src/components/ui/ColorInput.tsx","webpack://jacdac-docs/./src/components/widgets/LightWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardLEDPixel.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx"],"names":["ColorInput","props","value","onChange","useState","picker","setPicker","handleClick","handleClose","handleChange","color","hex","colorStyle","background","rgbToHsl","r","g","b","r$","g$","b$","cMin","Math","min","cMax","max","cDelta","h","s","l","maxAndMin","floor","setRgb","el","radius","hsl","fill","setAttribute","undefined","nr","setRgbLeds","pixelsContainer","colors","pixels","children","pn","length","ci","i","pixel","item","LightStripWidget","lightVariant","numPixels","actualBrightness","server","widgetSize","useWidgetTheme","controlBackground","pathRef","useRef","pixelsRef","neoradius","neocircleradius","sw","isJewel","LedPixelVariant","isRing","paint","current","useEffect","p","offset","getTotalLength","extra","step","pos","point","getPointAtLength","x","y","subscribe","RENDER","width","height","d","dx","side","ceil","sqrt","dir","tr","line","n","neoperimeter","margin","ringradius","PI","wm","alpha","opacity","Array","map","_","LightMatrixWidget","columns","rows","widgetRef","pw","ph","ps","pr","m","w","render","ledEls","row","col","index","label","push","LightWidget","service","useRegisterUnpackedValue","register","LedPixelReg","numColumns","useServiceServer","lightCommands","name","args","description","valueDescription","LightCommand","sending","setSending","command","setCommand","setOffset","duration","setDuration","setColors","mode","setMode","dcolors","slice","encoded","useMemo","sargs","vargs","join","c","parseInt","unshift","some","v","isNaN","ms","src","filter","largs","lightEncode","sendCommand","sendCmdAsync","LedPixelCmd","handleCommandChange","ev","newName","target","find","cmd","handleOffsetChange","handleModeChange","handleDurationChange","handleColorChange","cs","handleRemoveColor","pop","handleAddColor","DashboardLEDPixel","services","expanded","SelectWithLabel","fullWidth","required","disabled","error","placeholder","helperText","type","labelId","useId","descrId","hasDescr"],"mappings":"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","file":"264-3c48af6a94a7b11e1f97.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import { Dialog, DialogContent } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { CirclePicker } from \"react-color\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport IconButtonWithTooltip from './IconButtonWithTooltip';\n\nexport default function ColorInput(props: { value: string, onChange: (color: string) => void }) {\n    const { value, onChange } = props;\n    const [picker, setPicker] = useState(false);\n    const handleClick = () => setPicker(!picker);\n    const handleClose = () => setPicker(false);\n    const handleChange = (color: { hex: string }) => {\n        setPicker(false);\n        onChange(color.hex);\n    }\n    const colorStyle = { background: value }\n\n    return (\n        <>\n            <IconButtonWithTooltip title=\"choose color\" style={colorStyle} onClick={handleClick}>\n                <FiberManualRecordIcon />\n            </IconButtonWithTooltip>\n            <Dialog open={picker} onClose={handleClose}>\n                <DialogContent>\n                    <CirclePicker color={value} onChangeComplete={handleChange} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n","import React, { useEffect, useRef } from \"react\"\nimport {\n    LedPixelReg,\n    LedPixelVariant,\n    RENDER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nfunction rgbToHsl(r: number, g: number, b: number): [number, number, number] {\n    const [r$, g$, b$] = [r / 255, g / 255, b / 255]\n    const cMin = Math.min(r$, g$, b$)\n    const cMax = Math.max(r$, g$, b$)\n    const cDelta = cMax - cMin\n    let h: number\n    let s: number\n    let l: number\n    const maxAndMin = cMax + cMin\n\n    //lum\n    l = (maxAndMin / 2) * 100\n\n    if (cDelta === 0) s = h = 0\n    else {\n        //hue\n        if (cMax === r$) h = 60 * (((g$ - b$) / cDelta) % 6)\n        else if (cMax === g$) h = 60 * ((b$ - r$) / cDelta + 2)\n        else if (cMax === b$) h = 60 * ((r$ - g$) / cDelta + 4)\n\n        //sat\n        if (l > 50) s = 100 * (cDelta / (2 - maxAndMin))\n        else s = 100 * (cDelta / maxAndMin)\n    }\n\n    // at least 60% luminosity\n    l = Math.max(l, 60)\n    return [Math.floor(h), Math.floor(s), Math.floor(l)]\n}\n\nfunction setRgb(\n    el: SVGElement,\n    r: number,\n    g: number,\n    b: number,\n    radius?: number\n) {\n    const hsl = rgbToHsl(r, g, b)\n    const [h, s, l] = hsl\n    const fill = `hsl(${h}, ${s}%, ${l}%)`\n    el.setAttribute(\"fill\", fill)\n    if (radius !== undefined) {\n        const nr = radius * (1 + (l - 60) / 200)\n        el.setAttribute(\"r\", \"\" + nr)\n    }\n}\n\nfunction setRgbLeds(\n    pixelsContainer: SVGElement,\n    colors: Uint8Array,\n    radius?: number\n) {\n    const pixels = pixelsContainer?.children\n    if (!colors || !pixels) return\n\n    const pn = Math.min(pixels.length, colors.length / 3)\n    let ci = 0\n    for (let i = 0; i < pn; ++i) {\n        const pixel = pixels.item(i) as SVGElement\n        setRgb(pixel, colors[ci], colors[ci + 1], colors[ci + 2], radius)\n        ci += 3\n    }\n}\n\nfunction LightStripWidget(props: {\n    lightVariant: LedPixelVariant\n    numPixels: number\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n}) {\n    const {\n        lightVariant,\n        numPixels,\n        actualBrightness,\n        server,\n        widgetSize,\n    } = props\n    const { background, controlBackground } = useWidgetTheme()\n    const pathRef = useRef<SVGPathElement>(undefined)\n    const pixelsRef = useRef<SVGGElement>(undefined)\n    const neoradius = 6\n    const neocircleradius = neoradius + 1\n    const sw = neoradius * 2.8\n    const isJewel = lightVariant === LedPixelVariant.Jewel\n    const isRing = lightVariant === LedPixelVariant.Ring\n\n    // paint svg via dom\n    const paint = () =>\n        setRgbLeds(pixelsRef.current, server?.colors, neocircleradius)\n\n    // reposition pixels along the path\n    useEffect(() => {\n        const p = pathRef.current\n        const pixels = pixelsRef.current?.children\n        if (!p || !pixels) return\n\n        const offset = isJewel ? 1 : 0\n        const pn = pixels.length\n        const length = p.getTotalLength()\n        const extra = isRing || isJewel ? 0 : 1\n        const step = length / (pn - offset)\n\n        for (let i = offset; i < pn; ++i) {\n            const pixel = pixels.item(i) as SVGCircleElement\n            const pos = i - offset\n            const point = p.getPointAtLength(step * (pos + extra / 2.0))\n            pixel.setAttribute(\"cx\", \"\" + point.x)\n            pixel.setAttribute(\"cy\", \"\" + point.y)\n        }\n\n        paint()\n    }, [lightVariant, numPixels, pathRef.current, pixelsRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    let width: number\n    let height: number\n\n    let d = \"\"\n    if (lightVariant === LedPixelVariant.Stick) {\n        const dx = neoradius * 3\n        d = `M 0 ${dx}`\n        for (let i = 0; i < numPixels; ++i) {\n            d += ` h ${dx} 0`\n        }\n        width = numPixels * dx\n        height = 2 * dx\n    } else if (lightVariant === LedPixelVariant.Strip) {\n        const side = Math.ceil(Math.sqrt(numPixels) * 1.6108)\n\n        let i = 0\n        let dir = 1\n        const dx = neoradius * 3\n        const tr = neoradius * 6\n\n        let line = 1\n        d = `M ${2 * tr} ${dx}`\n        while (i < numPixels) {\n            d += ` h ${dx * dir}`\n            if (i % side === side - 1) {\n                // turn around\n                d += ` c ${tr * dir} 0, ${tr * dir} ${tr}, 0 ${tr}`\n                dir = -dir\n                line++\n            }\n            i++\n        }\n\n        width = side * dx + 4 * tr\n        height = line * tr + 2 * dx\n    } else {\n        const n = numPixels - (isJewel ? 1 : 0)\n        const neoperimeter = n * (2.7 * neoradius)\n        const margin = 2 * neoradius\n        const ringradius = neoperimeter / (2 * Math.PI)\n        width = 2 * (margin + ringradius)\n        height = width\n        const wm = width - 2 * margin\n        d = `M ${margin},${\n            height >> 1\n        } a ${ringradius},${ringradius} 0 1,0 ${wm},0 a ${ringradius},${ringradius} 0 1,0 -${wm}, 0`\n    }\n\n    // tune opacity to account for global opacity\n    const alpha = 0.7\n    const opacity = alpha + (1 - alpha) * ((actualBrightness || 0) / 0xff)\n\n    return (\n        <SvgWidget width={width} height={height} size={widgetSize}>\n            <>\n                <path\n                    ref={pathRef}\n                    d={d}\n                    fill=\"transparent\"\n                    stroke={background}\n                    strokeWidth={sw}\n                />\n                <g ref={pixelsRef} opacity={opacity}>\n                    {Array(numPixels)\n                        .fill(0)\n                        .map((_, i) => (\n                            <circle\n                                key={\"pixel\" + i}\n                                r={neocircleradius}\n                                cx={width >> 1}\n                                cy={height >> 1}\n                                stroke={controlBackground}\n                                strokeWidth={1}\n                                aria-label={`pixel ${i}`}\n                            >\n                                <title>pixel {i}</title>\n                            </circle>\n                        ))}\n                </g>\n            </>\n        </SvgWidget>\n    )\n}\n\nfunction LightMatrixWidget(props: {\n    lightVariant: LedPixelVariant\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n    columns: number\n    rows: number\n}) {\n    const { columns, rows, server, widgetSize } = props\n    const { background, controlBackground } = useWidgetTheme()\n\n    const widgetRef = useRef<SVGGElement>()\n    // compute size\n    const pw = 8\n    const ph = 8\n    const ps = 0.5\n    const pr = 1\n    const m = 2\n    const w = columns * pw + (columns + 1) * m\n    const h = rows * ph + (rows + 1) * m\n\n    // paint svg via dom\n    const paint = () => setRgbLeds(widgetRef.current, server?.colors)\n\n    // add leds\n    const render = () => {\n        const ledEls: JSX.Element[] = []\n\n        let y = m\n        for (let row = 0; row < rows; row++) {\n            let x = m\n            for (let col = 0; col < columns; col++) {\n                const index = row * columns + col\n                const label = `pixel ${index} at ${row},${col}`\n                ledEls.push(\n                    <rect\n                        key={`l${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={controlBackground}\n                        stroke={\"none\"}\n                        strokeWidth={ps}\n                        aria-label={label}\n                    >\n                        <title>{label}</title>\n                    </rect>\n                )\n                x += pw + m\n            }\n            y += ph + m\n        }\n        return ledEls\n    }\n\n    // render when DOM render\n    useEffect(paint, [columns, rows, widgetRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                width={w}\n                height={h}\n                rx={pr}\n                ry={pr}\n                fill={background}\n            />\n            <g ref={widgetRef}>{render()}</g>\n        </SvgWidget>\n    )\n}\n\nexport default function LightWidget(props: {\n    variant?: \"icon\" | \"\"\n    service: JDService\n    widgetCount?: number\n    visible?: boolean\n}) {\n    const { service } = props\n    const [numPixels] = useRegisterUnpackedValue<[number]>(\n        service.register(LedPixelReg.NumPixels),\n        props\n    )\n    const [lightVariant] = useRegisterUnpackedValue<[LedPixelVariant]>(\n        service.register(LedPixelReg.Variant),\n        props\n    )\n    const [actualBrightness] = useRegisterUnpackedValue<[number]>(\n        service.register(LedPixelReg.ActualBrightness),\n        props\n    )\n    const [numColumns] = useRegisterUnpackedValue<[number]>(\n        service.register(LedPixelReg.NumColumns),\n        props\n    )\n    const server = useServiceServer<LedPixelServer>(service)\n\n    if (numPixels === undefined || actualBrightness === undefined)\n        return <LoadingProgress /> // nothing to render\n\n    if (!numPixels) return null\n\n    if (lightVariant === LedPixelVariant.Matrix) {\n        const columns = numColumns || Math.floor(Math.sqrt(numPixels))\n        const rows = Math.floor(numPixels / columns)\n        return (\n            <LightMatrixWidget\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n                columns={columns}\n                rows={rows}\n            />\n        )\n    } else\n        return (\n            <LightStripWidget\n                numPixels={numPixels}\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n            />\n        )\n}\n","import { Grid, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport React, { ChangeEvent, useMemo, useState } from \"react\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { lightEncode } from \"../../../jacdac-ts/src/jdom/light\";\nimport ColorInput from \"../ui/ColorInput\";\nimport SelectWithLabel from \"../ui/SelectWithLabel\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport RemoveIcon from '@material-ui/icons/Remove';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from '@material-ui/icons/Add';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\";\nimport useServiceServer from \"../hooks/useServiceServer\";\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\";\nimport LightWidget from \"../widgets/LightWidget\";\nimport { LedPixelCmd } from \"../../../jacdac-ts/src/jdom/constants\";\n/*\n0xD6: range P=0 N=length W=1 S=0- range from pixel P, Npixels long (currently unsupported: every Wpixels skip Spixels)\n*/\n\ninterface LightCommand {\n    name: string;\n    args: \"C+\" | \"K\" | \"M\";\n    description: string;\n}\n\nconst lightCommands = [\n    {\n        name: \"setall\",\n        args: \"C+\",\n        description: \"set all pixels in current range to given color pattern\"\n    },\n    {\n        name: \"fade\",\n        args: \"C+\",\n        description: \"set pixels in current range to colors between colors in sequence\"\n    },\n    {\n        name: \"rotfwd\",\n        args: \"K\",\n        description: \"rotate (shift) pixels away from the connector\",\n        valueDescription: \"pixel positions to rotate\"\n    },\n    {\n        name: \"rotback\",\n        args: \"K\",\n        description: \"rotate (shift) pixels towards the connector\",\n        valueDescription: \"pixel positions to rotate\"\n    },\n]\n\nfunction LightCommand(props: { service: JDService, expanded: boolean }) {\n    const { service } = props;\n    const [sending, setSending] = useState(false);\n\n    const [command, setCommand] = useState(lightCommands[1]);\n    const [offset, setOffset] = useState(\"1\");\n    const [duration, setDuration] = useState(\"100\");\n    const [colors, setColors] = useState([\"#0000ff\", \"#ff0000\"]);\n    const [mode, setMode] = useState(0);\n\n    const { name, args, description, valueDescription } = command;\n    const dcolors = args == \"PC\" ? colors.slice(0, 1) : colors;\n\n    const encoded = useMemo(() => {\n        let sargs = \"\";\n        let vargs = [];\n        switch (args) {\n            case \"C+\":\n                sargs = Array(colors.length).fill(\"#\").join(\" \");\n                vargs = colors.map(c => parseInt(c.slice(1), 16));\n                break;\n            case \"K\": {\n                sargs = \"%\";\n                vargs = [parseInt(offset)];\n                break;\n            }\n            case \"PC\": {\n                sargs = \"% #\";\n                vargs = [parseInt(offset), parseInt(colors[0].slice(1), 16)];\n                break;\n            }\n        }\n\n        if (mode)\n            vargs.unshift(mode);\n\n        if (vargs.some(v => v === undefined || isNaN(v)))\n            return undefined;\n\n        let ms = parseInt(duration);\n        if (isNaN(ms))\n            ms = 100;\n        const src = [\n            mode && `tmpmode %`,\n            `${name} ${sargs}`,\n            `show %`\n        ].filter(l => !!l).join('\\n');\n        const largs = [...vargs, ms];\n        const r = lightEncode(src, largs);\n        return r;\n    }, [command, colors, duration, offset, mode]);\n\n    const sendCommand = async () => {\n        if (!encoded) return;\n        try {\n            setSending(true);\n            await service.sendCmdAsync(LedPixelCmd.Run, encoded);\n        }\n        finally {\n            setSending(false)\n        }\n    }\n    const handleCommandChange = (ev: ChangeEvent<{ name?: string; value: unknown; }>) => {\n        const newName = ev.target.value as string;\n        setCommand(lightCommands.find(cmd => cmd.name === newName));\n    }\n    const handleOffsetChange = (ev: any) => {\n        setOffset(ev.target.value);\n    }\n    const handleModeChange = (ev: any) => {\n        setMode(ev.target.value);\n    }\n    const handleDurationChange = (ev: any) => {\n        setDuration(ev.target.value);\n    }\n    const handleColorChange = (index: number) => async (color: string) => {\n        const cs = colors.slice(0);\n        cs[index] = color;\n        setColors(cs);\n    }\n    const handleRemoveColor = () => {\n        const cs = colors.slice(0);\n        cs.pop();\n        setColors(cs);\n    }\n    const handleAddColor = () => {\n        const cs = colors.slice(0);\n        cs.push('#ff0000');\n        setColors(cs);\n    }\n\n    return <>\n        <Grid item>\n            <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n                <Grid item key=\"descr\" xs={12}>\n                    <Typography variant=\"caption\">{description}</Typography>\n                </Grid>\n                <Grid item key=\"select\" xs={12}>\n                    <SelectWithLabel disabled={sending} fullWidth={true} label=\"command\" value={name} onChange={handleCommandChange}>\n                        {lightCommands.map(cmd => <MenuItem key={cmd.name} value={cmd.name}>{cmd.name}</MenuItem>)}\n                    </SelectWithLabel>\n                </Grid>\n                <Grid item key=\"time\" xs={6}>\n                    <TextField variant=\"outlined\" label={\"duration (milliseconds)\"} type=\"number\" value={duration} onChange={handleDurationChange} />\n                </Grid>\n                <Grid item key=\"mode\" xs={6}>\n                    <SelectWithLabel fullWidth={true} label=\"update mode\" value={mode + \"\"} onChange={handleModeChange}>\n                        <MenuItem value={0}>replace</MenuItem>\n                        <MenuItem value={1}>add</MenuItem>\n                        <MenuItem value={2}>substract</MenuItem>\n                        <MenuItem value={3}>multiply</MenuItem>\n                    </SelectWithLabel>\n                </Grid>\n            </Grid>\n        </Grid>\n        <Grid item>\n            <Grid container spacing={1} direction=\"row\"\n                alignItems=\"center\" alignContent=\"flex-start\"\n                justify=\"flex-start\">\n                {(args === \"K\" || args === \"PC\") && <Grid item key=\"K\">\n                    <TextField variant=\"outlined\" type=\"number\" helperText={valueDescription} value={offset} onChange={handleOffsetChange} />\n                </Grid>}\n                {(args === \"C+\" || args === \"PC\") && dcolors.map((c, i) => <Grid item xs key={i}>\n                    <ColorInput value={c} onChange={handleColorChange(i)} />\n                </Grid>)}\n                {args === \"C+\" && <Grid item xs key=\"minuscolor\">\n                    <IconButtonWithTooltip disabled={colors.length < 2} title={\"Remove color\"} onClick={handleRemoveColor}>\n                        <RemoveIcon />\n                    </IconButtonWithTooltip>\n                    <IconButtonWithTooltip disabled={colors.length > 4} title={\"Add color\"} onClick={handleAddColor}>\n                        <AddIcon />\n                    </IconButtonWithTooltip>\n                </Grid>}\n                <Grid item xs key=\"run\">\n                    <IconButtonWithTooltip disabled={!encoded} title={\"Run command\"} onClick={sendCommand}>\n                        <PlayArrowIcon />\n                    </IconButtonWithTooltip>\n                </Grid>\n            </Grid>\n        </Grid>\n    </>\n}\n\nexport default function DashboardLEDPixel(props: DashboardServiceProps) {\n    const { service, services, expanded } = props;\n    const server = useServiceServer<LedPixelServer>(service);\n    return <>\n        {server && <LightWidget widgetCount={services.length} {...props} />}\n        {expanded &&\n            <LightCommand service={service} expanded={expanded} />}\n    </>\n}","import { FormControl, FormHelperText, InputLabel, Select } from \"@material-ui/core\"\nimport React, { ChangeEvent } from \"react\"\nimport { useId } from \"react-use-id-hook\";\n\nexport default function SelectWithLabel(props: {\n    required?: boolean,\n    label?: string,\n    disabled?: boolean,\n    error?: string,\n    value?: string,\n    placeholder?: string,\n    type?: string,\n    fullWidth?: boolean,\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown; }>) => void,\n    helperText?: string,\n    children?: any\n}) {\n    const { label, fullWidth, required, disabled, value, error,\n        placeholder, onChange, children, helperText, type } = props;\n    const labelId = useId();\n    const descrId = useId();\n    const hasDescr = (!!helperText || !!error);\n\n    return <FormControl fullWidth={fullWidth} variant=\"outlined\">\n        <InputLabel id={labelId} key=\"label\">{required ? `${label} *` : label}</InputLabel>\n        <Select\n            disabled={disabled}\n            label={label}\n            value={value}\n            error={!!error}\n            fullWidth={true}\n            placeholder={placeholder}\n            type={type}\n            labelId={labelId}\n            aria-describedby={hasDescr ? descrId : undefined}\n            onChange={onChange}>\n            {children}\n        </Select>\n        {hasDescr && <FormHelperText id={descrId}>{error || helperText}</FormHelperText>}\n    </FormControl >;\n}"],"sourceRoot":""}