{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardBitRadio.tsx"],"names":["DashboardBitRadio","props","service","useState","lastEvents","setLastEvents","appendMessage","data","time","deviceSerial","rssi","payload","evs","slice","msg","push","length","shift","useEffect","subscribe","REPORT_RECEIVE","pkt","values","serviceCommand","BitRadioCmd","NumberReceived","jdunpack","StringReceived","BufferReceived","map","lv","i","filter","v","undefined","join"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGe,SAASA,iBAAT,CAA2BC,KAA3B,EAAyD;AAAA,MAC5DC,OAD4D,GAChDD,KADgD,CAC5DC,OAD4D;;AAAA,kBAEhCC,sDAAQ,CAO1C,EAP0C,CAFwB;AAAA,MAE7DC,UAF6D;AAAA,MAEjDC,aAFiD;;AAWpE,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAwB;AAC1C,QAAI,CAACA,IAAL,EAAW;AAD+B,QAGnCC,IAHmC,GAGKD,IAHL;AAAA,QAG7BE,YAH6B,GAGKF,IAHL;AAAA,QAGfG,IAHe,GAGKH,IAHL;AAAA,QAGNI,OAHM,GAGKJ,IAHL;AAI1C,QAAMK,GAAG,GAAGR,UAAU,CAACS,KAAX,CAAiB,CAAjB,CAAZ;AACA,QAAMC,GAAG,GAAG;AAAEN,UAAI,EAAJA,IAAF;AAAQC,kBAAY,EAAZA,YAAR;AAAsBC,UAAI,EAAJA,IAAtB;AAA4BC,aAAO,EAAPA;AAA5B,KAAZ;AACAC,OAAG,CAACG,IAAJ,CAASD,GAAT;;AACA,WAAOF,GAAG,CAACI,MAAJ,GAAa,EAApB;AAAwBJ,SAAG,CAACK,KAAJ;AAAxB;;AACAZ,iBAAa,CAACO,GAAD,CAAb;AACH,GATD;;AAWAM,yDAAS,CACL;AAAA,WACIhB,OAAO,CAACiB,SAAR,CAAkBC,qFAAlB,EAAkC,UAACC,GAAD,EAAiB;AAC/C,UAAIC,MAAJ;AAD+C,UAEvCf,IAFuC,GAEdc,GAFc,CAEvCd,IAFuC;AAAA,UAEjCgB,cAFiC,GAEdF,GAFc,CAEjCE,cAFiC;;AAG/C,cAAQA,cAAR;AACI,aAAKC,6FAAW,CAACC,cAAjB;AACIH,gBAAM,GAAGI,iFAAQ,CAACnB,IAAD,EAAO,uBAAP,CAAjB;AACA;;AACJ,aAAKiB,6FAAW,CAACG,cAAjB;AACIL,gBAAM,GAAGI,iFAAQ,CAACnB,IAAD,EAAO,mBAAP,CAAjB;AACA;;AACJ,aAAKiB,6FAAW,CAACI,cAAjB;AACIN,gBAAM,GAAGI,iFAAQ,CAACnB,IAAD,EAAO,mBAAP,CAAjB;AACA;AATR;;AAWAD,mBAAa,CAACgB,MAAD,CAAb;AACH,KAfD,CADJ;AAAA,GADK,EAkBL,CAACpB,OAAD,EAAUE,UAAV,CAlBK,CAAT;AAqBA,sBACI,wHACKA,UAAU,CAACyB,GAAX,CAAe,UAACC,EAAD,EAAKC,CAAL;AAAA,wBACZ;AAAK,SAAG,EAAEA;AAAV,OACKD,EAAE,CAACnB,OAAH,CACIqB,MADJ,CACW,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,EAA7B;AAAA,KADZ,EAEIE,IAFJ,CAES,IAFT,CADL,CADY;AAAA,GAAf,CADL,CADJ;AAWH,C","file":"109-334d667f34e337cdb5ba.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { BitRadioCmd } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { REPORT_RECEIVE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { jdunpack, PackedValues } from \"../../../jacdac-ts/src/jdom/pack\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\n\nexport default function DashboardBitRadio(props: DashboardServiceProps) {\n    const { service } = props\n    const [lastEvents, setLastEvents] = useState<\n        {\n            time: number\n            deviceSerial: number\n            rssi: number\n            payload: PackedValues\n        }[]\n    >([])\n\n    const appendMessage = (data: PackedValues) => {\n        if (!data) return\n\n        const [time, deviceSerial, rssi, ...payload] = data\n        const evs = lastEvents.slice(0)\n        const msg = { time, deviceSerial, rssi, payload }\n        evs.push(msg)\n        while (evs.length > 10) evs.shift()\n        setLastEvents(evs)\n    }\n\n    useEffect(\n        () =>\n            service.subscribe(REPORT_RECEIVE, (pkt: Packet) => {\n                let values: PackedValues\n                const { data, serviceCommand } = pkt\n                switch (serviceCommand) {\n                    case BitRadioCmd.NumberReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[3] f64 s\")\n                        break\n                    case BitRadioCmd.StringReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[1] s\")\n                        break\n                    case BitRadioCmd.BufferReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[1] b\")\n                        break\n                }\n                appendMessage(values)\n            }),\n        [service, lastEvents]\n    )\n\n    return (\n        <>\n            {lastEvents.map((lv, i) => (\n                <div key={i}>\n                    {lv.payload\n                        .filter(v => v !== undefined && v !== \"\")\n                        .join(\", \")}\n                </div>\n            ))}\n        </>\n    )\n}\n"],"sourceRoot":""}