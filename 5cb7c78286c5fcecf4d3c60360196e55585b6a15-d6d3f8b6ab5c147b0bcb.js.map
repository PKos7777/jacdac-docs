{"version":3,"sources":["webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts"],"names":["useIdleCallback","cb","timeout","deps","useEffect","window","id","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useFirmwareBlobs","useContext","JacdacContext","bus","DbContext","db","firmwares","loadFirmwares","useCallback","console","log","list","names","missingSlugs","unique","deviceSpecifications","filter","spec","length","map","repo","test","substr","slug","indexOf","fetchLatestRelease","ignoreThrottled","rel","version","warn","fetchReleaseBinary","fw","set","delay","useChangeAsync","uf2s","name","get","blob","parseFirmwareFile","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","undefined","setFirmwareFile","tag","f","cmp","a","b","d","major","minor","patch","pre","i","aa","bb","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","slice","m","exec","split","semverCmp","useFetch","url","options","useState","response","setResponse","error","setError","status","setStatus","loading","setLoading","useEffectAsync","mounted","fetch","res","json","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","repoPath","folder","join","parseRepoUrl","owner","uri","resp","releases","Error","downloadUrl","headers","Accept","req","firmware","fetchText","path","mimeType","text","src","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleases","useGridBreakpoints","itemCount","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAqBe,SAASA,eAAT,CACXC,EADW,EAEXC,OAFW,EAGXC,IAHW,EAIb;AACEC,qBAAS,CAAC,YAAM;AACZ,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAACJ,EAAtC,EAA0C;;AAE1C,QAAI,yBAAyBI,MAA7B,EAAqC;AACjC,UAAMC,EAAE,GAAGD,MAAM,CAACE,mBAAP,CAA2BN,EAA3B,EAA+B;AAAEC,eAAO,EAAPA;AAAF,OAA/B,CAAX;AACA,aAAO;AAAA,eAAMG,MAAM,CAACG,kBAAP,CAA0BF,EAA1B,CAAN;AAAA,OAAP;AACH,KAHD,MAGO;AACH,UAAMA,GAAE,GAAGG,UAAU,CAACR,EAAD,EAAKC,OAAL,CAArB;;AACA,aAAO;AAAA,eAAMQ,YAAY,CAACJ,GAAD,CAAlB;AAAA,OAAP;AACH;AACJ,GAVQ,GAULL,EAVK,EAUDC,OAVC,8CAUYC,IAAI,IAAI,EAVpB,GAAT;AAWH,C;;;;;;;;;;;ACrCD;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASQ,gBAAT,GAA4B;AACvC,oBAAgBC,oBAAU,CAAqBC,sBAArB,CAA1B;AAAA,MAAQC,GAAR,eAAQA,GAAR;;AACA,qBAAeF,oBAAU,CAAiBG,yBAAjB,CAAzB;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,MAAMC,SAAS,GAAGD,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,SAAtB;AAEA,MAAMC,aAAa,GAAGC,qBAAW,4FAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC9BC,mBAAO,CAACC,GAAR;AAD8B;AAAA,mBAEVJ,SAFU,aAEVA,SAFU,uBAEVA,SAAS,CAAEK,IAAX,EAFU;;AAAA;AAExBC,iBAFwB;;AAAA,gBAGzBA,KAHyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKxBC,wBALwB,GAKTC,wBAAM,CACvBC,qCAAoB,GACfC,MADL,CACY,UAAAC,IAAI;AAAA,qBAAI,CAAC,EAACA,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEX,SAAN,CAAgBY,MAAjB,CAAL;AAAA,aADhB,EAC8C;AAD9C,aAEKC,GAFL,CAES,UAAAF,IAAI;AAAA,qBAAIA,IAAI,CAACG,IAAT;AAAA,aAFb,EAGKJ,MAHL,CAGY,UAAAI,IAAI;AAAA,qBAAI,0BAA0BC,IAA1B,CAA+BD,IAA/B,CAAJ;AAAA,aAHhB,EAIKD,GAJL,CAIS,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACE,MAAL,CAAY,sBAAsBJ,MAAlC,CAAJ;AAAA,aAJb,EAKKF,MALL,CAKY,UAAAO,IAAI;AAAA,qBAAIX,KAAK,CAACY,OAAN,CAAcD,IAAd,IAAsB,CAA1B;AAAA,aALhB,CADuB,CALG;AAAA,wDAaXV,YAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAanBU,gBAbmB;AAc1Bd,mBAAO,CAACC,GAAR,kCAA2Ca,IAA3C;AAd0B;AAAA,mBAeRE,qCAAkB,CAACF,IAAD,EAAO;AACvCG,6BAAe,EAAE;AADsB,aAAP,CAfV;;AAAA;AAepBC,eAfoB;;AAAA,gBAkBrBA,GAlBqB,aAkBrBA,GAlBqB,eAkBrBA,GAAG,CAAEC,OAlBgB;AAAA;AAAA;AAAA;;AAmBtBnB,mBAAO,CAACoB,IAAR;AAnBsB;;AAAA;AAuB1BpB,mBAAO,CAACC,GAAR,+BACgCa,IADhC,SACwCI,GAAG,CAACC,OAD5C;AAvB0B;AAAA,mBA0BTE,qCAAkB,CAACP,IAAD,EAAOI,GAAG,CAACC,OAAX,CA1BT;;AAAA;AA0BpBG,cA1BoB;;AA2B1B,gBAAIA,EAAJ,EAAQ;AACJtB,qBAAO,CAACC,GAAR,yBAC0Ba,IAD1B,SACkCI,GAAG,CAACC,OADtC;AAGAtB,uBAAS,CAAC0B,GAAV,CAAcT,IAAd,EAAoBQ,EAApB;AACH,aAhCyB,CAiC1B;;;AAjC0B;AAAA,mBAkCpBE,uBAAK,CAAC,IAAD,CAlCe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAoC9B,CAAC5B,EAAD,EAAKC,SAAL,CApC8B,CAAjC;AAqCAjB,iBAAe,CAACkB,aAAD,EAAgB,KAAhB,EAAuB,CAACF,EAAD,EAAKC,SAAL,CAAvB,CAAf;AACA4B,qCAAc,CACV5B,SADU;AAAA,6FAEV,kBAAMyB,EAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACItB,qBAAO,CAACC,GAAR;AADJ;AAAA,qBAEwBqB,EAFxB,aAEwBA,EAFxB,uBAEwBA,EAAE,CAAEpB,IAAJ,EAFxB;;AAAA;AAEUC,mBAFV;AAGIH,qBAAO,CAACC,GAAR,sBAAiCE,KAAjC;AACMuB,kBAJV,GAIiC,EAJjC;;AAAA,oBAKQvB,KALR,aAKQA,KALR,eAKQA,KAAK,CAAEM,MALf;AAAA;AAAA;AAAA;;AAAA,2DAM2BN,KAN3B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMmBwB,kBANnB;AAAA;AAAA,qBAO+BL,EAAE,CAACM,GAAH,CAAOD,IAAP,CAP/B;;AAAA;AAOkBE,kBAPlB;AAAA;AAAA,qBAQmCC,sCAAiB,CAACD,IAAD,EAAOF,IAAP,CARpD;;AAAA;AAQkBI,sBARlB;AASYA,sBAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,OAAV,CAAkB,UAAAC,OAAO,EAAI;AACzBP,oBAAI,CAACQ,IAAL,CAAUD,OAAV;AACH,eAFD;;AATZ;AAAA;AAAA;;AAAA;AAcIvC,iBAAG,CAACyC,aAAJ,GAAoBT,IAApB;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFU;;AAAA;AAAA;AAAA;AAAA,OAkBV,EAlBU,CAAd;AAqBA,SAAOhC,GAAG,CAACyC,aAAX;AACH;AAEM,SAASC,eAAT,CAAyBC,QAAzB,EAA2C;AAC9CA,UAAQ,GAAGA,QAAQ,CAACC,OAAT,CAAiB,2BAAjB,EAA8C,EAA9C,CAAX;;AACA,qBAAe9C,oBAAU,CAAiBG,yBAAjB,CAAzB;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,MAAMC,SAAS,GAAGD,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,SAAtB;AAEA,MAAM0C,KAAK,GAAGd,mCAAc,CACxB5B,SADwB,4FAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACSwC,QADT;AAAA;AAAA;AAAA;;AAAA,8CAC0BG,SAD1B;;AAAA;AAAA;AAAA,mBAGuB3C,SAHvB,aAGuBA,SAHvB,uBAGuBA,SAAS,CAAE+B,GAAX,CAAeS,QAAf,CAHvB;;AAAA;AAGUR,gBAHV;;AAAA,gBAISA,IAJT;AAAA;AAAA;AAAA;;AAAA,8CAKeW,SALf;;AAAA;AAAA;AAAA,mBAO+BV,sCAAiB,CAACD,IAAD,EAAOQ,QAAP,CAPhD;;AAAA;AAOcN,oBAPd;AAAA,8CAQeA,QARf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFwB,IAaxB,CAACM,QAAD,CAbwB,CAA5B;;AAgBA,MAAMI,eAAe;AAAA,6FAAG,kBAAOC,GAAP,EAAoBC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACd9C,SADc,aACdA,SADc,uBACdA,SAAS,CAAE0B,GAAX,CAAec,QAAf,EAAyBM,CAAzB,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfF,eAAe;AAAA;AAAA;AAAA,KAArB;;AAIA,SAAO;AACHN,iBAAa,EAAEI,KADZ;AAEHE,mBAAe,EAAfA;AAFG,GAAP;AAIH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGD,SAASG,GAAT,CAAaC,CAAb,EAAyBC,CAAzB,EAAqC;AACjC,MAAI,CAACD,CAAL;AACI,QAAI,CAACC,CAAL,EAAQ,OAAO,CAAP,CAAR,KACK,OAAO,CAAP;AAFT,SAGK,IAAI,CAACA,CAAL,EAAQ,OAAO,CAAC,CAAR,CAAR,KACA;AACD,QAAIC,CAAC,GAAGF,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAZ,IAAqBH,CAAC,CAACI,KAAF,GAAUH,CAAC,CAACG,KAAjC,IAA0CJ,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAA9D;AACA,QAAIH,CAAJ,EAAO,OAAOA,CAAP;AACP,QAAIF,CAAC,CAACM,GAAF,CAAM1C,MAAN,IAAgB,CAAhB,IAAqBqC,CAAC,CAACK,GAAF,CAAM1C,MAAN,GAAe,CAAxC,EAA2C,OAAO,CAAP;AAC3C,QAAIoC,CAAC,CAACM,GAAF,CAAM1C,MAAN,GAAe,CAAf,IAAoBqC,CAAC,CAACK,GAAF,CAAM1C,MAAN,IAAgB,CAAxC,EAA2C,OAAO,CAAC,CAAR;;AAC3C,SAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACM,GAAF,CAAM1C,MAAN,GAAe,CAAnC,EAAsC,EAAE2C,CAAxC,EAA2C;AACvC,UAAMC,EAAE,GAAGR,CAAC,CAACM,GAAF,CAAMC,CAAN,CAAX;AACA,UAAME,EAAE,GAAGR,CAAC,CAACK,GAAF,CAAMC,CAAN,CAAX;AACA,UAAI,CAACC,EAAL;AACI,YAAI,CAACC,EAAL,EAAS,OAAO,CAAP,CAAT,KACK,OAAO,CAAC,CAAR;AAFT,aAGK,IAAI,CAACA,EAAL,EAAS,OAAO,CAAP,CAAT,KACA,IAAI,QAAQ1C,IAAR,CAAayC,EAAb,CAAJ;AACD,YAAI,QAAQzC,IAAR,CAAa0C,EAAb,CAAJ,EAAsB;AAClBP,WAAC,GAAGQ,QAAQ,CAACF,EAAD,CAAR,GAAeE,QAAQ,CAACD,EAAD,CAA3B;AACA,cAAIP,CAAJ,EAAO,OAAOA,CAAP;AACV,SAHD,MAGO,OAAO,CAAC,CAAR;AAJN,aAKA,IAAI,QAAQnC,IAAR,CAAa0C,EAAb,CAAJ,EAAsB,OAAO,CAAP,CAAtB,KACA;AACDP,SAAC,GAAGS,MAAM,CAACH,EAAD,EAAKC,EAAL,CAAV;AACA,YAAIP,CAAJ,EAAO,OAAOA,CAAP;AACV;AACJ;;AACD,WAAO,CAAP;AACH;AACJ;;AAED,SAASU,QAAT,CAAkBC,CAAlB,EAAsC;AAClC,MAAI,CAACA,CAAL,EAAQ,OAAO,IAAP;;AACR,MAAI,QAAQA,CAAZ,EAAe;AACX,WAAO;AACHV,WAAK,EAAEW,MAAM,CAACC,gBADX;AAEHX,WAAK,EAAEU,MAAM,CAACC,gBAFX;AAGHV,WAAK,EAAES,MAAM,CAACC,gBAHX;AAIHT,SAAG,EAAE,EAJF;AAKHU,WAAK,EAAE;AALJ,KAAP;AAOH;;AACD,MAAI,QAAQjD,IAAR,CAAa8C,CAAb,CAAJ,EAAqBA,CAAC,GAAGA,CAAC,CAACI,KAAF,CAAQ,CAAR,CAAJ;AACrB,MAAMC,CAAC,GAAG,qEAAqEC,IAArE,CACNN,CADM,CAAV;AAGA,MAAIK,CAAJ,EACI,OAAO;AACHf,SAAK,EAAEO,QAAQ,CAACQ,CAAC,CAAC,CAAD,CAAF,CADZ;AAEHd,SAAK,EAAEM,QAAQ,CAACQ,CAAC,CAAC,CAAD,CAAF,CAFZ;AAGHb,SAAK,EAAEK,QAAQ,CAACQ,CAAC,CAAC,CAAD,CAAF,CAHZ;AAIHZ,OAAG,EAAEY,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKE,KAAL,CAAW,GAAX,CAAP,GAAyB,EAJ3B;AAKHJ,SAAK,EAAEE,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKE,KAAL,CAAW,GAAX,CAAP,GAAyB;AAL7B,GAAP;AAOJ,SAAO,IAAP;AACH;;AAED,SAAST,MAAT,CAAgBX,CAAhB,EAA2BC,CAA3B,EAAsC;AAClC,MAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,CAAP;AACb,MAAID,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAC,CAAR,CAAX,KACK,OAAO,CAAP;AACR;;AAEM,SAASoB,SAAT,CAAmBrB,CAAnB,EAA8BC,CAA9B,EAAyC;AAC5C,MAAMO,EAAE,GAAGI,QAAQ,CAACZ,CAAD,CAAnB;AACA,MAAMS,EAAE,GAAGG,QAAQ,CAACX,CAAD,CAAnB;AACA,MAAI,CAACO,EAAD,IAAO,CAACC,EAAZ,EAAgB,OAAOE,MAAM,CAACX,CAAD,EAAIC,CAAJ,CAAb,CAAhB,KACK,OAAOF,GAAG,CAACS,EAAD,EAAKC,EAAL,CAAV;AACR,C;;;;;;;;AC7ED;AACA;AAEe,SAASa,QAAT,CAAqBC,GAArB,EAAuCC,OAAvC,EAA8D;AACzE,kBAAgCC,kBAAQ,CAAI9B,SAAJ,CAAxC;AAAA,MAAO+B,QAAP;AAAA,MAAiBC,WAAjB,gBADyE,CAEzE;;;AACA,mBAA0BF,kBAAQ,CAAM9B,SAAN,CAAlC;AAAA,MAAOiC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA4BJ,kBAAQ,CAAS9B,SAAT,CAApC;AAAA,MAAOmC,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8BN,kBAAQ,CAAC,IAAD,CAAtC;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB,iBALyE,CAK5B;;;AAE7CC,mCAAc;AAAA,4FACV,iBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIF,wBAAU,CAAC,IAAD,CAAV;AADJ;AAAA;AAAA,qBAG0BG,KAAK,CAACb,GAAD,EAAMC,OAAN,CAH/B;;AAAA;AAGca,iBAHd;;AAAA,kBAIaF,OAAO,EAJpB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKcL,qBALd,GAKuBO,GAAG,CAACP,MAL3B;AAMQC,uBAAS,CAACD,OAAD,CAAT;;AANR,oBAOYA,OAAM,IAAI,GAAV,IAAiBA,OAAM,IAAI,GAPvC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQ+BO,GAAG,CAACC,IAAJ,EAR/B;;AAAA;AAQkBA,kBARlB;;AAAA,kBASiBH,OAAO,EATxB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAUYR,yBAAW,CAACW,IAAD,CAAX;;AAVZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,kBAaaH,OAAO,EAbpB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAcQN,sBAAQ,aAAR;;AAdR;AAAA;AAgBQ,kBAAIM,OAAO,EAAX,EAAeF,UAAU,CAAC,KAAD,CAAV;AAhBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADU;;AAAA;AAAA;AAAA;AAAA,OAoBV,CAACV,GAAD,CApBU,CAAd;AAuBA,SAAO;AACHG,YAAQ,EAARA,QADG;AAEHE,SAAK,EAALA,KAFG;AAGHE,UAAM,EAANA,MAHG;AAIHE,WAAO,EAAPA;AAJG,GAAP;AAMH,C;;;;;;;;;;ACtCD;AACA;AAEA,IAAMO,IAAI,GAAG,yBAAb;AACO,IAAMC,cAAc,GAAG,aAAvB;;AAsCP,SAASC,wBAAT,CACIC,OADJ,EAEyB;AAAA;;AACrB;AACA,MAAMpE,OAAO,GACT,CAAAoE,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,IAAT,MAAkB,MAAlB,eACA,2BAA2BxB,IAA3B,CAAgCuB,OAAO,CAAC5D,IAAxC,CADA,2CACA,OAAgD,CAAhD,CADA,CADJ;AAGA,MAAI,CAACR,OAAL,EAAc,OAAOqB,SAAP;AAEd,SAAO;AACHrB,WAAO,EAAPA,OADG;AAEHsE,OAAG,EAAEF,OAAO,CAACE,GAFV;AAGHC,QAAI,EAAEH,OAAO,CAACG,IAHX;AAIHC,YAAQ,EAAEJ,OAAO,CAACI,QAJf;AAKHC,gBAAY,EAAEL,OAAO,CAACK;AALnB,GAAP;AAOH;;AAED,SAASC,0BAAT,CAAoCC,QAApC,EAA+D;AAC3D,SAAOA,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CACTpF,GADC,CACG4E,wBADH,EAEF/E,MAFE,CAEK,UAAAwF,CAAC;AAAA,WAAI,CAAC,CAACA,CAAN;AAAA,GAFN,EAGFC,IAHE,CAGG,UAACC,CAAD,EAAIF,CAAJ;AAAA,WAAU,CAAC7B,SAAS,CAAC+B,CAAC,CAAC9E,OAAH,EAAY4E,CAAC,CAAC5E,OAAd,CAApB;AAAA,GAHH,CAAP;AAIH;;AAEM,SAAS+E,aAAT,CAAuBpF,IAAvB,EAAqC;AACxC,MAAMqF,OAAO,GAAGrF,IAAI,CAACwB,OAAL,CAAa,yBAAb,EAAwC,EAAxC,CAAhB;AACA,MAAM8D,KAAK,GAAGD,OAAO,CAAClC,KAAR,CAAc,GAAd,CAAd;AACA,SAAO;AACHoC,YAAQ,EAAKD,KAAK,CAAC,CAAD,CAAV,SAAiBA,KAAK,CAAC,CAAD,CAD3B;AAEHE,UAAM,EAAEF,KAAK,CAACtC,KAAN,CAAY,CAAZ,EAAeyC,IAAf,CAAoB,GAApB;AAFL,GAAP;AAIH;AAMM,SAASC,YAAT,CAAsBpC,GAAtB,EAAoE;AACvE,MAAML,CAAC,GAAG,qDAAqDC,IAArD,CACNI,GAAG,IAAI,EADD,CAAV;AAGA,MAAIL,CAAJ,EAAO,OAAO;AAAE0C,SAAK,EAAE1C,CAAC,CAAC,CAAD,CAAV;AAAepC,QAAI,EAAEoC,CAAC,CAAC,CAAD;AAAtB,GAAP;AACP,SAAOvB,SAAP;AACH;AAEM,SAAexB,kBAAtB;AAAA;AAAA;;;qGAAO,iBACHF,IADG,EAEHuD,OAFG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIH;AAJG,8BAKkB6B,aAAa,CAACpF,IAAD,CAL/B,EAKKuF,QALL,mBAKKA,QALL;AAMGK,eANH,GAMYtB,IANZ,cAMyBiB,QANzB;AAAA;AAAA,mBAOgBpB,KAAK,CAACyB,GAAD,CAPrB;;AAAA;AAOGC,gBAPH;AAAA,0BASKA,IAAI,CAAChC,MATV;AAAA,4CAUM,GAVN,uBAWM,GAXN,uBAgBM,GAhBN,wBAmBM,GAnBN;AAAA;;AAAA;AAAA;AAAA,mBAY6CgC,IAAI,CAACxB,IAAL,EAZ7C;;AAAA;AAYWW,oBAZX;AAaWc,oBAbX,GAasBf,0BAA0B,CAACC,QAAD,CAbhD;AAAA,6CAcYc,QAAQ,CAAC,CAAD,CAdpB;;AAAA;AAAA,6CAkBYpE,SAlBZ;;AAAA;AAAA,kBAqBS6B,OArBT,aAqBSA,OArBT,eAqBSA,OAAO,CAAEpD,eArBlB;AAAA;AAAA;AAAA;;AAAA,6CAqB0CuB,SArB1C;;AAAA;AAAA,kBAsBW,IAAIqE,KAAJ,CAAU,2CAAV,CAtBX;;AAAA;AAAA,kBAwBG,IAAIA,KAAJ,0BAAiCF,IAAI,CAAChC,MAAtC,CAxBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA2BA,SAAetD,kBAAtB;AAAA;AAAA;;;qGAAO,kBACHP,IADG,EAEHK,OAFG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIH;AAJG,8BAKkB+E,aAAa,CAACpF,IAAD,CAL/B,EAKKuF,QALL,mBAKKA,QALL;AAMGS,uBANH,0CAMsDT,QANtD,sBAM+ElF,OAN/E;AAAA;AAAA,mBAOe8D,KAAK,CAAC6B,WAAD,EAAc;AACjCC,qBAAO,EAAE;AAAEC,sBAAM,EAAE;AAAV;AADwB,aAAd,CAPpB;;AAAA;AAOGC,eAPH;;AAAA,kBAUCA,GAAG,CAACtC,MAAJ,IAAc,GAVf;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWwBsC,GAAG,CAACpF,IAAJ,EAXxB;;AAAA;AAWOqF,oBAXP;AAAA,8CAYQA,QAZR;;AAAA;AAAA,8CAcI1E,SAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiBA,SAAe2E,SAAtB;AAAA;AAAA;;;4FAAO,kBACHrG,IADG,EAEH4B,GAFG,EAGH0E,IAHG,EAIHC,QAJG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAM0BnB,aAAa,CAACpF,IAAD,CANvC,EAMKuF,QANL,mBAMKA,QANL,EAMeC,MANf,mBAMeA,MANf;AAOGQ,uBAPH,0CAOsDT,QAPtD,SAOkE3D,GAPlE,UAQC4D,MAAM,GAAMA,MAAN,SAAkB,EARzB,IASAc,IATA;AAAA;AAAA,mBAUenC,KAAK,CAAC6B,WAAD,EAAc;AACjCC,qBAAO,EAAE;AAAEC,sBAAM,EAAEK;AAAV;AADwB,aAAd,CAVpB;;AAAA;AAUGJ,eAVH;;AAAA,kBAaCA,GAAG,CAACtC,MAAJ,IAAc,GAbf;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcmBsC,GAAG,CAACK,IAAJ,EAdnB;;AAAA;AAcOC,eAdP;AAAA,8CAeQA,GAfR;;AAAA;AAAA,8CAiBI/E,SAjBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoBP,SAASgF,WAAT,CAAwBJ,IAAxB,EAAsC/C,OAAtC,EAAkE;AAC9D,MAAMa,GAAG,GAAGf,QAAQ,MAAOiB,IAAP,GAAcgC,IAAd,CAApB;AACA,MAAIlC,GAAG,CAACP,MAAJ,KAAenC,SAAnB,EACI,QAAQ0C,GAAG,CAACP,MAAZ;AACI,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACI;;AACJ,SAAK,GAAL;AACI;AACAO,SAAG,CAACX,QAAJ,GAAe/B,SAAf;AACA;;AACJ,SAAK,GAAL;AACI;AACA,UAAI6B,OAAJ,aAAIA,OAAJ,eAAIA,OAAO,CAAEpD,eAAb,EAA8B;AAC1BiE,WAAG,CAACX,QAAJ,GAAe/B,SAAf;AACA,eAAO0C,GAAP;AACH,OAHD,MAII,MAAM,IAAI2B,KAAJ,CAAU,2CAAV,CAAN;;AAER;AACI7G,aAAO,CAACC,GAAR,mBAA8BiF,GAA9B;AACA,YAAM,IAAI2B,KAAJ,mCAA0C3B,GAAG,CAACP,MAA9C,CAAN;AArBR;AAuBJ,SAAOO,GAAP;AACH;;AAEM,SAASuC,YAAT,CACH3G,IADG,EAEH4B,GAFG,EAGH0E,IAHG,EAIHC,QAJG,EAKL;AACE,uBAA6BnB,aAAa,CAACpF,IAAD,CAA1C;AAAA,MAAQuF,QAAR,kBAAQA,QAAR;AAAA,MAAkBC,MAAlB,kBAAkBA,MAAlB;;AACA,MAAMQ,WAAW,0CAAwCT,QAAxC,SAAoD3D,GAApD,UACb4D,MAAM,GAAMA,MAAN,SAAkB,EADX,IAEdc,IAFH;AAGA,SAAOjD,QAAQ,CAAI2C,WAAJ,EAAiB;AAC5BC,WAAO,EAAE;AAAEC,YAAM,EAAEK;AAAV;AADmB,GAAjB,CAAf;AAGH;AAEM,SAASK,aAAT,CAAuB5G,IAAvB,EAAqC;AACxC,wBAAqBoF,aAAa,CAACpF,IAAD,CAAlC;AAAA,MAAQuF,QAAR,mBAAQA,QAAR;;AACA,MAAMe,IAAI,cAAYf,QAAtB;AACA,MAAMnB,GAAG,GAAGsC,WAAW,CAAmBJ,IAAnB,EAAyB;AAAEnG,mBAAe,EAAE;AAAnB,GAAzB,CAAvB;AACA,SAAOiE,GAAP;AACH;AAEM,SAASyC,gBAAT,CAA0B7G,IAA1B,EAAwCuD,OAAxC,EAAoE;AAAA;;AACvE,MAAMsC,IAAI,GAAGiB,iBAAiB,CAAC9G,IAAD,EAAOuD,OAAP,CAA9B;AACA,yCACOsC,IADP;AAEIpC,YAAQ,oBAAEoC,IAAI,CAACpC,QAAP,mDAAE,eAAgB,CAAhB;AAFd;AAIH;AAEM,SAASqD,iBAAT,CAA2B9G,IAA3B,EAAyCuD,OAAzC,EAAqE;AACxE,MAAI,CAACvD,IAAL,EACI,OAAO;AACHyD,YAAQ,EAAE/B,SADP;AAEHqC,WAAO,EAAE,KAFN;AAGHJ,SAAK,EAAEjC,SAHJ;AAIHmC,UAAM,EAAEnC;AAJL,GAAP;;AAMJ,wBAAqB0D,aAAa,CAACpF,IAAD,CAAlC;AAAA,MAAQuF,QAAR,mBAAQA,QAAR;;AACA,MAAMK,GAAG,cAAYL,QAAZ,mBAAT;AACA,MAAMnB,GAAG,GAAGsC,WAAW,CAAkBd,GAAlB,kCACfrC,OAAO,IAAI,EADI;AAEnBpD,mBAAe,EAAE;AAFE,KAAvB;AAIA,yCACOiE,GADP;AAEIX,YAAQ,EAAEsB,0BAA0B,CAACX,GAAG,CAACX,QAAL;AAFxC;AAIH,C;;;;;;;;;;;;;ACrOD;AACA;AAUe,SAASsD,kBAAT,CAA4BC,SAA5B,EAAiE;AAC5E,oBAAuBtI,iDAAU,CAACuI,0DAAD,CAAjC;AAAA,MAAQC,UAAR,eAAQA,UAAR;;AAEA,MAAIF,SAAS,KAAKtF,SAAlB,EAA6B;AACzB,YAAQsF,SAAR;AACI,WAAK,CAAL;AACA,WAAK,CAAL;AAAQ,eAAO;AAAEG,YAAE,EAAE,EAAN;AAAUC,YAAE,EAAE,CAAd;AAAiBC,YAAE,EAAE,CAArB;AAAwBC,YAAE,EAAE,CAA5B;AAA+BC,YAAE,EAAE;AAAnC,SAAP;;AACR,WAAK,CAAL;AAAQ,eAAO;AAAEJ,YAAE,EAAE,EAAN;AAAUC,YAAE,EAAE,CAAd;AAAiBC,YAAE,EAAE,CAArB;AAAwBC,YAAE,EAAE,CAA5B;AAA+BC,YAAE,EAAE;AAAnC,SAAP;AAHZ;AAKH;;AAED,MAAIL,UAAU,IAAIM,uEAAlB,EACI,OAAO;AAAEL,MAAE,EAAE,EAAN;AAAUE,MAAE,EAAE,CAAd;AAAiBD,MAAE,EAAE,CAArB;AAAwBE,MAAE,EAAE,CAA5B;AAA+BC,MAAE,EAAE;AAAnC,GAAP,CADJ,KAEK,OAAO;AACRJ,MAAE,EAAE,EADI;AAERC,MAAE,EAAE,CAFI;AAGRC,MAAE,EAAE,CAHI;AAIRC,MAAE,EAAE,CAJI;AAKRC,MAAE,EAAE;AALI,GAAP;AAOR,C","file":"5cb7c78286c5fcecf4d3c60360196e55585b6a15-d6d3f8b6ab5c147b0bcb.js","sourcesContent":["import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any;\ntype RequestIdleCallbackOptions = {\n  timeout: number;\n};\ntype RequestIdleCallbackDeadline = {\n  readonly didTimeout: boolean;\n  timeRemaining: (() => number);\n};\n\ndeclare global {\n  interface Window {\n    requestIdleCallback: ((\n      callback: ((deadline: RequestIdleCallbackDeadline) => void),\n      opts?: RequestIdleCallbackOptions,\n    ) => RequestIdleCallbackHandle);\n    cancelIdleCallback: ((handle: RequestIdleCallbackHandle) => void);\n  }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useEffect } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { delay, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestRelease, fetchReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const loadFirmwares = useCallback(async () => {\n        console.log(`firmware: load`)\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const missingSlugs = unique(\n            deviceSpecifications()\n                .filter(spec => !!spec?.firmwares.length) // needs some firmwares\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n                .filter(slug => names.indexOf(slug) < 0)\n        )\n        for (const slug of missingSlugs) {\n            console.log(`db: fetch latest release of ${slug}`)\n            const rel = await fetchLatestRelease(slug, {\n                ignoreThrottled: true,\n            })\n            if (!rel?.version) {\n                console.warn(`release not found`)\n                return\n            }\n\n            console.log(\n                `db: fetch binary release ${slug} ${rel.version}`\n            )\n            const fw = await fetchReleaseBinary(slug, rel.version)\n            if (fw) {\n                console.log(\n                    `db: binary release ${slug} ${rel.version} downloaded`\n                )\n                firmwares.set(slug, fw)\n            }\n            // throttle github queries\n            await delay(5000)\n        }\n    }, [db, firmwares]);\n    useIdleCallback(loadFirmwares, 30000, [db, firmwares]);\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            console.log(`firmwares: change`)\n            const names = await fw?.list()\n            console.log(`import stored uf2`, names)\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const blob = await fw.get(name)\n                    const uf2Blobs = await parseFirmwareFile(blob, name)\n                    uf2Blobs?.forEach(uf2Blob => {\n                        uf2s.push(uf2Blob)\n                    })\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return bus.firmwareBlobs\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const blob = await firmwares?.get(repoSlug)\n            if (!blob) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(blob, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        await firmwares?.set(repoSlug, f)\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                const res = await fetch(url, options)\n                if (!mounted()) return\n                const status = res.status\n                setStatus(status)\n                if (status >= 200 && status <= 204) {\n                    const json = await res.json()\n                    if (!mounted()) return\n                    setResponse(json)\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<GithubFirmwareRelease> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    switch (resp.status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return releases[0]\n        }\n        case 404:\n            // unknow repo or no access\n            return undefined\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return undefined\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}"],"sourceRoot":""}