{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/BugReport.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/dtdl.ts","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/ImportButton.tsx","webpack://jacdac-docs/./src/components/hooks/toneContext.ts","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoteField.tsx","webpack://jacdac-docs/./src/components/vm/fields/KeyboardKeyField.tsx","webpack://jacdac-docs/./src/components/widgets/svg.ts","webpack://jacdac-docs/./src/components/vm/fields/ReactImageField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDMatrixField.tsx","webpack://jacdac-docs/./src/components/vm/fields/SliderField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ServoAngleField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDColorField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ReactInlineField.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoServiceAlert.tsx","webpack://jacdac-docs/./src/components/vm/fields/PointerBoundary.tsx","webpack://jacdac-docs/./src/components/vm/fields/TwinField.tsx","webpack://jacdac-docs/./src/components/vm/fields/JDomTreeField.tsx","webpack://jacdac-docs/./src/components/TrendChart.tsx","webpack://jacdac-docs/./src/components/vm/fields/WatchValueField.tsx","webpack://jacdac-docs/./src/components/vm/fields/fields.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/compile.ts","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/vm/dsl/servicesdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/toolsdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/azureiothubdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/devicetwindsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/mathdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/logicdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/variablesdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/shadowdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/loopsdsl.ts","webpack://jacdac-docs/./src/components/vm/dsl/DslContext.tsx","webpack://jacdac-docs/./src/components/vm/useToolbox.ts","webpack://jacdac-docs/./src/components/vm/VMBlockEditor.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/runner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./jacdac-ts/src/servers/rolemanager.ts","webpack://jacdac-docs/./src/components/vm/useRoleManager.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/vm/VMRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/vm/VMFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["DTDL_REFERENCE_URL","DTDL_NAME","DTDL_CONTEXT","objectSchema","schemas","fields","arraySchema","schema","elementSchema","escapeName","name","trim","replace","test","toLowerCase","slice","escapeDisplayName","DTDLUnits","sort","useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","front","parts","split","length","m","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","DropzoneDialog","ImportButton","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","open","setOpen","handleOpen","handleSave","files","handleClose","VOLUME_GAIN","createToneContext","defaultVolume","ctx","AudioContext","webkitAudioContext","buffer","createBuffer","createBufferSource","connect","destination","start","volume","createGain","gain","setVolume","v","isNaN","playTone","frequency","duration","tone","createOscillator","stop","currentTime","e","debug","close","state","warn","useServices","services","useChange","b","stringify","PaperBox","padding","elevation","bgcolor","others","useTheme","spacing","PianoWidget","NoteField","fromJson","events","on","UNMOUNT","toneContext","getText_","renderField","handlePlayTone","newFrequency","ReactField","KEY","SHADOW","toShadowDefinition","KeyboardKeyInput","KeyboardKeyField","selector","modifiers","renderKeyboardKey","handleChange","newSelector","newModifiers","mkTitle","txt","t","elt","textContent","title","el","hydrate","setAttributeNS","createElementNS","child","parent","ReactImageField","setSize","size_","Blockly","img","view","setAttribute","updateView","imgUri","renderValue","getText","initCustomView","fieldGroup_","alt","LEDMatrixWidget","LEDMatrixField","VALUE_CHANGE","rows","columns","leds","columnspadded","ledsBytes","fromHex","cvs","pw","ph","w","h","getContext","fillStyle","fillRect","x","y","bitindex","byte","bit","dataUri","toDataURL","onChange","newLeds","toHex","Uint8Array","FieldWithSlider","ValueContext","onValueChange","nv","round","SliderField","renderWidget","ServoWidget","ServiceFieldWidget","ServoAngleField","LEDWidget","LEDColorFieldWidget","LEDColorField","cx","cy","strokeWidth","stroke","c","rgbToHtmlColor","circle","ReactInlineField","createContainer","display","minWidth","fo","container","resizeObserver","ResizeObserver","entries","entry","contentRect","forceRerender","observe","ReactDOM","renderBlock","dispose","disconnect","renderInlineField","bindEvents_","getClickTarget_","NoServiceAlert","WorkspaceContext","roleService","roleServiceShortId","flyout","spec","serviceSpecificationFromName","handleStartSimulator","startServiceProviderFromServiceClass","classIdentifier","PointerBoundary","onPointerStopPropagation","stopPropagation","cursor","TwinWidget","TwinField","EDITABLE","JDomServiceTreeView","JDomTreeWidget","JDomTreeField","mini","useTrendChartData","maxLength","trendData","setTrendData","addTrendValue","timestamp","TrendChart","useGradient","unit","dot","vpw","vph","color","palette","secondary","main","shape","symmetric","values","mint","maxt","minv","min","apply","maxv","max","opposite","sign","abs","rv","margin","axisWidth","axisColor","pointRadius","toffset","lastRow","path","row","ri","maxHeight","maxWidth","WatchValueWidget","runner","sourceId","lookupWatch","setValue","VM_EVENT","watchSourceId","VMCode","valueNumber","step","ceil","precision","log10","roundWithPrecision","background","paper","primary","WatchValueField","reactFieldShadows","registerFields","registerType","fieldType","assert","fieldTypes","fieldShadows","VMFunctions","args","prompt","context","toIdentifier","toMemberExpression","field","object","property","computed","handlerVisitor","handler","visitITE","visitCommand","commands","visitBase","base","ite","else","then","compileProgram","prog","newProgram","roles","handlers","removeIfThenElse","errors","newSequence","labels","labelId","time","end","command","callee","arguments","expr","pop","cmd","getServiceFromRole","role","shortId","find","pair","def","serviceShortId","service","checkProgram","allErrors","goodHandlers","errorFun","message","symbolResolver","SpecSymbolResolver","checker","VMChecker","_","errorCount","checkCommand","registers","s","fld","register","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","ADD","MULTIPLY","DIVIDE","MINUS","makeVMBase","block","processErrors","workspaceJSONToVMProgram","workspace","dsls","variables","BUILTIN_TYPES","EmptyExpression","Error","blockToExpression","blockIn","blockToExpressionInner","inputs","raw","argument","op","operator","prefix","right","definition","resolveServiceBlockDefinition","d","dslName","dsl","res","compileExpressionToVM","template","blockToCommand","thenHandler","elseHandler","addCommands","exprErrors","ifThenElse","dslRes","compileCommandToVM","nop","blocks","topEvent","topErrors","topMeta","compileEventToVM","expression","isBooleanField","isStringField","toBlocklyType","isNumericType","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_SETTINGS","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","JoystickReg","get","commandColor","ServicesBlockDomainSpecificLanguage","supportedServices","createServiceColor","sensorColor","success","otherColor","serviceColor","isSensor","createBlocks","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","SRV_BUZZER","BuzzerCmd","lookupCustomShadow","cs","serviceHelp","fieldsSupported","every","fieldName","reg","fieldToShadow","defaultValue","typicalMin","absoluteMin","typicalMax","absoluteMax","variableName","humanify","camelName","fieldVariable","variable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","isEnabledRegister","customMessage","allServices","serviceSpecifications","status","resolveService","cls","arrayConcatMany","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","SRV_HID_KEYBOARD","message0","args0","colour","inputsInline","previousStatement","CODE_STATEMENT_TYPE","nextStatement","tooltip","helpUrl","SRV_LED","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","eventBlocks","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","output","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","members","member","registerNumericsGetBlocks","re","registerSetBlocks","commandBlocks","_serviceBlocks","_eventFieldBlocks","_runtimeBlocks","CONNECTION_BLOCK","CONNECTED_BLOCK","SET_STATUS_LIGHT_BLOCK","createCategory","program","liveServices","blockServices","usedEvents","Set","eventName","jdBlocks","uniqueMap","toolboxServices","Flags","srvid","specification","l","localeCompare","servicesCategories","serviceBlocks","contents","has","button","callbackKey","cat","commonCategory","toString","eventInfo","serviceCommand","exprsErrors","a","p","flatMap","servicesDSL","toolsDSL","TWIN_BLOCK","INSPECT_BLOCK","WATCH_BLOCK","AzureIoTHubBlockDomainSpecificLanguage","_blocks","PRIMITIVE_TYPES","azureIoTHubDSL","DEVICE_TWIN_SEND_TELEMETRY","DEVICE_TWIN_DEFINITION_BLOCK","DEVICE_TWIN_PROPERTY_BLOCK","DEVICE_TWIN_PROPERTY_TYPE","DEVICE_TWIN_VALUE_TYPE","deviceTwinContentType","deviceTwinCommonOptionType","deviceTwinPropertyOptionType","deviceTwinStatementType","deviceTwinCommonOptionStatementType","deviceTwinPropertyOptionStatementType","DeviceTwinBlockDomainSpecificLanguage","deviceTwinDSL","mathDSL","extensions","A","B","NUM","logicDsl","BOOL","variablesDsl","custom","builtins","jacdac_on_off","getFieldValue","jacdac_yes_no","jacdac_time_picker","Number","jacdac_angle","jacdac_percent","jacdac_ratio","shadowDsl","colourOptions","blockToValue","loopsDsl","WAIT_BLOCK","REPEAT_EVERY_BLOCK","order","interval","DslContext","createContext","displayName","DslProvider","highlighted","addSelect","removeSelect","loadBlocks","jacdacDefinition","init","jsonInit","patchCategoryJSONtoXML","unshift","node","exists","blockxml","useToolbox","dslsCategories","toolboxConfiguration","newProjectXml","NEW_PROJET_XML","useToolboxButtons","buttons","btn","registerButtonCallback","fontFamily","typography","fontWeight","VMBlockEditor","onXmlChange","onJSONChange","onVMProgramChange","initialXml","roleManager","workspaceRef","AppContext","setError","setSource","setProgram","DarkTheme","Theme","gridColor","blocklyRef","useBlocklyWorkspace","ref","workspaceConfiguration","collapse","disable","comments","css","trashcan","sounds","grid","snap","renderer","oneBasedIndex","move","scrollbars","vertical","horizontal","media","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","onImportXmlError","xml","ws","jacdacServices","WorkspaceServices","useBlocklyPlugins","useBlocklyEvents","isDragging","newSource","domToJSON","error","getAllBlocks","setWarningText","observer","resize","clsx","VMInternalStatus","VM_WAKE_SLEEPER","VMJumpException","label","VMTimerException","ms","VMCommandEvaluator","env","gc","_regSaved","_changeSaved","_started","trace","evalExpression","VMExprEvaluator","lookup","eval","checkExpression","inst","evaluate","neededStart","Running","sendCommandAsync","Completed","hasEvent","regValue","unparse","writeRegisterAsync","writeLocal","watch","Stopped","VMError","VMCommandRunner","handlerId","_status","_eval","val","stepAsync","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","reset","gotoTop","Ready","commandIndex","cancel","unsubscribe","wake","next","runToCompletionAsync","singleStep","singleStepCheckBreakAsync","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","vmt","Sleeping","sleepAsync","JDEventSource","isEveryHandler","VMStatus","VMProgramRunner","_handlerRunners","_roles","_waitQueue","_everyQueue","_runQueue","_sleepQueue","_watch","_breaks","_in_run","compiled","_env","VMEnvironment","_waitRunMutex","Mutex","_breaksMutex","_sleepMutex","mount","CHANGE","waitingToRunning","wakeSleeper","initializeRoleManagement","setStatus","TRACE","oldValue","setBreakpointsAsync","breaks","acquire","clearBreakpointsAsync","ret","handlerRunner","setTimeout","findIndex","splice","runAsync","startAsync","setRoles","resumeAsync","Paused","getCurrentRunner","runHandlerAsync","postProcessHandler","newHead","emitBreakpoint","oneStep","brkCommand","VMRoleNoServiceException","moveToWait","done","shift","refreshRegistersAsync","atTop","waitCopy","handlersStarted","newRunners","sleepingRunners","hs","consumeEvent","addRoleService","getService","serviceChanged","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoRun","setRunner","_autoStart","_setAutoStart","run","newTestRunner","unmount","ERROR","handleTrace","RoleManager","DEVICE_ANNOUNCE","addServices","bind","DEVICE_DISCONNECT","removeServices","devices","ignoreSelf","announced","dev","newRoles","changed","supportedNewRoles","newRole","existingRole","bindServices","unboundRoles","binding","boundRoles","serviceName","selfDevice","device","useRoleManager","VMDiagnostics","RoleChip","server","useServiceServer","handleRoleClick","addServiceProvider","serviceProviderDefinitionFromServiceClass","twinBlock","getTopBlocks","inputList","fieldRow","getVariable","newBlock","getId","getMetrics","moveBy","viewWidth","viewHeight","initSvg","centerOnBlock","handleDelete","removeServiceProvider","VMRoles","useWorkspaceBreakpoints","breakpoints","setBreakpointHighlight","highlightBlock","VMRunnerButtons","indeterminate","setIndeterminate","breakpoint","setBreakpoint","pausing","paused","mounted","useMounted","handleRun","handleCancel","handleResume","handlePause","handleStep","VMStartSimulatorButton","toggleShowDeviceHostsDialog","VMLoadButton","handleFiles","file","jsfile","dom","Xml","clear","VMSaveButton","json","VMFileButtons","VMToolbar","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","useLocalStorage","setXml","autoStart","handleXml","handleJSON","handleI4Program","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6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D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA,iBAAiB,mBAAO,CAAC,KAA2B;;AAEpD;;;;;;;;ACFA,cAAc,mBAAO,CAAC,KAA0B;;AAEhD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,KAAwB;AAC/C,uBAAuB,mBAAO,CAAC,KAAuC;AACtE,kBAAkB,mBAAO,CAAC,KAA4B;AACtD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,WAAW,mBAAO,CAAC,KAAmB;AACtC,4BAA4B,mBAAO,CAAC,KAAsC;AAC1E,gBAAgB,mBAAO,CAAC,IAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,gBAAgB;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;AC7EA,kBAAkB,mBAAO,CAAC,KAA0B;AACpD,2BAA2B,mBAAO,CAAC,IAAqC;AACxE,eAAe,mBAAO,CAAC,KAAwB;AAC/C,iBAAiB,mBAAO,CAAC,KAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA,yBAAyB,mBAAO,CAAC,KAAmC;AACpE,kBAAkB,mBAAO,CAAC,KAA4B;;AAEtD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA,6BAA6B,mBAAO,CAAC,KAAuC;;AAE5E;AACA;AACA;AACA;AACA;;;;;;;;;ACNa;AACb,QAAQ,mBAAO,CAAC,KAAqB;AACrC,uBAAuB,mBAAO,CAAC,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","file":"component---src-pages-tools-vm-editor-tsx-a4108a90a959abd3f498.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","/***\n *  DTDL specification: https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md.\n */\nexport const DTDL_REFERENCE_URL =\n    \"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\"\nexport const DTDL_NAME = \"Digital Twins Definition Language\"\nexport const DTDL_CONTEXT = \"dtmi:dtdl:context;2\"\n\n// warps fields into an object\nexport function objectSchema(schemas: DTDLSchema[]): DTDLSchema {\n    return {\n        \"@type\": \"Object\",\n        fields: schemas,\n    }\n}\n\n// wraps a schema into an array\nexport function arraySchema(schema: string | DTDLSchema): DTDLSchema {\n    return {\n        \"@type\": \"Array\",\n        elementSchema: schema,\n    }\n}\n\nexport interface DTDLNode {\n    \"@type\"?: string\n    \"@id\"?: string\n    // 1-64 characters\n    // ^[a-zA-Z](?:[a-zA-Z0-9_]*[a-zA-Z0-9])?$\n    name?: string\n    displayName?: string\n    description?: string\n}\n\nexport interface DTDLSchema extends DTDLNode {\n    fields?: DTDLSchema[]\n    schema?: string | DTDLSchema\n    elementSchema?: string | DTDLSchema\n}\n\nexport interface DTDLContent extends DTDLNode {\n    \"@type\": \"Property\" | \"Command\" | \"Component\" | \"Interface\"\n    unit?: string\n    schema?: string | DTDLSchema\n}\n\nexport interface DTDLInterface extends DTDLContent {\n    contents: DTDLContent[]\n    extends?: string | string[]\n    schemas?: (DTDLSchema | DTDLInterface)[]\n    \"@context\"?: string\n}\n\nexport function escapeName(name: string) {\n    name = name.trim().replace(/[^a-zA-Z0-9_]/g, \"_\")\n    if (!/^[a-zA-Z]/.test(name)) name = \"a\" + name\n    name = name[0].toLowerCase() + name.slice(1)\n    return name.slice(0, 64)\n}\n\nexport function escapeDisplayName(name: string) {\n    return name.slice(0, 64)\n}\n\nexport function DTDLUnits() {\n    return [\n        \"metrePerSecondSquared\",\n        \"centimetrePerSecondSquared\",\n        \"gForce\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radianPerSecondSquared\",\n        \"radianPerSecond\",\n        \"degreePerSecond\",\n        \"revolutionPerSecond\",\n        \"revolutionPerMinute\",\n        \"squareMetre\",\n        \"squareCentimetre\",\n        \"squareMillimetre\",\n        \"squareKilometre\",\n        \"hectare\",\n        \"squareFoot\",\n        \"squareInch\",\n        \"acre\",\n        \"farad\",\n        \"millifarad\",\n        \"microfarad\",\n        \"nanofarad\",\n        \"picofarad\",\n        \"ampere\",\n        \"microampere\",\n        \"milliampere\",\n        \"bitPerSecond\",\n        \"kibibitPerSecond\",\n        \"mebibitPerSecond\",\n        \"gibibitPerSecond\",\n        \"tebibitPerSecond\",\n        \"exbibitPerSecond\",\n        \"zebibitPerSecond\",\n        \"yobibitPerSecond\",\n        \"bytePerSecond\",\n        \"kibibytePerSecond\",\n        \"mebibytePerSecond\",\n        \"gibibytePerSecond\",\n        \"tebibytePerSecond\",\n        \"exbibytePerSecond\",\n        \"zebibytePerSecond\",\n        \"yobibytePerSecond\",\n        \"bit\",\n        \"kibibit\",\n        \"mebibit\",\n        \"gibibit\",\n        \"tebibit\",\n        \"exbibit\",\n        \"zebibit\",\n        \"yobibit\",\n        \"byte\",\n        \"kibibyte\",\n        \"mebibyte\",\n        \"gibibyte\",\n        \"tebibyte\",\n        \"exbibyte\",\n        \"zebibyte\",\n        \"yobibyte\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"coulomb\",\n        \"joule\",\n        \"kilojoule\",\n        \"megajoule\",\n        \"gigajoule\",\n        \"electronvolt\",\n        \"megaelectronvolt\",\n        \"kilowattHour\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"hertz\",\n        \"kilohertz\",\n        \"megahertz\",\n        \"gigahertz\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"lux\",\n        \"footcandle\",\n        \"henry\",\n        \"millihenry\",\n        \"microhenry\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"candelaPerSquareMetre\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"lumen\",\n        \"candela\",\n        \"weber\",\n        \"maxwell\",\n        \"tesla\",\n        \"kilogram\",\n        \"gram\",\n        \"milligram\",\n        \"microgram\",\n        \"tonne\",\n        \"slug\",\n        \"gramPerSecond\",\n        \"kilogramPerSecond\",\n        \"gramPerHour\",\n        \"kilogramPerHour\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"pascal\",\n        \"kilopascal\",\n        \"bar\",\n        \"millibar\",\n        \"millimetresOfMercury\",\n        \"poundPerSquareInch\",\n        \"inchesOfMercury\",\n        \"inchesOfWater\",\n        \"unity percent\",\n        \"ohm\",\n        \"milliohm\",\n        \"kiloohm\",\n        \"megaohm\",\n        \"decibel\",\n        \"bel\",\n        \"kelvin\",\n        \"degreeCelsius\",\n        \"degreeFahrenheit\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"second\",\n        \"millisecond\",\n        \"microsecond\",\n        \"nanosecond\",\n        \"minute\",\n        \"hour\",\n        \"day\",\n        \"year\",\n        \"newtonMetre\",\n        \"metrePerSecond\",\n        \"centimetrePerSecond\",\n        \"kilometrePerSecond\",\n        \"metrePerHour\",\n        \"kilometrePerHour\",\n        \"milePerHour\",\n        \"milePerSecond\",\n        \"knot\",\n        \"volt\",\n        \"millivolt\",\n        \"microvolt\",\n        \"kilovolt\",\n        \"megavolt\",\n        \"cubicMetre\",\n        \"cubicCentimetre\",\n        \"litre\",\n        \"millilitre\",\n        \"cubicFoot\",\n        \"cubicInch\",\n        \"fluidOunce\",\n        \"gallon\",\n        \"litrePerSecond\",\n        \"millilitrePerSecond\",\n        \"litrePerHour\",\n        \"millilitrePerHour\",\n    ].sort()\n}\n","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n","const VOLUME_GAIN = 0.4\n\nexport interface ToneContext {\n    close: () => void\n    playTone: (frequency: number, duration: number) => void\n    setVolume: (vol: number) => void\n}\n\nexport function createToneContext(defaultVolume?: number): ToneContext {\n    try {\n        console.log(`create tone context`)\n        const ctx = new (window.AudioContext ||\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (window as any).webkitAudioContext)()\n\n        // play silence sound within onlick to unlock it\n        const buffer = ctx.createBuffer(1, 1, 22050)\n        const source = ctx.createBufferSource()\n        source.buffer = buffer\n        source.connect(ctx.destination)\n        source.start()\n\n        // output node with volume\n        const volume = ctx.createGain()\n        volume.connect(ctx.destination)\n        volume.gain.value =\n            (defaultVolume !== undefined ? defaultVolume : 0.2) * VOLUME_GAIN\n\n        const setVolume = (v: number) => {\n            if (volume && !isNaN(v)) {\n                volume.gain.value = v * VOLUME_GAIN\n            }\n        }\n\n        const playTone = (frequency: number, duration: number) => {\n            try {\n                const tone = ctx.createOscillator()\n                tone.type = \"sawtooth\"\n                tone.connect(volume)\n                tone.frequency.value = frequency // update frequency\n                tone.start() // start and stop\n                tone.stop(ctx.currentTime + duration / 1000)\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n\n        const close = () => {\n            try {\n                if (ctx.state === \"running\") ctx.close()\n            } catch (e) {\n                console.warn(e)\n            }\n        }\n\n        console.log(`tone context created`)\n\n        return {\n            setVolume,\n            playTone,\n            close,\n        }\n    } catch (e) {\n        return undefined\n    }\n}\n","import { useContext } from \"react\";\nimport { DeviceFilter, ServiceFilter } from \"../../../jacdac-ts/src/jdom/bus\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import React, { lazy, ReactNode } from \"react\"\nimport { createToneContext, ToneContext } from \"../../hooks/toneContext\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, {\n    ReactFieldJSON,\n    toShadowDefinition,\n    UNMOUNT,\n} from \"./ReactField\"\nconst PianoWidget = lazy(() => import(\"../../widgets/PianoWidget\"))\n\nexport default class NoteField extends ReactField<number> {\n    static KEY = \"jacdac_field_note\"\n    static SHADOW = toShadowDefinition(NoteField)\n    toneContext: ToneContext\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NoteField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options)\n        this.events.on(UNMOUNT, () => {\n            this.toneContext?.close()\n            this.toneContext = undefined\n        })\n    }\n\n    get defaultValue() {\n        return 440\n    }\n\n    getText_() {\n        return (this.value | 0) + \"\"\n    }\n\n    renderField(): ReactNode {\n        const handlePlayTone = async (newFrequency: number) => {\n            this.value = newFrequency\n            if (!this.toneContext) this.toneContext = createToneContext()\n            this.toneContext?.playTone(newFrequency, 400)\n        }\n        return (\n            <Suspense>\n                <PianoWidget playTone={handlePlayTone} />\n            </Suspense>\n        )\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { HidKeyboardModifiers } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport ReactField, { ReactFieldJSON } from \"./ReactField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { renderKeyboardKey } from \"../../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst KeyboardKeyInput = lazy(() => import(\"../../ui/KeyboardKeyInput\"))\n\nexport interface KeyboardFieldValue {\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nexport default class KeyboardKeyField extends ReactField<KeyboardFieldValue> {\n    static KEY = \"jacdac_field_keyboard_key\"\n\n    static fromJson(options: ReactFieldJSON) {\n        return new KeyboardKeyField(options?.value, undefined, options)\n    }\n\n    get defaultValue() {\n        return { selector: 4, modifiers: 0 }\n    }\n\n    getText_() {\n        const { selector, modifiers } = this.value\n        return renderKeyboardKey(selector, modifiers, true)\n    }\n\n    renderField(): ReactNode {\n        const { selector, modifiers } = this.value\n        const handleChange = (\n            newSelector: number,\n            newModifiers: HidKeyboardModifiers\n        ) => {\n            this.value = { selector: newSelector, modifiers: newModifiers }\n        }\n        return (\n            <Suspense>\n                <KeyboardKeyInput\n                    initialSelector={selector}\n                    initialModifiers={modifiers}\n                    onChange={handleChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction mkTitle(txt: string): SVGTitleElement {\n    const t = <SVGTitleElement>elt(\"title\")\n    t.textContent = txt\n    return t\n}\nexport function title(el: SVGElement, txt: string): SVGTitleElement {\n    const t = mkTitle(txt)\n    el.appendChild(t)\n    return t\n}\n\nexport function hydrate(el: SVGElement, props: any) {\n    for (const k in props) {\n        if (k == \"title\") {\n            title(el, props[k])\n        } else el.setAttributeNS(null, k, props[k])\n    }\n}\n\nexport function elt(name: string, props?: any): SVGElement {\n    const el = document.createElementNS(\"http://www.w3.org/2000/svg\", name)\n    if (props) hydrate(el, props)\n    return el\n}\n\nexport function child(parent: Element, name: string, props?: any): SVGElement {\n    const el = elt(name, props)\n    parent.appendChild(el)\n    return el\n}\n","import ReactField from \"./ReactField\"\nimport Blockly from \"blockly\"\nimport { child } from \"../../widgets/svg\"\n\nexport default class ReactImageField<T> extends ReactField<T> {\n    constructor(value: string, width = 32, height = 32) {\n        super(value, undefined, undefined, { width, height })\n    }\n\n    setSize(width: number, height: number) {\n        this.size_ = new Blockly.utils.Size(width, height)\n        const img = this.view as SVGImageElement\n        if (img) {\n            img.setAttribute(\"width\", width + \"\")\n            img.setAttribute(\"height\", height + \"\")\n        }\n    }\n\n    protected updateView() {\n        const imgUri = this.renderValue()\n        const img = this.view as SVGImageElement\n        if (imgUri) {\n            img?.setAttributeNS(\n                \"http://www.w3.org/1999/xlink\",\n                \"xlink:href\",\n                imgUri\n            )\n            img?.setAttribute(\"alt\", this.getText())\n        }\n    }\n\n    /**\n     * Renders the value to a data uri string\n     */\n    protected renderValue(): string {\n        return undefined\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        return child(this.fieldGroup_, \"image\", {\n            height,\n            width,\n            alt: this.getText(),\n        }) as SVGImageElement\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { fromHex, toHex } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, VALUE_CHANGE } from \"./ReactField\"\nimport ReactImageField from \"./ReactImageField\"\nconst LEDMatrixWidget = lazy(() => import(\"../../widgets/LEDMatrixWidget\"))\n\nexport interface LEDMatrixFieldValue {\n    // hex data\n    leds: string\n    rows: number\n    columns: number\n}\n\nexport default class LEDMatrixField extends ReactImageField<LEDMatrixFieldValue> {\n    static KEY = \"jacdac_field_led_matrix\"\n\n    constructor(value: string) {\n        super(value)\n\n        this.events.on(VALUE_CHANGE, () => {\n            const { rows, columns } = this.value\n            this.setSize(32, (32 / columns) * rows)\n        })\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDMatrixField(options?.value)\n    }\n\n    get defaultValue() {\n        return {\n            leds: toHex(new Uint8Array(0)),\n            rows: 5,\n            columns: 5,\n        }\n    }\n\n    getText_() {\n        const { leds, rows, columns } = this.value\n        return `${leds} (${rows}x${columns})`\n    }\n\n    renderValue(): string {\n        const { leds, rows, columns } = this.value\n        // render current state to LEDmatrix field\n        const columnspadded = columns + (8 - (columns % 8))\n        const ledsBytes = fromHex(leds)\n        const cvs = document.createElement(\"canvas\")\n        const b = 3\n        const pw = 8\n        const ph = 8\n        const w = rows * pw + (rows - 1) * b\n        const h = columns * ph + (columns - 1) * b\n        cvs.width = w + 2 * b\n        cvs.height = h + 2 * b\n        const ctx = cvs.getContext(\"2d\")\n        ctx.fillStyle = \"#444\"\n        ctx.fillRect(b, b, w, h)\n        ctx.fillStyle = \"blue\"\n        for (let x = 0; x < columns; ++x) {\n            for (let y = 0; y < rows; ++y) {\n                const bitindex = y * columnspadded + x\n                const byte = ledsBytes[bitindex >> 3]\n                const bit = bitindex % 8\n                const on = 1 === ((byte >> bit) & 1)\n                ctx.fillStyle = on ? \"#ffc400\" : \"#000\"\n                ctx.fillRect(x * (pw + b) + b, y * (ph + b) + b, pw, ph)\n            }\n        }\n        const dataUri = cvs.toDataURL(\"image/png\")\n        return dataUri\n    }\n\n    renderField(): ReactNode {\n        const { leds, rows, columns } = this.value\n        const ledsBytes = fromHex(leds)\n        console.log(`led bytes`, { leds, ledsBytes })\n        const onChange = (newLeds: Uint8Array) =>\n            (this.value = {\n                leds: toHex(newLeds),\n                rows,\n                columns,\n            })\n        return (\n            <Suspense>\n                <LEDMatrixWidget\n                    color=\"secondary\"\n                    brightness={1}\n                    leds={ledsBytes}\n                    rows={rows}\n                    columns={columns}\n                    onChange={onChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","import { Grid, Slider } from \"@material-ui/core\"\nimport React, { ReactNode, useContext } from \"react\"\nimport ReactField from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nfunction FieldWithSlider(props: { children: ReactNode }) {\n    const { children } = props\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    const handleChange = async (ev: unknown, nv: number | number[]) => {\n        const newValue = nv as number\n        onValueChange(newValue)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n            <Grid item xs={12}>\n                <Slider\n                    color=\"secondary\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={`${Math.round(value)}°`}\n                    min={-90}\n                    max={90}\n                    step={5}\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"angle\"\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class SliderField extends ReactField<number> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(value: string, options?: any) {\n        super(value, undefined, options)\n    }\n\n    get defaultValue() {\n        return 0\n    }\n\n    getText_() {\n        return this.value + \"\"\n    }\n\n    renderField(): ReactNode {\n        return <FieldWithSlider>{this.renderWidget()}</FieldWithSlider>\n    }\n\n    renderWidget(): ReactNode {\n        return null\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport SliderField from \"./SliderField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst ServoWidget = lazy(() => import(\"../../widgets/ServoWidget\"))\n\nfunction ServiceFieldWidget() {\n    const { value } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <ServoWidget\n                angle={value}\n                offset={0}\n                color=\"secondary\"\n                enabled={true}\n            />\n        </Suspense>\n    )\n}\n\nexport default class ServoAngleField extends SliderField {\n    static KEY = \"jacdac_field_servo_angle\"\n    static SHADOW = toShadowDefinition(ServoAngleField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ServoAngleField(options?.value, options)\n    }\n\n    getText_() {\n        return this.value + \"°\"\n    }\n\n    renderWidget(): ReactNode {\n        return <ServiceFieldWidget />\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport { rgbToHtmlColor } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { child } from \"../../widgets/svg\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst LEDWidget = lazy(() => import(\"../../widgets/LEDWidget\"))\n\nfunction LEDColorFieldWidget() {\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <LEDWidget\n                ledColor={value}\n                onLedColorChange={onValueChange}\n                ledCount={3}\n                color=\"secondary\"\n            />\n        </Suspense>\n    )\n}\n\nexport default class LEDColorField extends ReactField<number> {\n    static KEY = \"jacdac_field_led_color\"\n    static SHADOW = toShadowDefinition(LEDColorField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDColorField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 28, height: 28 })\n    }\n\n    protected initCustomView() {\n        const { width } = this.size_\n        const r = width >> 1\n        return child(this.fieldGroup_, \"circle\", {\n            r: width >> 1,\n            cx: r,\n            cy: r,\n            strokeWidth: 2,\n            stroke: \"#777\",\n        }) as SVGCircleElement\n    }\n\n    updateView() {\n        const c = rgbToHtmlColor(this.value)\n        const circle = this.view as SVGCircleElement\n        if (c) {\n            circle?.setAttribute(\"fill\", c)\n        }\n    }\n\n    getText_() {\n        return rgbToHtmlColor(this.value)\n    }\n\n    renderField(): ReactNode {\n        return <LEDColorFieldWidget />\n    }\n}\n","import React, { ReactNode } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactField from \"./ReactField\"\nimport { child } from \"../../widgets/svg\"\nimport DarkModeProvider from \"../../ui/DarkModeProvider\"\nimport { IdProvider } from \"react-use-id-hook\"\nimport JacdacProvider from \"../../../jacdac/Provider\"\nimport AppTheme from \"../../ui/AppTheme\"\nimport Blockly, { Block } from \"blockly\"\nimport { WorkspaceProvider } from \"../WorkspaceContext\"\n\nexport default class ReactInlineField extends ReactField<unknown> {\n    protected container: HTMLDivElement\n    protected resizeObserver: ResizeObserver\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 1, height: 1 })\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"14rem\"\n        return c\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        const fo = child(this.fieldGroup_, \"foreignObject\", {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        }) as SVGForeignObjectElement\n\n        this.container = this.createContainer()\n        fo.appendChild(this.container)\n\n        this.resizeObserver = new ResizeObserver(\n            (entries: ResizeObserverEntry[]) => {\n                const entry = entries[0]\n                const { contentRect } = entry\n                this.size_.width = contentRect.width\n                this.size_.height = contentRect.height\n                fo.setAttribute(\"width\", this.size_.width + \"\")\n                fo.setAttribute(\"height\", this.size_.height + \"\")\n                this.forceRerender()\n            }\n        )\n        this.resizeObserver.observe(this.container)\n\n        ReactDOM.render(this.renderBlock(), this.container)\n        return fo\n    }\n\n    dispose() {\n        if (this.container) {\n            ReactDOM.unmountComponentAtNode(this.container)\n            this.container = undefined\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect()\n            this.resizeObserver = undefined\n        }\n        super.dispose()\n    }\n\n    renderField(): ReactNode {\n        return <div>not used</div>\n    }\n\n    renderInlineField(): ReactNode {\n        return null\n    }\n\n    renderBlock(): ReactNode {\n        return (\n            <WorkspaceProvider field={this}>\n                <DarkModeProvider fixedDarkMode=\"dark\">\n                    <IdProvider>\n                        <JacdacProvider>\n                            <AppTheme>{this.renderInlineField()}</AppTheme>\n                        </JacdacProvider>\n                    </IdProvider>\n                </DarkModeProvider>\n            </WorkspaceProvider>\n        )\n    }\n\n    getText_() {\n        return \"...\"\n    }\n\n    // don't bind any mouse event\n    bindEvents_() {\n        Blockly.Tooltip.bindMouseEvents(this.getClickTarget_())\n    }\n}\n","import React, { useContext } from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { startServiceProviderFromServiceClass } from \"../../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport { serviceSpecificationFromName } from \"../../../../jacdac-ts/src/jdom/spec\"\nimport { Alert } from \"@material-ui/lab\"\n\nexport default function NoServiceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { roleService, roleServiceShortId, flyout } =\n        useContext(WorkspaceContext)\n    const spec = serviceSpecificationFromName(roleServiceShortId)\n    const handleStartSimulator = () =>\n        startServiceProviderFromServiceClass(bus, spec.classIdentifier)\n\n    // nothing to do here\n    if (roleService || flyout) return null\n\n    // unresolved, unknown service\n    if (!roleService && !roleServiceShortId) return null\n\n    // unknown spec\n    if (!spec) return <Alert severity=\"warning\">Unknown service</Alert>\n\n    return (\n        <Button\n            variant=\"outlined\"\n            color=\"default\"\n            startIcon={<AddIcon />}\n            onClick={handleStartSimulator}\n        >\n            start {spec.name}\n        </Button>\n    )\n}\n","import React, { PointerEvent, ReactNode } from \"react\"\n\nexport function PointerBoundary(props: {\n    className?: string\n    children: ReactNode\n}) {\n    const { className, children } = props\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n    return (\n        <div\n            className={className}\n            style={{ cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {children}\n        </div>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Grid } from \"@material-ui/core\"\nimport DashboardServiceWidget from \"../../dashboard/DashboardServiceWidget\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport NoServiceAlert from \"./NoServiceAlert\"\nimport { PointerBoundary } from \"./PointerBoundary\"\n\nfunction TwinWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"center\"\n            justify=\"center\"\n            spacing={1}\n        >\n            <Grid item>\n                <PointerBoundary>\n                    <DashboardServiceWidget\n                        service={roleService}\n                        visible={true}\n                        variant=\"icon\"\n                    />\n                </PointerBoundary>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class TwinField extends ReactInlineField {\n    static KEY = \"jacdac_field_twin\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new TwinField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <TwinWidget />\n    }\n}\n","import React, { lazy, useContext, PointerEvent } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport Suspense from \"../../ui/Suspense\"\nimport NoServiceAlert from \"./NoServiceAlert\"\n\nconst JDomServiceTreeView = lazy(\n    () => import(\"../../tools/JDomServiceTreeView\")\n)\n\nfunction JDomTreeWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <div\n            style={{ minWidth: \"12rem\", cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {roleService && (\n                <Suspense>\n                    <JDomServiceTreeView\n                        service={roleService}\n                        defaultExpanded={[roleService.id]}\n                    />\n                </Suspense>\n            )}\n        </div>\n    )\n}\n\nexport default class JDomTreeField extends ReactInlineField {\n    static KEY = \"jacdac_jdom_service_tree\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new JDomTreeField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <JDomTreeWidget />\n    }\n}\n","import React, { useContext, useState } from \"react\"\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        mini: {\n            display: \"inline-block\",\n            width: \"10rem\",\n        },\n    })\n)\n\nexport function useTrendChartData(maxLength = 25) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [trendData, setTrendData] = useState<[number, number][]>([])\n\n    const addTrendValue = (value: number) => {\n        if (isNaN(value)) return\n\n        const { timestamp } = bus\n        const entry: [number, number] = [timestamp, value]\n        setTrendData(trendData => [...trendData.slice(-(maxLength - 1)), entry])\n    }\n\n    return {\n        trendData,\n        addTrendValue,\n    }\n}\n\nexport default function TrendChart(props: {\n    data: [number, number][]\n    useGradient?: boolean\n    unit?: string\n    width?: number\n    height?: number\n    dot?: number\n    mini?: boolean\n}) {\n    const {\n        useGradient,\n        data,\n        unit,\n        width = 80,\n        height = 15,\n        dot,\n        mini,\n    } = props\n\n    const theme = useTheme()\n    const classes = useStyles()\n\n    // nothing to show for\n    if (data?.length < 2) return null\n\n    const vpw = width\n    const vph = height\n\n    const color = theme.palette.secondary.main\n    const shape = unit === \"#\" ? \"step\" : \"line\"\n    const symmetric = unit === \"g\" ? true : false\n\n    const values = data.map(r => r[1])\n    const mint = data[0][0]\n    const maxt = data[data.length - 1][0]\n    let minv = unit === \"/\" ? 0 : Math.min.apply(null, values)\n    let maxv = unit === \"/\" ? 1 : Math.max.apply(null, values)\n    const opposite = unit !== \"/\" && Math.sign(minv) != Math.sign(maxv)\n    if (isNaN(minv) && isNaN(maxv)) {\n        minv = 0\n        maxv = 1\n    }\n    if (symmetric) {\n        maxv = Math.max(Math.abs(minv), Math.abs(maxv))\n        minv = -maxv\n    }\n    const rv = maxv - minv\n\n    const margin = 2\n    const h = maxv - minv || 10\n    const w = maxt - mint || 10\n\n    const strokeWidth = 0.25\n    const axisWidth = 0.2\n    const axisColor = \"#ccc\"\n    const pointRadius = strokeWidth * 1.5\n    const toffset = -pointRadius * 3\n\n    const x = (t: number) => ((t - mint) / w) * vpw\n    const y = (v: number) => {\n        if (v === undefined || isNaN(v)) v = minv\n        // adding random for lineragradient bug workaround\n        // which does not render perfectly\n        // horizontal lines\n        return (\n            ((Math.random() * 0.0001 * rv - (v - minv)) / h) *\n            (vph - 2 * margin)\n        )\n    }\n    const lastRow = data[data.length - 1]\n    const path =\n        shape == \"step\"\n            ? data\n                  .map((row, ri) =>\n                      ri == 0\n                          ? `M ${x(row[0])} ${y(row[1])}`\n                          : `H ${x(row[0])} V ${y(row[1])}`\n                  )\n                  .join(\" \")\n            : data\n                  .map(\n                      (row, ri) =>\n                          `${ri == 0 ? `M` : `L`} ${x(row[0])} ${y(row[1])}`\n                  )\n                  .join(\" \")\n    return (\n        <div className={mini ? classes.mini : undefined}>\n            <svg\n                viewBox={`0 0 ${vpw} ${vph}`}\n                style={{ maxHeight: mini ? \"5vh\" : \"10vh\", maxWidth: \"100%\" }}\n            >\n                {useGradient && (\n                    <defs>\n                        <linearGradient\n                            key={`gradaxis`}\n                            id={`gradientaxis`}\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"100%\"\n                            y2=\"0%\"\n                        >\n                            <stop\n                                offset=\"0%\"\n                                stopOpacity=\"0\"\n                                stopColor={axisColor}\n                            />\n                            <stop\n                                offset=\"5%\"\n                                stopOpacity=\"0\"\n                                stopColor={axisColor}\n                            />\n                            <stop\n                                offset=\"40%\"\n                                stopOpacity=\"1\"\n                                stopColor={axisColor}\n                            />\n                            <stop\n                                offset=\"100%\"\n                                stopOpacity=\"1\"\n                                stopColor={axisColor}\n                            />\n                        </linearGradient>\n                        {useGradient && (\n                            <linearGradient\n                                id={`gradient0`}\n                                x1=\"0%\"\n                                y1=\"0%\"\n                                x2=\"100%\"\n                                y2=\"0%\"\n                            >\n                                <stop\n                                    offset=\"0%\"\n                                    stopOpacity=\"0\"\n                                    stopColor={color}\n                                />\n                                <stop\n                                    offset=\"5%\"\n                                    stopOpacity=\"0\"\n                                    stopColor={color}\n                                />\n                                <stop\n                                    offset=\"40%\"\n                                    stopOpacity=\"1\"\n                                    stopColor={color}\n                                />\n                                <stop\n                                    offset=\"100%\"\n                                    stopOpacity=\"1\"\n                                    stopColor={color}\n                                />\n                            </linearGradient>\n                        )}\n                    </defs>\n                )}\n                <g transform={`translate(${toffset}, ${vph - margin})`}>\n                    {opposite && (\n                        <line\n                            x1={x(mint)}\n                            x2={x(maxt)}\n                            y1={y(0)}\n                            y2={y(0)}\n                            strokeWidth={axisWidth}\n                            stroke={\n                                useGradient ? `url(#gradientaxis)` : axisColor\n                            }\n                        />\n                    )}\n                    <g>\n                        <path\n                            d={path}\n                            fill=\"none\"\n                            stroke={useGradient ? `url(#gradient0)` : color}\n                            strokeWidth={strokeWidth}\n                            strokeLinejoin=\"round\"\n                        />\n                        {dot && (\n                            <circle\n                                cx={x(lastRow[0])}\n                                cy={y(lastRow[1])}\n                                r={pointRadius}\n                                fill={color}\n                            />\n                        )}\n                    </g>\n                </g>\n            </svg>\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Box, Grid, Switch, Typography, useTheme } from \"@material-ui/core\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport { WatchValueType } from \"../../../../jacdac-ts/src/vm/runner\"\nimport { VM_EVENT, VMCode } from \"../../../../jacdac-ts/src/vm/events\"\nimport { roundWithPrecision } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport TrendChart, { useTrendChartData } from \"../../TrendChart\"\n\nfunction WatchValueWidget() {\n    const { runner, sourceId } = useContext(WorkspaceContext)\n    const theme = useTheme()\n\n    // track changes\n    const [value, setValue] = useState<WatchValueType>(\n        runner?.lookupWatch(sourceId)\n    )\n    const { trendData, addTrendValue } = useTrendChartData()\n\n    useEffect(() => {\n        setValue(undefined)\n        return runner?.subscribe(\n            VM_EVENT,\n            (code: VMCode, watchSourceId?: string) => {\n                if (code === VMCode.WatchChange && watchSourceId === sourceId) {\n                    const newValue = runner.lookupWatch(sourceId)\n                    setValue(newValue)\n                    addTrendValue(newValue)\n                }\n            }\n        )\n    }, [runner, sourceId])\n\n    let valueNumber = typeof value === \"number\" ? (value as number) : undefined\n    if (!isNaN(valueNumber)) {\n        const step = Math.ceil(Math.abs(valueNumber)) / 10\n        const precision = step < 1 ? Math.ceil(-Math.log10(step)) : 0\n        valueNumber = roundWithPrecision(valueNumber, precision)\n    }\n\n    return (\n        <Box\n            bgcolor={theme.palette.background.paper}\n            borderRadius={theme.spacing(1)}\n            color={theme.palette.text.primary}\n        >\n            <Grid\n                container\n                alignItems=\"flex-end\"\n                alignContent=\"center\"\n                justify=\"center\"\n                spacing={1}\n            >\n                <Grid item>\n                    <PointerBoundary>\n                        {!isNaN(valueNumber) ? (\n                            <Typography variant=\"body1\">\n                                {valueNumber}\n                            </Typography>\n                        ) : typeof value === \"boolean\" ? (\n                            <Switch value={!!value} />\n                        ) : (\n                            <Typography variant=\"body1\">\n                                {value === undefined ? \"...\" : value + \"\"}\n                            </Typography>\n                        )}\n                    </PointerBoundary>\n                </Grid>\n                {!isNaN(valueNumber) && (\n                    <Grid item>\n                        <PointerBoundary>\n                            <TrendChart\n                                data={trendData}\n                                mini={true}\n                                dot={2}\n                                useGradient={true}\n                            />\n                        </PointerBoundary>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    )\n}\n\nexport default class WatchValueField extends ReactInlineField {\n    static KEY = \"jacdac_watch_value\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new WatchValueField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"4rem\"\n        return c\n    }\n\n    renderInlineField() {\n        return <WatchValueWidget />\n    }\n}\n","import Blockly from \"blockly\"\nimport NoteField from \"./NoteField\"\nimport KeyboardKeyField from \"./KeyboardKeyField\"\nimport LEDMatrixField from \"./LEDMatrixField\"\nimport ServoAngleField from \"./ServoAngleField\"\nimport { BlockDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport LEDColorField from \"./LEDColorField\"\nimport TwinField from \"./TwinField\"\nimport JDomTreeField from \"./JDomTreeField\"\nimport WatchValueField from \"./WatchValueField\"\n\nlet reactFieldShadows: BlockDefinition[]\nexport function registerFields() {\n    if (reactFieldShadows) return\n\n    reactFieldShadows = []\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const registerType = (fieldType: any) => {\n        const key = fieldType.KEY\n        assert(!!key)\n        try {\n            Blockly.fieldRegistry.unregister(key) // hot reload issues\n        } catch (e) {\n            // ignore hot reload issues\n        }\n        Blockly.fieldRegistry.register(key, fieldType)\n        if (fieldType.SHADOW) reactFieldShadows.push(fieldType.SHADOW)\n    }\n    const fieldTypes = [\n        KeyboardKeyField,\n        NoteField,\n        LEDMatrixField,\n        ServoAngleField,\n        LEDColorField,\n        TwinField,\n        JDomTreeField,\n        WatchValueField,\n    ]\n    fieldTypes.forEach(registerType)\n}\n\nexport function fieldShadows() {\n    registerFields()\n    return reactFieldShadows.slice(0)\n}\n","export interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    roles?: string[]\n    errors?: VMError[]\n    // this handler support the editing experience but\n    // should not be compiled down or debugged\n    meta?: boolean\n}\n\nexport interface VMRole {\n    role: string\n    serviceShortId: string\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport type VMFunctionNames =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"watch\"\n\nexport const VMFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleConnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is connected`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleDisconnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is disconnected`,\n        context: \"command\",\n    },\n]\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    VMBase,\n    VMCommand,\n    VMError,\n    VMHandler,\n    VMIfThenElse,\n    VMProgram,\n    VMFunctions\n} from \"./ir\"\nimport {\n    VMChecker,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram(prog: VMProgram) {\n    const newProgram: VMProgram = { roles: prog.roles.slice(0), handlers: [] }\n    newProgram.handlers = prog.handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[]\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        symbolResolver.roles = []\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            h.roles = symbolResolver.roles\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors,\n    }\n}\n","import { BlockJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    VMIfThenElse,\n    VMError,\n} from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    toMemberExpression,\n    toIdentifier,\n    RoleEvent,\n} from \"../../../jacdac-ts/src/vm/compile\"\n\nimport { assert } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    BUILTIN_TYPES,\n    CommandBlockDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n} from \"./toolbox\"\nimport Blockly from \"blockly\"\nimport BlockDomainSpecificLanguage from \"./dsl/dsl\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nexport interface ExpressionWithErrors {\n    expr: jsep.Expression\n    errors: VMError[]\n}\n\nexport interface CmdWithErrors {\n    cmd: VMBase\n    errors: VMError[]\n}\n\nexport const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n    return {\n        sourceId: block.id,\n        type: \"cmd\",\n        command,\n    } as VMBase\n}\n\nexport const processErrors = (block: BlockJSON, errors: VMError[]) => {\n    return errors.map((e: VMError) => {\n        return {\n            sourceId: e.sourceId ? e.sourceId : block.id,\n            message: e.message,\n        }\n    })\n}\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON,\n    dsls: BlockDomainSpecificLanguage[]\n): VMProgram {\n    console.debug(`compile vm`, { workspace, dsls })\n\n    const roles: VMRole[] = workspace.variables\n        .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n        .map(v => ({ role: v.name, serviceShortId: v.type }))\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            switch (type) {\n                case \"math_single\": // built-in blockly\n                case \"jacdac_math_single\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    const op = inputs[0].fields[\"op\"].value as string\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"math_arithmetic\": // built-in blockly\n                case \"jacdac_math_arithmetic\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_operation\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_negate\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"logic_compare\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                default: {\n                    const definition = resolveServiceBlockDefinition(type)\n                    if (!definition) {\n                        console.warn(`unknown block ${type}`, {\n                            type,\n                            ev,\n                            block,\n                            d: Blockly.Blocks[type],\n                        })\n                    } else {\n                        // try any DSL\n                        const { dsl: dslName } = definition\n                        const dsl = dsls.find(d => d.id === dslName)\n                        const res = dsl?.compileExpressionToVM?.({\n                            event: ev,\n                            definition,\n                            block,\n                            blockToExpressionInner,\n                        })\n                        if (res) {\n                            if (res.errors)\n                                res.errors.forEach(e => errors.push(e))\n                            return res.expr\n                        }\n\n                        const { template } = definition\n                        switch (template) {\n                            case \"shadow\": {\n                                const field = inputs[0].fields[\"value\"]\n                                const v = field.value\n                                return <jsep.Literal>{\n                                    type: \"Literal\",\n                                    value: v,\n                                    raw: v + \"\",\n                                }\n                            }\n                            default: {\n                                console.warn(\n                                    `unsupported block template ${template} for ${type}`,\n                                    { ev, block }\n                                )\n                                break\n                            }\n                        }\n                        break\n                    }\n                }\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        console.debug(`block2c`, { event, type, block, inputs })\n        switch (type) {\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const definition = resolveServiceBlockDefinition(type)\n                if (definition) {\n                    const { dsl: dslName } = definition\n                    const dsl = dsls.find(dsl => dsl.id === dslName)\n                    const dslRes = dsl?.compileCommandToVM?.({\n                        event,\n                        block,\n                        definition,\n                        blockToExpression,\n                    })\n                    if (dslRes) {\n                        dslRes.errors = processErrors(block, dslRes.errors)\n                        return dslRes\n                    }\n\n                    console.warn(`unsupported block ${type}`, { block })\n                    return {\n                        cmd: undefined,\n                        errors: [],\n                    }\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks?.forEach(child => {\n            if (child) {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child)\n                    if (cmd) handler.commands.push(cmd)\n                    errors.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    } else {\n                        console.debug(e)\n                    }\n                }\n            }\n        })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks\n        .map(top => {\n            const { type } = top\n            let command: jsep.CallExpression\n            let topEvent: RoleEvent\n            let topErrors: VMError[]\n            let topMeta = false\n            const definition = resolveServiceBlockDefinition(type)\n            assert(!!definition)\n            const { template, dsl: dslName } = definition\n            const dsl = dslName && dsls?.find(d => d.id === dslName)\n\n            try {\n                const { expression, errors, event, meta } =\n                    dsl?.compileEventToVM?.({\n                        block: top,\n                        definition,\n                        blockToExpression,\n                    }) || {}\n                command = expression as jsep.CallExpression\n                topErrors = errors\n                topEvent = event\n                topMeta = meta\n\n                // if dsl didn't compile anything try again\n                if (!command && !topErrors?.length) {\n                    switch (template) {\n                        case \"meta\": {\n                            break\n                        }\n                        default: {\n                            console.warn(\n                                `unsupported handler template ${template} for ${type}`,\n                                { top }\n                            )\n                            break\n                        }\n                    }\n                }\n            } catch (e) {\n                console.debug(e)\n                if (e instanceof EmptyExpression) {\n                    return undefined\n                } else {\n                    throw e\n                }\n            }\n\n            // nothing to compile here\n            if (!command && !topErrors?.length) return undefined\n\n            const handler: VMHandler = {\n                commands: [\n                    {\n                        sourceId: top.id,\n                        type: \"cmd\",\n                        command,\n                    } as VMBase,\n                ],\n                errors: topErrors || [],\n                meta: !!topMeta\n            }\n\n            addCommands(topEvent, top.children, handler)\n            return handler\n        })\n        .filter(handler => !!handler)\n\n    return {\n        roles,\n        handlers,\n    }\n}\n","import { Theme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../../jacdac-ts/src/jdom/flags\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecifications,\n} from \"../../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../../jacdac-ts/src/jdom/utils\"\nimport {\n    toIdentifier,\n    toMemberExpression,\n} from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport KeyboardKeyField from \"../fields/KeyboardKeyField\"\nimport LEDColorField from \"../fields/LEDColorField\"\nimport LEDMatrixField from \"../fields/LEDMatrixField\"\nimport NoteField from \"../fields/NoteField\"\nimport ServoAngleField from \"../fields/ServoAngleField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    CommandBlockDefinition,\n    CONNECTED_BLOCK,\n    CONNECTION_BLOCK,\n    CustomBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    SeparatorDefinition,\n    ServiceBlockDefinition,\n    SET_STATUS_LIGHT_BLOCK,\n    ValueInputDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport { ExpressionWithErrors, makeVMBase } from \"../VMgenerator\"\nimport BlockDomainSpecificLanguage, {\n    CompileCommandToVMOptions,\n    CompileEventToVMOptions,\n    CompileEventToVMResult,\n    CompileExpressionToVMOptions,\n    CreateBlocksOptions,\n    CreateCategoryOptions,\n} from \"./dsl\"\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return isBooleanField(field)\n        ? \"Boolean\"\n        : isStringField(field)\n        ? \"String\"\n        : isNumericType(field)\n        ? \"Number\"\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nconst commandColor = \"#8c6a1d\"\n\nexport class ServicesBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"jacdacServices\"\n    supportedServices: jdspec.ServiceSpec[] = []\n    private _serviceBlocks: ServiceBlockDefinition[]\n    private _eventFieldBlocks: EventFieldDefinition[]\n    private _runtimeBlocks: BlockDefinition[]\n\n    private createServiceColor(theme: Theme) {\n        const sensorColor = theme.palette.success.main\n        const otherColor = theme.palette.info.main\n        const serviceColor = (srv: jdspec.ServiceSpec) =>\n            isSensor(srv) ? sensorColor : otherColor\n        return serviceColor\n    }\n\n    createBlocks(options: CreateBlocksOptions) {\n        const { theme } = options\n        const serviceColor = this.createServiceColor(theme)\n        // blocks\n        const customShadows = [\n            {\n                serviceClass: SRV_SERVO,\n                kind: \"rw\",\n                identifier: ServoReg.Angle,\n                field: \"_\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: ServoAngleField.SHADOW.type,\n                },\n            },\n            {\n                serviceClass: SRV_BUZZER,\n                kind: \"command\",\n                identifier: BuzzerCmd.PlayNote,\n                field: \"frequency\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: NoteField.SHADOW.type,\n                },\n            },\n        ]\n        const lookupCustomShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customShadows.find(\n                cs =>\n                    cs.serviceClass === service.classIdentifier &&\n                    cs.kind == info.kind &&\n                    cs.identifier === info.identifier &&\n                    cs.field == field.name\n            )?.shadow\n\n        const serviceHelp = (service: jdspec.ServiceSpec) =>\n            withPrefix(`/services/${service.shortId}`)\n        const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n            pkt.fields.every(toBlocklyType)\n        const fieldName = (\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) => (field.name === \"_\" ? reg.name : field.name)\n        const fieldToShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ): BlockReference =>\n            lookupCustomShadow(service, info, field) ||\n            (isBooleanField(field)\n                ? { kind: \"block\", type: \"jacdac_on_off\" }\n                : isStringField(field)\n                ? { kind: \"block\", type: \"text\" }\n                : field.unit === \"°\"\n                ? {\n                      kind: \"block\",\n                      type: \"jacdac_angle\",\n                  }\n                : field.unit === \"/\"\n                ? { kind: \"block\", type: \"jacdac_ratio\" }\n                : /^%/.test(field.unit)\n                ? { kind: \"block\", type: \"jacdac_percent\" }\n                : field.type === \"u8\"\n                ? { kind: \"block\", type: \"jacdac_byte\" }\n                : {\n                      kind: \"block\",\n                      type: \"math_number\",\n                      value: field.defaultValue || 0,\n                      min: field.typicalMin || field.absoluteMin,\n                      max: field.typicalMax || field.absoluteMax,\n                  })\n        const variableName = (srv: jdspec.ServiceSpec) =>\n            `${humanify(srv.camelName).toLowerCase()} 1`\n        const fieldVariable = (\n            service: jdspec.ServiceSpec\n        ): VariableInputDefinition => ({\n            type: \"field_variable\",\n            name: \"role\",\n            variable: variableName(service),\n            variableTypes: [service.shortId],\n            defaultType: service.shortId,\n        })\n        const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n            info.fields.map(field => ({\n                type: \"input_value\",\n                name: fieldName(info, field),\n                check: toBlocklyType(field),\n            }))\n        const fieldsToValues = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo\n        ) =>\n            toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n                info.fields,\n                field => fieldName(info, field),\n                field => fieldToShadow(service, info, field)\n            )\n        const fieldsToMessage = (info: jdspec.PacketInfo) =>\n            info.fields\n                .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n                .join(\" \")\n        const isEnabledRegister = (info: jdspec.PacketInfo) =>\n            info.fields.length === 1 &&\n            info.fields[0].type === \"bool\" &&\n            info.name === \"enabled\"\n        const customMessage = (\n            srv: jdspec.ServiceSpec,\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customMessages.find(\n                m =>\n                    m.service === srv.classIdentifier &&\n                    m.register === reg.identifier &&\n                    m.field === field.name\n            )\n\n        const allServices = serviceSpecifications()\n        this.supportedServices = allServices\n            .filter(\n                service =>\n                    !/^_/.test(service.shortId) &&\n                    service.status !== \"deprecated\"\n            )\n            .filter(\n                service => ignoredServices.indexOf(service.classIdentifier) < 0\n            )\n        const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n            allServices.filter(srv => srv.classIdentifier === cls)\n        const registers = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isRegister(pkt) &&\n                            !pkt.lowLevel &&\n                            includedRegisters.indexOf(pkt.identifier) > -1\n                    )\n                    .map(register => ({\n                        service,\n                        register,\n                    }))\n            )\n        )\n        const events = this.supportedServices\n            .map(service => ({\n                service,\n                events: service.packets.filter(\n                    pkt =>\n                        isEvent(pkt) &&\n                        !pkt.lowLevel &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                ),\n            }))\n            .filter(kv => !!kv.events.length)\n        const commands = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isCommand(pkt) &&\n                            !pkt.lowLevel &&\n                            fieldsSupported(pkt)\n                    )\n                    .map(pkt => ({\n                        service,\n                        command: pkt,\n                    }))\n            )\n        )\n\n        const customBlockDefinitions: CustomBlockDefinition[] = [\n            ...resolveService(SRV_HID_KEYBOARD).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `key`,\n                        message0: `send %1 key %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: KeyboardKeyField.KEY,\n                                name: \"combo\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Send a keyboard key combo`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.key(combo.selectors, combo.modifiers)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `fade`,\n                        message0: `fade %1 to %2 at speed %3`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"color\",\n                                check: \"Number\",\n                            },\n                            {\n                                type: \"input_value\",\n                                name: \"speed\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            color: {\n                                kind: \"block\",\n                                type: LEDColorField.SHADOW.type,\n                            },\n                            speed: {\n                                kind: \"block\",\n                                type: \"jacdac_ratio\",\n                                shadow: true,\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Fade LED color`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `set_digits`,\n                        message0: `set %1 digits to %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"digits\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            digits: {\n                                kind: \"block\",\n                                type: \"math_number\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display a number of the screen`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED_MATRIX).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `show_leds`,\n                        message0: `show %1 leds %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: LEDMatrixField.KEY,\n                                name: \"leds\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display LEDs on the LED matrix`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n        ].map(def => {\n            def.type = `jacdac_custom_${def.service.shortId.toLowerCase()}_${\n                def.type\n            }`\n            return def\n        })\n\n        const eventBlocks = events.map<EventBlockDefinition>(\n            ({ service, events }) => ({\n                kind: \"block\",\n                type: `jacdac_events_${service.shortId}`,\n                message0: `on %1 %2`,\n                args0: [\n                    fieldVariable(service),\n                    <InputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: events.map(event => [\n                            humanify(event.name),\n                            event.name,\n                        ]),\n                    },\n                ],\n                colour: serviceColor(service),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                tooltip: `Events for the ${service.name} service`,\n                helpUrl: serviceHelp(service),\n                service,\n                events,\n                template: \"event\",\n            })\n        )\n\n        const registerChangeByEventBlocks = registers\n            .filter(\n                ({ service }) =>\n                    !service.packets.some(\n                        pkt =>\n                            isEvent(pkt) &&\n                            ignoredEvents.indexOf(pkt.identifier) < 0\n                    )\n            )\n            .filter(\n                ({ register }) =>\n                    register.fields.length === 1 &&\n                    isNumericType(register.fields[0]) &&\n                    register.identifier !== SystemReg.Intensity\n            )\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n                message0: `on %1 ${humanify(register.name)} change by %2`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ].filter(v => !!v),\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: serviceColor(service),\n                tooltip: `Event raised when ${register.name} changes`,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_change_event\",\n            }))\n\n        const [registerSimples, registerComposites] = splitFilter(\n            registers,\n            reg => reg.register.fields.length == 1\n        )\n        const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n            registerSimples,\n            ({ register }) => !!toBlocklyType(register.fields[0])\n        )\n        const registerSimplesGetBlocks =\n            registerSimpleTypes.map<RegisterBlockDefinition>(\n                ({ service, register }) => ({\n                    kind: \"block\",\n                    type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                    message0:\n                        customMessage(service, register, register.fields[0])\n                            ?.get || `%1 ${humanify(register.name)}`,\n                    args0: [fieldVariable(service)],\n                    inputsInline: true,\n                    output: toBlocklyType(register.fields[0]),\n                    colour: serviceColor(service),\n                    tooltip: register.description,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    register,\n                    field: register.fields[0],\n\n                    template: \"register_get\",\n                })\n            )\n        const registerSimpleEnumTypes = registerSimpleOthers\n            .filter(\n                ({ service, register }) =>\n                    !!enumInfo(service, register.fields[0])\n            )\n            .map(({ service, register }) => ({\n                service,\n                register,\n                field: register.fields[0],\n                einfo: enumInfo(service, register.fields[0]),\n            }))\n        const registerCompositeEnumTypes = arrayConcatMany(\n            registerComposites.map(({ service, register }) =>\n                register.fields\n                    .map(field => ({\n                        service,\n                        register,\n                        field,\n                        einfo: enumInfo(service, field),\n                    }))\n                    .filter(({ einfo }) => !!einfo)\n            )\n        )\n        const registerEnumGetBlocks = [\n            ...registerSimpleEnumTypes,\n            ...registerCompositeEnumTypes,\n        ].map<RegisterBlockDefinition>(\n            ({ service, register, field, einfo }) => ({\n                kind: \"block\",\n                type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n                message0:\n                    customMessage(service, register, field)?.get ||\n                    `%1 ${humanify(register.name)}${\n                        field.name === \"_\" ? \"\" : ` ${field.name}`\n                    } %2`,\n                args0: [\n                    fieldVariable(service),\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: field.name,\n                        options: Object.keys(einfo.members).map(member => [\n                            humanify(member),\n                            member,\n                        ]),\n                    },\n                ],\n                inputsInline: true,\n                output: \"Boolean\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field,\n\n                template: \"register_get\",\n            })\n        )\n\n        const registerNumericsGetBlocks = registerComposites\n            .filter(re => re.register.fields.some(isNumericType))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n                message0: `%1 ${humanify(register.name)}${\n                    register.fields.length > 1 ? ` %2` : \"\"\n                }`,\n                args0: [\n                    fieldVariable(service),\n                    register.fields.length > 1\n                        ? <OptionsInputDefinition>{\n                              type: \"field_dropdown\",\n                              name: \"field\",\n                              options: register.fields\n                                  .filter(f => isNumericType(f))\n                                  .map(field => [\n                                      humanify(field.name),\n                                      fieldName(register, field),\n                                  ]),\n                          }\n                        : undefined,\n                ].filter(v => !!v),\n                inputsInline: true,\n                output: \"Number\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_get\",\n            }))\n\n        const registerSetBlocks = registers\n            .filter(({ register }) => register.kind === \"rw\")\n            .filter(({ register }) => fieldsSupported(register))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_set_${service.shortId}_${register.name}`,\n                message0: isEnabledRegister(register)\n                    ? `set %1 %2`\n                    : `set %1 ${register.name} to ${\n                          register.fields.length === 1\n                              ? \"%2\"\n                              : fieldsToMessage(register)\n                      }`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ],\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"register_set\",\n            }))\n\n        const commandBlocks = commands.map<CommandBlockDefinition>(\n            ({ service, command }) => ({\n                kind: \"block\",\n                type: `jacdac_command_${service.shortId}_${command.name}`,\n                message0: !command.fields.length\n                    ? `${humanify(command.name)} %1`\n                    : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                          command\n                      )}`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(command),\n                ],\n                values: fieldsToValues(service, command),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: command.description,\n                helpUrl: serviceHelp(service),\n                service,\n                command,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"command\",\n            })\n        )\n\n        this._serviceBlocks = [\n            ...eventBlocks,\n            ...registerChangeByEventBlocks,\n            ...registerSimplesGetBlocks,\n            ...registerEnumGetBlocks,\n            ...registerNumericsGetBlocks,\n            ...registerSetBlocks,\n            ...customBlockDefinitions,\n            ...commandBlocks,\n        ]\n\n        // generate accessor blocks for event data with numbers\n        this._eventFieldBlocks = arrayConcatMany(\n            events.map(({ service, events }) =>\n                events\n                    .filter(\n                        event => event.fields.filter(isNumericType).length > 0\n                    )\n                    .map(event => ({ service, event }))\n                    .map(\n                        ({ service, event }) =>\n                            <EventFieldDefinition>{\n                                kind: \"block\",\n                                type: `jacdac_event_field_${service.shortId}_${event.name}`,\n                                message0: `${event.name} %1`,\n                                args0: [\n                                    <InputDefinition>{\n                                        type: \"field_dropdown\",\n                                        name: \"field\",\n                                        options: event.fields.map(field => [\n                                            humanify(field.name),\n                                            field.name,\n                                        ]),\n                                    },\n                                ],\n                                colour: serviceColor(service),\n                                inputsInline: true,\n                                tooltip: `Data fields of the ${event.name} event`,\n                                helpUrl: serviceHelp(service),\n                                service,\n                                event,\n                                output: \"Number\",\n                                template: \"event_field\",\n                            }\n                    )\n            )\n        )\n\n        this._runtimeBlocks = [\n            {\n                kind: \"block\",\n                type: CONNECTION_BLOCK,\n                message0: \"on %1 %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: [\n                            [\"connected\", \"connected\"],\n                            [\"disconnected\", \"disconnected\"],\n                        ],\n                    },\n                ],\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"connection\",\n            },\n            {\n                kind: \"block\",\n                type: CONNECTED_BLOCK,\n                message0: \"%1 connected\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                ],\n                output: \"Boolean\",\n                inputsInline: true,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"connected\",\n            },\n            {\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                message0: \"set %1 status light to %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"all\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"color\",\n                        check: \"Number\",\n                    },\n                ],\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n                inputsInline: true,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Sets the color on the status light\",\n                helpUrl: \"\",\n            },\n        ]\n\n        return [\n            ...this._serviceBlocks,\n            ...this._eventFieldBlocks,\n            ...this._runtimeBlocks,\n        ]\n    }\n\n    createCategory(options: CreateCategoryOptions) {\n        const { theme, program, source, liveServices } = options\n        const serviceColor = this.createServiceColor(theme)\n\n        const blockServices =\n            program?.roles.map(r => r.serviceShortId) ||\n            source?.variables.map(v => v.type) ||\n            []\n        const usedEvents: Set<jdspec.PacketInfo> = new Set(\n            source?.blocks\n                ?.map(block => ({\n                    block,\n                    definition: resolveServiceBlockDefinition(block.type),\n                }))\n                .filter(({ definition }) => definition.template === \"event\")\n                .map(({ block, definition }) => {\n                    const eventName = block.inputs[0].fields[\"event\"]\n                        .value as string\n                    return (definition as EventBlockDefinition).events.find(\n                        ev => ev.name === eventName\n                    )\n                })\n                .filter(ev => !!ev)\n        )\n        const jdBlocks = this._serviceBlocks.filter(block => !!block.service)\n        const services = uniqueMap(\n            jdBlocks,\n            block => block.service.shortId,\n            block => block.service\n        )\n\n        const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n            Flags.diagnostics\n                ? services\n                : [\n                      ...blockServices\n                          .map(srvid =>\n                              services.find(\n                                  service => service.shortId === srvid\n                              )\n                          )\n                          .filter(srv => !!srv),\n                      ...liveServices.map(srv => srv.specification),\n                  ],\n            srv => srv.shortId,\n            srv => srv\n        )\n            .filter(\n                srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0\n            )\n            .sort((l, r) => l.name.localeCompare(r.name))\n\n        const servicesCategories: CategoryDefinition[] = toolboxServices\n            .map(service => ({\n                service,\n                serviceBlocks: this._serviceBlocks.filter(\n                    block => block.service === service\n                ),\n            }))\n            .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n                kind: \"category\",\n                name: service.name,\n                colour: serviceColor(service),\n                contents: [\n                    ...serviceBlocks.map<BlockDefinition>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n                    ...this._eventFieldBlocks\n                        .filter(\n                            ev =>\n                                ev.service === service &&\n                                usedEvents.has(ev.event)\n                        )\n                        .map<BlockDefinition>(block => ({\n                            kind: \"block\",\n                            type: block.type,\n                            values: block.values,\n                        })),\n                ],\n                button: {\n                    kind: \"button\",\n                    text: `Add ${service.name} role`,\n                    callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                    service,\n                },\n            }))\n            .filter(cat => !!cat.contents?.length)\n\n        const commonCategory: CategoryDefinition = {\n            kind: \"category\",\n            name: \"Services\",\n            colour: commandColor,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: CONNECTION_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: CONNECTED_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: SET_STATUS_LIGHT_BLOCK,\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                    },\n                },\n            ],\n        }\n\n        return [\n            ...servicesCategories,\n            commonCategory,\n            <SeparatorDefinition>{\n                kind: \"sep\",\n            },\n        ]\n    }\n\n    compileEventToVM(options: CompileEventToVMOptions): CompileEventToVMResult {\n        const { block, definition, blockToExpression } = options\n        const { inputs } = block\n        const { template } = definition\n\n        switch (template) {\n            case \"event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { value: eventName } = inputs[0].fields[\"event\"]\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    },\n                    event: {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    },\n                }\n            }\n            case \"register_change_event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    undefined,\n                    inputs[0].child\n                )\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    },\n                    errors,\n                }\n            }\n        }\n\n        return undefined\n    }\n\n    compileExpressionToVM(\n        options: CompileExpressionToVMOptions\n    ): ExpressionWithErrors {\n        const { event, definition, block } = options\n        const { inputs, id } = block\n        const { template } = definition\n        switch (template) {\n            case \"register_get\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { value: role } = inputs[0].fields[\"role\"]\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        role as string,\n                        field\n                            ? toMemberExpression(\n                                  register.name,\n                                  field.value as string\n                              )\n                            : register.name\n                    ),\n                    errors: [],\n                }\n            }\n            case \"event_field\": {\n                const { event: eventInfo } = definition as EventFieldDefinition\n                const errors: VMError[] = []\n                if (event.event !== eventInfo.name) {\n                    errors.push({\n                        sourceId: id,\n                        message: `Event ${eventInfo.name} is not available in this handler.`,\n                    })\n                }\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        event.role,\n                        toMemberExpression(event.event, field.value as string)\n                    ),\n                    errors,\n                }\n            }\n            default:\n                return undefined\n        }\n    }\n\n    compileCommandToVM(options: CompileCommandToVMOptions) {\n        const { event, block, definition, blockToExpression } = options\n        const { template } = definition\n        const { inputs } = block\n        switch (template) {\n            case \"register_set\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                const { value: role } = inputs[0].fields.role\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role as string, register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"writeRegister\"),\n                    }),\n                    errors,\n                }\n            }\n            case \"command\": {\n                const { command: serviceCommand } =\n                    definition as CommandBlockDefinition\n                const { value: role } = inputs[0].fields.role\n                const exprsErrors = inputs.map(a =>\n                    blockToExpression(event, a.child)\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: exprsErrors.map(p => p.expr),\n                        callee: toMemberExpression(\n                            role as string,\n                            serviceCommand.name\n                        ),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n        }\n\n        return undefined\n    }\n}\nconst servicesDSL = new ServicesBlockDomainSpecificLanguage()\nexport default servicesDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport JDomTreeField from \"../fields/JDomTreeField\"\nimport TwinField from \"../fields/TwinField\"\nimport WatchValueField from \"../fields/WatchValueField\"\nimport {\n    BlockDefinition,\n    InputDefinition,\n    INSPECT_BLOCK,\n    TWIN_BLOCK,\n    VariableInputDefinition,\n    WATCH_BLOCK,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport servicesDSL from \"./servicesdsl\"\n\nconst colour = \"#888\"\n\nconst toolsDSL: BlockDomainSpecificLanguage = {\n    id: \"tools\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"Number\", \"Boolean\", \"String\"],\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n        },\n    ],\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Tools\",\n            colour: colour,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: WATCH_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: TWIN_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: INSPECT_BLOCK,\n                },\n            ],\n        },\n    ],\n\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === WATCH_BLOCK) {\n            const { inputs } = block\n            const { expr, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: <jsep.CallExpression>{\n                    type: \"CallExpression\",\n                    arguments: [expr],\n                    callee: toIdentifier(\"watch\"),\n                },\n                errors,\n                meta: true\n            }\n        }\n\n        return undefined\n    },\n}\n\nexport default toolsDSL\n","import {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    DummyInputDefinition,\n    PRIMITIVE_TYPES,\n    StatementInputDefinition,\n    TextInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst colour = \"#8a57c2\"\nclass AzureIoTHubBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"azureiothub\"\n    private _blocks: BlockDefinition[]\n    createBlocks() {\n        return (this._blocks = [\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry\",\n                message0: \"on receive cloud-to-device message\",\n                args0: [],\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry_number\",\n                message0: \"received number %1\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                ],\n                output: \"Number\",\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry_string\",\n                message0: \"received string %1\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                ],\n                output: \"String\",\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_send_telemetry\",\n                message0: \"send device-to-cloud message %1 %2\",\n                args0: [\n                    <DummyInputDefinition>{\n                        type: \"input_dummy\",\n                    },\n                    <StatementInputDefinition>{\n                        type: \"input_statement\",\n                        name: \"fields\",\n                    },\n                ],\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_send_telemetry_value\",\n                message0: \"with %1 = %2\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"value\",\n                        check: PRIMITIVE_TYPES,\n                    },\n                ],\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n        ])\n    }\n    createCategory(): CategoryDefinition[] {\n        return [\n            {\n                kind: \"category\",\n                name: \"Azure IoT Hub\",\n                colour,\n                contents: [\n                    ...this._blocks.map(\n                        ({ type }) =>\n                            <BlockDefinition>{\n                                kind: \"block\",\n                                type,\n                            }\n                    ),\n                ],\n            },\n        ]\n    }\n}\n\nconst azureIoTHubDSL: BlockDomainSpecificLanguage =\n    new AzureIoTHubBlockDomainSpecificLanguage()\n\nexport default azureIoTHubDSL\n","import { DTDLUnits } from \"../../../../jacdac-ts/src/azure-iot/dtdl\"\nimport {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    OptionsInputDefinition,\n    StatementInputDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nexport const DEVICE_TWIN_SEND_TELEMETRY = \"device_twin_send_telemetry\"\nexport const DEVICE_TWIN_DEFINITION_BLOCK = \"device_twin_definition\"\nexport const DEVICE_TWIN_PROPERTY_BLOCK = \"device_twin_property\"\n\nexport const DEVICE_TWIN_PROPERTY_TYPE = \"DeviceTwinProperty\"\nexport const DEVICE_TWIN_VALUE_TYPE = \"DeviceTwinValue\"\n\nconst colour = \"#843ed0\"\nconst deviceTwinContentType = \"DeviceTwinContent\"\nconst deviceTwinCommonOptionType = \"DeviceTwinCommonOption\"\nconst deviceTwinPropertyOptionType = \"DeviceTwinPropertyOption\"\nconst deviceTwinStatementType = [deviceTwinContentType]\nconst deviceTwinCommonOptionStatementType = [deviceTwinCommonOptionType]\nconst deviceTwinPropertyOptionStatementType = [\n    deviceTwinPropertyOptionType,\n    ...deviceTwinCommonOptionStatementType,\n]\n\nclass DeviceTwinBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"devicetwin\"\n    private _blocks: BlockDefinition[]\n    createBlocks() {\n        return (this._blocks = [\n            {\n                kind: \"block\",\n                type: DEVICE_TWIN_DEFINITION_BLOCK,\n                message0: \"device twin\",\n                args0: [],\n                inputsInline: true,\n                nextStatement: deviceTwinStatementType,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: DEVICE_TWIN_PROPERTY_BLOCK,\n                message0: \"property %1 %2 %3\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"name\",\n                        variable: \"property 1\",\n                        variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                        defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                    },\n                    {\n                        type: \"input_dummy\",\n                    },\n                    <StatementInputDefinition>{\n                        type: \"input_statement\",\n                        name: \"options\",\n                        check: deviceTwinPropertyOptionStatementType,\n                    },\n                ],\n                previousStatement: deviceTwinStatementType,\n                nextStatement: deviceTwinStatementType,\n                colour,\n                inputsInline: false,\n            },\n            // options\n            {\n                kind: \"block\",\n                type: \"device_twin_option_property_field\",\n                message0: \"field %1 %2 %3\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"variable\",\n                        variable: \"value 1\",\n                        variableTypes: [DEVICE_TWIN_VALUE_TYPE],\n                        defaultType: DEVICE_TWIN_VALUE_TYPE,\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"unit\",\n                        options: DTDLUnits().map(unit => [unit, unit]),\n                    },\n                    {\n                        type: \"input_value\",\n                        name: \"value\",\n                    },\n                ],\n                previousStatement: deviceTwinCommonOptionStatementType,\n                nextStatement: deviceTwinCommonOptionStatementType,\n                colour,\n                inputsInline: false,\n            },\n            // events\n            {\n                kind: \"block\",\n                type: \"device_twin_property_change\",\n                message0: \"on property %1 change\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"name\",\n                        variable: \"property 1\",\n                        variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                        defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                    },\n                ],\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n        ])\n    }\n    createCategory(): CategoryDefinition[] {\n        return [\n            {\n                kind: \"category\",\n                name: \"Device Twin\",\n                colour,\n                contents: [\n                    ...this._blocks.map(\n                        ({ type }) =>\n                            <BlockDefinition>{\n                                kind: \"block\",\n                                type,\n                            }\n                    ),\n                ],\n            },\n        ]\n    }\n}\n\nconst deviceTwinDSL: BlockDomainSpecificLanguage =\n    new DeviceTwinBlockDomainSpecificLanguage()\n\nexport default deviceTwinDSL\n","import {\n    CategoryDefinition,\n    OptionsInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst mathDSL: BlockDomainSpecificLanguage = {\n    id: \"jacdacmath\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random_range\",\n            message0: \"random from %1 to %2\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"min\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"max\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            inputsInline: true,\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_clamp\",\n            message0: \"clamp %1 in [%2, %3]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"minInclusive\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"maxInclusive\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ],\n    createCategory: () => [\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Math\",\n            colour: \"%{BKY_MATH_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_arithmetic\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_single\",\n                    values: {\n                        NUM: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                { kind: \"block\", type: \"jacdac_math_random\" },\n                { kind: \"block\", type: \"jacdac_math_random_range\" },\n                { kind: \"block\", type: \"jacdac_math_map\" },\n                { kind: \"block\", type: \"math_number\" },\n            ],\n        },\n    ],\n}\n\nexport default mathDSL\n","import BlockDomainSpecificLanguage from \"./dsl\"\n\nconst logicDsl: BlockDomainSpecificLanguage = {\n    id: \"logic\",\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Logic\",\n            colour: \"%{BKY_LOGIC_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"dynamic_if\",\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_compare\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_operation\",\n                    values: {\n                        A: { kind: \"block\", type: \"logic_boolean\" },\n                        B: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_negate\",\n                    values: {\n                        BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_boolean\",\n                },\n            ],\n        },\n    ],\n}\nexport default logicDsl\n","import BlockDomainSpecificLanguage from \"./dsl\"\n\nconst variablesDsl: BlockDomainSpecificLanguage = {\n    id: \"variables\",\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Variables\",\n            colour: \"%{BKY_VARIABLES_HUE}\",\n            custom: \"VARIABLE\",\n        },\n    ],\n}\nexport default variablesDsl\n","import { Block } from \"blockly\"\nimport { SMap } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { fieldShadows } from \"../fields/fields\"\nimport {\n    ColorInputDefnition,\n    NumberInputDefinition,\n    OptionsInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst builtins: SMap<(block: Block) => string | number | boolean> = {\n    jacdac_on_off: block => block.getFieldValue(\"value\") === \"on\",\n    jacdac_yes_no: block => block.getFieldValue(\"value\") === \"on\",\n    jacdac_time_picker: block => Number(block.getFieldValue(\"value\") || \"0\"),\n    jacdac_angle: block => Number(block.getFieldValue(\"value\") || \"0\"),\n    jacdac_percent: block => Number(block.getFieldValue(\"value\") || \"0\"),\n    jacdac_ratio: block => Number(block.getFieldValue(\"value\") || \"0\"),\n}\n\nconst shadowDsl: BlockDomainSpecificLanguage = {\n    id: \"shadow\",\n    createBlocks: () => [\n        ...fieldShadows(),\n        {\n            kind: \"block\",\n            type: `jacdac_on_off`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"enabled\", \"on\"],\n                        [\"disabled\", \"off\"],\n                    ],\n                },\n            ],\n            style: \"logic_blocks\",\n            output: \"Boolean\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_yes_no`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"yes\", \"on\"],\n                        [\"no\", \"off\"],\n                    ],\n                },\n            ],\n            style: \"logic_blocks\",\n            output: \"Boolean\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_time_picker`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"0.1\", \"0.1\"],\n                        [\"1\", \"1\"],\n                        [\"5\", \"5\"],\n                        [\"30\", \"30\"],\n                        [\"60\", \"60\"],\n                    ],\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_angle`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_angle\",\n                    name: \"value\",\n                    min: 0,\n                    max: 360,\n                    precision: 10,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_percent`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 100,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_byte`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 255,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_ratio`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 1,\n                    precision: 0.1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_color`,\n            message0: `%1`,\n            args0: [\n                <ColorInputDefnition>{\n                    type: \"field_colour\",\n                    name: \"col\",\n                    colour: \"#ff0000\",\n                    colourOptions: [\n                        \"#ff0000\",\n                        \"#ff8000\",\n                        \"#ffff00\",\n                        \"#ff9da5\",\n                        \"#00ff00\",\n                        \"#b09eff\",\n                        \"#00ffff\",\n                        \"#007fff\",\n                        \"#65471f\",\n                        \"#0000ff\",\n                        \"#7f00ff\",\n                        \"#ff0080\",\n                        \"#ff00ff\",\n                        \"#ffffff\",\n                        \"#999999\",\n                        \"#000000\",\n                    ],\n                    columns: 4,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Color\",\n        },\n    ],\n\n    blockToValue: block => builtins[block.type]?.(block),\n}\nexport default shadowDsl\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMCommand } from \"../../../../jacdac-ts/src/vm/ir\"\nimport {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    InputDefinition,\n    REPEAT_EVERY_BLOCK,\n    SeparatorDefinition,\n    ValueInputDefinition,\n    WAIT_BLOCK,\n} from \"../toolbox\"\nimport { makeVMBase, processErrors } from \"../VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst colour = \"#4fbac9\"\nconst loopsDsl: BlockDomainSpecificLanguage = {\n    id: \"loops\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: CODE_STATEMENT_TYPE,\n            nextStatement: CODE_STATEMENT_TYPE,\n            colour,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n    ],\n\n    createCategory: () => [\n        <SeparatorDefinition>{\n            kind: \"sep\",\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Commands\",\n            order: 4,\n            colour,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: REPEAT_EVERY_BLOCK,\n                    values: {\n                        interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: WAIT_BLOCK,\n                    values: {\n                        time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n            ].filter(b => !!b),\n        },\n    ],\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === REPEAT_EVERY_BLOCK) {\n            const { inputs } = block\n            const { expr: time, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: (\n                    makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }) as VMCommand\n                ).command,\n                errors: processErrors(block, errors),\n            }\n        }\n        return undefined\n    },\n    compileCommandToVM: ({ event, block, blockToExpression }) => {\n        const { type } = block\n        if (type === WAIT_BLOCK) {\n            const { inputs } = block\n            {\n                const { expr: time, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }),\n                    errors: processErrors(block, errors),\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default loopsDsl\n","import React, { createContext, useMemo } from \"react\"\nimport toolsDSL from \"./toolsdsl\"\nimport azureIoTHubDSL from \"./azureiothubdsl\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport deviceTwinDSL from \"./devicetwindsl\"\nimport servicesDSL from \"./servicesdsl\"\nimport mathDSL from \"./mathdsl\"\nimport logicDsl from \"./logicdsl\"\nimport variablesDsl from \"./variablesdsl\"\nimport shadowDsl from \"./shadowdsl\"\nimport loopsDsl from \"./loopsdsl\"\n\nexport interface DslProps {\n    dsls: BlockDomainSpecificLanguage[]\n}\n\nconst DslContext = createContext<DslProps>({\n    dsls: [],\n})\nDslContext.displayName = \"DSL\"\n\nexport default DslContext\n\n// eslint-disable-next-line react/prop-types\nexport const DslProvider = ({ children }) => {\n    const dsls = useMemo(\n        () => [\n            servicesDSL,\n            azureIoTHubDSL,\n            deviceTwinDSL,\n            toolsDSL,\n            loopsDsl,\n            logicDsl,\n            mathDSL,\n            variablesDsl,\n            shadowDsl,\n        ],\n        []\n    )\n    return (\n        <DslContext.Provider value={{ dsls }}>{children}</DslContext.Provider>\n    )\n}\n","import Blockly from \"blockly\"\nimport { useContext, useEffect, useMemo } from \"react\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"../hooks/useServices\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { Theme, useTheme } from \"@material-ui/core\"\nimport { registerFields } from \"./fields/fields\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    ButtonDefinition,\n    CategoryDefinition,\n    NEW_PROJET_XML,\n    ServiceBlockDefinitionFactory,\n    ToolboxConfiguration,\n} from \"./toolbox\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport DslContext from \"./dsl/DslContext\"\nimport BlockDomainSpecificLanguage from \"./dsl/dsl\"\n\n// overrides blockly emboss filter for svg elements\nBlockly.BlockSvg.prototype.setHighlighted = function (highlighted) {\n    if (!this.rendered) {\n        return\n    }\n    if (highlighted) {\n        this.addSelect()\n    } else {\n        this.removeSelect()\n    }\n}\n\ntype CachedBlockDefinitions = {\n    blocks: BlockDefinition[]\n}\n\nfunction loadBlocks(\n    dsls: BlockDomainSpecificLanguage[],\n    theme: Theme\n): CachedBlockDefinitions {\n    const blocks = arrayConcatMany(\n        dsls.map(dsl =>\n            dsl?.createBlocks?.({ theme }).map(b => {\n                b.dsl = dsl.id // ensure DSL is set\n                return b\n            })\n        )\n    )\n    console.log(`blocks`, { blocks })\n\n    // register field editors\n    registerFields()\n    // re-register blocks with blocklys\n    blocks.forEach(\n        block =>\n            (Blockly.Blocks[block.type] = <ServiceBlockDefinitionFactory>{\n                jacdacDefinition: block,\n                init: function () {\n                    this.jsonInit(block)\n                },\n            })\n    )\n\n    return {\n        blocks,\n    }\n}\n\nfunction patchCategoryJSONtoXML(cat: CategoryDefinition): CategoryDefinition {\n    if (cat.button) {\n        if (!cat.contents) cat.contents = []\n        cat.contents.unshift(cat.button)\n    }\n    cat.contents\n        ?.filter(node => node.kind === \"block\")\n        .map(node => <BlockReference>node)\n        .filter(block => {\n            const exists = Blockly.Blocks[block.type]\n            if (!exists && Flags.diagnostics)\n                console.warn(\n                    `block type '${block.type}' not found, consider refreshing page...`\n                )\n            return !!block.values && exists\n        }) // avoid broken blocks\n        .forEach(block => {\n            // yup, this suck but we have to go through it\n            block.blockxml = `<block type=\"${block.type}\">${Object.keys(\n                block.values\n            )\n                .map(name => {\n                    const { type } = block.values[name]\n                    return `<value name=\"${name}\"><shadow type=\"${type}\" /></value>`\n                })\n                .join(\"\\n\")}</block>`\n            delete block.type\n        })\n    return cat\n}\n\nexport default function useToolbox(props: {\n    blockServices?: string[]\n    source?: WorkspaceJSON\n    program?: VMProgram\n}): {\n    toolboxConfiguration: ToolboxConfiguration\n    newProjectXml: string\n} {\n    const { source, program } = props\n    const liveServices = useServices({ specification: true })\n\n    const { dsls } = useContext(DslContext)\n    const theme = useTheme()\n    useMemo(() => loadBlocks(dsls, theme), [theme, dsls])\n\n    const dslsCategories = arrayConcatMany(\n        dsls.map(dsl =>\n            dsl?.createCategory?.({ theme, source, program, liveServices })\n        )\n    )\n        .filter(cat => !!cat)\n        .sort((l, r) => -(l.order - r.order))\n\n    const toolboxConfiguration: ToolboxConfiguration = {\n        kind: \"categoryToolbox\",\n        contents: dslsCategories\n            .filter(cat => !!cat)\n            .map(node =>\n                node.kind === \"category\"\n                    ? patchCategoryJSONtoXML(node as CategoryDefinition)\n                    : node\n            ),\n    }\n\n    return {\n        toolboxConfiguration,\n        newProjectXml: NEW_PROJET_XML,\n    }\n}\n\nexport function useToolboxButtons(\n    workspace: Blockly.WorkspaceSvg,\n    toolboxConfiguration: ToolboxConfiguration\n) {\n    // track workspace changes and update callbacks\n    useEffect(() => {\n        if (!workspace) return\n\n        // collect buttons\n        const buttons: ButtonDefinition[] = toolboxConfiguration?.contents\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(cat => (cat as CategoryDefinition).button)\n            .filter(btn => !!btn)\n        buttons?.forEach(button =>\n            workspace.registerButtonCallback(button.callbackKey, () =>\n                Blockly.Variables.createVariableButtonHandler(\n                    workspace,\n                    null,\n                    button.service.shortId\n                )\n            )\n        )\n    }, [workspace, JSON.stringify(toolboxConfiguration)])\n}\n","import React, {\n    MutableRefObject,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport { useBlocklyWorkspace } from \"react-blockly\"\nimport { WorkspaceSvg } from \"blockly\"\nimport Theme from \"@blockly/theme-modern\"\nimport DarkTheme from \"@blockly/theme-dark\"\nimport useToolbox, { useToolboxButtons } from \"./useToolbox\"\nimport BlocklyModalDialogs from \"./BlocklyModalDialogs\"\nimport { domToJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport AppContext from \"../AppContext\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport useBlocklyEvents from \"./useBlocklyEvents\"\nimport useBlocklyPlugins from \"./useBlocklyPlugins\"\nimport {\n    BlocklyWorkspaceWithServices,\n    WorkspaceServices,\n} from \"./WorkspaceContext\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport { arrayConcatMany, toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { withPrefix } from \"gatsby\"\nimport DslContext from \"./dsl/DslContext\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        editor: {\n            height: `calc(100vh - ${Flags.diagnostics ? 15 : 10}rem)`,\n            \"& .blocklyTreeLabel\": {\n                fontFamily: theme.typography.fontFamily,\n            },\n            \"& .blocklyText\": {\n                fontWeight: `normal !important`,\n                fontFamily: `${theme.typography.fontFamily} !important`,\n            },\n        },\n    })\n)\n\nexport default function VMBlockEditor(props: {\n    className?: string\n    initialXml?: string\n    onXmlChange?: (xml: string) => void\n    onJSONChange?: (json: WorkspaceJSON) => void\n    onVMProgramChange?: (program: VMProgram) => void\n    runner?: VMProgramRunner\n    roleManager?: RoleManager\n    workspaceRef?: MutableRefObject<WorkspaceSvg>\n}) {\n    const {\n        className,\n        onXmlChange,\n        onJSONChange,\n        onVMProgramChange,\n        initialXml,\n        runner,\n        roleManager,\n        workspaceRef,\n    } = props\n    const { dsls } = useContext(DslContext)\n    const classes = useStyles()\n    const { darkMode } = useContext(DarkModeContext)\n    const { setError } = useContext(AppContext)\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const { toolboxConfiguration, newProjectXml } = useToolbox({\n        source,\n        program,\n    })\n    const theme = darkMode === \"dark\" ? DarkTheme : Theme\n    const gridColor = darkMode === \"dark\" ? \"#555\" : \"#ccc\"\n\n    // ReactBlockly\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const blocklyRef = useRef(null)\n    const { workspace, xml } = useBlocklyWorkspace({\n        ref: blocklyRef,\n        toolboxConfiguration,\n        workspaceConfiguration: {\n            collapse: false,\n            disable: false,\n            comments: false,\n            css: true,\n            trashcan: false,\n            sounds: false,\n            grid: {\n                spacing: 25,\n                length: 1,\n                colour: gridColor,\n                snap: true,\n            },\n            renderer: \"zelos\",\n            theme,\n            oneBasedIndex: false,\n            move: {\n                scrollbars: {\n                    vertical: true,\n                    horizontal: true,\n                },\n            },\n            media: withPrefix(\"blockly/media/\"),\n            zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.1,\n                scaleSpeed: 1.2,\n                pinch: true,\n            },\n        },\n        initialXml: initialXml || newProjectXml,\n        onImportXmlError: () => setError(\"Error loading blocks...\"),\n    }) as { workspace: WorkspaceSvg; xml: string }\n\n    // store ref\n    useEffect(() => {\n        if (workspaceRef) {\n            workspaceRef.current = workspace\n            return () => (workspaceRef.current = undefined)\n        }\n    }, [workspace, workspaceRef])\n\n    // surface state to react\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        if (ws) ws.jacdacServices = new WorkspaceServices()\n    }, [workspace])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.roleManager = roleManager\n        }\n    }, [workspace, roleManager])\n\n    // plugins\n    useBlocklyPlugins(workspace)\n    useBlocklyEvents(workspace)\n    useToolboxButtons(workspace, toolboxConfiguration)\n\n    // blockly did a change\n    useEffect(() => {\n        if (!workspace || workspace.isDragging()) return\n\n        onXmlChange?.(xml)\n\n        // save json\n        if (onJSONChange || onVMProgramChange) {\n            // emit json\n            const newSource = domToJSON(workspace, dsls)\n            if (JSON.stringify(newSource) !== JSON.stringify(source)) {\n                setSource(newSource)\n                onJSONChange?.(newSource)\n                if (onVMProgramChange) {\n                    try {\n                        const newProgram = workspaceJSONToVMProgram(\n                            newSource,\n                            dsls\n                        )\n                        if (\n                            JSON.stringify(newProgram) !==\n                            JSON.stringify(program)\n                        ) {\n                            setProgram(newProgram)\n                            onVMProgramChange(newProgram)\n                        }\n                    } catch (e) {\n                        console.error(e)\n                        onVMProgramChange(undefined)\n                    }\n                }\n            }\n        }\n    }, [dsls, workspace, xml])\n\n    // apply errors\n    useEffect(() => {\n        if (!workspace) return\n        const allErrors = toMap(\n            arrayConcatMany(\n                program?.handlers.map(h => h.errors?.filter(e => !!e.sourceId))\n            ) || [],\n            e => e.sourceId,\n            e => e.message\n        )\n        workspace\n            .getAllBlocks(false)\n            .forEach(b => b.setWarningText(allErrors[b.id] || null))\n    }, [workspace, program])\n\n    // resize blockly\n    useEffect(() => {\n        const observer = new ResizeObserver(() => workspace?.resize())\n        observer.observe(blocklyRef.current)\n        return () => observer.disconnect()\n    }, [workspace, blocklyRef.current])\n\n    return (\n        <>\n            <div className={clsx(classes.editor, className)} ref={blocklyRef} />\n            <BlocklyModalDialogs />\n        </>\n    )\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./ir\"\nimport RoleManager from \"../servers/rolemanager\"\nimport { VMEnvironment, VMRoleNoServiceException } from \"./environment\"\nimport { VMExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ROLE_BOUND, ROLE_UNBOUND, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./compile\"\nimport { VM_EVENT, VMCode } from \"./events\"\nimport { VMError, Mutex } from \"./utils\"\nimport { assert, SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nenum VMInternalStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nconst VM_WAKE_SLEEPER = \"vmWakeSleeper\"\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException extends Error {\n    constructor(public label: string) {\n        super()\n    }\n}\n\nclass VMTimerException extends Error {\n    constructor(public ms: number) {\n        super()\n    }\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMInternalStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMInternalStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMInternalStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMInternalStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMInternalStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMInternalStatus.Completed\n                        : VMInternalStatus.Running\n                }\n                return VMInternalStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMInternalStatus.Completed\n                    : VMInternalStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMInternalStatus.Completed\n                }\n                return VMInternalStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"halt\": {\n                return VMInternalStatus.Stopped\n            }\n            case \"nop\": {\n                return VMInternalStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            case \"onRoleConnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            case \"onRoleDisonnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            default:\n                throw new VMError(\n                    VMCode.InternalError,\n                    `Unknown instruction ${this.inst}`\n                )\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMInternalStatus = VMInternalStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMInternalStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMInternalStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMInternalStatus.Stopped\n            : this._commandIndex === undefined\n            ? VMInternalStatus.Ready\n            : this._currentCommand.status\n    }\n\n    get command() {\n        return this._currentCommand\n    }\n\n    get atTop() {\n        return (\n            this.status === VMInternalStatus.Running && this._commandIndex === 0\n        )\n    }\n\n    gotoTop() {\n        if (\n            this.status === VMInternalStatus.Ready &&\n            this.handler.commands.length\n        )\n            this.commandIndex = 0\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMInternalStatus.Completed\n            this.next()\n        }\n    }\n\n    // run-to-completion semantics (true if breakpoint)\n    async runToCompletionAsync(singleStep = false) {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync(singleStep)) && !singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if (singleStep || (await this.singleStepCheckBreakAsync()))\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMInternalStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(VMCode.InternalError, \"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync(singleStep = false) {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (!singleStep && (await this.parent.breakpointOnAsync(sid))) {\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.parent.emit(VM_EVENT, VMCode.CommandStarted, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMInternalStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                const vmt = e as VMTimerException\n                this._currentCommand.status = VMInternalStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.CommandFailed,\n                    this._currentCommand.gc.sourceId\n                )\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMInternalStatus.Completed)\n            this.parent.emit(\n                VM_EVENT,\n                VMCode.CommandCompleted,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMInternalStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    ms: number\n    handlerRunner: VMHandlerRunner\n    handler?: VMHandler\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandler) {\n    assert(!!h)\n    if (h.commands.length) {\n        const cmd = (h.commands[0] as VMCommand).command\n            .callee as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport enum VMStatus {\n    Stopped = \"stopped\",\n    Running = \"running\",\n    Paused = \"paused\",\n}\n\nexport class VMProgramRunner extends JDClient {\n    // program, environment\n    private _handlerRunners: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _roles: VMRole[] = []\n    // running\n    private _status: VMStatus\n    private _waitQueue: VMHandlerRunner[] = []\n    private _everyQueue: VMHandlerRunner[] = []\n    private _runQueue: VMHandlerRunner[] = []\n    private _waitRunMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n    // debugging\n    private _watch: SMap<any> = {}\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors.length) {\n            console.warn(\"ERRORS\", errors)\n        }\n        // data structures for running program\n        this._status = VMStatus.Stopped\n        this._env = new VMEnvironment(registers, events)\n        this._handlerRunners = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        // TODO: can't add multiple handlers until we have deduplicate CHANGE on Event\n        /*\n        const len = this._handlerRunners.length\n        compiled.handlers.forEach((h, index) =>\n            this._handlerRunners.push(\n                new VMHandlerRunner(this, len + index, this._env, h)\n            )\n        )*/\n\n        this._waitRunMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex = new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.waitingToRunning()\n            })\n        )\n        this.mount(\n            this.subscribe(\n                VM_WAKE_SLEEPER,\n                async (h: VMHandlerRunner | VMHandler) => {\n                    await this.wakeSleeper(h)\n                }\n            )\n        )\n        this.initializeRoleManagement()\n    }\n\n    // control of VM\n    get status() {\n        return this._status\n    }\n\n    private setStatus(s: VMStatus) {\n        if (s !== this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    // watch statement - watch an expression\n    watch(sourceId: string, value: WatchValueType) {\n        const oldValue = this._watch[sourceId]\n        if (oldValue !== value) {\n            this._watch[sourceId] = value\n            this.emit(VM_EVENT, VMCode.WatchChange, sourceId)\n        }\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    // breakpoints\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n\n    // timers\n    async sleepAsync(\n        handlerRunner: VMHandlerRunner,\n        ms: number,\n        handler: VMHandler = undefined\n    ) {\n        await this._sleepMutex.acquire(async () => {\n            const id = setTimeout(() => {\n                this.emit(\n                    VM_WAKE_SLEEPER,\n                    handlerRunner ? handlerRunner : handler\n                )\n            }, ms)\n            this._sleepQueue.push({ ms, handlerRunner, id, handler })\n        })\n    }\n\n    private async wakeSleeper(h: VMHandlerRunner | VMHandler) {\n        try {\n            // let handlerMs: number = undefined\n            let handlerRunner: VMHandlerRunner = undefined\n            // let handler: VMHandler = undefined\n            await this._sleepMutex.acquire(async () => {\n                const index = this._sleepQueue.findIndex(\n                    p => p?.handlerRunner === h // || p?.handler === h\n                )\n                assert(index>=0)\n                if (index >= 0) {\n                    const p = this._sleepQueue[index]\n                    //  handlerMs = p.ms\n                    handlerRunner = p.handlerRunner\n                    // handler = p?.handler\n                    this._sleepQueue.splice(index, 1)\n                    // clearTimeout(p.id)\n                }\n            })\n            if (this.status === VMStatus.Stopped) return\n            // this logic is to deal with starting a handler rather than a runner\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                if (!handlerRunner && isEveryHandler(handler)) {\n                    const index = this._everyQueue.findIndex(\n                        h => h.handler === handler\n                    )\n                    if (index >= 0) {\n                        handlerRunner = this._everyQueue[index]\n                        this._everyQueue.splice(index, 1)\n                        handlerRunner.gotoTop()\n                    }\n                }*/\n                if (handlerRunner) {\n                    // transition to the run queue\n                    handlerRunner.wake()\n                    this._runQueue.push(handlerRunner)\n                }\n            })\n            /*\n            const theHandler = handlerRunner?.handler || handler\n            if (isEveryHandler(theHandler)) {\n                // setup next\n                this.sleepAsync(undefined, handlerMs, theHandler)\n            }*/\n            if (handlerRunner) this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    async startAsync() {\n        if (this.status !== VMStatus.Stopped) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            await this._waitRunMutex.acquire(async () => {\n                this._waitQueue = this._handlerRunners.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n                this._runQueue = []\n                this._everyQueue = []\n                // make sure to have another handler for every\n                /*\n                for (const h of this._waitQueue) {\n                    if (isEveryHandler(h.handler)) {\n                        const dup = new VMHandlerRunner(\n                            this,\n                            undefined,\n                            this._env,\n                            h.handler\n                        )\n                        dup.reset()\n                        this._everyQueue.push(dup)\n                    }\n                }*/\n            })\n            this.clearBreakpointsAsync()\n            this.setStatus(VMStatus.Running)\n            this.waitingToRunning()\n            this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    cancel() {\n        if (this.status === VMStatus.Stopped) return // nothing to cancel\n        this.setStatus(VMStatus.Stopped)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"resume\")\n        this.setStatus(VMStatus.Running)\n        await this.runAsync()\n    }\n\n    async stepAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"step\")\n        const h = await this.getCurrentRunner()\n        if (h) {\n            await this.runHandlerAsync(h, true)\n            await this.postProcessHandler(h)\n            const newHead = await this.getCurrentRunner()\n            if (newHead && newHead !== h) {\n                this.emitBreakpoint(newHead)\n            }\n        }\n    }\n\n    private emitBreakpoint(h: VMHandlerRunner) {\n        this.emit(\n            VM_EVENT,\n            VMCode.Breakpoint,\n            h,\n            h.status === VMInternalStatus.Completed\n                ? \"\"\n                : h.command.gc?.sourceId\n        )\n    }\n\n    private async runHandlerAsync(h: VMHandlerRunner, oneStep = false) {\n        try {\n            const brkCommand = await h.runToCompletionAsync(oneStep)\n            if ((brkCommand && !oneStep) || this.status === VMStatus.Paused) {\n                this.setStatus(VMStatus.Paused)\n                this.emitBreakpoint(h)\n            }\n            if (h.status === VMInternalStatus.Completed) {\n                h.reset()\n            }\n        } catch (e) {\n            if (e instanceof VMRoleNoServiceException) {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.RoleMissing,\n                    (e as VMRoleNoServiceException).role\n                )\n            } else {\n                console.debug(e)\n                this.emit(VM_EVENT, VMCode.InternalError, e)\n            }\n            // on handler error, reset the handler\n            h.reset()\n        }\n    }\n\n    private async postProcessHandler(h: VMHandlerRunner) {\n        if (\n            h.status === VMInternalStatus.Ready ||\n            h.status === VMInternalStatus.Sleeping\n        ) {\n            const moveToWait = h.status === VMInternalStatus.Ready\n            let done: VMHandlerRunner = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this._runQueue.length) {\n                    assert(h === this._runQueue[0])\n                    done = this._runQueue.shift()\n                    if (moveToWait && !isEveryHandler(h.handler)) {\n                        this._waitQueue.push(done)\n                        done = undefined\n                    }\n                }\n            })\n            if (done && h.status === VMInternalStatus.Ready && isEveryHandler(h.handler)) {\n                await this.runHandlerAsync(h)\n            }\n        }\n    }\n\n    private _in_run = false\n    private async runAsync() {\n        if (this.status === VMStatus.Stopped) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            let h: VMHandlerRunner = undefined\n            while (\n                this.status === VMStatus.Running &&\n                (h = await this.getCurrentRunner())\n            ) {\n                assert(!h.atTop)\n                await this.runHandlerAsync(h)\n                await this.postProcessHandler(h)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    // call this whenever some event/change arises\n    private async waitingToRunning() {\n        if (this.status !== VMStatus.Stopped) {\n            let waitCopy: VMHandlerRunner[] = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this.status === VMStatus.Paused && this._runQueue.length)\n                    return\n                waitCopy = this._waitQueue.slice(0)\n            })\n            if (!waitCopy)\n                return\n            const handlersStarted: VMHandler[] = []\n            const newRunners: VMHandlerRunner[] = []\n            const sleepingRunners: VMHandlerRunner[] = []\n            for (const h of waitCopy) {\n                await this.runHandlerAsync(h, true)\n                if (h.status === VMInternalStatus.Sleeping) {\n                    sleepingRunners.push(h)\n                } else if (\n                    !h.atTop &&\n                    handlersStarted.findIndex(hs => hs === h.handler) === -1\n                ) {\n                    newRunners.push(h)\n                    handlersStarted.push(h.handler)\n                }\n            }\n            await this._waitRunMutex.acquire(async () => {\n                newRunners.forEach(h => {\n                    this._runQueue.push(h)\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0)\n                        this._waitQueue.splice(index, 1)\n                })\n                sleepingRunners.forEach(h => {\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0)\n                        this._waitQueue.splice(index, 1)\n                })\n            })\n            this._env.consumeEvent()\n            this.runAsync()\n        }\n    }\n\n    private async getCurrentRunner() {\n        return await this._waitRunMutex.acquire(async () => {\n            if (this._runQueue.length) return this._runQueue[0]\n            return undefined\n        })\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, async (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/runner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoRun: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoRun)\n\n    const run = async () => {\n        _setAutoStart(!!autoRun)\n        await runner.startAsync()\n    }\n    const cancel = async () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport {\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    DEVICE_DISCONNECT,\n    ROLE_BOUND,\n    ROLE_UNBOUND,\n} from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\n\nexport interface RoleBinding {\n    role: string\n    serviceShortId: string\n    service?: JDService\n}\n\n// TODO: replicate MakeCode role manager logic\nexport default class RoleManager extends JDEventSource {\n    private readonly _roles: RoleBinding[] = []\n\n    constructor(private readonly bus: JDBus) {\n        super()\n\n        this.bus.on(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        this.bus.on(DEVICE_DISCONNECT, this.removeServices.bind(this))\n\n        this.bus\n            .devices({ ignoreSelf: true, announced: true })\n            .forEach(dev => this.addServices(dev))\n\n        this.on(ROLE_UNBOUND, role => console.log(`role unbound`, { role }))\n        this.on(ROLE_BOUND, role => console.log(`role bound`, { role }))\n    }\n\n    get roles() {\n        return this._roles.slice(0)\n    }\n\n    get boundRoles() {\n        return this._roles.filter(r => !!r.service)\n    }\n\n    get unboundRoles() {\n        return this._roles.filter(r => !r.service)\n    }\n\n    setRoles(\n        newRoles: {\n            role: string\n            serviceShortId: string\n        }[]\n    ) {\n        let changed = false\n\n        // remove unknown roles\n        const supportedNewRoles = newRoles.filter(({ serviceShortId }) =>\n            serviceSpecificationFromName(serviceShortId)\n        )\n\n        // unbind removed roles\n        let i = 0\n        while (i < this._roles.length) {\n            const role = this._roles[i]\n            if (!supportedNewRoles.find(r => r.role === role.role)) {\n                changed = true\n                this._roles.splice(i, 1)\n                this.emit(ROLE_UNBOUND, role.role)\n            } else {\n                i++\n            }\n        }\n\n        // update or add roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = this._roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                changed = true\n                this._roles.push({ ...newRole })\n            } else if (existingRole.serviceShortId !== newRole.serviceShortId) {\n                // modified type, force rebinding\n                changed = true\n                existingRole.serviceShortId = newRole.serviceShortId\n                if (existingRole.service) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, existingRole.role)\n                }\n            } // else unmodifed role\n        }\n\n        // emit change as needed\n        if (changed) this.emit(CHANGE)\n\n        // bound services\n        this.bindServices()\n    }\n\n    private bindServices() {\n        let changed = false\n        this.unboundRoles.forEach(binding => {\n            const boundRoles = this.boundRoles\n            const service = this.bus\n                .services({\n                    ignoreSelf: true,\n                    serviceName: binding.serviceShortId,\n                })\n                .find(srv => !boundRoles.find(b => b.service === srv))\n            binding.service = service\n            this.emit(ROLE_BOUND, binding.role)\n            changed = true\n        })\n        if (changed) this.emit(CHANGE)\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        let changed = false\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                changed = true\n            })\n        this.bindServices()\n        if (changed) this.emit(CHANGE)\n    }\n\n    public getService(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    public addRoleService(role: string, serviceShortId: string) {\n        if (!serviceSpecificationFromName(serviceShortId)) return // unknown role type\n\n        let binding = this._roles.find(r => r.role === role)\n\n        // check if we already have this role\n        if (binding && serviceShortId === binding.serviceShortId) return\n\n        // new role\n        binding = { role, serviceShortId }\n        this._roles.push(binding)\n\n        const ret = this.bus\n            .services({ ignoreSelf: true, serviceName: serviceShortId })\n            .find(s => !this._roles.find(r => r.service === s))\n        if (ret) {\n            binding.service = ret\n            this.emit(ROLE_BOUND, role)\n        } else {\n            this.emit(ROLE_UNBOUND, role)\n        }\n        this.emit(CHANGE)\n    }\n}\n","import { useContext, useMemo } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useRoleManager() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const roleManager = useMemo(() => new RoleManager(bus), [])\n    return roleManager\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: {\n    program: VMProgram\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">VM</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.vm\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable, WorkspaceSvg } from \"blockly\"\nimport { TWIN_BLOCK } from \"./toolbox\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    workspace: WorkspaceSvg\n}) {\n    const { role, service, serviceShortId, workspace } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function VMRoles(props: {\n    roleManager: RoleManager\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, workspace } = props\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                        workspace={workspace}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useEffect, useMemo, useState } from \"react\"\nimport useChange from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/runner\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Chip, Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_EVENT, VMCode } from \"../../../jacdac-ts/src/vm/events\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceSvg } from \"blockly\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport useMounted from \"../hooks/useMounted\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport BugReportIcon from \"@material-ui/icons/BugReport\"\n\nfunction useWorkspaceBreakpoints(program: VMProgram, workspace: WorkspaceSvg) {\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers\n                    ?.filter(h => !h.meta) // don't debug watch statements\n                    .map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpointHighlight = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpointHighlight,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n    workspace: WorkspaceSvg\n}) {\n    const { runner, run, cancel, workspace } = props\n    const status = useChange(runner, t => t?.status)\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [indeterminate, setIndeterminate] = useState(false)\n    const [breakpoint, setBreakpoint] = useState<string>(undefined)\n    const pausing = breakpoint === \"\"\n    const paused = !!breakpoint?.length\n    const mounted = useMounted()\n    const disabled = indeterminate || !runner\n    const { breakpoints, setBreakpointHighlight } = useWorkspaceBreakpoints(\n        program,\n        workspace\n    )\n\n    //console.log(\"runner status\", status)\n\n    const handleRun = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await run()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleCancel = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.clearBreakpointsAsync()\n            setBreakpoint(undefined)\n            await cancel()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleResume = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await runner.clearBreakpointsAsync()\n            await runner.resumeAsync()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handlePause = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.setBreakpointsAsync(breakpoints)\n            await runner.resumeAsync()\n            setBreakpoint(\"\")\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleStep = () => runner.stepAsync()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_EVENT,\n                (code: VMCode, _?: VMHandler, sourceId?: string) => {\n                    if (code === VMCode.Breakpoint) {\n                        if (mounted()) setBreakpoint(sourceId)\n                    }\n                }\n            ),\n        [runner]\n    )\n\n    // setting blockly breakpoint\n    useEffect(() => {\n        setBreakpointHighlight(breakpoint)\n        return () => setBreakpointHighlight(undefined)\n    }, [breakpoint])\n\n    // reset breakpoint in ui when runner, paused mode changes\n    useEffect(() => setBreakpoint(undefined), [runner])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    color={stopped ? \"primary\" : \"default\"}\n                    onClick={\n                        paused\n                            ? handleResume\n                            : stopped\n                            ? handleRun\n                            : handleCancel\n                    }\n                >\n                    {paused || stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithProgress\n                    title={pausing ? \"cancel pause\" : paused ? \"step\" : \"pause\"}\n                    disabled={disabled}\n                    indeterminate={pausing}\n                    onClick={\n                        pausing\n                            ? handleResume\n                            : paused\n                            ? handleStep\n                            : handlePause\n                    }\n                >\n                    {paused ? <PlayForWorkIcon /> : <PauseIcon />}\n                </IconButtonWithProgress>\n            </Grid>\n            {(pausing || paused) && (\n                <Grid item>\n                    <Chip\n                        icon={<BugReportIcon />}\n                        label={pausing ? \"pausing\" : \"paused\"}\n                        color={\"secondary\"}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { WorkspaceSvg, Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/file\"\n\nfunction VMLoadButton(props: { workspace: WorkspaceSvg }) {\n    const { workspace } = props\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction VMSaveButton(props: { xml: string; program: VMProgram }) {\n    const { xml, program } = props\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: VMFile = {\n        xml,\n        program,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function VMFileButtons(props: {\n    xml: string\n    program: VMProgram\n    workspace: WorkspaceSvg\n}) {\n    const { xml, program, workspace } = props\n    return (\n        <>\n            <Grid item>\n                <VMSaveButton xml={xml} program={program} />\n            </Grid>\n            <Grid item>\n                <VMLoadButton workspace={workspace} />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport VMRoles from \"./VMRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport { WorkspaceSvg } from \"blockly\"\nimport VMFileButtons from \"./VMFileButtons\"\n\nexport default function VMToolbar(props: {\n    roleManager: RoleManager\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n    xml: string\n    program: VMProgram\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, runner, run, cancel, xml, program, workspace } = props\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <VMFileButtons xml={xml} program={program} workspace={workspace} />\n            <VMRunnerButtons\n                runner={runner}\n                run={run}\n                cancel={cancel}\n                workspace={workspace}\n            />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <VMRoles roleManager={roleManager} workspace={workspace} />\n        </Grid>\n    )\n}\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useRef, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport useVMRunner from \"./useVMRunner\"\nimport useRoleManager from \"./useRoleManager\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { WorkspaceSvg } from \"blockly\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { DslProvider } from \"./dsl/DslContext\"\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: { storageKey?: string }) {\n    const { storageKey } = props\n    const workspaceRef = useRef<WorkspaceSvg>()\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const roleManager = useRoleManager()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    const handleXml = (xml: string) => setXml(xml)\n    const handleJSON = (json: WorkspaceJSON) => setSource(json)\n    const handleI4Program = (json: VMProgram) => {\n        if (json) roleManager.setRoles(json.roles)\n        setProgram(json)\n    }\n\n    return (\n        <DslProvider>\n            <Grid container direction=\"column\" spacing={1}>\n                <Grid item xs={12}>\n                    <VMToolbar\n                        roleManager={roleManager}\n                        runner={runner}\n                        run={run}\n                        cancel={cancel}\n                        xml={xml}\n                        program={program}\n                        workspace={workspaceRef.current}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <NoSsr>\n                        <VMBlockEditor\n                            initialXml={xml}\n                            onXmlChange={handleXml}\n                            onJSONChange={handleJSON}\n                            onVMProgramChange={handleI4Program}\n                            runner={runner}\n                            roleManager={roleManager}\n                            workspaceRef={workspaceRef}\n                        />\n                    </NoSsr>\n                </Grid>\n                {Flags.diagnostics && (\n                    <VMDiagnostics\n                        program={program}\n                        source={source}\n                        xml={xml}\n                    />\n                )}\n            </Grid>\n        </DslProvider>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}