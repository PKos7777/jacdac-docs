{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","webpack:///./src/components/ui/CardMediaWithSkeleton.tsx","webpack:///./src/components/DeviceCardMedia.tsx","webpack:///./src/components/DeviceCardHeader.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack:///./jacdac-ts/src/test/testrunner.ts","webpack:///./src/components/test/ServiceTestRunner.tsx","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack:///./src/components/useGridBreakpoints.ts","webpack:///./node_modules/@material-ui/icons/PlayCircleFilled.js","webpack:///./jacdac-ts/jacdac-spec/spectool/jdtestfuns.ts","webpack:///./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./jacdac-ts/src/test/testspec.ts","webpack:///./node_modules/@material-ui/icons/HourglassEmpty.js","webpack:///./src/components/useServiceClient.ts"],"names":["useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","specification","useDeviceSpecification","imageUrl","useDeviceImage","name","DeviceFirmwareVersionChip","firmwareVersionRegister","service","register","ControlReg","FirmwareVersion","firmwareVersion","useRegisterStringValue","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","useRegisterIntValue","undefined","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","identifierToUrlPath","id","deviceId","filter","s","join","JDTestCommandStatus","JDTestStatus","commandStatusToTestStatus","status","Active","Passed","Failed","NotReady","RequiresUserInput","cmdToTestFunction","cmd","call","callee","testCommandFunctions","find","t","unparse","e","type","ae","elements","map","caller","arguments","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","start","exprStack","tos","length","eval","visitExpression","pop","push","r","v","le","lit","value","JDCommandEvaluator","command","_prompt","_progress","_status","_startExpressions","_rangeComplete","_eventsComplete","_eventsQueue","testFun","args","startExprs","getExpressionsOfType","ce","eventList","forEach","child","findIndex","exprEval","createPrompt","replaceId","a","i","replaceVal","aStart","toString","prompt","slice","p","replace","setEvent","ev","evaluate","expr","reg","regSaved","regValue","amt","amtSaved","beginSaved","end","endSaved","shift","JDTestCommandRunner","testRunner","_output","message","progress","_timeOut","_timeLeft","_commmandEvaluator","reset","output","envChange","finish","newOutput","eventChange","event","cancel","finishCommand","emit","CHANGE","JDEventSource","JDTestRunner","serviceTestRunner","testSpec","commands","testCommands","c","_commandIndex","commandIndex","next","newStatus","currentCommand","description","index","JDServiceTestRunner","_testIndex","registers","events","environment","tests","serviceSpec","serviceSpecificationFromClassIdentifier","serviceClass","eventName","pkt","packets","isEvent","identifier","mount","subscribe","EVENT","currentTest","regName","isRegister","intValue","stats","total","success","failed","indeterminate","test","testIndex","ct","indexOf","JDServiceClient","TestStatusIcon","useChange","TestListItem","onSelectTest","selected","handleSelectTest","TestList","CommandStatusIcon","CommandListItem","handleAnswer","ActiveTest","handleRestart","handleNext","useEffect","ServiceTestRunner","serviceTest","serviceTestFromServiceClass","factory","useCallback","useServiceClient","useGridBreakpoints","itemCount","useContext","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","None","testExpressionFunctions","_serviceTests","serviceTestData","serviceClassIdentifier","deps","useState","client","setClient","unmount"],"mappings":"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","file":"859a83de993caea7524bf57c2975f3be6812c8c3-af5cdffabe65f82b5292.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport {\n    useRegisterIntValue,\n    useRegisterStringValue,\n} from \"../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./devices/DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./devices/DeviceAvatar\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = device\n        ?.service(0)\n        ?.register(ControlReg.FirmwareVersion)\n    const firmwareVersion = useRegisterStringValue(firmwareVersionRegister)\n\n    return (\n        (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || (\n            <></>\n        )\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const temperature = useRegisterIntValue(tempRegister)\n    return (\n        (temperature !== undefined && (\n            <Chip size=\"small\" label={`${temperature}°`} />\n        )) || <></>\n    )\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={<DeviceActions device={device} showReset={true} />}\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n    Commands,\n    testCommandFunctions,\n} from \"../../jacdac-spec/spectool/jdtestfuns\"\nimport { getExpressionsOfType } from \"../../jacdac-spec/spectool/jdutils\"\n\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { JDService } from \"../jdom/service\"\nimport { JDRegister } from \"../jdom/register\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { isEvent, isRegister, serviceSpecificationFromClassIdentifier } from \"../jdom/spec\"\n\nexport enum JDTestCommandStatus {\n    NotReady,\n    Active,\n    RequiresUserInput,\n    Passed,\n    Failed,\n}\n\nexport enum JDTestStatus {\n    NotReady,\n    Active,\n    Passed,\n    Failed,\n}\n\nfunction commandStatusToTestStatus(status: JDTestCommandStatus) {\n    switch (status) {\n        case JDTestCommandStatus.Active:\n            return JDTestStatus.Active\n        case JDTestCommandStatus.Passed:\n            return JDTestStatus.Passed\n        case JDTestCommandStatus.Failed:\n            return JDTestStatus.Failed\n        case JDTestCommandStatus.NotReady:\n            return JDTestStatus.NotReady\n        case JDTestCommandStatus.RequiresUserInput:\n            return JDTestStatus.Active\n    }\n}\n\nfunction cmdToTestFunction(cmd: jdtest.TestCommandSpec) {\n    const id = (<jsep.Identifier>cmd.call.callee).name\n    return testCommandFunctions.find(t => t.id == id)\n}\n\nfunction unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements\n                .map(unparse)\n                .join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\ntype SMap<T> = { [v: string]: T }\ntype StartMap = { e: jsep.Expression; v: any }[]\n\nclass JDExprEvaluator {\n    private exprStack: any[] = []\n\n    constructor(private env: SMap<any>, private start: StartMap) {}\n\n    private tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    private visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                const caller = <jsep.CallExpression>e\n                const callee = <jsep.Identifier>caller.callee\n                switch (callee.name) {\n                    case \"start\":\n                        this.exprStack.push(\n                            this.start.find(r => r.e === caller).v\n                        )\n                        return\n                    default: // ERROR\n                }\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\":\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        break\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        break\n                    default:\n                }\n                break\n            }\n\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env[id.name])\n                break\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                break\n            }\n            default:\n        }\n    }\n}\n\nclass JDCommandEvaluator {\n    private _prompt = \"\"\n    private _progress = \"\"\n    private _status = JDTestCommandStatus.Active\n    private _startExpressions: StartMap = []\n    private _rangeComplete: number = undefined\n    private _eventsComplete: string[] = undefined\n    private _eventsQueue: string[] = undefined\n\n    constructor(\n        private readonly env: SMap<any>,\n        private readonly command: jdtest.TestCommandSpec\n    ) {}\n\n    public get prompt() {\n        return this._prompt\n    }\n    public get status() {\n        return this._status\n    }\n    public get progress() {\n        return this._progress\n    }\n\n    public start() {\n        this._startExpressions = []\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        let startExprs: jsep.Expression[] = []\n        switch (testFun.id as Commands) {\n            case \"check\": {\n                startExprs = (<jsep.CallExpression[]>getExpressionsOfType(args,'CallExpression'))\n                    .filter(ce => (<jsep.Identifier>ce.callee).name === \"start\")\n                    .map(ce => ce.arguments[0])\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                startExprs.push(args[0])\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": \n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                startExprs.push(args[0])\n                startExprs.push(args[1])\n                break\n            }\n            case \"events\": {\n                const eventList = this.command.call.arguments[0] as jsep.ArrayExpression\n                this._eventsComplete = (eventList.elements as jsep.Identifier[]).map(id => id.name)\n                this._eventsQueue = []\n                break\n            }\n        }\n        // evaluate the start expressions and store the results\n        startExprs.forEach(child => {\n            if (this._startExpressions.findIndex(r => r.e === child) < 0) {\n                const exprEval = new JDExprEvaluator(this.env, [])\n                this._startExpressions.push({\n                    e: child,\n                    v: exprEval.eval(child),\n                })\n            }\n        })\n        this.createPrompt()\n    }\n\n    private createPrompt() {\n        const testFun = cmdToTestFunction(this.command)\n        const replaceId = this.command.call.arguments.map((a, i) => {\n            return [`{${i + 1}}`, unparse(a) ]\n        })\n        const replaceVal = this.command.call.arguments.map((a, i) => {\n            const aStart = this._startExpressions.find(r => r.e === a)\n            return [`{${i + 1}:val}`, aStart && aStart.v ? aStart.v.toString() : \"NA\" ]\n        })\n        this._prompt =\n            testFun.id === \"ask\" || testFun.id === \"say\"\n                ? this.command.prompt.slice(0)\n                : testFun.prompt.slice(0)\n        replaceId.forEach(p => (this._prompt = this._prompt.replace(p[0], p[1])))\n        replaceVal.forEach(p => (this._prompt = this._prompt.replace(p[0], p[1])))\n    }\n\n    public setEvent(ev: string) {\n        this._eventsQueue.push(ev)\n    }\n\n    public evaluate() {\n        const testFun = cmdToTestFunction(this.command)\n        this._status = JDTestCommandStatus.Active\n        this._progress = \"\"\n        switch (testFun.id as Commands) {\n            case \"ask\": {\n                this._status = JDTestCommandStatus.RequiresUserInput\n                break\n            }\n            case \"check\": {\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(this.command.call.arguments[0])\n                this._status = ev\n                    ? JDTestCommandStatus.Passed\n                    : JDTestCommandStatus.Active\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                const reg = this.command.call.arguments[0]\n                const regSaved = this._startExpressions.find(r => r.e === reg)\n                const regValue = this.env[unparse(reg)]\n                const status =\n                    (testFun.id === \"changes\" && regValue !== regSaved.v) ||\n                    (testFun.id === \"increases\" && regValue > regSaved.v) ||\n                    (testFun.id === \"decreases\" && regValue < regSaved.v)\n                        ? JDTestCommandStatus.Passed\n                        : JDTestCommandStatus.Active\n                this._status = status\n                regSaved.v = regValue\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                const reg = this.command.call.arguments[0]\n                const regSaved = this._startExpressions.find(r => r.e === reg)\n                const amt = this.command.call.arguments[1]\n                const amtSaved = this._startExpressions.find(r => r.e === amt)\n                const regValue = this.env[unparse(reg)]\n                if (testFun.id === \"increasesBy\") {\n                    if (regValue === regSaved.v + amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                    } else if (\n                        regValue >= regSaved.v &&\n                        regValue < regSaved.v + amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${regValue}, goal: ${regSaved.v + amtSaved.v}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                } else {\n                    if (regValue === regSaved.v - amtSaved.v) {\n                        this._status = JDTestCommandStatus.Passed\n                        this._progress = \"completed\"\n                    } else if (\n                        regValue <= regSaved.v &&\n                        regValue > regSaved.v - amtSaved.v\n                    ) {\n                        this._status = JDTestCommandStatus.Active\n                        this._progress = `current: ${regValue} goal: ${regSaved.v - amtSaved.v}`\n                    } else {\n                        this._status = JDTestCommandStatus.Active\n                    }\n                }\n                break\n            }\n            case \"stepsUpTo\":\n            case \"stepsDownTo\": {\n                this._status = JDTestCommandStatus.Active\n                const reg = this.command.call.arguments[0]\n                const regValue = this.env[unparse(reg)]\n                const beginSaved = this._startExpressions.find(r => r.e === reg)\n                const end = this.command.call.arguments[1]\n                const endSaved = this._startExpressions.find(r => r.e === end)\n                if (this._rangeComplete === undefined) {\n                    this._rangeComplete = regValue\n                } else {\n                    if (regValue === this._rangeComplete + (testFun.id == 'stepsUpTo' ? 1 : -1))\n                        this._rangeComplete = regValue\n                    if (this._rangeComplete === endSaved.v) {\n                        this._status =  JDTestCommandStatus.Passed\n                    }\n                }\n                if (this._rangeComplete != undefined) {\n                    this._progress = \n                        testFun.id == 'stepsUpTo' \n                            ? `from ${(beginSaved.v)} up to ${this._rangeComplete}`\n                            : `from ${(beginSaved.v)} down to ${this._rangeComplete}`\n                }\n                break\n            }\n            case \"events\": {\n                if (this._eventsQueue?.length > 0 && this._eventsComplete?.length > 0) {\n                    const ev = this._eventsQueue.pop()\n                    if (ev === this._eventsComplete[0]) {\n                        this._eventsComplete.shift()\n                        if (this._eventsComplete.length === 0)\n                            this._status = JDTestCommandStatus.Passed\n                    } else {\n                        this._status = JDTestCommandStatus.Failed\n                    }\n                    this._progress = `got event ${ev}; remaining = [${this._eventsComplete}]`\n                } else {\n                    this._progress = `no events received; remaining = [${this._eventsComplete}]`\n                }\n                break\n            }\n        }\n    }\n}\n\nexport interface JDCommandOutput {\n    message: string\n    progress: string\n}\n\nexport class JDTestCommandRunner extends JDEventSource {\n    private _status = JDTestCommandStatus.NotReady\n    private _output: JDCommandOutput = { message: \"\", progress: \"\" }\n    private readonly _timeOut = 5000 // timeout\n    private _timeLeft = 5000\n    private _commmandEvaluator: JDCommandEvaluator = null\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly env: SMap<any>,\n        private readonly command: jdtest.TestCommandSpec\n    ) {\n        super()\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestCommandStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestCommandStatus.Failed &&\n            this.status !== JDTestCommandStatus.Passed\n        )\n    }\n\n    get output() {\n        return this._output\n    }\n\n    set output(value: JDCommandOutput) {\n        if (\n            !this._output ||\n            this._output.message !== value.message ||\n            this._output.progress !== value.progress\n        ) {\n            this._output = value\n            this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.output = { message: \"\", progress: \"\" }\n        this.status = JDTestCommandStatus.NotReady\n        this._commmandEvaluator = null\n    }\n\n    start() {\n        this.status = JDTestCommandStatus.Active\n        this._commmandEvaluator = new JDCommandEvaluator(this.env, this.command)\n        this._commmandEvaluator.start()\n        this.envChange(false)\n        this.envChange(true)\n    }\n\n    envChange(finish = true) {\n        if (this._commmandEvaluator) {\n            this._commmandEvaluator.evaluate()\n            const newOutput: JDCommandOutput = {\n                message: this._commmandEvaluator.prompt,\n                progress: this._commmandEvaluator.progress,\n            }\n            this.output = newOutput\n            if (this._commmandEvaluator.status === JDTestCommandStatus.RequiresUserInput)\n                this.status= JDTestCommandStatus.RequiresUserInput\n            else if (finish) \n                this.finish(this._commmandEvaluator.status)\n        }\n    }\n\n    eventChange(event: string) {\n        this._commmandEvaluator.setEvent(event)\n        this.envChange()\n    }\n\n    cancel() {\n        this.finish(JDTestCommandStatus.Failed)\n    }\n\n    finish(s: JDTestCommandStatus) {\n        if (\n            (s === JDTestCommandStatus.Failed || s === JDTestCommandStatus.Passed) &&\n            (this.status === JDTestCommandStatus.Active ||\n                this.status === JDTestCommandStatus.RequiresUserInput)\n        ) {\n            this.status = s\n            this.testRunner.finishCommand()\n        }\n    }\n}\n\nexport class JDTestRunner extends JDEventSource {\n    private _status = JDTestStatus.NotReady\n    private _commandIndex: number\n    public readonly commands: JDTestCommandRunner[]\n\n    constructor(\n        private readonly serviceTestRunner: JDServiceTestRunner,\n        private readonly env: SMap<any>,\n        private readonly testSpec: jdtest.TestSpec\n    ) {\n        super()\n        this.commands = testSpec.testCommands.map(\n            c => new JDTestCommandRunner(this, this.env, c)\n        )\n    }\n\n    reset() {\n        if (this.status !== JDTestStatus.NotReady) {\n            this._status = JDTestStatus.NotReady\n            this._commandIndex = undefined\n            this.commands.forEach(t => t.reset())\n            this.emit(CHANGE)\n        }\n    }\n\n    start() {\n        this.reset()\n        this.status = JDTestStatus.Active\n        this.commandIndex = 0\n    }\n\n    next() {\n        this.serviceTestRunner.next()\n    }\n\n    cancel() {\n        this.finish(JDTestStatus.Failed)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestStatus.Failed &&\n            this.status !== JDTestStatus.Passed\n        )\n    }\n\n    get description() {\n        return this.testSpec.description\n    }\n\n    get prompt() {\n        return this.testSpec.prompt\n    }\n\n    finish(newStatus: JDTestStatus) {\n        if (this.status === JDTestStatus.Active) {\n            this.status = newStatus\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    private set commandIndex(index: number) {\n        if (this._commandIndex !== index) {\n            this._commandIndex = index\n            this.currentCommand?.start()\n            this.emit(CHANGE)\n        }\n    }\n\n    public envChange() {\n        this.currentCommand?.envChange()\n    }\n\n    public eventChange(event: string) {\n        this.currentCommand?.eventChange(event)\n    }\n\n    public finishCommand() {\n        if (this.commandIndex === this.commands.length - 1)\n            this.finish(commandStatusToTestStatus(this.currentCommand.status))\n        // (this.commandIndex < this.commands.length)\n        else this.commandIndex++\n    }\n\n    get currentCommand() {\n        return this.commands[this._commandIndex]\n    }\n}\n\nexport class JDServiceTestRunner extends JDServiceClient {\n    private _testIndex = -1\n    private registers: SMap<JDRegister> = {}\n    private events: SMap<JDEvent> = {}\n    private environment: SMap<number> = {}\n    public readonly tests: JDTestRunner[]\n\n    constructor(\n        public readonly testSpec: jdtest.ServiceTestSpec,\n        service: JDService\n    ) {\n        super(service)\n        this.tests = this.testSpec.tests.map(\n            t => new JDTestRunner(this, this.environment, t)\n        )\n        const serviceSpec = serviceSpecificationFromClassIdentifier(\n            service.serviceClass\n        )\n        this.testSpec.tests.forEach(t => {\n            t.events.forEach(eventName => {\n                if (!this.events[eventName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isEvent(pkt) && pkt.name === eventName\n                    )\n                    const event = service.event(pkt.identifier)\n                    this.events[eventName] = event\n                    this.mount(\n                        event.subscribe(EVENT, () => {\n                            this.currentTest?.eventChange(eventName)\n                        })\n                    )\n                }\n            })\n            t.registers.forEach(regName => {\n                if (!this.registers[regName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => isRegister(pkt) && pkt.name === regName\n                    )\n                    const register = service.register(pkt.identifier)\n                    this.registers[regName] = register\n                    this.environment[regName] = register.intValue\n                    this.mount(\n                        register.subscribe(CHANGE, () => {\n                            this.environment[regName] = register.intValue\n                            this.currentTest?.envChange()\n                        })\n                    )\n                }\n            })\n        })\n        this.start()\n    }\n\n    private get testIndex() {\n        return this._testIndex\n    }\n\n    private set testIndex(index: number) {\n        if (this._testIndex !== index) {\n            // stop previous test if needed\n            const ct = this.currentTest\n            if (ct) {\n                if (ct.status === JDTestStatus.Active) {\n                    ct.cancel()\n                }\n            }\n\n            // update test\n            this._testIndex = index\n            this.emit(CHANGE)\n        }\n    }\n\n    public stats() {\n        const r = {\n            total: this.tests.length,\n            success: 0,\n            failed: 0,\n            indeterminate: 0,\n        }\n        for (const test of this.tests) {\n            switch (test.status) {\n                case JDTestStatus.Failed:\n                    r.failed++\n                    break\n                case JDTestStatus.Passed:\n                    r.success++\n                    break\n                default:\n                    r.indeterminate++\n            }\n        }\n        return r\n    }\n\n    public start() {\n        this.tests.forEach(t => t.reset())\n        this.testIndex = 0\n    }\n\n    public next() {\n        this.testIndex++\n    }\n\n    get currentTest() {\n        return this.tests[this._testIndex]\n    }\n\n    set currentTest(test: JDTestRunner) {\n        const index = this.tests.indexOf(test)\n        if (index > -1) this.testIndex = index\n    }\n}\n","import React, { useCallback, useEffect } from \"react\"\nimport useServiceClient from \"../useServiceClient\"\nimport {\n    Grid,\n    Button,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    Typography,\n    Card,\n    CardContent,\n    CardActions,\n    Box,\n    ListSubheader,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    JDServiceTestRunner,\n    JDTestRunner,\n    JDTestStatus,\n    JDTestCommandRunner,\n    JDTestCommandStatus,\n} from \"../../../jacdac-ts/src/test/testrunner\"\nimport ErrorIcon from \"@material-ui/icons/Error\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\n\nfunction TestStatusIcon(props: { test: JDTestRunner }) {\n    const { test } = props\n    const status = useChange(test, t => t.status)\n\n    switch (status) {\n        case JDTestStatus.Active:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction TestListItem(props: {\n    test: JDTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { test, currentTest, onSelectTest } = props\n    const description = useChange(test, t => t.description)\n    const selected = test === currentTest\n    const handleSelectTest = () => onSelectTest(test)\n\n    return (\n        <ListItem selected={selected} button onClick={handleSelectTest}>\n            <ListItemIcon>\n                <TestStatusIcon test={test} />\n            </ListItemIcon>\n            <ListItemText primary={description} />\n        </ListItem>\n    )\n}\n\nfunction TestList(props: {\n    testRunner: JDServiceTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { testRunner, currentTest, onSelectTest } = props\n    const { tests } = testRunner\n    const stats = useChange(testRunner, r => r.stats())\n\n    return (\n        <Card>\n            <CardContent>\n                <List\n                    dense={true}\n                    subheader={\n                        <ListSubheader>\n                            {`${stats.total} tests, ${stats.success} success, ${stats.failed} failed`}\n                        </ListSubheader>\n                    }\n                >\n                    {tests?.map((test, i) => (\n                        <TestListItem\n                            key={i}\n                            test={test}\n                            currentTest={currentTest}\n                            onSelectTest={onSelectTest}\n                        />\n                    ))}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CommandStatusIcon(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const status = useChange(command, c => c.status)\n\n    switch (status) {\n        case JDTestCommandStatus.Active:\n        case JDTestCommandStatus.RequiresUserInput:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestCommandStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestCommandStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction CommandListItem(props: { command: JDTestCommandRunner }) {\n    const { command } = props\n    const { message, progress } = useChange(command, c => c.output)\n    const status = useChange(command, c => c.status)\n    const handleAnswer = (status: JDTestCommandStatus) => () =>\n        command.finish(status)\n    return (\n        <ListItem selected={status === JDTestCommandStatus.Active}>\n            <ListItemIcon>\n                <CommandStatusIcon command={command} />\n            </ListItemIcon>\n            <ListItemText\n                primary={message}\n                secondary={progress}\n            />\n            {status === JDTestCommandStatus.RequiresUserInput && (\n                <ListItemSecondaryAction>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleAnswer(JDTestCommandStatus.Passed)}\n                    >\n                        Yes\n                    </Button>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleAnswer(JDTestCommandStatus.Failed)}\n                    >\n                        No\n                    </Button>\n                </ListItemSecondaryAction>\n            )}\n        </ListItem>\n    )\n}\n\nfunction ActiveTest(props: { test: JDTestRunner }) {\n    const { test } = props\n    const { commands } = test\n    const status = useChange(test, t => t.status)\n    const handleRestart = () => test.start()\n    const handleNext = () => test.next()\n    // auto start\n    useEffect(() => test.start(), [test])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">DO</Typography>\n                <Box m={2}>\n                    <Typography variant=\"body1\">{test.prompt}</Typography>\n                </Box>\n                <Typography variant=\"h5\">TEST</Typography>\n                <List dense={false}>\n                    {commands.map((cmd, i) => (\n                        <CommandListItem key={i} command={cmd} />\n                    ))}\n                </List>\n                {status === JDTestStatus.Passed && (\n                    <Alert severity=\"success\">Test passed</Alert>\n                )}\n                {status === JDTestStatus.Failed && (\n                    <Alert severity=\"error\">Test failed</Alert>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant={\n                        status === JDTestStatus.Active\n                            ? \"outlined\"\n                            : \"contained\"\n                    }\n                    color={\n                        status === JDTestStatus.Passed ? \"primary\" : undefined\n                    }\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n                <Button variant=\"outlined\" onClick={handleRestart}>\n                    Restart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function ServiceTestRunner(props: {\n    service: JDService\n    serviceTest?: jdtest.ServiceTestSpec\n}) {\n    const {\n        service,\n        serviceTest = serviceTestFromServiceClass(service.serviceClass),\n    } = props\n    const factory = useCallback(\n        service => serviceTest && new JDServiceTestRunner(serviceTest, service),\n        [service, serviceTest]\n    )\n    const testRunner = useServiceClient(service, factory)\n    const currentTest = useChange(testRunner, t => t?.currentTest)\n    const handleSelectTest = (test: JDTestRunner) => {\n        testRunner.currentTest = test\n    }\n\n    if (!serviceTest)\n        return (\n            <Alert severity=\"warning\">\n                Sorry, there are no tests available for service{\" \"}\n                {service.specification.name}.\n            </Alert>\n        )\n\n    if (!testRunner) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs>\n                <TestList\n                    testRunner={testRunner}\n                    currentTest={currentTest}\n                    onSelectTest={handleSelectTest}\n                />\n            </Grid>\n            {currentTest && (\n                <Grid item xs>\n                    <ActiveTest test={currentTest} />\n                </Grid>\n            )}\n            {service && (\n                <Grid item xs>\n                    <DashboardDevice\n                        showAvatar={true}\n                        showHeader={true}\n                        device={service.device}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdtest.d.ts\" />\n\nexport type Commands =\n    | \"changes\"\n    | \"ask\"\n    | \"check\"\n    | \"increases\"\n    | \"decreases\"\n    | \"increasesBy\"\n    | \"decreasesBy\"\n    | \"stepsUpTo\"\n    | \"stepsDownTo\"\n    | \"events\"\n\nexport const testCommandFunctions: jdtest.TestFunctionDescription[] = [\n    { id: \"changes\", args: [\"register\"], prompt: `did the value of {1} change?` },\n    { id: \"ask\", args: [], prompt: undefined },\n    { id: \"events\", args: [\"array\"], prompt: `was the event trace {1} observed?` },\n    { id: \"check\", args: [\"boolean\"], prompt: `does the condition {1} hold?` },\n    {\n        id: \"increases\",\n        args: [\"register\"],\n        prompt: `did the value of {1} increase?`,\n    },\n    {\n        id: \"decreases\",\n        args: [\"register\"],\n        prompt: `did the value of {1} decrease?`,\n    },\n    {\n        id: \"increasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `did the value of {1} (initially {1:val}) increase by {2:val}?`,\n    },\n    {\n        id: \"decreasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `did the value of {1} (initially {1:val}) decrease by {2:val}?`,\n    },\n    {\n        id: \"stepsUpTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step up (by ones) from {1:val} to {2:val}`,\n    },\n    {\n        id: \"stepsDownTo\",\n        args: [\"register\", \"number\"],\n        prompt: `{1} should step down (by ones) from {1:val} to {2:val}`,\n    },\n]\n\nexport const testExpressionFunctions: jdtest.TestFunctionDescription[] = [\n    { id: \"start\", args: [\"any\"], prompt: undefined },\n]\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../jacdac-spec/spectool/jdspec.d.ts\" />\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../jacdac-spec/spectool/jdtest.d.ts\" />\n\nimport serviceTestData from \"../../jacdac-spec/dist/services-tests.json\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _serviceTests: jdtest.ServiceTestSpec[] = serviceTestData as any\n\n/**\n * Given a service specification, see if it has a test\n * @param spec\n */\nexport function serviceTestFromServiceClass(\n    serviceClass: number\n): jdtest.ServiceTestSpec {\n    return (\n        serviceClass !== undefined &&\n        _serviceTests.find(test => test.serviceClassIdentifier === serviceClass)\n    )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}