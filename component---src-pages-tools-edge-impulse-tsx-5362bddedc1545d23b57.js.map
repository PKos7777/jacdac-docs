{"version":3,"file":"component---src-pages-tools-edge-impulse-tsx-5362bddedc1545d23b57.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACE;AACsB;AACtB;AACpC;AACf,SAAS,iCAAc,SAAS,kCAAe,SAAS,6CAA0B,SAAS,kCAAe;AAC1G;;;;;;;;;;;;;;;;;;;;;;ACN0D;AACA;AACY;AACoB;AAC3D;AACO;AACd;AAC4B;AACjB;AACN;AACiB;AACI;AACC;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,wDAAwD,KAAK;AAC7D,gBAAgB;;AAEhB,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,uBAAQ;AACvE;AACA,cAAc,0CAAwB;;AAEtC,uBAAuB,gCAAa;AACpC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,gCAAc;AACtC;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,8BAA8B,sBAAsB;AACpD,+BAA+B,QAAQ;AACvC;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,mBAAmB,CAAC,oBAAK,EAAE,8BAAQ;AACzD,eAAe,yBAAI;AACnB;AACA;AACA,GAAG,uBAAuB,mBAAmB,CAAC,iDAAyB;AACvE;AACA,GAAG,yBAAyB,mBAAmB,sBAAsB,8BAAQ;AAC7E;AACA;AACA,GAAG,iCAAiC,mBAAmB;AACvD;AACA;AACA;AA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","sources":["webpack://jacdac-docs/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/Accordion.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/CheckCircleOutline.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionActions/AccordionActions.js","webpack://jacdac-docs/./src/components/ApiKeyAccordion.tsx","webpack://jacdac-docs/./src/components/ReadingFieldGrid.tsx","webpack://jacdac-docs/./src/components/useDbValue.ts","webpack://jacdac-docs/./src/components/hooks/useSecret.ts","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/pages/tools/edge-impulse.tsx"],"sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar AccordionActions = /*#__PURE__*/React.forwardRef(function AccordionActions(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionActions'\n})(AccordionActions);","import React, { ReactNode, useContext, useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\nimport Alert from \"./ui/Alert\"\nimport {\n    AccordionActions,\n    AccordionSummary,\n    AccordionDetails,\n    Accordion,\n    Typography,\n    TextField,\n    Box,\n} from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\"\nimport { useId } from \"react-use-id-hook\"\nimport { useSecret } from \"./hooks/useSecret\"\nimport AppContext from \"./AppContext\"\n\nexport default function ApiKeyAccordion(props: {\n    apiName: string\n    title?: string\n    validateKey?: (key: string) => Promise<{ status: number }>\n    defaultExpanded?: boolean\n    children: ReactNode\n}) {\n    const { apiName, validateKey, title, children, defaultExpanded } = props\n    const { value: apiKey, setValue: setApiKey } = useSecret(apiName)\n    const apiKeyId = useId()\n    const [key, setKey] = useState(\"\")\n    const [expanded, setExpanded] = useState(!apiKey || defaultExpanded)\n    const [validated, setValidated] = useState(false)\n    const { enqueueSnackbar } = useContext(AppContext)\n\n    useEffectAsync(\n        async mounted => {\n            if (!apiKey) {\n                setValidated(false)\n            } else {\n                const { status } = validateKey\n                    ? await validateKey(apiKey)\n                    : { status: 200 }\n                if (!mounted()) return\n                if (status === 200) {\n                    setValidated(true)\n                    setExpanded(false)\n                } else {\n                    setValidated(false)\n                    if (status === 403) setApiKey(undefined)\n                }\n            }\n        },\n        [apiKey]\n    )\n\n    const handleApiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setKey(event.target.value)\n    }\n    const handleSave = () => {\n        setApiKey(key)\n        setKey(\"\")\n        enqueueSnackbar(\"key saved...\")\n    }\n    const handleReset = () => {\n        setApiKey(\"\")\n        enqueueSnackbar(\"key cleared...\")\n    }\n\n    const handleExpanded = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Accordion expanded={expanded} onChange={handleExpanded}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body1\">{`${\n                    title || \"API key\"\n                } Configuration`}</Typography>\n                {validated && (\n                    <Box ml={1} color=\"success.main\">\n                        <CheckCircleOutlineIcon />\n                    </Box>\n                )}\n            </AccordionSummary>\n            <AccordionDetails style={{ display: \"block\" }}>\n                {validated && (\n                    <Alert severity={\"success\"}>API key ready!</Alert>\n                )}\n                <Typography component=\"span\" variant=\"caption\">\n                    {children}\n                </Typography>\n                <TextField\n                    id={apiKeyId}\n                    label=\"API key\"\n                    fullWidth\n                    value={key}\n                    type=\"password\"\n                    onChange={handleApiChange}\n                />\n            </AccordionDetails>\n            <AccordionActions>\n                <Button\n                    aria-label=\"save api key\"\n                    disabled={!key}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSave}\n                >\n                    Save\n                </Button>\n                <Button\n                    aria-label=\"clear api key\"\n                    disabled={!apiKey}\n                    variant=\"contained\"\n                    onClick={handleReset}\n                >\n                    Clear\n                </Button>\n            </AccordionActions>\n        </Accordion>\n    )\n}\n","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    createStyles,\n    Grid,\n    makeStyles,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport JDRegister from \"../../jacdac-ts/src/jdom/register\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport useDeviceName from \"./devices/useDeviceName\"\nimport SwitchWithLabel from \"./ui/SwitchWithLabel\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister\n    handleRegisterCheck: (register: JDRegister) => void\n    recording: boolean\n    registerChecked: boolean\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        register,\n        handleRegisterCheck,\n        recording,\n        registerChecked,\n        liveDataSet,\n    } = props\n    const { service } = register\n    const { device } = service\n    const gridBreakpoints = useGridBreakpoints()\n    const classes = useStyles()\n    const deviceName = useDeviceName(device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return (\n        <Grid item {...gridBreakpoints} key={\"source\" + register.id}>\n            <Card>\n                <CardHeader\n                    subheader={register.service.name}\n                    title={`${deviceName}/${register.name}`}\n                />\n                <CardContent>\n                    {register.fields.map(field => (\n                        <span key={field.id}>\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"large\"\n                                style={{\n                                    color:\n                                        (registerChecked &&\n                                            liveDataSet?.colorOf(field)) ||\n                                        \"#ccc\",\n                                }}\n                            />\n                            {field.name}\n                        </span>\n                    ))}\n                </CardContent>\n                <CardActions>\n                    <SwitchWithLabel\n                        disabled={recording}\n                        onChange={handleCheck}\n                        checked={registerChecked}\n                        label={`record ${deviceName}/${register.name}`}\n                    />\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[]\n    registerIdsChecked: string[]\n    recording?: boolean\n    handleRegisterCheck: (register: JDRegister) => void\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        readingRegisters,\n        registerIdsChecked,\n        recording,\n        handleRegisterCheck,\n        liveDataSet,\n    } = props\n\n    return (\n        <Grid container spacing={2}>\n            {readingRegisters.map(register => {\n                const registerChecked =\n                    registerIdsChecked.indexOf(register.id) > -1\n                return (\n                    <ReadingFieldGridItem\n                        key={register.id}\n                        register={register}\n                        registerChecked={registerChecked}\n                        recording={recording}\n                        handleRegisterCheck={handleRegisterCheck}\n                        liveDataSet={liveDataSet}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n","import { useContext, useState, useEffect } from \"react\"\nimport useChange from \"../jacdac/useChange\"\nimport DbContext, { DB_VALUE_CHANGE } from \"./DbContext\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useDbValue(id: string, initialValue: string) {\n    const { db } = useContext(DbContext)\n    const [_value, _setValue] = useState<string>(undefined)\n    const values = useChange(db, d => d?.values)\n    let _mounted = true\n\n    const setValue = async (value: string) => {\n        await values?.set(id, value)\n    }\n\n    // listen to change\n    useEffect(\n        () =>\n            values?.subscribe(DB_VALUE_CHANGE, async changed => {\n                //    console.log(`db value changed`, id)\n                if (changed === id) {\n                    const v = await values.get(id)\n                    if (_mounted) {\n                        _setValue(v)\n                    }\n                }\n                return () => {\n                    _mounted = false\n                }\n            }),\n        [db, values]\n    )\n\n    // load intial value\n    useEffectAsync(\n        async mounted => {\n            const v = await values?.get(id)\n            if (mounted()) {\n                //      console.log(`load dbvalue ${id}`, values, v)\n                _setValue(v || initialValue)\n            }\n        },\n        [db, values]\n    )\n\n    return {\n        value: _value,\n        setValue,\n    }\n}\n","import useDbValue from \"../useDbValue\"\n\nexport function useSecret(id: string) {\n    const { value, setValue } = useDbValue(\"secret:\" + id, \"\")\n    return {\n        value,\n        setValue,\n    }\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    CircularProgress,\n    Grid,\n    Switch,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\"\nimport DeviceCardHeader from \"../../components/DeviceCardHeader\"\nimport Alert from \"../../components/ui/Alert\"\nimport useEffectAsync from \"../../components/useEffectAsync\"\nimport {\n    CHANGE,\n    CONNECT,\n    CONNECTING,\n    CONNECTION_STATE,\n    DISCONNECT,\n    ERROR,\n    PROGRESS,\n    REPORT_RECEIVE,\n    SRV_MODEL_RUNNER,\n    SRV_SENSOR_AGGREGATOR,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport FieldDataSet from \"../../components/FieldDataSet\"\nimport {\n    deviceSpecificationFromProductIdentifier,\n    isSensor,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport CircularProgressWithLabel from \"../../components/ui/CircularProgressWithLabel\"\nimport Trend from \"../../components/Trend\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport ServiceList from \"../../components/ServiceList\"\nimport { ModelActions, ModelContent } from \"./model-uploader\"\nimport { readBlobToUint8Array } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDeviceName from \"../../components/devices/useDeviceName\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport ReadingFieldGrid from \"../../components/ReadingFieldGrid\"\nimport useChartPalette from \"../../components/useChartPalette\"\nimport SensorAggregatorClient, {\n    SensorAggregatorConfig,\n} from \"../../../jacdac-ts/src/clients/sensoraggregatorclient\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport ApiKeyAccordion from \"../../components/ApiKeyAccordion\"\nimport { useSecret } from \"../../components/hooks/useSecret\"\n\nconst EDGE_IMPULSE_API_KEY = \"edgeimpulseapikey\"\n\nconst IDLE = \"idle\"\nconst STARTING = \"starting\"\nconst SAMPLING = \"sampling\"\nconst UPLOADING = \"uploading\"\n\nconst SAMPLING_STATE = \"samplingState\"\n\ninterface EdgeImpulseResponse {\n    success: boolean\n    error?: string\n    // HTTP status code\n    errorStatus?: number\n}\n\ninterface EdgeImpulseHello {\n    hello?: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    err?: any\n}\n\ninterface EdgeImpulseSensorInfo {\n    name: string\n    maxSampleLengthS: number\n    frequencies: number[]\n}\n\ninterface EdgeImpulseRemoteManagementInfo {\n    version: number\n    apiKey: string\n    deviceId: string\n    deviceType: string\n    connection: string\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceInfo {\n    id: number\n    deviceId: string\n    name: string\n    created: string\n    lastSeen: string\n    deviceType: string\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceResponse extends EdgeImpulseResponse {\n    device?: EdgeImpulseDeviceInfo\n}\n\ninterface EdgeImpulseSample extends EdgeImpulseResponse {\n    label: string\n    length: number\n    path: string\n    hmacKey: string\n    interval: number\n    sensor: string\n}\n\ninterface EdgeImpulseSampling extends EdgeImpulseSample {\n    dataSet?: FieldDataSet\n    startTimestamp?: number\n    lastProgressTimestamp?: number\n    generatedFilename?: string\n    aggregatorConfig?: SensorAggregatorConfig\n    unsubscribers?: (() => void)[]\n}\n\ninterface EdgeImpulseProjectInfo {\n    id: number\n    name: string\n    logo?: string\n}\n\ninterface EdgeImpulseProject extends EdgeImpulseResponse {\n    project: EdgeImpulseProjectInfo\n    devices: EdgeImpulseDeviceInfo[]\n    impulse: {\n        created: boolean\n        configured: boolean\n        complete: boolean\n    }\n    dataSummary: {\n        totalLengthMs: number\n        labels: string[]\n        dataCount: number\n    }\n    downloads: {\n        name: string\n        type: string\n        size: string\n        link: string\n    }[]\n}\n\ninterface EdgeImpulseProjects extends EdgeImpulseResponse {\n    projects: EdgeImpulseProjectInfo[]\n}\n\n/*\nA client for the EdgeImpulse remote management\nhttps://docs.edgeimpulse.com/reference#remote-management\n*/\nclass EdgeImpulseClient extends JDClient {\n    private _ws: WebSocket\n    public connectionState = DISCONNECT\n    public samplingState = IDLE\n    private _hello: EdgeImpulseRemoteManagementInfo\n    private _sample: EdgeImpulseSampling\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _pingInterval: any\n    private pong: boolean\n    private aggregatorClient: SensorAggregatorClient\n\n    constructor(\n        private readonly apiKey: string,\n        private readonly aggregator: JDService,\n        private readonly inputRegisters: JDRegister[],\n        private readonly palette: string[]\n    ) {\n        super()\n\n        this.handleMessage = this.handleMessage.bind(this)\n        this.handleOpen = this.handleOpen.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.handleReport = this.handleReport.bind(this)\n        this.handlePing = this.handlePing.bind(this)\n\n        this.aggregatorClient = new SensorAggregatorClient(this.aggregator)\n        this.aggregatorClient.subscribeSample(this.handleReport)\n\n        this.mount(() => this.disconnect())\n        this.mount(() => this.aggregatorClient.unmount())\n    }\n\n    get dataSet() {\n        return this._sample?.dataSet\n    }\n\n    disconnect() {\n        this.clearSampling()\n        if (this._pingInterval) {\n            clearInterval(this._pingInterval)\n            this._pingInterval = undefined\n        }\n        // stop socket\n        if (this._ws) {\n            const w = this._ws\n            this._ws = undefined\n            try {\n                w.close()\n            } catch (e) {\n                console.debug(e)\n            } finally {\n                this.setConnectionState(DISCONNECT)\n            }\n        }\n    }\n\n    private setConnectionState(state: string) {\n        if (this.connectionState !== state) {\n            this.connectionState = state\n            this.emit(CONNECTION_STATE, this.connectionState)\n            console.log(`ei: connection state changed`, this.connectionState)\n        }\n    }\n\n    private setSamplingState(state: string) {\n        if (this.samplingState !== state) {\n            this.samplingState = state\n            this.emit(SAMPLING_STATE, this.samplingState)\n            this.emit(CHANGE)\n            console.log(`ei: sampling state changed`, this.samplingState)\n        }\n    }\n\n    private send(msg: unknown) {\n        this._ws?.send(JSON.stringify(msg))\n    }\n\n    private async handleOpen() {\n        console.log(`ws: open`)\n        const service = this.aggregator\n        const { device } = service\n\n        // fetch device spec\n        const productIdentifier =\n            await service.device.resolveProductIdentifier()\n        const deviceSpec =\n            deviceSpecificationFromProductIdentifier(productIdentifier)\n\n        this._hello = {\n            version: 2,\n            apiKey: this.apiKey,\n            deviceId: device.deviceId,\n            deviceType:\n                deviceSpec?.name ||\n                productIdentifier?.toString(16) ||\n                \"Jacdac device\",\n            connection: \"ip\", // direct connection\n            sensors: [\n                {\n                    name: this.inputRegisters\n                        .map(reg => serviceName(reg.service.serviceClass))\n                        .join(\",\"),\n                    maxSampleLengthS: 10000,\n                    frequencies: [50, 30, 20, 10],\n                },\n            ],\n        }\n        this.send({\n            hello: this._hello,\n        })\n    }\n\n    private reconnect() {\n        this.disconnect()\n        this.connect()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private handleMessage(msg: any) {\n        // response to ping?\n        if (msg.data === \"pong\") {\n            this.pong = true\n            return\n        }\n\n        const data = JSON.parse(msg.data)\n        if (data.hello !== undefined) {\n            const hello = data as EdgeImpulseHello\n            if (!hello.hello) {\n                this.emit(ERROR, hello.err)\n                this.disconnect()\n            } else {\n                this.setConnectionState(CONNECT)\n            }\n        } else if (data.sample) {\n            const sample = data.sample as EdgeImpulseSample\n            this.startSampling(sample)\n        }\n    }\n\n    get connected() {\n        return this.connectionState === CONNECT\n    }\n\n    get sampling() {\n        return this.samplingState !== IDLE\n    }\n\n    get generatedSampleName() {\n        return this._sample?.generatedFilename\n    }\n\n    get aggregatorConfig() {\n        return this._sample?.aggregatorConfig\n    }\n\n    private handleReport(row: number[]) {\n        console.log(`ei: aggregator report`, this.connected, this.sampling)\n        if (!this.connected) return // ignore\n\n        // partial data? ignore\n        if (row.some(r => r === undefined)) return\n\n        const { bus } = this.aggregator.device\n        const { timestamp } = bus\n        // first sample, notify we're started\n        if (this.samplingState == STARTING) {\n            this._sample.startTimestamp = this._sample.lastProgressTimestamp =\n                timestamp\n            this.send({ sampleStarted: true })\n            this.setSamplingState(SAMPLING)\n        }\n        // store sample\n        if (this.samplingState == SAMPLING) {\n            const ds = this.dataSet\n            ds.addRow(row)\n            this.emit(REPORT_RECEIVE)\n\n            // debounced progress update\n            if (timestamp - this._sample.lastProgressTimestamp > 100) {\n                this._sample.lastProgressTimestamp = timestamp\n                this.emit(PROGRESS, this.progress)\n            }\n\n            if (\n                timestamp - this._sample.startTimestamp >=\n                this._sample.length\n            ) {\n                // first stop the sampling\n                this.stopSampling()\n                // we're done!\n                this.emit(PROGRESS, this.progress)\n                // and upload...\n                this.uploadData()\n            }\n        }\n    }\n\n    private uploadData(): Promise<void> {\n        this.setSamplingState(UPLOADING)\n        const ds = this.dataSet\n        const payload = {\n            protected: {\n                ver: \"v1\",\n                alg: \"none\",\n                iat: Date.now(),\n            },\n            signature: \"\",\n            payload: {\n                device_name: this._hello.deviceId,\n                device_type: this._hello.deviceType,\n                interval_ms: this._sample.interval,\n                sensors: ds.headers.map((h, i) => ({\n                    name: ds.headers[i],\n                    units: ds.units[i] || \"/\",\n                })),\n                values: ds.data(true),\n            },\n        }\n        console.log(`payload`, payload)\n        // upload dataset\n        // https://docs.edgeimpulse.com/reference#ingestion-api\n        return fetch(`https://ingestion.edgeimpulse.com${this._sample.path}`, {\n            method: \"POST\",\n            headers: {\n                \"x-api-key\": this.apiKey,\n                \"x-label\": this._sample.label,\n                \"x-file-name\": ds.name,\n                \"x-disallow-duplicates\": \"true\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(payload),\n        })\n            .then(async resp => {\n                // response contains the filename\n                const filename = await resp.text()\n                this._sample.generatedFilename = filename\n            })\n            .finally(() => {\n                this.send({\n                    sampleFinished: true,\n                })\n                this.setSamplingState(IDLE)\n            })\n    }\n\n    private handleError(ev: Event) {\n        this.emit(ERROR, ev)\n        this.reconnect()\n    }\n\n    private async startSampling(sample: EdgeImpulseSample) {\n        this._sample = sample\n        this._sample.dataSet = FieldDataSet.create(\n            this.aggregator.device.bus,\n            this.inputRegisters,\n            \"sample\",\n            this.palette\n        )\n        this._sample.unsubscribers = []\n        this.send({ sample: true })\n        this.setSamplingState(STARTING)\n\n        // prepare configuration\n        this._sample.aggregatorConfig = {\n            samplingInterval: this._sample.interval,\n            samplesInWindow: 10,\n            inputs: this.inputRegisters.map(reg => ({\n                serviceClass: reg.service.serviceClass,\n                deviceId: reg.service.device.deviceId,\n                serviceIndex: reg.service.serviceIndex,\n            })),\n        }\n\n        console.log(`ei: input`, this._sample.aggregatorConfig)\n        // setup aggregator client\n        await this.aggregatorClient.setInputs(this._sample.aggregatorConfig)\n        // schedule data collection, ask a few more samples\n        await this.aggregatorClient.collect(this._sample.length * 1.1)\n    }\n\n    private stopSampling() {\n        const sample = this._sample\n        if (sample) {\n            sample.unsubscribers.forEach(unsub => {\n                try {\n                    unsub()\n                } catch (e) {\n                    console.log(e)\n                }\n            })\n            sample.unsubscribers = []\n        }\n    }\n\n    private clearSampling() {\n        this.stopSampling()\n        if (this._sample) {\n            this._sample = undefined\n            this._hello = undefined\n            this.setSamplingState(IDLE)\n        }\n    }\n\n    connect() {\n        if (this._ws) return // already connected\n\n        console.log(`ei: connect`)\n        this.setConnectionState(CONNECTING)\n        this._ws = new WebSocket(\"wss://remote-mgmt.edgeimpulse.com\")\n        this._ws.onmessage = this.handleMessage\n        this._ws.onopen = this.handleOpen\n        this._ws.onerror = this.handleError\n\n        this.pong = true\n        this._pingInterval = setInterval(this.handlePing, 3000)\n    }\n\n    private handlePing() {\n        if (!this.connected) return\n\n        if (!this.pong) {\n            // the socket did not response\n            console.log(`missing pong`)\n            this.reconnect()\n        } else {\n            // send a new ping and wait for pong\n            this.pong = false\n            this._ws.send(\"ping\")\n        }\n    }\n\n    get progress() {\n        const timestamp = this.aggregator.device.bus.timestamp\n        return (\n            this.samplingState !== IDLE &&\n            (timestamp - this._sample.startTimestamp) / this._sample.length\n        )\n    }\n\n    static async currentProjectInfo(apiKey: string): Promise<{\n        valid: boolean\n        errorStatus?: number\n        project?: EdgeImpulseProject\n    }> {\n        if (!apiKey) return { valid: false }\n\n        const rsj = await EdgeImpulseClient.apiFetch<EdgeImpulseProjects>(\n            apiKey,\n            \"projects\"\n        )\n        if (!rsj.success) {\n            return {\n                valid: false,\n                errorStatus: rsj.errorStatus,\n            }\n        }\n\n        // the API returns the current project when using the API key\n        const projectId = rsj.projects?.[0]?.id\n        if (!rsj?.success || projectId === undefined) {\n            return {\n                valid: true,\n                errorStatus: 402,\n            }\n        }\n\n        const project = await EdgeImpulseClient.apiFetch<EdgeImpulseProject>(\n            apiKey,\n            projectId\n        )\n        return {\n            valid: true,\n            errorStatus: project.errorStatus,\n            project,\n        }\n    }\n\n    static async apiFetch<T extends EdgeImpulseResponse>(\n        apiKey: string,\n        path: string | number,\n        body?: unknown\n    ): Promise<T> {\n        const API_ROOT = \"https://studio.edgeimpulse.com/v1/api/\"\n        const url = `${API_ROOT}${path}`\n        const options: RequestInit = {\n            method: body ? \"POST\" : \"GET\",\n            headers: {\n                \"x-api-key\": apiKey,\n                Accept: \"application/json\",\n            },\n            body: body && JSON.stringify(body),\n        }\n        if (options.method === \"POST\")\n            options.headers[\"Content-Type\"] = \"application/json\"\n\n        const resp = await fetch(url, options)\n        if (resp.status !== 200)\n            return {\n                success: false,\n                errorStatus: resp.status,\n                error: resp.statusText,\n            } as T\n        try {\n            const payload = (await resp.json()) as T\n            return payload\n        } catch (e) {\n            return {\n                success: false,\n                errorStatus: 500,\n                error: e.message,\n            } as T\n        }\n    }\n\n    static async deviceInfo(\n        apiKey: string,\n        projectId: number,\n        deviceId: string\n    ): Promise<EdgeImpulseDeviceResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseDeviceResponse>(\n            apiKey,\n            `${projectId}/device/${deviceId}`\n        )\n    }\n\n    static async renameDevice(\n        apiKey: string,\n        projectId: number,\n        deviceId: string,\n        name: string\n    ): Promise<EdgeImpulseResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseResponse>(\n            apiKey,\n            `${projectId}/devices/${deviceId}/rename`,\n            { name }\n        )\n    }\n}\n\nfunction ApiKeyManager() {\n    const validateKey = async (key: string) => {\n        const r = await EdgeImpulseClient.currentProjectInfo(key)\n        return {\n            status: (r?.valid && 200) || r?.errorStatus || 500,\n        }\n    }\n    return (\n        <ApiKeyAccordion\n            apiName={EDGE_IMPULSE_API_KEY}\n            validateKey={validateKey}\n        >\n            To get an <b>API key</b>, navigate to &nbsp;\n            <Link\n                to=\"https://studio.edgeimpulse.com/studio/8698/keys\"\n                target=\"_blank\"\n            >\n                https://studio.edgeimpulse.com/studio/8698/keys\n            </Link>\n            &nbsp; and generate a new key.\n        </ApiKeyAccordion>\n    )\n}\n\nfunction useEdgeImpulseProjectInfo(apiKey: string) {\n    const [info, setInfo] = useState<EdgeImpulseProject>(undefined)\n\n    useEffectAsync(\n        async mounted => {\n            if (!apiKey) {\n                if (mounted()) setInfo(undefined)\n            } else {\n                const r = await EdgeImpulseClient.currentProjectInfo(apiKey)\n                if (mounted()) setInfo(r?.project)\n            }\n        },\n        [apiKey]\n    )\n\n    return info\n}\n\nfunction ProjectInfo(props: { info: EdgeImpulseProject }) {\n    const { info } = props\n    const disabled = !info?.success\n\n    return (\n        <Card>\n            <CardHeader\n                title={info?.project?.name || \"...\"}\n                subheader={\n                    info?.dataSummary &&\n                    `${info?.dataSummary?.dataCount} samples`\n                }\n            />\n            {info?.project?.logo && <CardMedia image={info?.project?.logo} />}\n            <CardActions>\n                <Button\n                    disabled={disabled}\n                    target=\"_blank\"\n                    href={`https://studio.edgeimpulse.com/studio/${info?.project?.id}/`}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Open EdgeImpulse\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nfunction ModelDownloadButton(props: {\n    apiKey: string\n    info: EdgeImpulseProject\n    setModel: (blob: Uint8Array) => void\n}) {\n    const { apiKey, info, setModel } = props\n    const theme = useTheme()\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const download = info?.downloads.find(\n        download => download.type === \"TensorFlow Lite (float32)\"\n    )\n\n    const handleDownload = (url: string) => async () => {\n        try {\n            setDownloading(true)\n            setError(\"\")\n            const resp = await fetch(url, {\n                headers: {\n                    \"x-api-key\": apiKey,\n                },\n            })\n            const res = await resp.blob()\n            const bytes = await readBlobToUint8Array(res)\n            setModel(bytes)\n        } catch (e) {\n            console.log(e)\n            setError(\"Oops, download failed.\")\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Box mb={1}>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            <Button\n                variant=\"contained\"\n                disabled={!download || downloading}\n                startIcon={\n                    downloading ? (\n                        <CircularProgress size={theme.spacing(2)} />\n                    ) : (\n                        <GetAppIcon />\n                    )\n                }\n                onClick={handleDownload(\n                    `https://studio.edgeimpulse.com${download?.link}`\n                )}\n            >\n                DOWNLOAD MODEL\n            </Button>\n        </Box>\n    )\n}\n\nfunction AggregatorCard(props: {\n    aggregator: JDService\n    selected: boolean\n    onChecked: () => void\n}) {\n    const { aggregator, selected, onChecked } = props\n    const { device } = aggregator\n\n    const handleChecked = () => onChecked()\n\n    return (\n        <Card>\n            <DeviceCardHeader device={device} showMedia={true} />\n            <CardContent>\n                <Switch checked={selected} onChange={handleChecked} />\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction Acquisition(props: {\n    aggregator: JDService\n    inputs: JDRegister[]\n    apiKey: string\n    info: EdgeImpulseProjectInfo\n}) {\n    const { aggregator, inputs, apiKey, info } = props\n\n    const { device } = aggregator\n    const [client, setClient] = useState<EdgeImpulseClient>(undefined)\n    const [error, setError] = useState(\"\")\n    const [connectionState, setConnectionState] = useState(DISCONNECT)\n    const [samplingState, setSamplingState] = useState(IDLE)\n    const [samplingProgress, setSamplingProgress] = useState(0)\n    const [, setDeviceInfo] = useState<EdgeImpulseDeviceInfo>(undefined)\n    const { deviceId } = device\n    const deviceName = useDeviceName(device, false)\n    const projectId = info?.id\n    const palette = useChartPalette()\n\n    const connected = connectionState === CONNECT\n    const sampling = samplingState !== IDLE\n    const dataSet = client?.dataSet\n    const generatedSampleName = client?.generatedSampleName\n    const aggregatorConfig = client?.aggregatorConfig\n\n    useEffect(() => {\n        if (!apiKey || !aggregator || !inputs?.length) {\n            setClient(undefined)\n            setError(undefined)\n            return undefined\n        } else {\n            console.log(`ei: start client`)\n            const c = new EdgeImpulseClient(apiKey, aggregator, inputs, palette)\n            c.connect()\n            setClient(c)\n            setError(undefined)\n            return () => c.unmount()\n        }\n    }, [apiKey, aggregator, inputs?.map(ip => ip.id).join(\",\")])\n    // subscribe to client changes\n    useEffect(\n        () =>\n            client?.subscribe(CONNECTION_STATE, (v: string) =>\n                setConnectionState(v)\n            ),\n        [client]\n    )\n    // subscribe to client changes\n    useEffect(\n        () =>\n            client?.subscribe(SAMPLING_STATE, (v: string) =>\n                setSamplingState(v)\n            ),\n        [client]\n    )\n    // listen to errors\n    useEffect(\n        () => client?.subscribe(ERROR, (e: string) => setError(e)),\n        [client]\n    )\n    // progress\n    useEffect(\n        () =>\n            client?.subscribe(PROGRESS, (p: number) =>\n                setSamplingProgress(p * 100)\n            ),\n        [client]\n    )\n\n    // name checking\n    useEffectAsync(async () => {\n        if (!apiKey || projectId === undefined) {\n            setDeviceInfo(undefined)\n        } else {\n            const resp = await EdgeImpulseClient.deviceInfo(\n                apiKey,\n                projectId,\n                deviceId\n            )\n            const info = resp.success && resp.device\n            if (info && info.name !== deviceName) {\n                // no name assigned, use current\n                if (info.name === deviceId) {\n                    console.log(`ei: sync name`)\n                    const rename = await EdgeImpulseClient.renameDevice(\n                        apiKey,\n                        projectId,\n                        deviceId,\n                        deviceName\n                    )\n                    if (rename.success) {\n                        info.name = deviceName\n                    }\n                }\n            }\n            setDeviceInfo(info)\n        }\n    }, [apiKey, projectId, deviceName])\n\n    return (\n        <Box>\n            {connected && (\n                <Alert severity={\"success\"}>Connected to EdgeImpulse</Alert>\n            )}\n            {error && <Alert severity={\"error\"}>{error}</Alert>}\n            {sampling && (\n                <Alert severity={\"info\"}>\n                    <AlertTitle>Sampling...</AlertTitle>\n                    <CircularProgressWithLabel value={samplingProgress} />\n                </Alert>\n            )}\n            {!!dataSet && <Trend dataSet={dataSet} />}\n            {generatedSampleName && (\n                <Typography variant=\"body2\">\n                    sample name: {generatedSampleName}\n                </Typography>\n            )}\n            {aggregatorConfig && (\n                <pre>{JSON.stringify(aggregatorConfig, null, 2)}</pre>\n            )}\n        </Box>\n    )\n}\n\nexport default function EdgeImpulse() {\n    const { value: apiKey } = useSecret(EDGE_IMPULSE_API_KEY)\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [model, setModel] = useState<Uint8Array>(undefined)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const gridBreakPoints = useGridBreakpoints()\n    const info = useEdgeImpulseProjectInfo(apiKey)\n\n    const aggregators: JDService[] = useChange(bus, bus =>\n        bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR })\n    )\n    const currentAggregator: JDService =\n        aggregators.find(srv => srv.id == aggregatorId) || aggregators[0]\n    const readingRegisters = useChange(bus, bus =>\n        bus\n            .devices()\n            .map(\n                device =>\n                    device.services().find(srv => isSensor(srv.specification))\n                        ?.readingRegister\n            )\n            .filter(reg => !!reg)\n    )\n    const inputs = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? \"\" : srv?.id\n        setAggregatorId(id)\n    }\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n    }\n\n    return (\n        <>\n            <h1>Edge Impulse</h1>\n            <p>\n                Use Jacdac to inject data and download models into{\" \"}\n                <Link href=\"https://studio.edgeimpulse.com\">\n                    https://studio.edgeimpulse.com\n                </Link>\n                .\n            </p>\n            <ConnectAlert />\n            <ApiKeyManager />\n            <Box mb={1} />\n            <ProjectInfo info={info} />\n            <h3>Data</h3>\n            <h4>Select Sensors</h4>\n            {!readingRegisters?.length && (\n                <Alert severity=\"info\">No sensor found...</Alert>\n            )}\n            {!!readingRegisters.length && (\n                <ReadingFieldGrid\n                    readingRegisters={readingRegisters}\n                    registerIdsChecked={registerIdsChecked}\n                    handleRegisterCheck={handleRegisterCheck}\n                />\n            )}\n            <h4>Select Sensor Aggregator</h4>\n            {!aggregators?.length && (\n                <Alert severity=\"info\">No data aggregator found...</Alert>\n            )}\n            <Grid container spacing={2}>\n                {aggregators.map(aggregator => (\n                    <Grid key={aggregator.id} item {...gridBreakPoints}>\n                        <AggregatorCard\n                            aggregator={aggregator}\n                            selected={currentAggregator === aggregator}\n                            onChecked={handleAggregatorChecked(aggregator)}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <h4>Acquisition status</h4>\n            {!currentAggregator && (\n                <Alert severity=\"info\">No data aggregator selected...</Alert>\n            )}\n            {!inputs?.length && (\n                <Alert severity=\"info\">\n                    Select sensors to collect data from...\n                </Alert>\n            )}\n            {currentAggregator && !!inputs?.length && (\n                <Acquisition\n                    aggregator={currentAggregator}\n                    inputs={inputs}\n                    apiKey={apiKey}\n                    info={info?.project}\n                />\n            )}\n            <h3>Deployment</h3>\n            {model && (\n                <Box mb={1}>\n                    <Alert severity=\"success\">Model downloaded!</Alert>\n                </Box>\n            )}\n            <ModelDownloadButton\n                apiKey={apiKey}\n                info={info}\n                setModel={setModel}\n            />\n            <ServiceList\n                serviceClass={SRV_MODEL_RUNNER}\n                content={service => <ModelContent service={service} />}\n                actions={service => (\n                    <ModelActions service={service} model={model} />\n                )}\n                alertMissing={\"No model runner found...\"}\n            />\n        </>\n    )\n}\n"],"names":["React","useContext","useState","useEffectAsync","Alert","AccordionActions","AccordionSummary","AccordionDetails","Accordion","Typography","TextField","Box","Button","ExpandMoreIcon","CheckCircleOutlineIcon","useId","useSecret","AppContext","ApiKeyAccordion","props","apiName","validateKey","title","children","defaultExpanded","value","apiKey","setValue","setApiKey","apiKeyId","key","setKey","expanded","setExpanded","validated","setValidated","enqueueSnackbar","mounted","status","undefined","handleApiChange","event","target","handleSave","handleReset","handleExpanded","display","Card","CardActions","CardContent","CardHeader","createStyles","Grid","makeStyles","useGridBreakpoints","FiberManualRecordIcon","useDeviceName","SwitchWithLabel","useStyles","vmiddle","verticalAlign","ReadingFieldGridItem","register","handleRegisterCheck","recording","registerChecked","liveDataSet","service","device","gridBreakpoints","classes","deviceName","handleCheck","id","name","fields","map","field","color","colorOf","ReadingFieldGrid","readingRegisters","registerIdsChecked","indexOf","useEffect","useChange","DbContext","DB_VALUE_CHANGE","useDbValue","initialValue","db","_value","_setValue","values","d","_mounted","set","subscribe","changed","v","get","FormControlLabel","Switch","label","rest","CardMedia","CircularProgress","useTheme","Link","JacdacContext","JDClient","DeviceCardHeader","CHANGE","CONNECT","CONNECTING","CONNECTION_STATE","DISCONNECT","ERROR","PROGRESS","REPORT_RECEIVE","SRV_MODEL_RUNNER","SRV_SENSOR_AGGREGATOR","FieldDataSet","deviceSpecificationFromProductIdentifier","isSensor","CircularProgressWithLabel","Trend","GetAppIcon","ServiceList","ModelActions","ModelContent","readBlobToUint8Array","useChartPalette","SensorAggregatorClient","AlertTitle","serviceName","ConnectAlert","EDGE_IMPULSE_API_KEY","IDLE","STARTING","SAMPLING","UPLOADING","SAMPLING_STATE","EdgeImpulseClient","aggregator","inputRegisters","palette","connectionState","samplingState","handleMessage","bind","handleOpen","handleError","handleReport","handlePing","aggregatorClient","subscribeSample","mount","disconnect","unmount","clearSampling","_pingInterval","clearInterval","_ws","w","close","e","console","debug","setConnectionState","state","emit","log","setSamplingState","send","msg","JSON","stringify","productIdentifier","resolveProductIdentifier","deviceSpec","_hello","version","deviceId","deviceType","toString","connection","sensors","reg","serviceClass","join","maxSampleLengthS","frequencies","hello","reconnect","connect","data","pong","parse","err","sample","startSampling","row","connected","sampling","some","r","bus","timestamp","_sample","startTimestamp","lastProgressTimestamp","sampleStarted","ds","dataSet","addRow","progress","length","stopSampling","uploadData","payload","protected","ver","alg","iat","Date","now","signature","device_name","device_type","interval_ms","interval","headers","h","i","units","fetch","path","method","body","then","resp","filename","text","generatedFilename","finally","sampleFinished","ev","create","unsubscribers","aggregatorConfig","samplingInterval","samplesInWindow","inputs","serviceIndex","setInputs","collect","forEach","unsub","WebSocket","onmessage","onopen","onerror","setInterval","currentProjectInfo","valid","rsj","apiFetch","success","errorStatus","projectId","projects","project","API_ROOT","url","options","Accept","error","statusText","json","message","deviceInfo","renameDevice","ApiKeyManager","useEdgeImpulseProjectInfo","info","setInfo","ProjectInfo","disabled","dataSummary","dataCount","logo","ModelDownloadButton","setModel","theme","downloading","setDownloading","setError","download","downloads","find","type","handleDownload","res","blob","bytes","spacing","link","AggregatorCard","selected","onChecked","handleChecked","Acquisition","client","setClient","samplingProgress","setSamplingProgress","setDeviceInfo","generatedSampleName","c","ip","p","rename","EdgeImpulse","model","setRegisterIdsChecked","aggregatorId","setAggregatorId","gridBreakPoints","aggregators","services","currentAggregator","srv","devices","specification","readingRegister","filter","handleAggregatorChecked","splice","push","sort"],"sourceRoot":""}