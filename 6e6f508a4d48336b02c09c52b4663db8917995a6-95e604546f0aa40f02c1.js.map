{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItem/ListItem.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack://jacdac-docs/./node_modules/use-debounce/esm/useDebouncedCallback.js","webpack://jacdac-docs/./node_modules/use-debounce/esm/useDebounce.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA0D;AACgC;AAC3D;AACP;AAC4B;AACN;AACP;AACU;AACJ;AACC;AACR;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,0FAA0F,KAAK;AAC/F,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,2EAA2E,KAAK;AAChF,gBAAgB;;AAEhB,oEAAoE,KAAK;AACzE;AACA;AACA;AACA,KAAK;;AAEL,2EAA2E,MAAM;AACjF;AACA;AACA;AACA,KAAK;;AAEL,mEAAmE,KAAK;AACxE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE;AACA;AACA;AACA,wDAAwD,4CAAe,GAAG,kDAAqB;AAC/F;AACA;AACA;;AAEA,4BAA4B,6CAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA,uBAAuB,oGAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC,gBAAgB,6CAAgB,CAAC,+DAAW;AAC5C;AACA;AACA;AACA;AACA,oBAAoB,yCAAY;AAChC;AACA;AACA;AACA;AACA,OAAO,UAAU,KAAqC,EAAE,EAEjD;AACP;AACA,GAAG;AACH,iBAAiB,mDAAsB;AACvC,8CAA8C,qEAAY;AAC1D,qBAAqB,8CAAiB;AACtC;AACA,0BAA0B,kDAAoB;AAC9C,GAAG;AACH,kBAAkB,mEAAU;;AAE5B,uBAAuB,oFAAQ;AAC/B,eAAe,sDAAI;AACnB;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,2CAA2C,sDAAI;AAC/C,gBAAgB,yDAAU;AAC1B;;AAEA;AACA;AACA,gFAAgF;;AAEhF;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,wBAAwB,gDAAmB,CAAC,iFAAoB;AAChE;AACA,KAAK,eAAe,gDAAmB,qBAAqB,oFAAQ;AACpE,iBAAiB,sDAAI;AACrB;AACA,KAAK,gCAAgC,gDAAmB;AACxD;;AAEA,sBAAsB,gDAAmB,CAAC,iFAAoB;AAC9D;AACA,GAAG,eAAe,gDAAmB,YAAY,oFAAQ;AACzD;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,WAAW,E;;;;;;;;;;;;;;;;ACrM8C;AACgC;AAC3D;AACP;AACsB;AACP;AACO;AACvC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,WAAW;;AAEX,mDAAmD,KAAK;AACxD;AACA;AACA,GAAG;;AAEH;AACA,aAAa;;AAEb;AACA;AACA;AACA,gCAAgC,6CAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC,0BAA0B,6CAAgB,CAAC,+DAAW;AACtD;;AAEA;;AAEA,0CAA0C,yDAAU;AACpD,2BAA2B,gDAAmB,CAAC,yDAAU,EAAE,oFAAQ;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,8CAA8C,yDAAU;AACxD,6BAA6B,gDAAmB,CAAC,yDAAU,EAAE,oFAAQ;AACrE;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,sBAAsB,gDAAmB,QAAQ,oFAAQ;AACzD,eAAe,sDAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,eAAe,E;;;;;;;;;;;;;;;;;ACnFmC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,wCAAwC;AACxC;AACA,WAAW,OAAO,YAAY;AAC9B;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,aAAa;AACjC;AACA;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;;AAEA,qBAAqB,gBAAM;AAC3B,uBAAuB,gBAAM;AAC7B,gBAAgB,gBAAM;AACtB,iBAAiB,gBAAM;AACvB,iBAAiB,gBAAM;AACvB,eAAe,gBAAM;AACrB,gBAAgB,gBAAM;AACtB,gBAAgB,gBAAM;AACtB,yBAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA,EAAE,mBAAS;AACX;AACA;AACA;AACA;AACA,GAAG,MAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,sGAAsG;;AAEtG;AACA;;AAEA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;;AAExD,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,C;;AC5NiE;AACP;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,kBAAQ;AACnB;AACA;;AAEA,+BAA+B,qBAAW;AAC1C;AACA,GAAG;AACH;AACA;;AAEe;AACf;;AAEA;AACA;AACA;;AAEA,kBAAkB,oBAAoB,CAAC,qBAAW;AAClD;AACA,GAAG;AACH,sBAAsB,gBAAM;AAC5B,EAAE,mBAAS;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,C","file":"6e6f508a4d48336b02c09c52b4663db8917995a6-95e604546f0aa40f02c1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\n\nexport default function useDebouncedCallback(func, wait, options) {\n  var _this = this;\n\n  var lastCallTime = useRef(null);\n  var lastInvokeTime = useRef(0);\n  var timerId = useRef(null);\n  var lastArgs = useRef([]);\n  var lastThis = useRef();\n  var result = useRef();\n  var funcRef = useRef(func);\n  var mounted = useRef(true);\n  funcRef.current = func; // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n\n  var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n  var leading = !!options.leading;\n  var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n\n  var maxing = ('maxWait' in options);\n  var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []); // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n\n  var debounced = useMemo(function () {\n    var invokeFunc = function invokeFunc(time) {\n      var args = lastArgs.current;\n      var thisArg = lastThis.current;\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return result.current = funcRef.current.apply(thisArg, args);\n    };\n\n    var startTimer = function startTimer(pendingFunc, wait) {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n    };\n\n    var shouldInvoke = function shouldInvoke(time) {\n      if (!mounted.current) return false;\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current; // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n\n      return !lastCallTime.current || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    };\n\n    var trailingEdge = function trailingEdge(time) {\n      timerId.current = null; // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    var timerExpired = function timerExpired() {\n      var time = Date.now();\n\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      } // https://github.com/xnimorz/use-debounce/issues/97\n\n\n      if (!mounted.current) {\n        return;\n      } // Remaining wait calculation\n\n\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current;\n      var timeWaiting = wait - timeSinceLastCall;\n      var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting; // Restart the timer\n\n      startTimer(timerExpired, remainingWait);\n    };\n\n    var func = function func() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var time = Date.now();\n      var isInvoking = shouldInvoke(time);\n      lastArgs.current = args;\n      lastThis.current = _this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current; // Start the timer for the trailing edge.\n\n          startTimer(timerExpired, wait); // Invoke the leading edge.\n\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n\n      return result.current;\n    };\n\n    func.cancel = function () {\n      if (timerId.current) {\n        useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n      }\n\n      lastInvokeTime.current = 0;\n      lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n    };\n\n    func.isPending = function () {\n      return !!timerId.current;\n    };\n\n    func.flush = function () {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n  return debounced;\n}","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nfunction valueEquality(left, right) {\n  return left === right;\n}\n\nfunction adjustFunctionValueOfSetState(value) {\n  return typeof value === 'function' ? function () {\n    return value;\n  } : value;\n}\n\nfunction useStateIgnoreCallback(initialState) {\n  var _a = useState(adjustFunctionValueOfSetState(initialState)),\n      state = _a[0],\n      setState = _a[1];\n\n  var setStateIgnoreCallback = useCallback(function (value) {\n    return setState(adjustFunctionValueOfSetState(value));\n  }, []);\n  return [state, setStateIgnoreCallback];\n}\n\nexport default function useDebounce(value, delay, options) {\n  var eq = options && options.equalityFn || valueEquality;\n\n  var _a = useStateIgnoreCallback(value),\n      state = _a[0],\n      dispatch = _a[1];\n\n  var debounced = useDebouncedCallback(useCallback(function (value) {\n    return dispatch(value);\n  }, [dispatch]), delay, options);\n  var previousValue = useRef(value);\n  useEffect(function () {\n    // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n    if (!eq(previousValue.current, value)) {\n      debounced(value);\n      previousValue.current = value;\n    }\n  }, [value, debounced, eq]);\n  return [state, {\n    cancel: debounced.cancel,\n    isPending: debounced.isPending,\n    flush: debounced.flush\n  }];\n}"],"sourceRoot":""}