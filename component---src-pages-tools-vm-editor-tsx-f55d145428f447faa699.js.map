{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FastForward.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/VMrunner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/useRoleManager.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/vm/VMRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/vm/VMFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","VMStatus","VMJumpException","label","VMTimerException","ms","VMCommandEvaluator","parent","env","gc","_regSaved","_changeSaved","_started","trace","context","command","evalExpression","e","expr","VMExprEvaluator","lookup","eval","checkExpression","start","callee","inst","args","arguments","evaluate","neededStart","Running","values","a","sendCommandAsync","Completed","hasEvent","regValue","unparse","reg","writeRegisterAsync","writeLocal","watch","sourceId","Stopped","VMError","VMCommandRunner","handlerId","_status","_eval","handler","val","stepAsync","status","s","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","_breakRequested","_singleStep","commands","c","cmd","reset","commandIndex","cancel","unsubscribe","requestBreak","resume","wake","runToCompletionAsync","singleStepCheckBreakAsync","next","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","VM_COMMAND_ATTEMPTED","vmt","Sleeping","sleepAsync","message","VM_COMMAND_COMPLETED","Ready","JDEventSource","isEveryHandler","h","VMProgramRunner","roleManager","program","_handlers","_running","_in_run","_watch","_roles","_handlerAtBreak","_waitQueue","_breaks","_sleepQueue","compiled","compileProgram","checkProgram","registers","events","errors","roles","warn","_env","VMEnvironment","handlers","_waitMutex","Mutex","_breaksMutex","_sleepMutex","mount","CHANGE","runWithTry","VM_WAKE_SLEEPER","acquire","findIndex","p","splice","clearTimeout","runHandler","result","debug","initializeRoleManagement","TRACE","oldValue","VM_WATCH_CHANGE","lookupWatch","setBreakpointsAsync","breaks","b","clearBreakpointsAsync","ret","setTimeout","statusAsync","len","startAsync","setRoles","slice","run","ERROR","resumeAsync","step","brkCommand","VM_BREAKPOINT","currentHandler","refreshRegistersAsync","waitCopy","nextTime","consumeEvent","addRoleService","role","service","getService","serviceChanged","find","rv","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoStart","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","newTestRunner","unmount","handleTrace","Flags","useRoleManager","RoleManager","VMDiagnostics","xml","stringify","RoleChip","serviceShortId","workspace","server","useServiceServer","handleRoleClick","specification","serviceSpecificationFromName","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","twinBlock","getTopBlocks","TWIN_BLOCK","inputList","fieldRow","getVariable","newBlock","variable","field","setValue","getId","getMetrics","moveBy","viewWidth","viewHeight","initSvg","centerOnBlock","handleDelete","removeServiceProvider","device","VMRoles","useChange","_","useWorkspaceBreakpoints","breakpoints","arrayConcatMany","setBreakpoint","highlightBlock","VMRunnerButtons","useChangeAsync","t","disabled","paused","setPaused","handleRun","handleCancel","handlePause","handleResume","handleStep","then","VMStartSimulatorButton","toggleShowDeviceHostsDialog","VMLoadButton","handleFiles","files","file","text","jsfile","Error","dom","Xml","clear","VMSaveButton","json","VMFileButtons","VMToolbar","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","workspaceRef","useLocalStorage","setXml","setSource","setProgram","handleXml","handleJSON","handleI4Program","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6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","file":"component---src-pages-tools-vm-editor-tsx-f55d145428f447faa699.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z\"\n}), 'FastForward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./VMir\"\nimport { RoleManager, ROLE_BOUND, ROLE_UNBOUND } from \"./rolemanager\"\nimport { VMEnvironment } from \"./VMenvironment\"\nimport { VMExprEvaluator, unparse } from \"./VMexpr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./VMir\"\nimport {\n    VM_COMMAND_ATTEMPTED,\n    VM_COMMAND_COMPLETED,\n    VM_WATCH_CHANGE,\n    VMError,\n    VM_BREAKPOINT,\n    VM_WAKE_SLEEPER,\n    Mutex\n} from \"./VMutils\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nexport enum VMStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException {\n    constructor(public label: string) {}\n}\n\nclass VMTimerException {\n    constructor(public ms: number) {}\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                return VMStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMStatus.Completed\n                }\n                return VMStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMStatus.Completed\n            }\n            case \"halt\": {\n                return VMStatus.Stopped\n            }\n            case \"nop\": {\n                return VMStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            default:\n                throw new VMError(`Unknown instruction ${this.inst}`)\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMStatus = VMStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n    private _breakRequested = false\n    private _singleStep = false\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    requestBreak() {\n        this._breakRequested = true\n    }\n\n    resume() {\n        this._singleStep = false\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMStatus.Completed\n        }\n    }\n\n    // run-to-completion semantics (true if breakpoint)\n    async runToCompletionAsync() {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync()) || this._singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if ((await this.singleStepCheckBreakAsync()) || this._singleStep)\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(\"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync() {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (await this.parent.breakpointOnAsync(sid) || this._breakRequested) {\n            this._singleStep = true\n            this._breakRequested = false\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.emit(VM_COMMAND_ATTEMPTED, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                let vmt = e as VMTimerException\n                this._currentCommand.status = VMStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                if (e instanceof VMError) throw e\n                else throw new VMError(e.message)\n            }\n        }\n        if (this._currentCommand.status === VMStatus.Completed)\n            this.emit(VM_COMMAND_COMPLETED, this._currentCommand.gc.sourceId)\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    handler: VMHandlerRunner\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandlerRunner) {\n    if (h.handler.commands.length) {\n        const cmd = (h.handler.commands[0] as VMCommand).command.callee  as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport class VMProgramRunner extends JDClient {\n    private _handlers: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _running = false\n    private _in_run = false\n    private _watch: SMap<any> = {}\n    private _roles: VMRole[] = []\n    private _handlerAtBreak: VMHandlerRunner = undefined\n    // stated accessed concurrently\n    private _waitQueue: VMHandlerRunner[] = []\n    private _waitMutex: Mutex\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors.length) {\n            console.warn(\"ERRORS\", errors)\n        }\n        // data structures for running program\n        this._env = new VMEnvironment(registers, events)\n        this._handlers = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        this._waitMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex= new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.runWithTry()\n            })\n        )\n        this.mount(\n            this.subscribe(VM_WAKE_SLEEPER, async (h: VMHandlerRunner) => {\n                try {\n                    await this._sleepMutex.acquire(async () => {\n                        const index = this._sleepQueue.findIndex(p => p.handler === h)\n                        if (index >= 0) {\n                            const { id } = this._sleepQueue[index]\n                            this._sleepQueue.splice(index)\n                            clearTimeout(id)\n                        }\n                    })\n                    h.wake()\n                    const result = await this.runHandler(h)\n                    if (result && !isEveryHandler(h)) {\n                        await this._waitMutex.acquire(async () => {\n                            this._waitQueue.push(h)\n                        })\n                    }\n                } catch (e) {\n                    console.debug(e)\n                }\n            })\n        )\n        this.initializeRoleManagement();\n    }\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    // watch statement - watch an expression\n    watch(sourceId: string, value: WatchValueType) {\n        const oldValue = this._watch[sourceId]\n        if (oldValue !== value) {\n            this._watch[sourceId] = value\n            this.emit(VM_WATCH_CHANGE, sourceId)\n        }\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    // breakpoints\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n    \n    // timers\n    async sleepAsync(handler: VMHandlerRunner, ms: number) {  \n        await this._sleepMutex.acquire(async () => {\n            let id = setTimeout(() => { \n                this.emit(VM_WAKE_SLEEPER, handler)\n            }, ms)\n            this._sleepQueue.push({handler, id})\n        })\n    }\n\n    // control of VM\n    async statusAsync() {\n        let len = 0\n        await this._waitMutex.acquire(async () => {\n            len = this._waitQueue.length\n        });\n        const ret =\n            this._running === false\n                ? VMStatus.Stopped\n                : len > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    async startAsync() {\n        if (this._running) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            this._running = true\n            this._in_run = false\n            await this._waitMutex.acquire(async () => {\n                this._waitQueue = this._handlers.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n            });\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    cancel() {\n        if (!this._running) return // nothing to cancel\n        this._running = false\n        this.emit(CHANGE)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (!this._running) return\n        this.trace(\"resume\")\n        this._handlerAtBreak = undefined\n        await this._waitMutex.acquire(async () => {\n            this._waitQueue.forEach(h => h.resume())\n        })\n        this.runWithTry()\n    }\n\n    step() {\n        if (!this._running || !this._handlerAtBreak) return\n        this.trace(\"step\")\n        this.runWithTry()\n    }\n\n    private runWithTry() {\n        try {\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    private async runHandler(h: VMHandlerRunner) {\n        if (!this._running) return false\n        if (!this._handlerAtBreak || this._handlerAtBreak === h) {\n            const brkCommand = await h.runToCompletionAsync()\n            if (brkCommand) {\n                this._handlerAtBreak = h\n                this.emit(VM_BREAKPOINT, h, brkCommand.gc?.sourceId)\n            }\n            if (h.status !== VMStatus.Stopped) {\n                if (h.status === VMStatus.Completed) {\n                    h.reset()\n                    if (isEveryHandler(h)) {\n                        this.sleepAsync(h, 1)\n                    }\n                }\n                return h.status !== VMStatus.Sleeping\n            } else return false\n        } else {\n            // skip execution of handler h\n            return true\n        }\n    }\n\n    private async run() {\n        if (!this._running) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        let currentHandler: VMHandlerRunner = undefined\n        try {\n            await this._env.refreshRegistersAsync()\n            let waitCopy: VMHandlerRunner[] = []\n            await this._waitMutex.acquire(async () => {\n                waitCopy = this._waitQueue.slice()\n                this._waitQueue = []\n            })\n            if (waitCopy.length > 0) {\n                const nextTime: VMHandlerRunner[] = []\n                for (const h of waitCopy) {\n                    currentHandler = h\n                    const result = await this.runHandler(h)\n                    if (result) nextTime.push(h)\n                    currentHandler = undefined\n                }\n                await this._waitMutex.acquire(async () => {\n                    nextTime.forEach(h => this._waitQueue.push(h))\n                })\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            if (currentHandler) {\n                // program error in handler?\n            }\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/VMrunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoStart: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoStart)\n\n    const run = () => {\n        _setAutoStart(!!autoStart)\n        runner.startAsync()\n    }\n    const cancel = () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { useContext, useMemo } from \"react\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const roleManager = useMemo(() => new RoleManager(bus), [])\n    return roleManager\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: {\n    program: VMProgram\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">VM</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.vm\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable, WorkspaceSvg } from \"blockly\"\nimport { TWIN_BLOCK } from \"./toolbox\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    workspace: WorkspaceSvg\n}) {\n    const { role, service, serviceShortId, workspace } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function VMRoles(props: {\n    roleManager: RoleManager\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, workspace } = props\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                        workspace={workspace}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useEffect, useMemo, useState } from \"react\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/VMrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_BREAKPOINT } from \"../../../jacdac-ts/src/vm/VMutils\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport { WorkspaceSvg } from \"blockly\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport FastForwardIcon from \"@material-ui/icons/FastForward\"\nfunction useWorkspaceBreakpoints(program: VMProgram, workspace: WorkspaceSvg) {\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers?.map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpoint = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpoint,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => void\n    cancel: () => void\n    workspace: WorkspaceSvg\n}) {\n    const { runner, run, cancel, workspace } = props\n    const status = useChangeAsync(runner, async t => await t?.statusAsync())\n    const disabled = !runner\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [paused, setPaused] = useState(false)\n    const { breakpoints, setBreakpoint } = useWorkspaceBreakpoints(\n        program,\n        workspace\n    )\n\n    console.log(\"runner status\", status)\n\n    const handleRun = () => {\n        setPaused(false)\n        run()\n    }\n    const handleCancel = () => {\n        setPaused(false)\n        cancel()\n    }\n    const handlePause = () => setPaused(!paused)\n    const handleResume = async () => {\n        setPaused(false)\n        await runner.clearBreakpointsAsync()\n        runner.resumeAsync()\n    }\n    const handleStep = () => runner?.step()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_BREAKPOINT,\n                (_: VMHandler, sourceId?: string) => setBreakpoint(sourceId)\n            ),\n        [runner]\n    )\n    // register breakpoints\n    useEffect(() => {\n        if (paused) {\n            runner?.setBreakpointsAsync(breakpoints).then(() => {\n                runner?.resumeAsync()\n            })\n            return () => {\n                runner?.clearBreakpointsAsync().then(() => {\n                    setBreakpoint(null)\n                })\n            }\n        }\n    }, [runner, paused])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    onClick={stopped ? handleRun : handleCancel}\n                >\n                    {stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : \"pause\"}\n                    disabled={disabled}\n                    onClick={paused ? handleResume : handlePause}\n                >\n                    {paused ? <FastForwardIcon /> : <PauseIcon />}\n                </IconButtonWithTooltip>\n            </Grid>\n            {paused && (\n                <Grid item>\n                    <IconButtonWithTooltip\n                        title={\"step\"}\n                        disabled={disabled}\n                        onClick={handleStep}\n                    >\n                        <PlayForWorkIcon />\n                    </IconButtonWithTooltip>\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { WorkspaceSvg, Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/vmfile\"\n\nfunction VMLoadButton(props: { workspace: WorkspaceSvg }) {\n    const { workspace } = props\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction VMSaveButton(props: { xml: string; program: VMProgram }) {\n    const { xml, program } = props\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: VMFile = {\n        xml,\n        program,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function VMFileButtons(props: {\n    xml: string\n    program: VMProgram\n    workspace: WorkspaceSvg\n}) {\n    const { xml, program, workspace } = props\n    return (\n        <>\n            <Grid item>\n                <VMSaveButton xml={xml} program={program} />\n            </Grid>\n            <Grid item>\n                <VMLoadButton workspace={workspace} />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/VMrunner\"\nimport VMRoles from \"./VMRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport { WorkspaceSvg } from \"blockly\"\nimport VMFileButtons from \"./VMFileButtons\"\n\nexport default function VMToolbar(props: {\n    roleManager: RoleManager\n    runner: VMProgramRunner\n    run: () => void\n    cancel: () => void\n    xml: string\n    program: VMProgram\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, runner, run, cancel, xml, program, workspace } = props\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <VMFileButtons xml={xml} program={program} workspace={workspace} />\n            <VMRunnerButtons runner={runner} run={run} cancel={cancel} workspace={workspace} />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <VMRoles roleManager={roleManager} workspace={workspace} />\n        </Grid>\n    )\n}\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useRef, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport useVMRunner from \"./useVMRunner\"\nimport useRoleManager from \"./useRoleManager\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { WorkspaceSvg } from \"blockly\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: { storageKey?: string }) {\n    const { storageKey } = props\n    const workspaceRef = useRef<WorkspaceSvg>()\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const roleManager = useRoleManager()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    const handleXml = (xml: string) => setXml(xml)\n    const handleJSON = (json: WorkspaceJSON) => setSource(json)\n    const handleI4Program = (json: VMProgram) => {\n        if (json) roleManager.setRoles(json.roles)\n        setProgram(json)\n    }\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <VMToolbar\n                    roleManager={roleManager}\n                    runner={runner}\n                    run={run}\n                    cancel={cancel}\n                    xml={xml}\n                    program={program}\n                    workspace={workspaceRef.current}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <NoSsr>\n                    <VMBlockEditor\n                        initialXml={xml}\n                        onXmlChange={handleXml}\n                        onJSONChange={handleJSON}\n                        onVMProgramChange={handleI4Program}\n                        runner={runner}\n                        roleManager={roleManager}\n                        workspaceRef={workspaceRef}\n                    />\n                </NoSsr>\n            </Grid>\n            {Flags.diagnostics && (\n                <VMDiagnostics program={program} source={source} xml={xml} />\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}