{"version":3,"sources":["webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/hooks/useServiceProviderFromServiceClass.ts","webpack://jacdac-docs/./src/components/ServiceSpecification.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts"],"names":["EnumSpecification","props","serviceClass","spec","serviceSpecificationFromClassIdentifier","enums","Object","values","filter","en","derived","length","map","e","name","isFlags","keys","members","toString","useServiceProviderFromServiceClass","useContext","JacdacContext","bus","useEffect","devices","def","serviceProviderDefinitionFromServiceClass","provider","addServiceProvider","removeServiceProvider","DashboardServiceDevices","useChange","b","device","id","ServiceSpecification","node","service","showSource","showDevices","showDerived","shortId","classIdentifier","packets","pkt","registers","isRegister","events","isEvent","commands","isCommand","reports","r","secondary","pipeReports","isPipeReport","others","indexOf","reportOf","find","rep","isReportOf","pipeReportOf","isPipeReportOf","notes","short","extends","extend","i","serviceSpecificationFromName","long","note","group","sort","l","useServiceRole","useState","role","setRole","subscribe","ROLE_CHANGE","ServiceRole","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","_","DashboardServiceWidgetItem","useRegisterUnpackedValue","register","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","expanded","visible","specification","useMemo","ids","identifier","slice","reg","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CTRL","SRV_LOGGER","SRV_SETTINGS","SRV_PROTO_TEST","DashboardDevice","toggleExpanded","variant","showAvatar","showHeader","useDeviceName","services","useDeviceSpecification","theme","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","serviceGridRef","useRef","intersection","ServiceWidgets","useCallback","srv","isMixin","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","DashboardDeviceItem","other","drawerType","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","reduce","c","v","DrawerType","xs","sm","md","lg","xl","mgr","setMgr","ROLE_MANAGER_CHANGE"],"mappings":"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","file":"4a1ae24c5787588155db61b49605b5d07aa26ddb-8cd5d0bb350e69e7dcef.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n            <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n        </Fragment>)}\n    </Fragment>\n}\n","import { useContext, useEffect } from \"react\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useServiceProviderFromServiceClass(\n    serviceClass: number\n): void {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass })\n        const def =\n            !devices.length && serviceProviderDefinitionFromServiceClass(serviceClass)\n        const provider = def && addServiceProvider(bus, def)\n        return () => bus.removeServiceProvider(provider)\n    }, [serviceClass])\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\"\nimport Markdown from \"./ui/Markdown\"\nimport EnumSpecification from \"./EnumSpecification\"\nimport { Box, Grid } from \"@material-ui/core\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"./hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport useChange from \"../jacdac/useChange\"\nimport DashbardDeviceItem from \"./dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showSource?: boolean\n    showDevices?: boolean\n    showDerived?: boolean\n}) {\n    const { service: node, showSource, showDevices, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <Fragment key={`servicespec${shortId}`}>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map((pkt, i) => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.name}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </Fragment>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React, { useCallback, useRef } from \"react\"\nimport {\n    SRV_CTRL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER, SRV_SETTINGS, SRV_PROTO_TEST]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n"],"sourceRoot":""}