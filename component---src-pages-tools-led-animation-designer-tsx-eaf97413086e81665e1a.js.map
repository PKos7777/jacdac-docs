{"version":3,"sources":["webpack:///./src/components/tools/LedAnimationDesigner.tsx","webpack:///./src/pages/tools/led-animation-designer.tsx","webpack:///./node_modules/@material-ui/icons/Add.js","webpack:///./src/components/ui/Snippet.tsx","webpack:///./node_modules/@material-ui/core/esm/TextField/TextField.js"],"names":["LedAnimationFrameDesigner","lazy","LedAnimationDesigner","useState","repetitions","setRepetitions","frames","setFrames","animation","useLedAnimationStyle","cssProperty","className","helmetStyle","theme","useTheme","handleFrame","i","frame","newFrames","slice","handleRemove","splice","handleClone","newFrame","clone","handleAdd","length","handleRepetitionChange","event","v","parseInt","target","value","isNaN","palette","background","default","map","undefined","JSON","stringify","Page","Snippet","props","mode","download","url","caption"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;CAEA;;CAEA;;AAKA;AAEA;AACA,IAAMA,yBAAyB,gBAAGC,qBAAI,CAAC;AAAA,SAAM,8HAAN;AAAA,CAAD,CAAtC;AAEe,SAASC,oBAAT,GAAgC;AAAA,kBACLC,yBAAQ,CAAC,CAAD,CADH;AAAA,MACpCC,WADoC;AAAA,MACvBC,cADuB;;AAAA,mBAEfF,yBAAQ,CAAsB,CACtD,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,GAAZ,CADsD,EAEtD,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAFsD,CAAtB,CAFO;AAAA,MAEpCG,MAFoC;AAAA,MAE5BC,SAF4B;;AAM3C,MAAMC,SAA2B,GAAG,CAACJ,WAAD,EAAcE,MAAd,CAApC;;AAN2C,8BAORG,+CAAoB,CAACD,SAAD,EAAY;AAC/DE,eAAW,EAAE;AADkD,GAAZ,CAPZ;AAAA,MAOnCC,SAPmC,yBAOnCA,SAPmC;AAAA,MAOxBC,WAPwB,yBAOxBA,WAPwB;;AAU3C,MAAMC,KAAK,GAAGC,mCAAQ,EAAtB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD;AAAA,WAAe,UAACC,KAAD,EAA8B;AAC7D,UAAMC,SAAS,GAAGZ,MAAM,CAACa,KAAP,CAAa,CAAb,CAAlB;AACAD,eAAS,CAACF,CAAD,CAAT,GAAeC,KAAf;AACAV,eAAS,CAACW,SAAD,CAAT;AACH,KAJmB;AAAA,GAApB;;AAKA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACJ,CAAD;AAAA,WAAe,YAAM;AACtC,UAAME,SAAS,GAAGZ,MAAM,CAACa,KAAP,CAAa,CAAb,CAAlB;AACAD,eAAS,CAACG,MAAV,CAAiBL,CAAjB,EAAoB,CAApB;AACAT,eAAS,CAACW,SAAD,CAAT;AACH,KAJoB;AAAA,GAArB;;AAKA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACN,CAAD;AAAA,WAAe,YAAM;AACrC,UAAMC,KAAK,GAAGX,MAAM,CAACU,CAAD,CAApB;AACA,UAAMO,QAAQ,GAAGC,8BAAK,CAACP,KAAD,CAAtB;AACA,UAAMC,SAAS,0DAAOZ,MAAM,CAACa,KAAP,CAAa,CAAb,EAAgBH,CAAhB,CAAP,IAA2BO,QAA3B,gDAAwCjB,MAAM,CAACa,KAAP,CAAaH,CAAb,CAAxC,EAAf;AACAT,eAAS,CAACW,SAAD,CAAT;AACH,KALmB;AAAA,GAApB;;AAMA,MAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA,WACdlB,SAAS,wDACFD,MADE,IAELA,MAAM,CAACA,MAAM,CAACoB,MAAP,GAAgB,CAAjB,CAAN,CAA0BP,KAA1B,CAAgC,CAAhC,CAFK,GADK;AAAA,GAAlB;;AAKA,MAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC3BC,KAD2B,EAE1B;AACD,QAAMC,CAAC,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAlB;AACA,QAAI,CAACC,KAAK,CAACJ,CAAD,CAAV,EAAexB,cAAc,CAACwB,CAAD,CAAd;AAClB,GALD;;AAMA,sBACI,8BAAC,uBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,kBACI,8BAAC,uBAAD;AAAM,QAAI;AAAV,KACKjB,WAAW,iBACR,8BAAC,yBAAD,qBACI,6CAAQA,WAAR,CADJ,CAFR,eAMI,8BAAC,uBAAD,qBACI,8BAAC,6BAAD;AAAY,SAAK,EAAC;AAAlB,IADJ,eAEI,8BAAC,8BAAD,qBACI,8BAAC,4BAAD;AAAW,QAAI,EAAE,MAAjB;AAAyB,SAAK,EAAE,EAAhC;AAAoC,UAAM,EAAE;AAA5C,kBACI;AACI,MAAE,EAAE,EADR;AAEI,MAAE,EAAE,EAFR;AAGI,KAAC,EAAE,EAHP;AAII,aAAS,EAAED,SAJf;AAKI,UAAM,EAAEE,KAAK,CAACqB,OAAN,CAAcC,UAAd,CAAyBC,OALrC;AAMI,eAAW,EAAE;AANjB,IADJ,CADJ,CAFJ,CANJ,CADJ,eAuBI,8BAAC,uBAAD;AAAM,QAAI;AAAV,kBACI,8BAAC,uBAAD,qBACI,8BAAC,6BAAD;AAAY,SAAK,EAAC;AAAlB,IADJ,eAEI,8BAAC,8BAAD,qBACI,8BAAC,4BAAD;AACI,kBAAW,uBADf;AAEI,SAAK,EAAEhC,WAFX;AAGI,QAAI,EAAC,QAHT;AAII,YAAQ,EAAEuB;AAJd,IADJ,CAFJ,CADJ,CAvBJ,EAoCKrB,MAAM,CAAC+B,GAAP,CAAW,UAACpB,KAAD,EAAQD,CAAR;AAAA,wBACR,8BAAC,uBAAD;AAAM,UAAI,MAAV;AAAW,QAAE,EAAE,EAAf;AAAmB,QAAE,EAAE,CAAvB;AAA0B,QAAE,EAAE,CAA9B;AAAiC,SAAG,EAAEA;AAAtC,oBACI,8BAAC,2BAAD,qBACI,8BAAC,yBAAD;AACI,SAAG,EAAEA,CADT;AAEI,WAAK,EAAEC,KAFX;AAGI,cAAQ,EAAEF,WAAW,CAACC,CAAD,CAHzB;AAII,aAAO,EAAEM,WAAW,CAACN,CAAD,CAJxB;AAKI,cAAQ,EACJV,MAAM,CAACoB,MAAP,GAAgB,CAAhB,GAAoBN,YAAY,CAACJ,CAAD,CAAhC,GAAsCsB;AAN9C,MADJ,CADJ,CADQ;AAAA,GAAX,CApCL,eAmDI,8BAAC,uBAAD;AAAM,QAAI;AAAV,kBACI,8BAAC,uBAAD,qBACI,8BAAC,8BAAD,qBACI,8BAAC,wCAAD;AACI,SAAK,EAAC,qBADV;AAEI,WAAO,EAAEb;AAFb,kBAII,8BAAC,aAAD,OAJJ,CADJ,CADJ,CADJ,CAnDJ,eA+DI,8BAAC,uBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,8BAAC,uBAAD,qBACI,8BAAC,6BAAD;AAAY,SAAK,EAAC;AAAlB,IADJ,eAEI,8BAAC,8BAAD,qBACI,8BAAC,0BAAD;AACI,SAAK,EAAE;AAAA,aAAMc,IAAI,CAACC,SAAL,CAAehC,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAAN;AAAA,KADX;AAEI,QAAI,EAAE;AAFV,IADJ,CAFJ,CADJ,CA/DJ,CADJ;AA6EH,C;;AC7ID;AACA;AAEe,SAASiC,IAAT,GAAgB;AAC3B,sBAAO,2EACH,mEADG,eAEH,8BAAC,oBAAD,OAFG,CAAP;AAIH,C;;;;;;;;ACRY;;AAEb,6BAA6B,mBAAO,CAAC,MAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,MAA+C;;AAErF;AACA;AACA,CAAC;AACD;;AAEA,oCAAoC,mBAAO,CAAC,MAAO;;AAEnD,4CAA4C,mBAAO,CAAC,MAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,2B;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEe,SAASC,OAAT,CAAiBC,KAAjB,EAMZ;AAAA,MACSX,KADT,GACiDW,KADjD,CACSX,KADT;AAAA,MACgBY,IADhB,GACiDD,KADjD,CACgBC,IADhB;AAAA,MACsBC,QADtB,GACiDF,KADjD,CACsBE,QADtB;AAAA,MACgCC,GADhC,GACiDH,KADjD,CACgCG,GADhC;AAAA,MACqCC,OADrC,GACiDJ,KADjD,CACqCI,OADrC;AAEC,MAAMlB,CAAS,GAAG,OAAOG,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAA1D;AACA,MAAMrB,SAAS,GAAGiC,IAAI,mBAAgBA,IAAI,KAAK,KAAT,GAAiB,IAAjB,GAAwBA,IAAxC,CAAtB;AACA,sBAAO,qIACH,2DAAC,0DAAD;AAAW,aAAS,EAAEjC,SAAtB;AAAiC,gBAAY,EAAEkC,QAA/C;AAAyD,gBAAY,EAAEA,QAAQ,IAAIhB,CAAnF;AAAsF,OAAG,EAAEiB;AAA3F,KAAiGjB,CAAjG,CADG,EAEFkB,OAAO,iBAAI,2DAAC,iEAAD;AAAY,WAAO,EAAC;AAApB,KAA+BA,OAA/B,CAFT,CAAP;AAIH,C;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgC;AAC3D;AACP;AACqB;AAChB;AACY;AACI;AACN;AACE;AACM;AAChB;AACe;AAC9C;AACA,YAAY,sDAAK;AACjB,UAAU,4DAAW;AACrB,YAAY,8DAAa;AACzB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,gDAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0GAAwB;;AAEtC,MAAM,KAAqC,EAAE,EAI1C;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,mDAAmB,CAAC,8CAAc;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,mDAAmB,iBAAiB,0FAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,mDAAmB,CAAC,4DAAW,EAAE,0FAAQ;AAC/D,eAAe,4DAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,gCAAgC,mDAAmB,CAAC,2DAAU,EAAE,0FAAQ;AAC3E;AACA;AACA,GAAG,kDAAkD,mDAAmB,CAAC,wDAAM,EAAE,0FAAQ;AACzF;AACA;AACA;AACA;AACA;AACA,GAAG,qEAAqE,mDAAmB,CAAC,+DAAc,EAAE,0FAAQ;AACpH;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,SAAM;AAC/B,oIAAU;AACzB;AACA,CAAC,YAAY,E","file":"component---src-pages-tools-led-animation-designer-tsx-eaf97413086e81665e1a.js","sourcesContent":["import React, { lazy, useState } from \"react\"\nimport useLedAnimationStyle from \"../hooks/useLedAnimationStyle\"\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    TextField,\n    useTheme,\n} from \"@material-ui/core\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport Helmet from \"react-helmet\"\nimport Snippet from \"../ui/Snippet\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport {\n    LedAnimationData,\n    LedAnimationFrame,\n} from \"../../../jacdac-ts/src/hosts/ledservicehost\"\nimport { clone } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport Suspense from \"../ui/Suspense\"\nconst LedAnimationFrameDesigner = lazy(() => import(\"./LedAnimationFrameDesigner\"))\n\nexport default function LedAnimationDesigner() {\n    const [repetitions, setRepetitions] = useState(0)\n    const [frames, setFrames] = useState<LedAnimationFrame[]>([\n        [0, 255, 0, 128],\n        [0, 255, 100, 128],\n    ])\n    const animation: LedAnimationData = [repetitions, frames]\n    const { className, helmetStyle } = useLedAnimationStyle(animation, {\n        cssProperty: \"fill\",\n    })\n    const theme = useTheme()\n    const handleFrame = (i: number) => (frame: LedAnimationFrame) => {\n        const newFrames = frames.slice(0)\n        newFrames[i] = frame\n        setFrames(newFrames)\n    }\n    const handleRemove = (i: number) => () => {\n        const newFrames = frames.slice(0)\n        newFrames.splice(i, 1)\n        setFrames(newFrames)\n    }\n    const handleClone = (i: number) => () => {\n        const frame = frames[i]\n        const newFrame = clone(frame)\n        const newFrames = [...frames.slice(0, i), newFrame, ...frames.slice(i)]\n        setFrames(newFrames)\n    }\n    const handleAdd = () =>\n        setFrames([\n            ...frames,\n            frames[frames.length - 1].slice(0) as LedAnimationFrame,\n        ])\n    const handleRepetitionChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setRepetitions(v)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                {helmetStyle && (\n                    <Helmet>\n                        <style>{helmetStyle}</style>\n                    </Helmet>\n                )}\n                <Card>\n                    <CardHeader title=\"preview\" />\n                    <CardContent>\n                        <SvgWidget size={\"14vh\"} width={64} height={64}>\n                            <circle\n                                cx={32}\n                                cy={32}\n                                r={30}\n                                className={className}\n                                stroke={theme.palette.background.default}\n                                strokeWidth={1}\n                            />\n                        </SvgWidget>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item>\n                <Card>\n                    <CardHeader title=\"repetition\" />\n                    <CardContent>\n                        <TextField\n                            aria-label=\"number of repetitions\"\n                            value={repetitions}\n                            type=\"number\"\n                            onChange={handleRepetitionChange}\n                        />\n                    </CardContent>\n                </Card>\n            </Grid>\n            {frames.map((frame, i) => (\n                <Grid item xs={12} sm={6} lg={4} key={i}>\n                    <Suspense>\n                        <LedAnimationFrameDesigner\n                            key={i}\n                            frame={frame}\n                            setFrame={handleFrame(i)}\n                            onClone={handleClone(i)}\n                            onRemove={\n                                frames.length > 1 ? handleRemove(i) : undefined\n                            }\n                        />\n                    </Suspense>\n                </Grid>\n            ))}\n            <Grid item>\n                <Card>\n                    <CardContent>\n                        <IconButtonWithTooltip\n                            title=\"add animation frame\"\n                            onClick={handleAdd}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader title=\"code\" />\n                    <CardContent>\n                        <Snippet\n                            value={() => JSON.stringify(animation, null, 2)}\n                            mode={\"json\"}\n                        />\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport LedAnimationDesigner from \"../../components/tools/LedAnimationDesigner\"\n\nexport default function Page() {\n    return <>\n        <h1>LED Animation Designer</h1>\n        <LedAnimationDesigner />\n    </>\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { IconButton, Typography } from \"@material-ui/core\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React, { useContext } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string),\n    mode?: string,\n    download?: string;\n    url?: string;\n    caption?: string | JSX.Element | JSX.Element[];\n}) {\n    const { value, mode, download, url, caption } = props\n    const v: string = typeof value === 'function' ? value() : value;\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return <>\n        <CodeBlock className={className} downloadName={download} downloadText={download && v} url={url}>{v}</CodeBlock>\n        {caption && <Typography variant=\"caption\">{caption}</Typography>}\n    </>\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"sourceRoot":""}