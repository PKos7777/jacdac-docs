{"version":3,"file":"274-37a8f1390f95b5e14af9.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"./services\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"./iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        title=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\"\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from \"@material-ui/core\"\nimport CodeBlock from \"../CodeBlock\"\nimport TabPanel from \"../ui/TabPanel\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\"\nimport MakeCodeSimulator from \"./MakeCodeSimulator\"\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string\n    width: number\n    height: number\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props\n    const { source, rendered } = JSON.parse(renderedSource) as {\n        source: string\n        rendered: Rendered\n    }\n    const { height, width, url } = rendered || {}\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext)\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        if (newValue < tabs.length - 1) setEditor(tabs[newValue])\n        setTab(newValue)\n    }\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source])\n    const { code } = snippet\n\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Select MakeCode editor\"\n            >\n                <Tab label={\"Blocks\"} />\n                <Tab label={\"JavaScript\"} />\n                <Tab label={\"Simulator\"} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <CodeBlock className=\"typescript\">{code}</CodeBlock>\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <MakeCodeSimulator snippet={snippet} />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./trace/TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        actions,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {actions && <div style={{ float: \"right\" }}>{actions}</div>}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}"],"names":["useEffect","useWindowEvent","type","listener","passive","deps","window","undefined","addEventListener","removeEventListener","concat","useMemo","useContext","unique","makeCodeServices","MakeCodeSnippetContext","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","useMakeCodeRenderer","target","rendererUrl","lang","iframeId","pendingRequests","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","createStyles","makeStyles","React","useRef","PACKET_PROCESS","PACKET_SEND","JacdacContext","PaperBox","useStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","bus","frameRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","pkt","packetSent","channel","broadcast","toBuffer","sender","current","useState","Tab","Tabs","CodeBlock","TabPanel","withPrefix","MakeCodeSnippet","renderedSource","rendered","JSON","parse","tabs","editor","setEditor","tab","setTab","handleTabChange","event","newValue","lazy","Highlight","defaultProps","LIGHT_THEME","DARK_THEME","DarkModeContext","IconButton","Link","GetAppIcon","LaunchIcon","Tooltip","Suspense","TraceSnippet","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","actions","darkMode","language","theme","valueUri","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","Box","Paper","useTheme","padding","elevation","bgcolor","others","spacing"],"sourceRoot":""}