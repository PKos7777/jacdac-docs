{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/ExpandMore.js","webpack:///./src/components/hooks/useServices.ts","webpack:///./jacdac-ts/src/jdom/rolemanagerclient.ts","webpack:///./jacdac-ts/src/jdom/serviceclient.ts","webpack:///./src/components/services/useServiceRole.ts","webpack:///./src/components/services/ServiceRole.tsx","webpack:///./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack:///./src/components/dashboard/DashboardServiceDetails.tsx","webpack:///./src/components/dashboard/DashboardDevice.tsx","webpack:///./node_modules/@material-ui/icons/ExpandLess.js","webpack:///./src/components/dashboard/DashboardButton.tsx","webpack:///./src/components/dashboard/DashboardServo.tsx","webpack:///./src/components/dashboard/DashboardRotaryEncoder.tsx","webpack:///./src/components/dashboard/DashboardSwitch.tsx","webpack:///./src/components/dashboard/DashboardServiceWidget.tsx","webpack:///./src/components/useServiceClient.ts"],"names":["useServices","options","useContext","JacdacContext","bus","services","useChange","b","JSON","stringify","SCAN_DEBOUNCE","RequestedRole","parent","name","serviceClass","candidates","computeCandidates","service","device","indexOf","bound","undefined","select","setRole","toString","info","map","c","join","parts","split","length","slice","RoleManagerClient","scanning","requestedRoles","console","log","dscan","debounceAsync","scan","bind","mount","subscribe","DEVICE_CHANGE","recomputeCandidates","changeEvent","event","RoleManagerEvent","Change","EVENT","connected","addRequested","devs","role","r","find","d","push","inp","InPipeReader","sendPacketAsync","openCommand","RoleManagerCmd","ListRequiredRoles","localDevs","devices","ordevs","rdevs","buf","jdunpack","devidbuf","serviceIdx","devid","toHex","srv","deviceId","readData","sort","a","strcmp","some","dev","i","emit","CHANGE","ERROR","forEach","rdev","clearRoles","sendCmdAsync","ClearAllRoles","serviceIndex","data","jdpack","fromHex","Packet","from","SetRole","rdp","startSimulators","todos","groupBy","filter","hostDefinition","hostDefinitionFromServiceClass","todo","parentName","Object","keys","t","addHost","arrayConcatMany","JDServiceClient","JDClient","useServiceRole","SRV_ROLE_MANAGER","roleManager","roleManagerClient","useServiceClient","useState","useEffect","ServiceRole","props","DashboardServiceWidgetItem","ignoreRegisters","SystemReg","StatusCode","StreamingPreferredInterval","StreamingSamples","StreamingInterval","collapsedRegisters","Reading","Value","Intensity","DashboardServiceDetails","expanded","specification","spec","registers","useMemo","packets","ids","pkt","isRegister","identifier","id","register","reg","ignoredServices","SRV_CTRL","SRV_LOGGER","DashboardDevice","toggleExpanded","variant","showAvatar","showHeader","useDeviceName","useDeviceSpecification","theme","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","ServiceWidgets","padding","paddingBottom","paddingTop","DashboardButton","pressed","setPressed","pressedRegister","ButtonReg","Pressed","REPORT_UPDATE","unpackedValue","downEvent","ButtonEvent","Down","upEvent","Up","host","useServiceHost","color","label","handleDown","handleUp","up","widgetSize","useActualAngle","useRegisterUnpackedValue","ServoReg","Angle","angle","ResponseSpeed","responseSpeed","rotationalSpeed","SG90_RESPONSE_SPEED","actualAngle","useThrottledValue","DashboardServo","enabledRegister","Enabled","enabled","off","angleRegister","Offset","offset","useWidgetTheme","background","controlBackground","active","textPrimary","cx","cy","transform","h","w","pr","pri","text","Math","round","toggleOff","sendSetBoolAsync","refresh","DashboardRotaryEncoder","positionRegister","RotaryEncoderReg","Position","position","clicksPerTurnRegister","ClicksPerTurn","clicksPerTurn","textProps","fs","max","handleChange","ev","newValue","reading","setValues","throttled","min","floor","ceil","DashboardSwitch","labelId","useId","on","useRegisterBoolValue","SwitchReg","Active","Variant","switchVariant","handleToggle","toggle","SwitchVariant","PushButton","DashboardAccelerometer","lazy","DashboardBuzzer","DashboardLEDPixel","DashboardRoleManager","DashboardTrafficLight","DashboardCharacterScreen","DashboardRainGauge","DashboardLEDMatrix","DashboardArcadeGamepad","DashboardWindDirection","DashboardMatrixKeypad","DashboardReflectedLight","DashboardPower","DashboardSpeechSynthesis","DashboardSoilMoisture","DashboardRealTimeClock","DashboardLED","DashboardJoystick","DashboardSevenSegmentDisplay","DashboardMotion","DashboardWaterLevel","DashboardColor","DashboardSoundPlayer","DashboardAnalogButton","DashboardSoundLevel","DashboardSoundSpectrum","DashboardRandomNumberGenerator","DashboardCompass","DashboardGyroscope","DashboardSolenoid","serviceViews","component","SRV_BUZZER","weight","SRV_LED_PIXEL","SRV_ACCELEROMETER","SRV_ROTARY_ENCODER","bundled","SRV_BUTTON","SRV_SERVO","SRV_SWITCH","SRV_TRAFFIC_LIGHT","SRV_CHARACTER_SCREEN","SRV_RAIN_GAUGE","SRV_LED_MATRIX","SRV_ARCADE_GAMEPAD","SRV_WIND_DIRECTION","SRV_MATRIX_KEYPAD","SRV_REFLECTED_LIGHT","SRV_POWER","SRV_SPEECH_SYNTHESIS","SRV_SOIL_MOISTURE","SRV_REAL_TIME_CLOCK","SRV_LED","SRV_JOYSTICK","SRV_SEVEN_SEGMENT_DISPLAY","SRV_MOTION","SRV_WATER_LEVEL","SRV_COLOR","SRV_SOUND_PLAYER","SRV_ANALOG_BUTTON","SRV_SOUND_LEVEL","SRV_RNG","SRV_COMPASS","SRV_GYROSCOPE","SRV_SOUND_SPECTRUM","SRV_SOLENOID","ValueWidget","valueRegister","intensityRegister","intensity","hasIntensity","IntensityWidget","DefaultWidget","rspec","DashboardServiceWidget","classIdentifier","createElement","dashboardServiceWeight","view","factory","deps","client","setClient","unmount"],"mappings":"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","file":"f45028b77642bb06a1e26ecfd1b9356bfb549ad6-54ba012970abc9198b62.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { useContext } from \"react\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { InPipeReader } from \"./pipes\";\nimport { JDService } from \"./service\";\nimport { JDServiceClient } from \"./serviceclient\";\nimport { RoleManagerCmd, CHANGE, ERROR, EVENT, DEVICE_CHANGE, RoleManagerEvent } from \"./constants\";\nimport { toHex, strcmp, fromHex, debounceAsync, groupBy, arrayConcatMany } from \"./utils\";\nimport Packet from \"./packet\";\nimport { jdpack, jdunpack } from \"./pack\";\nimport { addHost, hostDefinitionFromServiceClass } from \"../hosts/hosts\";\n\nconst SCAN_DEBOUNCE = 2000\n\nexport class RequestedRole {\n    bound: JDService;\n    candidates: JDService[] = [];\n\n    constructor(\n        readonly parent: RoleManagerClient,\n        readonly name: string,\n        readonly serviceClass: number\n    ) { }\n\n    computeCandidates() {\n        const { bus } = this.parent.service.device;\n        this.candidates = bus.services({ serviceClass: this.serviceClass });\n        // check that bound service is stil update to date\n        if (this.candidates.indexOf(this.bound) < 0)\n            this.bound = undefined;\n    }\n\n    async select(service: JDService) {\n        if (service === this.bound)\n            return // already set\n        if (this.bound)\n            await this.parent.setRole(this.bound, \"\")\n        await this.parent.setRole(service, this.name)\n        this.bound = service;\n    }\n\n    get parentName(): string {\n        const parts = this.name.split(/\\//g);\n        return parts.length > 1 ? parts.slice(0, parts.length - 1).join(\"/\") : undefined;\n    }\n\n    toString() {\n        let info = `${this.name}:${this.serviceClass.toString(16)}`\n        if (this.bound)\n            info += ` -> ${this.bound}`;\n        info += \", \" + this.candidates.map(c => c.toString()).join();\n        return info;\n    }\n}\n\nexport class RoleManagerClient extends JDServiceClient {\n    private scanning = false;\n    public requestedRoles: RequestedRole[] = undefined;\n\n    constructor(service: JDService) {\n        super(service)\n        console.log(`rdp: new`)\n\n        const dscan = debounceAsync(this.scan.bind(this), SCAN_DEBOUNCE);\n        this.mount(this.bus.subscribe(DEVICE_CHANGE, debounceAsync(async () => {\n            this.recomputeCandidates();\n        }, SCAN_DEBOUNCE)));\n        const changeEvent = this.service.event(RoleManagerEvent.Change);\n        this.mount(changeEvent.subscribe(EVENT, dscan));\n        dscan();\n    }\n\n    async scan() {\n        if (this.scanning\n            || !this.service.device.connected)\n            return;\n\n        const addRequested = (devs: RequestedRole[], role: string, serviceClass: number) => {\n            let r = devs.find(d => d.name == role)\n            if (!r) devs.push(r = new RequestedRole(this, role, serviceClass))\n            return r\n        }\n\n        try {\n            //console.log(`rdp start`)\n            this.scanning = true;\n            const inp = new InPipeReader(this.bus)\n            await this.service.sendPacketAsync(\n                inp.openCommand(RoleManagerCmd.ListRequiredRoles),\n                true)\n\n            const localDevs = this.bus.devices();\n            const ordevs = this.requestedRoles?.slice(0) || [];\n            const rdevs: RequestedRole[] = []\n\n            for (const buf of await inp.readData()) {\n                const [devidbuf, serviceClass, serviceIdx, role]\n                    = jdunpack<[Uint8Array, number, number, string]>(buf, \"b[8] u32 u8 s\")\n                const devid = toHex(devidbuf);\n                //console.log({ devidbuf, role, serviceClass })\n                const r = addRequested(rdevs, role, serviceClass)\n                const srv = localDevs\n                    .find(d => d.deviceId == devid)\n                    ?.service(serviceIdx);\n                if (srv && srv.serviceClass === serviceClass)\n                    r.bound = srv;\n            }\n\n            rdevs.sort((a, b) => strcmp(a.name, b.name))\n\n            if (rdevs.length !== ordevs.length\n                || rdevs.some(\n                    (dev, i) => (dev.name !== ordevs[i].name) || (dev.bound !== ordevs[i].bound)\n                )\n            ) {\n                this.requestedRoles = rdevs;\n                this.recomputeCandidates();\n                //console.log(`rdp changed`, this.requestedRoles)\n                this.emit(CHANGE, this.requestedRoles)\n            }\n\n            //console.log(`rdp done`)\n        }\n        catch (e) {\n            this.emit(ERROR, e);\n        }\n        finally {\n            this.scanning = false;\n        }\n    }\n\n    role(service: JDService) {\n        return this.requestedRoles?.find(role => role.bound === service);\n    }\n\n    private recomputeCandidates() {\n        this.requestedRoles?.forEach(rdev => rdev.computeCandidates());\n    }\n\n    async clearRoles() {\n        await this.service.sendCmdAsync(RoleManagerCmd.ClearAllRoles)\n    }\n\n    async setRole(service: JDService, role: string) {\n        const { device, serviceIndex } = service;\n        this.log(`set role ${device}:${serviceIndex} to ${role}`)\n        const data = jdpack<[Uint8Array, number, string]>(\"b[8] u8 s\", [fromHex(device.deviceId), serviceIndex, role || \"\"]);\n        await this.service.sendPacketAsync(Packet.from(RoleManagerCmd.SetRole, data), true)\n    }\n\n    toString() {\n        return (this.requestedRoles || []).map(rdp => rdp.toString()).join('\\n')\n    }\n\n    get missingRoles() {\n        return (this.requestedRoles || []).filter(role => !role.bound).length > 0\n    }\n\n    startSimulators() {\n        if (!this.requestedRoles) return;\n\n        // collect roles that need to be bound\n        const todos = groupBy(this.requestedRoles.filter(role => !role.bound)\n            .map(role => ({\n                role, hostDefinition: hostDefinitionFromServiceClass(role.serviceClass)\n            }))\n            .filter(todo => !!todo.hostDefinition),\n            todo => todo.role.parentName || \"\");\n\n        // spawn devices with group of devices\n        Object.keys(todos).forEach(parentName => {\n            const todo = todos[parentName];\n            // no parent, spawn individual services\n            if (!parentName) {\n                todo.forEach(t => addHost(this.bus, t.hostDefinition.services()));\n            } else { // spawn all services into 1\n                addHost(this.bus, arrayConcatMany(todo.map(t => t.hostDefinition.services())))\n            }\n        })\n    }\n}\n","import { JDService } from \"./service\";\nimport { JDDevice } from \"./device\";\nimport { JDBus } from \"./bus\";\nimport { JDClient } from \"./client\";\n\nexport class JDServiceClient extends JDClient {\n\n    constructor(public readonly service: JDService) {\n        super()\n    }\n\n    protected get device(): JDDevice {\n        return this.service.device\n    }\n\n    protected get bus(): JDBus {\n        return this.device.bus\n    }\n\n    toString(): string {\n        return `client of ${this.service}`\n    }\n}\n","import { useEffect, useState } from \"react\"\nimport { CHANGE, SRV_ROLE_MANAGER } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient, RequestedRole } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useServices from \"../hooks/useServices\"\nimport useServiceClient from \"../useServiceClient\"\n\nexport default function useServiceRole(service: JDService) {\n    const [roleManager] = useServices({ serviceClass: SRV_ROLE_MANAGER })\n    const roleManagerClient = useServiceClient(\n        roleManager,\n        srv => new RoleManagerClient(srv)\n    );\n    const [role, setRole] = useState<RequestedRole>(roleManagerClient?.role(service));\n    useEffect(() => roleManagerClient?.subscribe(CHANGE, () => {\n        const r = roleManagerClient?.role(service);\n        setRole(r);\n    }), [roleManagerClient])\n\n    return role;\n}","import { Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const role = useServiceRole(service)\n    const name = role?.name\n\n    return name ? <Typography variant=\"caption\" component=\"div\">{name}</Typography> : null\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n\n    return (\n        <Grid item>\n            <ServiceRole service={service} />\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\";\nimport { BaseReg, SystemReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useChange from \"../../jacdac/useChange\";\nimport RegisterInput from \"../RegisterInput\";\nimport { isIntegerType, isRegister } from \"../../../jacdac-ts/src/jdom/spec\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { Grid } from \"@material-ui/core\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded } = props;\n    const specification = useChange(service, spec => spec.specification);\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets;\n        let ids = packets\n            ?.filter(pkt => isRegister(pkt))\n            ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded) // grab the first interresting register\n            ids = ids.filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1);\n        return ids.map(id => service.register(id))\n            .filter(reg => !!reg);\n    }, [specification, expanded])\n\n    if (!registers?.length)  // nothing to see here\n        return null;\n\n    return <>\n        {registers.map(register => {\n            return <Grid key={register.id} item xs={true}><RegisterInput\n                register={register}\n                showServiceName={true}\n                showRegisterName={true}\n                hideMissingValues={false}\n                showTrend={false}\n            /></Grid>\n        })}\n    </>\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport { SRV_CTRL, SRV_LOGGER } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services()\n            .filter(\n                service =>\n                    ignoredServices.indexOf(service.serviceClass) < 0 &&\n                    !!service.specification\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n\n    const ServiceWidgets = () => (\n        <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"flex-end\"\n            alignContent=\"space-between\"\n        >\n            {services?.map(service => (\n                <DashboardServiceWidgetItem\n                    key={service.id}\n                    service={service}\n                    expanded={expanded}\n                    services={services}\n                    variant={variant}\n                />\n            ))}\n        </Grid>\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStopHost={expanded && !mobile}\n                        hideIdentity={true}\n                        showReset={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                expanded={expanded}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","import React, { useEffect, useState } from \"react\";\nimport { ButtonEvent, ButtonReg, EVENT, REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\";\nimport ButtonServiceHost from \"../../../jacdac-ts/src/hosts/buttonservicehost\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nexport default function DashboardButton(props: DashboardServiceProps) {\n    const { service } = props;\n    const [pressed, setPressed] = useState<boolean>(false)\n    const pressedRegister = service.register(ButtonReg.Pressed);\n    // track register\n    useEffect(() => pressedRegister?.subscribe(REPORT_UPDATE, () => {\n        const [b] = pressedRegister?.unpackedValue || [];\n        if (b !== undefined)\n            setPressed(b)\n    }), [pressedRegister])\n    // track event up/down events\n    const downEvent = service.event(ButtonEvent.Down);\n    useEffect(() => downEvent.subscribe(EVENT, () => setPressed(true)), [downEvent])\n    const upEvent = service.event(ButtonEvent.Up);\n    useEffect(() => upEvent.subscribe(EVENT, () => setPressed(false)), [upEvent])\n\n    const host = useServiceHost<ButtonServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const label = `button ${pressed ? `down` : `up`}`\n    const handleDown = () => host?.down();\n    const handleUp = () => host?.up();\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    if (pressed === undefined)\n        return <LoadingProgress />;\n    \n    return <ButtonWidget\n        checked={!!pressed}\n        color={color}\n        onDown={host && handleDown}\n        onUp={host && handleUp}\n        label={label}\n        size={widgetSize}\n    />\n}","\nimport React, { } from \"react\";\nimport { ServoReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\nimport { SG90_RESPONSE_SPEED } from \"../../../jacdac-ts/src/hosts/hosts\";\nimport { Grid } from \"@material-ui/core\";\nimport ServoServiceHost from \"../../../jacdac-ts/src/hosts/servoservicehost\";\nimport RegisterInput from \"../RegisterInput\";\nimport PowerButton from \"../widgets/PowerButton\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\n\nfunction useActualAngle(service: JDService) {\n    const [angle] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.Angle));\n    // sec/60deg\n    const [responseSpeed] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.ResponseSpeed));\n    const rotationalSpeed = 60 / (responseSpeed || SG90_RESPONSE_SPEED);\n    const actualAngle = useThrottledValue(angle || 0, rotationalSpeed)\n\n    return actualAngle;\n}\n\nexport default function DashboardServo(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const enabledRegister = service.register(ServoReg.Enabled);\n    const [enabled] = useRegisterUnpackedValue<[boolean]>(enabledRegister)\n    const off = !enabled;\n    const angleRegister = service.register(ServoReg.Angle);\n    const angle = useActualAngle(service)\n    const [offset] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.Offset));\n\n    const host = useServiceHost<ServoServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textPrimary } = useWidgetTheme(color)\n\n    const cx = 78;\n    const cy = 55;\n\n    const a = enabled ? (angle + (offset || 0)) : 0;\n    const transform = `rotate(${- a}, ${cx}, ${cy})`;\n    const h = 111.406;\n    const w = 158.50195;\n    const pr = 14;\n    const pri = 6;\n    const text = enabled ? `${Math.round(a)}°` : 'off';\n\n    const toggleOff = async () => {\n        await enabledRegister.sendSetBoolAsync(!enabled);\n        enabledRegister.refresh();\n    }\n\n    return <Grid container alignContent=\"center\">\n        <Grid item xs={12}>\n            <SvgWidget tabIndex={0} title={`servo at angle ${angle}`} width={w} height={h}>\n                <path fill={background} d=\"M158.502 10.687H0v89.75h158.502z\" />\n                <path fill={controlBackground} d=\"M125.545 55.641c0-24.994-20.26-45.256-45.254-45.256-17.882.016-34.077 9.446-41.328 25.79-2.655.024-4.192.076-6.35.07-11.158 0-20.204 9.046-20.204 20.204 0 11.158 9.046 20.203 20.203 20.203 2.389-.005 4.354-.332 6.997-.256 7.56 15.59 23.356 24.485 40.682 24.5 24.992 0 45.254-20.264 45.254-45.256z\" />\n                <path fill={enabled ? active : background} stroke={active} transform={transform} d=\"M93.782 55.623c-.032-3.809-.19-6.403-.352-7.023h-.002c-.93-3.558-6.621-6.73-14.793-6.73-8.17 0-14.649 3.016-14.795 6.73-.25 6.419-4.049 62.795 13.561 62.806 14.308.008 16.52-39.277 16.38-55.783zm-8.05.08a7.178 7.178 0 010 .012 7.178 7.178 0 01-7.179 7.176 7.178 7.178 0 01-7.177-7.176 7.178 7.178 0 017.177-7.178 7.178 7.178 0 017.178 7.166z\" />\n                <text x={w / 2} y={30} textAnchor=\"middle\" fill={textPrimary}>{text}</text>\n                <PowerButton r={pr} ri={pri} cx={w - pr - 4} cy={pr + 14}\n                    color={color}\n                    strokeWidth={1.5}\n                    off={off} onClick={toggleOff} />\n            </SvgWidget>\n        </Grid>\n        <Grid item xs={12}>\n            <RegisterInput register={angleRegister} />\n        </Grid>\n    </Grid>\n}","import React from \"react\";\nimport { RotaryEncoderReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterIntValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport RotaryEncoderServiceHost from \"../../../jacdac-ts/src/hosts/rotaryencoderservicehost\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport useAnimationFrame from \"../hooks/useAnimationFrame\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\n\nexport default function DashboardRotaryEncoder(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n    const positionRegister = service.register(RotaryEncoderReg.Position);\n    const [position = 0] = useRegisterUnpackedValue<[number]>(positionRegister);\n    const clicksPerTurnRegister = service.register(RotaryEncoderReg.ClicksPerTurn);\n    const [clicksPerTurn = 12] = useRegisterUnpackedValue<[number]>(clicksPerTurnRegister);\n    const host = useServiceHost<RotaryEncoderServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textProps } = useWidgetTheme(color);\n    const label = \"\" + position;\n\n    const w = 37.794\n    const r = 0.06;\n    const fs = Math.max(0.2, 0.5 - label.length * 0.1)\n\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        host?.reading.setValues([newValue as number]);\n        positionRegister.refresh();\n        clicksPerTurnRegister.refresh();\n    }\n\n    const throttled = useThrottledValue(position, clicksPerTurn)\n    const angle = throttled / clicksPerTurn * 360;\n\n    const min = Math.floor((position / clicksPerTurn - 1)) * clicksPerTurn;\n    const max = Math.ceil((position / clicksPerTurn + 1)) * clicksPerTurn;\n\n    return <Grid container direction=\"column\">\n        <Grid item>\n            <SvgWidget title={`rotary encoder at position ${position}`}\n                width={w} height={w} viewBox={\"0 0 1 1\"}>\n                <g transform={`rotate(${angle}, 0.5, 0.5)`}>\n                    <path fill={background} d=\"M.67.029a.037.037 0 01-.072-.02A.5.5 0 00.538 0a.037.037 0 01-.075 0 .5.5 0 00-.061.008.038.038 0 01-.073.02.5.5 0 00-.056.025.037.037 0 01-.064.04A.5.5 0 00.16.13.037.037 0 01.11.186a.5.5 0 00-.035.05.037.037 0 01-.035.066.5.5 0 00-.02.058.037.037 0 01-.016.074A.5.5 0 000 .495.037.037 0 01.005.57a.5.5 0 00.013.06.038.038 0 01.025.07.5.5 0 00.028.056.037.037 0 01.043.06.5.5 0 00.042.046.037.037 0 01.058.047.5.5 0 00.053.032.037.037 0 01.069.03.5.5 0 00.059.016.037.037 0 01.074.01.5.5 0 00.062 0 .037.037 0 01.074-.01.5.5 0 00.06-.016.037.037 0 01.068-.03.5.5 0 00.053-.032.037.037 0 01.058-.047.5.5 0 00.042-.045.037.037 0 01.043-.061A.5.5 0 00.957.7.037.037 0 01.982.63.5.5 0 00.995.57.037.037 0 011 .495.5.5 0 00.996.434.038.038 0 01.98.36.5.5 0 00.96.302.037.037 0 01.925.236.5.5 0 00.89.186.037.037 0 01.839.13.5.5 0 00.79.092.037.037 0 01.727.053.5.5 0 00.671.03z\"\n                    />\n                    <path fill={controlBackground} d=\"M.1.499a.4.4 0 10.8 0 .4.4 0 10-.8 0z\" />\n                    <circle\n                        cx={0.5} cy={0.19} r={r}\n                        fill={active} />\n                </g>\n                <text x={0.5} y={0.5} fontSize={fs} {...textProps}>{label}</text>\n            </SvgWidget>\n        </Grid>\n        {host && <Grid item>\n            <Slider\n                color={color}\n                min={min} max={max} step={1}\n                value={position} valueLabelDisplay=\"off\"\n                onChange={handleChange}\n            />\n        </Grid>}\n    </Grid>\n\n}","import { SwitchReg, SwitchVariant } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { useRegisterBoolValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport SwitchServiceHost from \"../../../jacdac-ts/src/hosts/switchservicehost\"\nimport React from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport { useId } from \"react-use-id-hook\"\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardSwitch(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const labelId = useId();\n    const on = useRegisterBoolValue(service.register(SwitchReg.Active))\n    const [switchVariant] = useRegisterUnpackedValue<[SwitchVariant]>(service.register(SwitchReg.Variant));\n    const host = useServiceHost<SwitchServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    const handleToggle = () => host?.toggle();\n\n    if (on === undefined)\n        return <LoadingProgress />;\n\n    switch (switchVariant) {\n        case SwitchVariant.PushButton:\n            return <ButtonWidget\n                checked={on}\n                color={color}\n                label={on ? \"on\" : \"off\"}\n                onDown={host && handleToggle}\n                size={widgetSize} />\n        default:\n            return <>\n                <Switch aria-labelledby={labelId} color={color} checked={on} onChange={host && handleToggle} />\n                <label id={labelId}>{on ? \"on\" : \"off\"}</label>\n            </>\n    }\n}","import React, { createElement, FunctionComponent, lazy, useMemo, Suspense } from \"react\";\nimport {\n    SRV_ACCELEROMETER, SRV_ANALOG_BUTTON, SRV_ARCADE_GAMEPAD, SRV_BUTTON, SRV_BUZZER, SRV_CHARACTER_SCREEN,\n    SRV_COLOR,\n    SRV_COMPASS,\n    SRV_GYROSCOPE,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LED_PIXEL, SRV_MATRIX_KEYPAD, SRV_MOTION, SRV_POWER, SRV_RAIN_GAUGE,\n    SRV_REAL_TIME_CLOCK, SRV_REFLECTED_LIGHT, SRV_RNG, SRV_ROLE_MANAGER,\n    SRV_ROTARY_ENCODER, SRV_SERVO, SRV_SEVEN_SEGMENT_DISPLAY, SRV_SOIL_MOISTURE,\n    SRV_SOLENOID,\n    SRV_SOUND_LEVEL,\n    SRV_SOUND_PLAYER, SRV_SOUND_SPECTRUM, SRV_SPEECH_SYNTHESIS, SRV_SWITCH, SRV_TRAFFIC_LIGHT, SRV_WATER_LEVEL,\n    SRV_WIND_DIRECTION, SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\";\nimport RegisterInput from \"../RegisterInput\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport { CircularProgress, NoSsr } from '@material-ui/core';\nimport useServiceHost from \"../hooks/useServiceHost\";\n\n// bundled\nimport DashboardButton from \"./DashboardButton\";\nimport DashboardServo from \"./DashboardServo\";\nimport DashboardRotaryEncoder from \"./DashboardRotaryEncoder\";\nimport DashboardSwitch from \"./DashboardSwitch\";\n\n// lazy devices\nconst DashboardAccelerometer = lazy(() => import(\"./DashboardAccelerometer\"));\nconst DashboardBuzzer = lazy(() => import(\"./DashboardBuzzer\"));\nconst DashboardLEDPixel = lazy(() => import(\"./DashboardLEDPixel\"));\nconst DashboardRoleManager = lazy(() => import(\"./DashboardRoleManager\"));\nconst DashboardTrafficLight = lazy(() => import(\"./DashboardTrafficLight\"));\nconst DashboardCharacterScreen = lazy(() => import(\"./DashboardCharacterScreen\"));\nconst DashboardRainGauge = lazy(() => import(\"./DashboardRainGauge\"));\nconst DashboardLEDMatrix = lazy(() => import(\"./DashboardLEDMatrix\"));\nconst DashboardArcadeGamepad = lazy(() => import(\"./DashboardArcadeGamepad\"));\nconst DashboardWindDirection = lazy(() => import(\"./DashboardWindDirection\"));\nconst DashboardMatrixKeypad = lazy(() => import(\"./DashboardMatrixKeypad\"));\nconst DashboardReflectedLight = lazy(() => import(\"./DashboardReflectedLight\"));\nconst DashboardPower = lazy(() => import(\"./DashboardPower\"));\nconst DashboardSpeechSynthesis = lazy(() => import(\"./DashboardSpeechSynthesis\"));\nconst DashboardSoilMoisture = lazy(() => import(\"./DashboardSoilMoisture\"));\nconst DashboardRealTimeClock = lazy(() => import(\"./DashboardRealTimeClock\"));\nconst DashboardLED = lazy(() => import(\"./DashboardLED\"));\nconst DashboardJoystick = lazy(() => import(\"./DashboardJoystick\"));\nconst DashboardSevenSegmentDisplay = lazy(() => import(\"./DashboardSevenSegmentDisplay\"));\nconst DashboardMotion = lazy(() => import(\"./DashboardMotion\"));\nconst DashboardWaterLevel = lazy(() => import(\"./DashboardWaterLevel\"));\nconst DashboardColor = lazy(() => import(\"./DashboardColor\"));\nconst DashboardSoundPlayer = lazy(() => import(\"./DashboardSoundPlayer\"));\nconst DashboardAnalogButton = lazy(() => import(\"./DashboardAnalogButton\"));\nconst DashboardSoundLevel = lazy(() => import(\"./DashboardSoundLevel\"));\nconst DashboardSoundSpectrum = lazy(() => import(\"./DashboardSoundSpectrum\"));\nconst DashboardRandomNumberGenerator = lazy(() => import(\"./DashboardRandomNumberGenerator\"));\nconst DashboardCompass = lazy(() => import(\"./DashboardCompass\"));\nconst DashboardGyroscope = lazy(() => import(\"./DashboardGyroscope\"));\nconst DashboardSolenoid = lazy(() => import(\"./DashboardSolenoid\"));\n\nexport interface DashboardServiceProps {\n    service: JDService,\n    expanded?: boolean,\n    // all widget services\n    services?: JDService[],\n    variant?: \"icon\" | \"\"\n}\nexport type DashboardServiceComponent = FunctionComponent<DashboardServiceProps>;\n\nconst serviceViews: {\n    [serviceClass: number]: {\n        component: DashboardServiceComponent;\n        bundled?: boolean\n        weight?: (service: JDService) => number;\n    }\n} = {\n    [SRV_ROLE_MANAGER]: {\n        component: DashboardRoleManager,\n    },\n    [SRV_BUZZER]: {\n        component: DashboardBuzzer,\n        weight: () => 2\n    },\n    [SRV_LED_PIXEL]: {\n        component: DashboardLEDPixel,\n        weight: () => 2\n    },\n    [SRV_ACCELEROMETER]: {\n        component: DashboardAccelerometer,\n        weight: () => 2,\n    },\n    [SRV_ROTARY_ENCODER]: {\n        component: DashboardRotaryEncoder,\n        bundled: true,\n    },\n    [SRV_BUTTON]: {\n        component: DashboardButton,\n        bundled: true,\n    },\n    [SRV_SERVO]: {\n        component: DashboardServo,\n        bundled: true,\n    },\n    [SRV_SWITCH]: {\n        component: DashboardSwitch,\n        bundled: true,\n    },\n    [SRV_TRAFFIC_LIGHT]: {\n        component: DashboardTrafficLight,\n    },\n    [SRV_CHARACTER_SCREEN]: {\n        component: DashboardCharacterScreen,\n        weight: () => 3\n    },\n    [SRV_RAIN_GAUGE]: {\n        component: DashboardRainGauge,\n    },\n    [SRV_LED_MATRIX]: {\n        component: DashboardLEDMatrix,\n        weight: () => 3\n    },\n    [SRV_ARCADE_GAMEPAD]: {\n        component: DashboardArcadeGamepad,\n        weight: () => 3\n    },\n    [SRV_WIND_DIRECTION]: {\n        component: DashboardWindDirection,\n    },\n    [SRV_MATRIX_KEYPAD]: {\n        component: DashboardMatrixKeypad,\n    },\n    [SRV_REFLECTED_LIGHT]: {\n        component: DashboardReflectedLight,\n    },\n    [SRV_POWER]: {\n        component: DashboardPower,\n    },\n    [SRV_SPEECH_SYNTHESIS]: {\n        component: DashboardSpeechSynthesis,\n    },\n    [SRV_SOIL_MOISTURE]: {\n        component: DashboardSoilMoisture,\n    },\n    [SRV_REAL_TIME_CLOCK]: {\n        component: DashboardRealTimeClock,\n    },\n    [SRV_LED]: {\n        component: DashboardLED,\n    },\n    [SRV_JOYSTICK]: {\n        component: DashboardJoystick,\n    },\n    [SRV_SEVEN_SEGMENT_DISPLAY]: {\n        component: DashboardSevenSegmentDisplay,\n    },\n    [SRV_MOTION]: {\n        component: DashboardMotion,\n    },\n    [SRV_WATER_LEVEL]: {\n        component: DashboardWaterLevel,\n    },\n    [SRV_COLOR]: {\n        component: DashboardColor,\n        weight: () => 2,\n    },\n    [SRV_SOUND_PLAYER]: {\n        component: DashboardSoundPlayer,\n        weight: () => 2\n    },\n    [SRV_ANALOG_BUTTON]: {\n        component: DashboardAnalogButton,\n    },\n    [SRV_SOUND_LEVEL]: {\n        component: DashboardSoundLevel,\n        weight: () => 2,\n    },\n    [SRV_RNG]: {\n        component: DashboardRandomNumberGenerator,\n    },\n    [SRV_COMPASS]: {\n        component: DashboardCompass,\n    },\n    [SRV_GYROSCOPE]: {\n        component: DashboardGyroscope,\n        weight: () => 2,\n    },\n    [SRV_SOUND_SPECTRUM]: {\n        component: DashboardSoundSpectrum,\n        weight: () => 2,\n    },\n    [SRV_SOLENOID]: {\n        component: DashboardSolenoid\n    },\n}\n\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity\n]\n\nfunction ValueWidget(props: { valueRegister: JDRegister, intensityRegister: JDRegister }) {\n    const { valueRegister, intensityRegister } = props;\n    const [intensity] = useRegisterUnpackedValue<[boolean]>(intensityRegister);\n    const hasIntensity = intensity !== undefined;\n    const off = hasIntensity ? !intensity : undefined;\n    const toggleOff = async () => {\n        await intensityRegister.sendSetBoolAsync(off, true);\n    }\n\n    return <RegisterInput\n        register={valueRegister}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n        off={off}\n        toggleOff={hasIntensity ? toggleOff : undefined}\n    />;\n}\n\nfunction IntensityWidget(props: { intensityRegister: JDRegister }) {\n    const { intensityRegister } = props;\n    const [intensity] = useRegisterUnpackedValue<[number | boolean]>(intensityRegister);\n    const off = intensity !== undefined && !intensity;\n\n    return <RegisterInput\n        register={intensityRegister}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n        off={off}\n    />;\n}\n\nfunction DefaultWidget(props: DashboardServiceProps) {\n    const { service } = props;\n    const { specification } = service;\n    const register = useMemo(() => {\n        const rspec = specification?.packets\n            .find(pkt => isRegister(pkt) && collapsedRegisters.indexOf(pkt.identifier) > -1);\n        return service.register(rspec?.identifier);\n    }, [service])\n\n    if (!register) // nothing to see here\n        return null;\n\n    // if register is value, disable if enabled is 0.\n    if (register.specification.identifier == SystemReg.Value) {\n        const intensityRegister = register.service.register(SystemReg.Intensity);\n        return <ValueWidget valueRegister={register} intensityRegister={intensityRegister} />;\n    }\n\n    // case of no streaming,value just intensity, like a relay\n    if (register.specification.identifier === SystemReg.Intensity)\n        return <IntensityWidget intensityRegister={register} />\n\n    return <RegisterInput\n        register={register}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n    />;\n}\n\nexport default function DashboardServiceWidget(props: React.Attributes & DashboardServiceProps): JSX.Element {\n    const { service } = props;\n    const { specification } = service;\n    const { component, bundled } = serviceViews[specification.classIdentifier] || {};\n    const host = useServiceHost(service);\n    const color = host ? \"secondary\" : \"primary\";\n    // no special support\n    if (!component)\n        return createElement(DefaultWidget, props);\n\n    // precompiled\n    if (bundled)\n        return createElement(component, props);\n\n    // lazy loading\n    return <NoSsr>\n        <Suspense fallback={<CircularProgress color={color} disableShrink={true} variant={\"indeterminate\"} size={\"3em\"} />}>\n            {createElement(component, props)}\n        </Suspense>\n    </NoSsr>\n}\n\n\nexport function dashboardServiceWeight(service: JDService) {\n    const view = serviceViews[service.serviceClass];\n    return view?.weight?.(service);\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}