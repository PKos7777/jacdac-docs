{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/FiberManualRecord.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/SaveAlt.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/sensoraggregatorclient.ts","webpack://jacdac-docs/./src/components/ReadingFieldGrid.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/select/SelectEvent.tsx","webpack://jacdac-docs/./src/components/DataSetGrid.tsx","webpack://jacdac-docs/./src/components/hooks/useEvents.ts","webpack://jacdac-docs/./src/pages/tools/collector.tsx"],"names":["SensorAggregatorClient","service","registersUseAcks","setInputs","cfg","error","mapType","tp","SensorAggregatorSampleType","msg","Error","inputs","totalSampleSize","map","input","deviceId","serviceIndex","serviceClass","specification","serviceSpecificationFromClassIdentifier","toString","freeze","readingReg","packets","find","isReading","sampleType","undefined","sampleSize","sampleShift","fields","field","Math","abs","storage","shift","bufferConcat","fromHex","Uint8Array","jdpack","JD_SERIAL_MAX_PAYLOAD_SIZE","unshift","samplingInterval","samplesInWindow","register","SensorAggregatorReg","sendSetAsync","bufferConcatMany","collect","numSamples","sendSetPackedAsync","subscribeSample","handler","reg","mount","subscribe","REPORT_RECEIVE","bufferToArray","data","NumberFormat","getReg","id","f","refresh","stats","info","r","intValue","Object","keys","JDServiceClient","useStyles","makeStyles","createStyles","vmiddle","verticalAlign","ReadingFieldGridItem","props","handleRegisterCheck","recording","registerChecked","liveDataSet","gridBreakpoints","useGridBreakpoints","classes","deviceName","useDeviceName","device","handleCheck","name","color","colorOf","ReadingFieldGrid","readingRegisters","registerIdsChecked","indexOf","useServices","options","useContext","JacdacContext","bus","services","useChange","b","JSON","stringify","SelectWithLabel","label","fullWidth","required","disabled","value","placeholder","onChange","onClose","children","helperText","type","none","labelId","useId","descrId","hasDescr","itemCount","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","SelectEvent","events","eventId","friendlyName","handleChange","ev","target","length","DataSetGrid","tables","handleDeleteTable","ServiceManagerContext","fileStorage","handleDownload","table","sep","csv","toCSV","saveText","handelDelete","rows","prettyDuration","duration","headers","join","useEvents","arrayConcatMany","srv","theme","root","marginBottom","spacing","grow","flexGrow","marginRight","segment","marginTop","row","buttons","trend","width","LIVE_HORIZON","createDataSet","registers","live","palette","colors","i","set","FieldDataSet","maxRows","Collector","useState","setRegisterIdsChecked","aggregatorId","setAggregatorId","setRecording","setTables","setRecordingLength","prefix","setPrefix","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","setLiveDataSet","setLiveDataTimestamp","triggerEventId","setTriggerEventId","chartPalette","useChartPalette","devices","filter","isSensor","readingRegister","recordingRegisters","aggregators","SRV_SENSOR_AGGREGATOR","aggregator","samplingIntervalDelayi","parseInt","samplingCount","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","triggerEvent","node","startEnabled","useEffect","un","EVENT","toggleRecording","createSensorConfig","saveConfig","sensorConfig","newDataSet","registerIds","splice","push","sort","stopRecording","startRecording","client","startStreamingRegisters","console","log","streamers","REPORT_UPDATE","streamer","handleSamplingIntervalChange","event","trim","handleSamplingDurationChange","handlePrefixChange","handleTriggerChange","handleAggregatorChecked","updateLiveData","timestamp","throttleUpdate","throttle","addRow","values","forEach","sendSetIntAsync","interval","setInterval","stopStreaming","clearInterval","startAdornment"],"mappings":"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","file":"component---src-pages-tools-collector-tsx-9057a008bc9189f6d2ce.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import {\n    SensorAggregatorReg,\n    SensorAggregatorSampleType,\n} from \"../../jacdac-spec/dist/specconstants\"\nimport { bufferToArray, NumberFormat } from \"./buffer\"\nimport { JD_SERIAL_MAX_PAYLOAD_SIZE, REPORT_RECEIVE } from \"./constants\"\nimport { jdpack } from \"./pack\"\nimport { JDRegister } from \"./register\"\nimport { JDService } from \"./service\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { isReading, serviceSpecificationFromClassIdentifier } from \"./spec\"\nimport { bufferConcat, bufferConcatMany, fromHex } from \"./utils\"\n\nexport interface SensorAggregatorInputConfig {\n    serviceClass: number\n    // if specified, also specify serviceIndex\n    deviceId?: string\n    serviceIndex?: number\n}\n\nexport interface SensorAggregatorConfig {\n    samplingInterval: number // ms\n    samplesInWindow: number\n    inputs: SensorAggregatorInputConfig[]\n}\n\nexport interface SensorAggregatorStats {\n    numSamples: number\n    sampleSize: number\n}\n\nexport class SensorAggregatorClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        this.service.registersUseAcks = true\n    }\n\n    async setInputs(cfg: SensorAggregatorConfig) {\n        function error(msg: string) {\n            throw new Error(\"Aggregator inputs: \" + msg)\n        }\n        function mapType(tp: number) {\n            switch (tp) {\n                case 1:\n                    return SensorAggregatorSampleType.U8\n                case 2:\n                    return SensorAggregatorSampleType.U16\n                case 4:\n                    return SensorAggregatorSampleType.U32\n                case -1:\n                    return SensorAggregatorSampleType.I8\n                case -2:\n                    return SensorAggregatorSampleType.I16\n                case -4:\n                    return SensorAggregatorSampleType.I32\n                default:\n                    error(\"unknown storage type\")\n            }\n        }\n\n        if (!cfg || !cfg.inputs) error(\"invalid input format\")\n\n        let totalSampleSize = 0\n        const inputs = cfg.inputs?.map(input => {\n            const { deviceId, serviceIndex, serviceClass } = input\n            if (!!deviceId !== !!serviceIndex)\n                error(`deviceId and serviceIndex must be specified together`)\n            const specification = serviceSpecificationFromClassIdentifier(\n                serviceClass\n            )\n            if (!specification)\n                error(\n                    `missing specification from service 0x${serviceClass.toString(\n                        16\n                    )}`\n                )\n            const freeze = !!deviceId\n            const readingReg = specification.packets.find(isReading)\n            if (!readingReg)\n                error(\n                    `service 0x${serviceClass.toString(\n                        16\n                    )} does not have a reading register`\n                )\n            let sampleType: SensorAggregatorSampleType = undefined\n            let sampleSize = 0\n            let sampleShift = 0\n            for (const field of readingReg.fields) {\n                sampleSize += Math.abs(field.storage)\n                if (sampleType === undefined) {\n                    sampleType = mapType(field.storage)\n                    sampleShift = field.shift || 0\n                }\n                if (\n                    sampleType != mapType(field.storage) ||\n                    sampleShift != (field.shift || 0)\n                )\n                    error(\"heterogenous field types\")\n            }\n            totalSampleSize += sampleSize\n            return bufferConcat(\n                freeze ? fromHex(deviceId) : new Uint8Array(8),\n                jdpack(\"u32 u8 u8 u8 i8\", [\n                    serviceClass,\n                    freeze ? serviceIndex : 0,\n                    sampleSize,\n                    sampleType,\n                    sampleShift,\n                ])\n            )\n        })\n\n        if (totalSampleSize > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            error(\"samples won't fit in packet\")\n\n        // u32 is x[4]\n        inputs.unshift(\n            jdpack(\"u16 u16 u32\", [\n                cfg.samplingInterval,\n                cfg.samplesInWindow,\n                0,\n            ])\n        )\n        await this.service\n            .register(SensorAggregatorReg.Inputs)\n            .sendSetAsync(bufferConcatMany(inputs))\n    }\n\n    async collect(numSamples: number) {\n        await this.service\n            .register(SensorAggregatorReg.StreamingSamples)\n            .sendSetPackedAsync(\"u32\", [numSamples])\n    }\n\n    subscribeSample(handler: (sample: number[]) => void): () => void {\n        const reg = this.service.register(SensorAggregatorReg.CurrentSample)\n        return this.mount(\n            reg.subscribe(REPORT_RECEIVE, () =>\n                handler(bufferToArray(reg.data, NumberFormat.Float32LE))\n            )\n        )\n    }\n\n    private async getReg(id: SensorAggregatorReg, f: (v: JDRegister) => any) {\n        const reg = this.service.register(id)\n        await reg.refresh()\n        return f(reg)\n    }\n\n    async stats(): Promise<SensorAggregatorStats> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const info: any = {\n            numSamples: this.getReg(\n                SensorAggregatorReg.NumSamples,\n                r => r.intValue\n            ),\n            sampleSize: this.getReg(\n                SensorAggregatorReg.SampleSize,\n                r => r.intValue\n            ),\n        }\n        for (const id of Object.keys(info)) {\n            info[id] = await info[id]\n        }\n        return info\n    }\n}\n","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    createStyles,\n    Grid,\n    makeStyles,\n    Switch,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport DeviceActions from \"./DeviceActions\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport FieldDataSet from \"./FieldDataSet\"\nimport useDeviceName from \"./devices/useDeviceName\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister\n    handleRegisterCheck: (register: JDRegister) => void\n    recording: boolean\n    registerChecked: boolean\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        register,\n        handleRegisterCheck,\n        recording,\n        registerChecked,\n        liveDataSet,\n    } = props\n    const gridBreakpoints = useGridBreakpoints()\n    const classes = useStyles()\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return (\n        <Grid item {...gridBreakpoints} key={\"source\" + register.id}>\n            <Card>\n                <CardHeader\n                    subheader={register.service.name}\n                    title={`${deviceName}/${register.name}`}\n                    action={\n                        <DeviceActions\n                            device={register.service.device}\n                            showReset={true}\n                        />\n                    }\n                />\n                <CardContent>\n                    {register.fields.map(field => (\n                        <span key={field.id}>\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"large\"\n                                style={{\n                                    color:\n                                        (registerChecked &&\n                                            liveDataSet?.colorOf(field)) ||\n                                        \"#ccc\",\n                                }}\n                            />\n                            {field.name}\n                        </span>\n                    ))}\n                </CardContent>\n                <CardActions>\n                    <Switch\n                        disabled={recording}\n                        onChange={handleCheck}\n                        checked={registerChecked}\n                    />\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[]\n    registerIdsChecked: string[]\n    recording?: boolean\n    handleRegisterCheck: (register: JDRegister) => void\n    liveDataSet?: FieldDataSet\n}) {\n    const {\n        readingRegisters,\n        registerIdsChecked,\n        recording,\n        handleRegisterCheck,\n        liveDataSet,\n    } = props\n\n    return (\n        <Grid container spacing={2}>\n            {readingRegisters.map(register => {\n                const registerChecked =\n                    registerIdsChecked.indexOf(register.id) > -1\n                return (\n                    <ReadingFieldGridItem\n                        key={register.id}\n                        register={register}\n                        registerChecked={registerChecked}\n                        recording={recording}\n                        handleRegisterCheck={handleRegisterCheck}\n                        liveDataSet={liveDataSet}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n","import { useContext } from \"react\";\nimport { DeviceFilter, ServiceFilter } from \"../../../jacdac-ts/src/jdom/bus\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SelectWithLabel(props: {\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown }>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n}) {\n    const {\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n    } = props\n    const labelId = useId()\n    const descrId = useId()\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n            >\n                {none && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import React from \"react\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectEvent(props: {\n    events: JDEvent[]\n    eventId: string\n    onChange: (eventId: string) => void\n    friendlyName?: boolean,\n    label?: string\n}) {\n    const { events, eventId, onChange, friendlyName, label } = props\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string)\n    }\n\n    return (\n        <SelectWithLabel\n            helperText={label || \"choose an event\"}\n            value={eventId}\n            onChange={handleChange}\n            disabled={!events?.length}\n        >\n            {events?.map(ev => (\n                <MenuItem key={ev.id} value={ev.id}>\n                    {friendlyName ? ev.friendlyName : ev.name}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@material-ui/core\";\nimport { Button, IconButton } from \"gatsby-theme-material-ui\";\nimport React, { useContext } from \"react\";\nimport { prettyDuration } from \"../../jacdac-ts/src/jdom/pretty\";\nimport ServiceManagerContext from \"./ServiceManagerContext\";\nimport Trend from \"./Trend\";\nimport useGridBreakpoints from './useGridBreakpoints';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FieldDataSet from \"./FieldDataSet\";\n\n\nexport default function DataSetGrid(props: {\n    tables: FieldDataSet[],\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { tables, handleDeleteTable } = props;\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const gridBreakpoints = useGridBreakpoints(tables?.length)\n\n    const handleDownload = (table: FieldDataSet) => () => {\n        const sep = ','\n        const csv = table.toCSV(sep)\n        fileStorage.saveText(`${table.name}.csv`, csv)\n    }\n    const handelDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n    return <Grid container spacing={2}>\n        {tables.map((table) =>\n            <Grid item {...gridBreakpoints} key={`result` + table.id}>\n                <Card>\n                    <CardHeader\n                        subheader={`${table.rows.length} rows, ${prettyDuration(table.duration)}`} />\n                    <CardContent>\n                        <div>{table.headers.join(', ')}</div>\n                        <Trend dataSet={table} height={8} mini={true} />\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<SaveAltIcon />}\n                            onClick={handleDownload(table)}>\n                            Save\n                        </Button>\n                        {handleDeleteTable &&\n                            <IconButton onClick={handelDelete(table)}>\n                                <DeleteIcon />\n                            </IconButton>}\n                    </CardActions>\n                </Card>\n            </Grid>)}\n    </Grid>\n}","import { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"./useServices\"\n\nexport default function useEvents(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n}) {\n    const services = useServices(options)\n    const events = arrayConcatMany(services.map(srv => srv.events))\n    return events\n}\n","import React, { useState, useContext, useEffect } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport {\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    createStyles,\n    Switch,\n    Card,\n    CardActions,\n} from \"@material-ui/core\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@material-ui/icons/Stop\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport useChange from \"../../jacdac/useChange\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport FieldDataSet from \"../../components/FieldDataSet\"\nimport Trend from \"../../components/Trend\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../../components/ui/Alert\"\nimport SelectEvent from \"../../components/select/SelectEvent\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport {\n    EVENT,\n    REPORT_UPDATE,\n    SRV_SENSOR_AGGREGATOR,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { arrayConcatMany, throttle } from \"../../../jacdac-ts/src/jdom/utils\"\nimport DataSetGrid from \"../../components/DataSetGrid\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport ReadingFieldGrid from \"../../components/ReadingFieldGrid\"\nimport DeviceCardHeader from \"../../components/DeviceCardHeader\"\nimport { SensorAggregatorClient } from \"../../../jacdac-ts/src/jdom/sensoraggregatorclient\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport ServiceManagerContext from \"../../components/ServiceManagerContext\"\nimport useChartPalette from \"../../components/useChartPalette\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useEvents from \"../../components/hooks/useEvents\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginBottom: theme.spacing(1),\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        field: {\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1.5),\n        },\n        segment: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        },\n        row: {\n            marginBottom: theme.spacing(0.5),\n        },\n        buttons: {\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n        },\n        trend: {\n            width: theme.spacing(10),\n        },\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live) set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nexport default function Collector() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles()\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const [recording, setRecording] = useState(false)\n    const [tables, setTables] = useState<FieldDataSet[]>([])\n    const [, setRecordingLength] = useState(0)\n    const [prefix, setPrefix] = useState(\"data\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"100\")\n    const [samplingDuration, setSamplingDuration] = useState(\"10\")\n    const [liveDataSet, setLiveDataSet] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const chartPalette = useChartPalette()\n    const readingRegisters = useChange(bus, bus =>\n        arrayConcatMany(\n            bus.devices().map(device =>\n                device\n                    .services()\n                    .filter(srv => isSensor(srv.specification))\n                    .map(srv => srv.readingRegister)\n            )\n        )\n    )\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n    const aggregators: JDService[] = useChange(bus, bus =>\n        bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR })\n    )\n    const aggregator: JDService = aggregators.find(\n        srv => srv.id == aggregatorId\n    )\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(\n        (parseFloat(samplingDuration) * 1000) / samplingIntervalDelayi\n    )\n    const errorSamplingIntervalDelay =\n        isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const triggerEvent = bus.node(triggerEventId) as JDEvent\n    const startEnabled = !!recordingRegisters?.length\n    const events = useEvents()\n\n    useEffect(() => {\n        //console.log(`trigger event`, triggerEventId, triggerEvent)\n        const un = triggerEvent?.subscribe(EVENT, () => {\n            //console.log(`trigger toggle recoring`, recording)\n            toggleRecording()\n        })\n        //console.log(`mounted`, triggerEvent)\n        return () => {\n            //console.log(`unmount trigger`)\n            if (un) un()\n        }\n    }, [triggerEvent, recording, registerIdsChecked, liveDataSet])\n\n    const createSensorConfig = () => ({\n        samplingInterval: samplingIntervalDelayi,\n        samplesInWindow: 10,\n        inputs: recordingRegisters.map(reg => ({\n            serviceClass: reg.service.serviceClass,\n        })),\n    })\n    const saveConfig = () => {\n        const sensorConfig = JSON.stringify(createSensorConfig(), null, 2)\n        fileStorage.saveText(\n            `${prefix || \"jacdac\"}-sensor-config.json`,\n            sensorConfig\n        )\n    }\n    const newDataSet = (registerIds: string[], live: boolean) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `${prefix || \"data\"}${tables.length}`,\n                  live,\n                  chartPalette\n              )\n            : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveDataSet(newDataSet(registerIdsChecked, true))\n    }\n    const stopRecording = () => {\n        if (recording) {\n            //console.log(`stop recording`, liveDataSet)\n            setTables([liveDataSet, ...tables])\n            setLiveDataSet(newDataSet(registerIdsChecked, true))\n            setRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!recording && recordingRegisters.length) {\n            setLiveDataSet(newDataSet(registerIdsChecked, false))\n            setRecording(true)\n            if (aggregator) {\n                const client = new SensorAggregatorClient(aggregator)\n                await client.setInputs(createSensorConfig())\n                client.collect(samplingCount)\n            }\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg =>\n            reg.subscribe(REPORT_UPDATE, () => {})\n        )\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (recording) stopRecording()\n        else startRecording()\n    }\n    const handleSamplingIntervalChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handlePrefixChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPrefix(event.target.value.trim())\n    }\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n    const handleDeleteTable = (table: FieldDataSet) => {\n        const i = tables.indexOf(table)\n        if (i > -1) {\n            tables.splice(i, 1)\n            setTables([...tables])\n        }\n    }\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? \"\" : srv?.id\n        setAggregatorId(id)\n    }\n    const updateLiveData = () => {\n        setLiveDataSet(liveDataSet)\n        setRecordingLength(liveDataSet.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveDataSet) return\n        //console.log(values)\n        liveDataSet.addRow(values)\n        if (recording && liveDataSet.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg =>\n            reg.sendSetIntAsync(samplingIntervalDelayi)\n        )\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error || (aggregator && recording)) return undefined\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi)\n        const stopStreaming = startStreamingRegisters()\n        return () => {\n            clearInterval(interval)\n            stopStreaming()\n        }\n    }, [\n        recording,\n        samplingIntervalDelayi,\n        samplingCount,\n        registerIdsChecked,\n        aggregator,\n    ])\n    useEffect(() => {\n        if (aggregator) {\n            const client = new SensorAggregatorClient(aggregator)\n            return client.subscribeSample(values => addRow(values))\n        }\n        return () => {}\n    }, [recording, liveDataSet, registerIdsChecked, aggregator])\n\n    return (\n        <div className={classes.root}>\n            <h1>Data Collector</h1>\n            <p>\n                Use this page to collect streaming data from Jacdac devices into\n                various output formats.\n            </p>\n            {!!aggregators.length && (\n                <div key=\"aggregators\">\n                    <h3>(Optional) Choose a data aggregator</h3>\n                    <p>\n                        A <Link to=\"/services/aggregator\">data aggregator</Link>{\" \"}\n                        service collects collects sensor data on the bus and\n                        returns an aggregated at regular intervals.\n                    </p>\n                    <Grid container>\n                        {aggregators.map(aggregator => (\n                            <Grid key={\"aggregate\" + aggregator.id} item xs={4}>\n                                <Card>\n                                    <DeviceCardHeader\n                                        device={aggregator.device}\n                                        showAvatar={true}\n                                    />\n                                    <CardActions>\n                                        <Switch\n                                            checked={\n                                                aggregatorId == aggregator.id\n                                            }\n                                            disabled={recording}\n                                            onChange={handleAggregatorChecked(\n                                                aggregator\n                                            )}\n                                        />\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            )}\n            <div key=\"sensors\">\n                <h3>Choose sensors</h3>\n                {!readingRegisters.length && (\n                    <Alert className={classes.grow} severity=\"info\">\n                        Waiting for sensor...\n                    </Alert>\n                )}\n                {!!readingRegisters.length && (\n                    <ReadingFieldGrid\n                        readingRegisters={readingRegisters}\n                        registerIdsChecked={registerIdsChecked}\n                        recording={recording}\n                        liveDataSet={liveDataSet}\n                        handleRegisterCheck={handleRegisterCheck}\n                    />\n                )}\n            </div>\n            <div key=\"record\">\n                <h3>Record data</h3>\n                {aggregator && (\n                    <p>\n                        Record the sensor input configuration in order to up\n                        your ML model later on.\n                    </p>\n                )}\n                <div className={classes.buttons}>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        color={recording ? \"secondary\" : \"primary\"}\n                        aria-label=\"start/stop recording\"\n                        title=\"start/stop recording\"\n                        onClick={toggleRecording}\n                        startIcon={recording ? <StopIcon /> : <PlayArrowIcon />}\n                        disabled={!startEnabled}\n                    >\n                        {recording ? \"Stop\" : \"Start\"}\n                    </Button>\n                    {aggregator && (\n                        <Button\n                            variant=\"contained\"\n                            title=\"save sensor input configuration\"\n                            onClick={saveConfig}\n                            startIcon={<SaveIcon />}\n                            disabled={recording}\n                        >\n                            Save configuration\n                        </Button>\n                    )}\n                </div>\n                <div className={classes.row}>\n                    <TextField\n                        className={classes.field}\n                        error={errorSamplingIntervalDelay}\n                        disabled={recording}\n                        label=\"Sampling interval\"\n                        value={samplingIntervalDelay}\n                        variant=\"outlined\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    ms\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={handleSamplingIntervalChange}\n                    />\n                    <TextField\n                        className={classes.field}\n                        error={errorSamplingDuration}\n                        disabled={recording}\n                        label=\"Sampling duration\"\n                        value={samplingDuration}\n                        variant=\"outlined\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    s\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={handleSamplingDurationChange}\n                    />\n                    <TextField\n                        className={classes.field}\n                        disabled={recording}\n                        label=\"File name prefix\"\n                        value={prefix}\n                        variant=\"outlined\"\n                        onChange={handlePrefixChange}\n                    />\n                    <SelectEvent\n                        events={events}\n                        eventId={triggerEventId}\n                        onChange={handleTriggerChange}\n                        label={\"Start Event\"}\n                    />\n                </div>\n            </div>\n            {liveDataSet && (\n                <Trend\n                    key=\"trends\"\n                    height={12}\n                    dataSet={liveDataSet}\n                    horizon={LIVE_HORIZON}\n                    dot={true}\n                    gradient={true}\n                />\n            )}\n            {!!tables.length && (\n                <div key=\"recordings\">\n                    <h3>Recordings</h3>\n                    <DataSetGrid\n                        tables={tables}\n                        handleDeleteTable={handleDeleteTable}\n                    />\n                </div>\n            )}\n        </div>\n    )\n\n    //{liveDataSet && <DataSetTable key=\"datasettable\" className={classes.segment} dataSet={liveDataSet} maxRows={3} minRows={3} />}\n}\n"],"sourceRoot":""}