{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/markdown.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx","webpack://jacdac-docs/./src/components/tools/VMEditorRunner.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor-runner.tsx"],"names":["refresh_env","registers","k","register","retry","val","undefined","refresh","unpackedValue","writeReg","reg","fmt","ev","sendSetPackedAsync","VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","writeRegister","jdreg","packFormat","lookup","e","root","type","object","fld","property","field","fields","f","value","refreshEnvironment","JDServiceClient","VMEnvironment","notifyOnChange","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","serviceEnv","getService","getRootName","Object","values","forEach","s","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","id","lit","IT4Functions","args","prompt","context","supportedExpressions","parseITTTMarkdownToJSON","filecontent","filename","replace","info","description","roles","events","handlers","backticksType","errors","lineNo","currentHandler","handlerHeading","symbolResolver","SpecSymbolResolver","shortId","pair","serviceSpecificationFromName","serviceShortName","error","jsep","split","line","processLine","message","finishHandler","trim","m","exec","interpret","slice","hd","cont","expanded","processCommand","commands","command","guard","sym","r","indexOf","reset","msg","some","file","MyRoleManager","bus","notify","_roles","_devices","on","DEVICE_ANNOUNCE","dev","addServices","DEVICE_DISCONNECT","removeServices","services","key","keys","nameMatch","shortName","filter","d","n1","n2","cn1","toLowerCase","cn2","getServicesFromName","addRoleService","existingInstance","provider","serviceProviderDefinitionFromServiceClass","classIdentifier","addServiceProvider","VMStatus","IT4CommandEvaluator","gc","checkExpression","expr","evaluate","_status","Running","inst","Completed","Stopped","IT4CommandRunner","_eval","status","step","isWaiting","finish","cancel","IT4HandlerRunner","stopped","_commandIndex","_currentCommand","post_process","Ready","IT4ProgramRunner","program","_waitQueue","_running","_rm","_env","run","_handlers","h","index","emit","start","nextTime","VMRunner","props","json","factory","useCallback","testRunner","useMemo","useChange","t","handleRun","handleCancel","running","VM_MARKDOWN_SOURCE_STORAGE_KEY","VMEditorRunner","useContext","JacdacContext","useLocalStorage","source","setSource","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-runner-tsx-d2456a388c08b26f3dc5.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","import { isEvent, isRegister } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\n\nexport async function refresh_env(registers: SMap<JDRegister>) {\n    for (const k in registers) {\n        const register = registers[k]\n        let retry = 0\n        let val: any = undefined\n        do {\n            await register.refresh()\n            val = register.unpackedValue?.[0]\n        } while (val === undefined && retry++ < 2)\n    }\n}\n\n// TODO: you want [ev] to be PackedValues and handle the arrays yourself.\nasync function writeReg(reg: JDRegister, fmt: string, ev: any) {\n    await reg.sendSetPackedAsync(fmt, [ev], true)\n}\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public writeRegister(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        if (jdreg) {\n            writeReg(jdreg, jdreg.specification?.packFormat, ev)\n            return true\n        }\n        return false\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public refreshEnvironment() {\n        refresh_env(this._registers)\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(\n        private readonly notifyOnChange: () => void\n    ) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, this.notifyOnChange)\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.notifyOnChange()\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        return this._envs[root]\n    }\n\n    public refreshEnvironment() {\n        Object.values(this._envs).forEach(s => s?.refreshEnvironment())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return undefined\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public writeRegister(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.writeRegister(reg, ev)\n        }\n        return false\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        Object.values(this._envs).forEach(vs => vs.unmount())\n    }\n}\n","/*\nThe JD-VM runs a program, which is a set of handlers. Each handler is of the form\n•\twait on event/condition, followed by a\n•\tsequence of guarded commands – the sequence is executed atomically (though may suspend if it contains a wait)\nAfter a handler finishes executing, it restarts (there is an implicit event loop around all the handlers, as usual). \n \nWe will have a small key-value store to keep program state (perhaps we will have the ability to store lists of values as well as basic values) across the handler executions.\n \nCommands can talk to JD services (probably via roles), as well as read/write program state, and wait on events/expressions. Any command can be guarded by an expression, for conditional execution.\n \nExpressions can be against service registers (as in the test case) and program state.\n \n*/\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env(id.name))\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","export interface IT4GuardedCommand {\n    guard?: jsep.Expression\n    command: jsep.CallExpression\n}\n\nexport interface IT4Handler {\n    description: string\n    commands: IT4GuardedCommand[]\n}\n\nexport interface IT4Role {\n    role: string\n    serviceShortName: string\n}\n\n\nexport interface IT4Program {\n    description: string\n    roles: IT4Role[]\n    registers: string[]\n    events: string[]\n    handlers: IT4Handler[]\n    errors?: jdspec.Diagnostic[]\n}\n\nexport type JDIT4Functions =\n    | \"awaitEvent\"\n    | \"awaitCondition\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"role\"\n\nexport const IT4Functions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"role\",\n        args: [\"Identifier\", \"Identifier\"],\n        prompt: `role variable {1} of service type {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n]\n","import jsep from \"jsep\"\n\nimport { SpecSymbolResolver } from \"../../jacdac-spec/spectool/jdutils\"\nimport { IT4Program, IT4Handler, IT4Functions } from \"./ir\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\nimport { SystemReg } from \"../jdom/constants\"\nimport { intOfBuffer } from \"../jdom/buffer\"\n\nconst supportedExpressions: jsep.ExpressionType[] = [\n    \"MemberExpression\",\n    \"ArrayExpression\",\n    \"BinaryExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\nexport function parseITTTMarkdownToJSON(\n    filecontent: string,\n    filename = \"\"\n): IT4Program {\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: IT4Program = {\n        description: \"\",\n        roles: [],\n        registers: [],\n        events: [],\n        handlers: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentHandler: IT4Handler = null\n    let handlerHeading = \"\"\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        (role: string) => {\n            // lookup in roles first\n            let shortId = info.roles.find(pair => pair.role === role)\n            if (shortId) {\n                // must succeed\n                return serviceSpecificationFromName(shortId.serviceShortName)\n            } else {\n                let service = serviceSpecificationFromName(role)\n                if (!service) {\n                    error(`can't find service with shortId=${role}`)\n                    return undefined\n                }\n                return service\n            }\n        },\n        supportedExpressions,\n        jsep,\n        e => error(e)\n    )\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentHandler) finishHandler(symbolResolver)\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" ||\n            line.slice(0, 4) == \"    \" ||\n            /^\\t/.exec(line)\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                handlerHeading = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\") {\n                    if (!info.description) info.description = cont.trim()\n                    else error(\"use ## to start a handler, not #\")\n                } else if (hd == \"##\") {\n                    if (currentHandler) finishHandler(symbolResolver)\n                    handlerHeading = cont.trim()\n                }\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function processCommand(expanded: string) {\n        if (!currentHandler) {\n            if (!handlerHeading)\n                error(`every handler must have a description (via ##)`)\n            currentHandler = {\n                description: handlerHeading,\n                commands: [],\n            }\n            handlerHeading = \"\"\n        }\n\n        const ret = symbolResolver.processLine(expanded, IT4Functions)\n\n        if (ret) {\n            const [command, root] = ret\n\n            if (currentHandler.commands.length === 0) {\n                if (command.id === \"role\") {\n                    // TODO: check\n                    let role = (root.arguments[0] as jsep.Identifier).name\n                    let serviceShortName = (root\n                        .arguments[1] as jsep.Identifier).name\n                    let service = serviceSpecificationFromName(serviceShortName)\n                    if (!service)\n                        error(\n                            `can't find service with shortId=${serviceShortName}`\n                        )\n                    else if (info.roles.find(pair => pair.role === role))\n                        error(`role with name ${role} already declared`)\n                    else\n                        info.roles.push({\n                            role: role,\n                            serviceShortName: serviceShortName,\n                        })\n                    return\n                } else if (\n                    command.id !== \"awaitEvent\" &&\n                    command.id !== \"awaitCondition\"\n                ) {\n                    error(\n                        `An ITTT handler must begin with call to an await function (awaitEvent | awaitCondition)`\n                    )\n                    return\n                }\n            } else {\n                if (command.id === \"role\") {\n                    error(`roles must be declared at beginning of handler`)\n                }\n            }\n\n            currentHandler.commands.push({ guard: undefined, command: root })\n        }\n    }\n\n    function finishHandler(sym: SpecSymbolResolver) {\n        if (currentHandler.commands.length > 0)\n            info.handlers.push(currentHandler)\n        sym.registers.forEach(r => { if (info.registers.indexOf(r) < 0) info.registers.push(r) })\n        sym.events.forEach(e => { if (info.events.indexOf(e) < 0) info.events.push(e) })\n        sym.reset();\n        currentHandler = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../src/servers/servers\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<JDService | string> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            let key = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] === \"string\" &&\n                    this.nameMatch(\n                        this._roles[k] as string,\n                        s.specification.shortName\n                    )\n            )\n            if (key && this._devices.indexOf(dev) === -1) {\n                this._roles[key] = s\n                this._devices.push(dev)\n                if (this.notify) this.notify(key, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            let key = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] !== \"string\" &&\n                    dev.services().indexOf(this._roles[k] as JDService) >= 0\n            )\n            if (key) {\n                let service = this._roles[key] as JDService\n                this._roles[key] = (this._roles[\n                    key\n                ] as JDService).specification.shortName\n                if (this.notify) this.notify(key, service, false)\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        let s = this._roles[role]\n        return !s || typeof s === \"string\" ? undefined : s\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortName, root))\n    }\n\n    public addRoleService(role: string, serviceShortName: string) {\n        const s = this._roles[role]\n        if (s && typeof(s) !== \"string\") \n            return\n        let existingInstance = Object.values(this._roles).find(\n            r =>\n                (typeof r === \"string\" &&\n                    this.nameMatch(r, serviceShortName)) ||\n                (typeof r === \"object\" &&\n                    this.nameMatch(r.specification.shortName, serviceShortName))\n        )\n        this._roles[role] = serviceShortName\n        let ret = this.getServicesFromName(serviceShortName)\n        if (existingInstance || ret.length === 0) {\n            // spin up a new simulator\n            let service = serviceSpecificationFromName(serviceShortName)\n            if (service) {\n                let provider = serviceProviderDefinitionFromServiceClass(\n                    service?.classIdentifier\n                )\n                if (provider)\n                    addServiceProvider(this.bus, provider)\n            }\n        } else {\n            this._roles[role] = ret[0]\n        }\n    }\n}\n","import { IT4Program, IT4Handler, IT4GuardedCommand } from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE } from \"../jdom/constants\"\n\nexport enum VMStatus {\n    Ready,\n    Running,\n    Completed,\n    Stopped,\n}\n\ninterface Environment {\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeRegister: (e: jsep.MemberExpression | string, v: any) => boolean\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    refreshEnvironment: () => void\n    unsubscribe: () => void\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    constructor(\n        private readonly env: Environment,\n        private readonly gc: IT4GuardedCommand\n    ) {}\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier).name\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e) ? true : false\n    }\n\n    public evaluate() {\n        // console.log(unparse(this.gc.command))\n        this._status = VMStatus.Running\n        const args = this.gc.command.arguments\n        switch (this.inst) {\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                const reg = args[0] as jsep.MemberExpression\n                if (\n                    (this.inst === \"writeRegister\" &&\n                        this.env.writeRegister(reg, ev)) ||\n                    (this.inst === \"writeLocal\" && this.env.writeLocal(reg, ev))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(env: Environment, gc: IT4GuardedCommand) {\n        this._eval = new IT4CommandEvaluator(env, gc)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    reset() {\n        this.status = VMStatus.Running\n    }\n\n    step() {\n        if (this.isWaiting) {\n            this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped: boolean = false\n\n    constructor(\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        this.reset()\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this._commandIndex = undefined\n        this._currentCommand = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private post_process() {\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    // run-to-completion semantics\n    step() {\n        if (this.stopped) return\n        if (this._commandIndex === undefined) {\n            this._commandIndex = 0\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n        }\n        this._currentCommand.step()\n        this.post_process()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this._commandIndex < this.handler.commands.length - 1\n        ) {\n            this._commandIndex++\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n            this._currentCommand.step()\n            this.post_process()\n        }\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[]\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _rm: MyRoleManager\n\n    constructor(private readonly program: IT4Program, bus: JDBus) {\n        super()\n        this._rm = new MyRoleManager(bus, (role, service, added) => {\n            this._env.serviceChanged(role, service, added)\n            if (added) {\n                this.program.registers.forEach(r => {\n                    let [root, reg] = r.split(\".\")\n                    if (root === role) {\n                        this._env.registerRegister(role, reg)\n                    }\n                })\n                this.program.events.forEach(e => {\n                    let [root, ev] = e.split(\".\")\n                    if (root === role) {\n                        this._env.registerEvent(role, ev)\n                    }\n                })\n            }\n        })\n        this._env = new VMEnvironment(() => {\n            this.run()\n        })\n        this._handlers = program.handlers.map(\n            (h, index) => new IT4HandlerRunner(index, this._env, h)\n        )\n        this._waitQueue = this._handlers.slice(0)\n    }\n\n    get status() {\n        const ret =\n            this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n    }\n\n    start() {\n        this.program.roles.forEach(role => {\n            this._rm.addRoleService(role.role, role.serviceShortName)\n        })\n        this._running = true\n        this.emit(CHANGE)\n        this.run()\n    }\n\n    run() {\n        if (!this._running) return\n        this._env.refreshEnvironment()\n        if (this._waitQueue.length > 0) {\n            let nextTime: IT4HandlerRunner[] = []\n            this._waitQueue.forEach(h => {\n                h.step()\n                if (h.status !== VMStatus.Stopped) {\n                    if (h.status === VMStatus.Completed) h.reset()\n                    nextTime.push(h)\n                }\n            })\n            this._waitQueue = nextTime\n            this._env.consumeEvent()\n        } else {\n            this.emit(CHANGE)\n        }\n    }\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Grid, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n\nexport default function VMRunner(props: { json: IT4Program; bus: JDBus }) {\n    const { json, bus } = props\n    const factory = useCallback(\n        bus => json && new IT4ProgramRunner(json, bus),\n        [json]\n    )\n    const testRunner = useMemo(() => factory(bus), [json])\n    const status = useChange(testRunner, t => t.status)\n    const handleRun = () => testRunner.start()\n    const handleCancel = () => testRunner.cancel()\n    const running = status === VMStatus.Running\n\n    return (\n        <Button\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <LoadingProgress /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n","import React, { useMemo, useContext } from \"react\"\nimport { parseITTTMarkdownToJSON } from \"../../../jacdac-ts/src/vm/markdown\"\nimport useLocalStorage from \"../useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport { Grid } from \"@material-ui/core\"\nimport GridHeader from \"../ui/GridHeader\"\nimport Alert from \"../ui/Alert\"\nimport VMRunner from \"../vm/VMRunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DashBoard from \"../dashboard/Dashboard\"\n\nconst VM_MARKDOWN_SOURCE_STORAGE_KEY = \"jacdac:vmeditorsource:markdown\"\n\nexport default function VMEditorRunner() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [source, setSource] = useLocalStorage(\n        VM_MARKDOWN_SOURCE_STORAGE_KEY,\n        `# VM Handler program\\n\\n`\n    )\n    const json = useMemo(() => parseITTTMarkdownToJSON(source), [source])\n    return (\n        <Grid spacing={2} container>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={source}\n                    language={\"markdown\"}\n                    onChange={setSource}\n                    annotations={json?.errors}\n                />\n            </Grid>\n            <GridHeader title=\"Preview\" />\n            {json && bus && (\n                <Grid item xs={12}>\n                    <VMRunner json={json} bus={bus} />\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <DashBoard />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditorRunner from \"../../components/tools/VMEditorRunner\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>VM Editor/Runner</h1>\n            <VMEditorRunner />\n        </>\n    )\n}\n"],"sourceRoot":""}