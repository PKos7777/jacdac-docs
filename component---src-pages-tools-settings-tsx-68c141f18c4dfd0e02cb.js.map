{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/settingsclient.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts","webpack://jacdac-docs/./src/components/SettingsCard.tsx","webpack://jacdac-docs/./src/pages/tools/settings.tsx"],"names":["SettingsClient","service","registersUseAcks","clear","sendCmdAsync","SettingsCmd","listKeys","inp","InPipeReader","bus","sendPacketAsync","openCommand","readAll","output","keys","map","pkt","stringData","filter","k","list","jdunpack","key","value","kv","setValue","trim","undefined","deleteValue","Packet","jdpack","emit","CHANGE","setStringValue","stringToBuffer","getValue","sendCmdAwaitResponseAsync","resp","data","rkey","console","error","getStringValue","bufferToString","JDServiceClient","useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","transport","type","ConnectAlert","useServices","options","services","JSON","stringify","useServiceClient","factory","deps","useState","client","setClient","useEffect","c","unmount","SettingRow","mutable","isSecret","displayName","slice","handleComponentDelete","nameError","valueError","AddSettingRow","setName","secret","setSecret","secretLabelId","useId","handleNameChange","ev","target","handleValueChange","handleChecked","checked","handleAdd","keyError","SettingsCard","srv","values","useChangeAsync","handleClear","secrets","publics","device","Page","useServiceProviderFromServiceClass","SRV_SETTINGS","id"],"mappings":"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","file":"component---src-pages-tools-settings-tsx-68c141f18c4dfd0e02cb.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { CHANGE, SettingsCmd } from \"./constants\"\nimport { jdpack, jdunpack } from \"./pack\"\nimport Packet from \"./packet\"\nimport { InPipeReader } from \"./pipes\"\nimport { JDService } from \"./service\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { bufferToString, stringToBuffer } from \"./utils\"\n\nexport default class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useContext } from \"react\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    Grid,\n    Switch,\n    TextField,\n} from \"@material-ui/core\"\nimport React, { ChangeEvent, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport useServiceClient from \"./useServiceClient\"\nimport SettingsClient from \"../../jacdac-ts/src/jdom/settingsclient\"\nimport { useChangeAsync } from \"../jacdac/useChange\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from \"@material-ui/icons/Delete\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@material-ui/icons/Add\"\nimport CmdButton from \"./CmdButton\"\nimport { useId } from \"react-use-id-hook\"\nimport LoadingProgress from \"./ui/LoadingProgress\"\n\nfunction SettingRow(props: {\n    client: SettingsClient\n    name: string\n    value?: string\n    mutable?: boolean\n}) {\n    const { client, name, value, mutable } = props\n    const isSecret = name[0] == \"$\"\n    const displayName = isSecret ? name.slice(1) : name\n    const handleComponentDelete = async () => {\n        await client.deleteValue(name)\n    }\n    const nameError = \"\"\n    const valueError = \"\"\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1}>\n                <Grid item>\n                    <TextField\n                        error={!!nameError}\n                        variant=\"outlined\"\n                        label=\"key\"\n                        helperText={nameError}\n                        value={displayName}\n                        disabled={true}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        helperText={valueError}\n                        value={isSecret ? \"...\" : value}\n                        disabled={true}\n                    />\n                </Grid>\n                {mutable && (\n                    <Grid item>\n                        <CmdButton\n                            trackName=\"settings.delete\"\n                            title=\"Delete settings\"\n                            onClick={handleComponentDelete}\n                            icon={<DeleteIcon />}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction AddSettingRow(props: { client: SettingsClient }) {\n    const { client } = props\n    const [name, setName] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const [secret, setSecret] = useState(true)\n    const secretLabelId = useId()\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setName(ev.target.value.trim())\n    }\n    const handleValueChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setValue(ev.target.value)\n    }\n    const handleChecked = (ev, checked: boolean) => {\n        setSecret(checked)\n    }\n    const handleAdd = async () => {\n        await client.setStringValue(`${secret ? \"$\" : \"\"}${name}`, value)\n        setName(\"\")\n        setValue(\"\")\n        setSecret(true)\n    }\n    const keyError = \"\"\n    const valueError = \"\"\n\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1} alignContent=\"center\">\n                <Grid item>\n                    <TextField\n                        error={!!keyError}\n                        variant=\"outlined\"\n                        label=\"Add key\"\n                        helperText={keyError}\n                        value={name}\n                        onChange={handleNameChange}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        label=\"value\"\n                        helperText={valueError}\n                        value={value}\n                        onChange={handleValueChange}\n                    />\n                </Grid>\n                <Grid item>\n                    <Switch\n                        checked={secret}\n                        onChange={handleChecked}\n                        aria-labelledby={secretLabelId}\n                    />\n                    <label id={secretLabelId}>Secret</label>\n                </Grid>\n                <Grid item>\n                    <CmdButton\n                        trackName=\"settings.add\"\n                        variant=\"contained\"\n                        disabled={!name || !!keyError || !!valueError}\n                        title=\"Add setting\"\n                        onClick={handleAdd}\n                        icon={<AddIcon />}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function SettingsCard(props: {\n    service: JDService\n    mutable?: boolean\n}) {\n    const { service, mutable } = props\n    const client = useServiceClient(service, srv => new SettingsClient(srv))\n    const values = useChangeAsync(client, c => c?.list())\n    const handleClear = async () => await client?.clear()\n\n    const secrets = values?.filter(value => value.key[0] === \"$\")\n    const publics = values?.filter(value => value.key[0] !== \"$\")\n\n    if (!client) return <LoadingProgress /> // wait till loaded\n\n    return (\n        <Card>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                <Grid container spacing={2}>\n                    {mutable && <AddSettingRow client={client} key=\"add\" />}\n                    {!!publics?.length && (\n                        <Grid item xs={12}>\n                            Settings\n                        </Grid>\n                    )}\n                    {publics?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                        />\n                    ))}\n                    {!!secrets?.length && (\n                        <Grid item xs={12}>\n                            Secrets\n                        </Grid>\n                    )}\n                    {secrets?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                        />\n                    ))}\n                </Grid>\n            </CardContent>\n            {mutable && (\n                <CardActions>\n                    <CmdButton\n                        trackName=\"settings.clearall\"\n                        title=\"Clear all settings\"\n                        icon={<DeleteIcon />}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </CmdButton>\n                </CardActions>\n            )}\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { Grid } from \"@material-ui/core\"\nimport { SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport SettingsCard from \"../../components/SettingsCard\"\nimport useServices from \"../../components/hooks/useServices\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\n\nexport default function Page() {\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    const services = useServices({ serviceClass: SRV_SETTINGS })\n\n    return (\n        <>\n            <h1>Device Settings</h1>\n            <p>\n                Configure settings in a{\" \"}\n                <Link to=\"/services/settings/\">settings</Link> service.\n            </p>\n            {<ConnectAlert serviceClass={SRV_SETTINGS} />}\n            <Grid container spacing={2}>\n                {services.map(service => (\n                    <Grid key={service.id} item xs={12} lg={6}>\n                        <SettingsCard service={service} mutable={true} />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    )\n}\n"],"sourceRoot":""}