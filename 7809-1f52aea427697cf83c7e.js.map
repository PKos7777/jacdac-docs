{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardJoystick.tsx"],"names":["buttonLabels","JoystickButtons","decay","value","rate","precision","nv","Math","abs","JoystickWidget","props","service","register","useRegister","JoystickReg","useRegisterUnpackedValue","x","y","server","useServiceServer","color","hostValues","reading","values","onUpdate","newx","newy","buttons","setValues","refresh","useWidgetTheme","active","background","controlBackground","dragSurfaceRef","useRef","useState","grabbing","setGrabbing","w","w2","cx","cy","rp","rc","rj","pw","ph","jx","jy","jw","updateJoystickDrag","bounds","current","getBoundingClientRect","dx","left","width","dy","top","height","angle","atan2","distance","min","sqrt","pow","cos","sin","handlePointerDown","ev","preventDefault","clientX","clientY","handlePointerUp","handlePointerMove","useAnimationFrame","ax","ay","nx","ny","handleStyle","cursor","ArcadeButton","ro","pressure","ri","button","onRefresh","textProps","checked","title","label","handleDown","down","handleUp","up","buttonProps","useSvgButtonProps","DashboardJoystick","variantRegister","variant","buttonsAvailableRegister","buttonsAvailable","undefined","JOYSTICK_GAMEPAD_EXTRA_BUTTONS","JoystickVariant","directionRegister","analog","JOYSTICK_DPAD_BUTTONS","hasButtons","h","cw","ch","sro","sri","scy","pos","useMemo","id","small","filter","p","handleRefresh","abx","aby","abr","abw","padcx","padcy","padr","map"],"mappings":"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","file":"7809-1f52aea427697cf83c7e.js","sourcesContent":["import React, { CSSProperties, useMemo, useRef, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport JoystickServer, {\n    JOYSTICK_DPAD_BUTTONS,\n    JOYSTICK_GAMEPAD_EXTRA_BUTTONS,\n} from \"../../../jacdac-ts/src/servers/joystickserver\"\nimport {\n    JoystickButtons,\n    JoystickReg,\n    JoystickVariant,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useAnimationFrame from \"../hooks/useAnimationFrame\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst buttonLabels = {\n    [JoystickButtons.Left]: \"\\u25C4\",\n    [JoystickButtons.Up]: \"\\u25B2\",\n    [JoystickButtons.Down]: \"\\u25BC\",\n    [JoystickButtons.Right]: \"\\u25BA\",\n}\n\nfunction decay(value: number, rate: number, precision: number) {\n    let nv = value * rate\n    if (Math.abs(nv) < precision) nv = 0\n    return nv\n}\n\nfunction JoystickWidget(props: DashboardServiceProps) {\n    const { service } = props\n    const register = useRegister(service, JoystickReg.Direction)\n    const [, x, y] = useRegisterUnpackedValue<\n        [JoystickButtons, number, number]\n    >(register, props)\n    const server = useServiceServer<JoystickServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n\n    const hostValues = (): [number, number] => {\n        const [, x, y] = server.reading.values()\n        return [x, y]\n    }\n    const onUpdate = (newx: number, newy: number) => {\n        const [buttons] = server.reading.values()\n        server.reading.setValues([buttons, newx, newy])\n        register.refresh()\n    }\n    const { active, background, controlBackground } = useWidgetTheme(color)\n    const dragSurfaceRef = useRef<SVGCircleElement>()\n    const [grabbing, setGrabbing] = useState(false)\n\n    const w = 40\n    const w2 = w >> 1\n    const cx = w2\n    const cy = w2\n    const rp = 2\n    const rc = 6\n    const rj = 10\n    const pw = 12\n    const ph = 8\n\n    const jx = cx + (x || 0) * rj\n    const jy = cy + (y || 0) * rj\n    const jw = 1\n\n    const updateJoystickDrag = (x: number, y: number) => {\n        const bounds = dragSurfaceRef.current.getBoundingClientRect()\n\n        const dx = (x - bounds.left) * (w / bounds.width) - w2\n        const dy = (y - bounds.top) * (w / bounds.height) - w2\n\n        const angle = Math.atan2(dy, dx)\n        const distance =\n            Math.min(Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)), rj) / rj\n\n        const newx = distance * Math.cos(angle)\n        const newy = distance * Math.sin(angle)\n\n        onUpdate(newx, newy)\n    }\n\n    const handlePointerDown = async (\n        ev: React.PointerEvent<SVGCircleElement>\n    ) => {\n        ev.preventDefault()\n        setGrabbing(true)\n        updateJoystickDrag(ev.clientX, ev.clientY)\n    }\n    const handlePointerUp = (ev: React.PointerEvent<SVGCircleElement>) => {\n        ev.preventDefault()\n        setGrabbing(false)\n    }\n    const handlePointerMove = async (\n        ev: React.PointerEvent<SVGCircleElement>\n    ) => {\n        ev.preventDefault()\n        if (grabbing) updateJoystickDrag(ev.clientX, ev.clientY)\n    }\n\n    useAnimationFrame(() => {\n        if (!server || grabbing) return false // let use do its thing\n        const [ax, ay] = hostValues()\n        const nx = decay(ax, 0.9, 16)\n        const ny = decay(ay, 0.9, 16)\n\n        // async\n        onUpdate(nx, ny)\n\n        return nx !== 0 || ny !== 0\n    }, [server, grabbing])\n\n    const handleStyle: CSSProperties = {\n        cursor: grabbing ? \"grabbing\" : \"grab\",\n    }\n\n    return (\n        <>\n            <circle\n                ref={dragSurfaceRef}\n                className=\"joystick-background\"\n                cx={cx}\n                cy={cy}\n                r=\"16\"\n                fill={background}\n            ></circle>\n            <rect\n                className=\"dpad-up\"\n                x={\"16\"}\n                y=\"6\"\n                width={ph}\n                height={pw}\n                rx={rp}\n                fill={controlBackground}\n            ></rect>\n            <rect\n                className=\"dpad-down\"\n                x=\"16\"\n                y=\"22\"\n                width={ph}\n                height={pw}\n                rx={rp}\n                fill={controlBackground}\n            ></rect>\n            <rect\n                className=\"dpad-right\"\n                x=\"22\"\n                y=\"16\"\n                width={pw}\n                height={ph}\n                ry={rp}\n                fill={controlBackground}\n            ></rect>\n            <rect\n                className=\"dpad-left\"\n                x=\"6\"\n                y=\"16\"\n                width={pw}\n                height={ph}\n                ry={rp}\n                fill={controlBackground}\n            ></rect>\n            <circle\n                className=\"dpad-center\"\n                cx={cx}\n                cy={cy}\n                r={rc}\n                fill={controlBackground}\n            ></circle>\n            {server ? (\n                <circle\n                    className=\"joystick-handle\"\n                    cx={jx}\n                    cy={jy}\n                    r={rc}\n                    fill={background}\n                    stroke={active}\n                    strokeWidth={jw}\n                    tabIndex={0}\n                    role=\"button\"\n                    aria-label=\"joystick handle\"\n                    arial-live=\"polite\"\n                    onPointerMove={handlePointerMove}\n                    onPointerDown={handlePointerDown}\n                    onPointerUp={handlePointerUp}\n                    onPointerLeave={handlePointerUp}\n                    style={handleStyle}\n                />\n            ) : (\n                <circle\n                    className=\"joystick-handle\"\n                    cx={jx}\n                    cy={jy}\n                    r={rc}\n                    fill={background}\n                    stroke={active}\n                    strokeWidth={jw}\n                    aria-label=\"joystick handle\"\n                />\n            )}\n        </>\n    )\n}\n\nfunction ArcadeButton(props: {\n    cx: number\n    cy: number\n    ro: number\n    ri: number\n    pressure: number\n    button: JoystickButtons\n    server: JoystickServer\n    onRefresh: () => void\n    color?: \"primary\" | \"secondary\"\n}) {\n    const { cx, cy, ro, color, pressure, ri, button, server, onRefresh } = props\n    const { textProps, active, background, controlBackground } =\n        useWidgetTheme(color)\n    const checked = (pressure || 0) > 0\n    const title = JoystickButtons[button]\n    const label = buttonLabels[button] || title[0]\n\n    const handleDown = () => {\n        server?.down(button) //, 0.7)\n        onRefresh()\n    }\n    const handleUp = () => {\n        server?.up(button)\n        onRefresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(\n        title,\n        handleDown,\n        handleUp\n    )\n\n    return (\n        <g\n            transform={`translate(${cx},${cy})`}\n            aria-label={`button ${title} ${checked ? \"down\" : \"up\"}`}\n        >\n            <circle cx={0} cy={0} r={ro} fill={background} />\n            <circle\n                cx={0}\n                cy={0}\n                r={ri}\n                fill={checked ? active : controlBackground}\n                {...buttonProps}\n            >\n                <title>{title}</title>\n            </circle>\n            <text cx={0} cy={0} fontSize={ri} {...textProps}>\n                {label}\n            </text>\n        </g>\n    )\n}\n\nexport default function DashboardJoystick(props: DashboardServiceProps) {\n    const { service } = props\n    const variantRegister = useRegister(service, JoystickReg.Variant)\n    let [variant] = useRegisterUnpackedValue<[JoystickVariant]>(\n        variantRegister,\n        props\n    )\n    const buttonsAvailableRegister = useRegister(\n        service,\n        JoystickReg.ButtonsAvailable\n    )\n    const [buttonsAvailable] = useRegisterUnpackedValue<[JoystickButtons]>(\n        buttonsAvailableRegister,\n        props\n    )\n\n    // if variant is not specific, infer from buttons\n    if (variant === undefined) {\n        if (buttonsAvailable & JOYSTICK_GAMEPAD_EXTRA_BUTTONS)\n            variant = JoystickVariant.Gamepad\n        else if (!buttonsAvailable || buttonsAvailable === JoystickButtons.A)\n            variant = JoystickVariant.Thumb\n    }\n    const directionRegister = useRegister(service, JoystickReg.Direction)\n    const [buttons] = useRegisterUnpackedValue<\n        [JoystickButtons, number, number]\n    >(directionRegister, props)\n    const server = useServiceServer<JoystickServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background } = useWidgetTheme(color)\n\n    // buttonsAvailable should be defined by now\n    const analog = !(buttonsAvailable & JOYSTICK_DPAD_BUTTONS)\n    const hasButtons = !!(buttonsAvailable & ~JOYSTICK_DPAD_BUTTONS)\n\n    const w = 256\n    const h = 128\n\n    const cw = w / 12\n    const ch = h / 4\n\n    const ro = cw - 2\n    const ri = ro - 4\n\n    const sro = ro - 10\n    const sri = sro - 2\n    const scy = sro\n\n    const pos = useMemo(\n        () =>\n            [\n                {\n                    id: JoystickButtons.Left,\n                    cx: cw * 1.5,\n                    cy: 2 * ch,\n                    small: false,\n                },\n                { id: JoystickButtons.Up, cx: cw * 3, cy: ch, small: false },\n                {\n                    id: JoystickButtons.Right,\n                    cx: cw * 4.5,\n                    cy: 2 * ch,\n                    small: false,\n                },\n                {\n                    id: JoystickButtons.Down,\n                    cx: cw * 3,\n                    cy: 3 * ch,\n                    small: false,\n                },\n                {\n                    id: JoystickButtons.A,\n                    cx: cw * 10.5,\n                    cy: ch * 1.25,\n                    small: false,\n                },\n                {\n                    id: JoystickButtons.B,\n                    cx: cw * 9.5,\n                    cy: ch * 2.75,\n                    small: false,\n                },\n                { id: JoystickButtons.Menu, cx: cw * 7, cy: scy, small: true },\n                {\n                    id: JoystickButtons.Select,\n                    cx: cw * 6,\n                    cy: scy,\n                    small: true,\n                },\n\n                { id: JoystickButtons.Exit, cx: cw * 8, cy: scy, small: true },\n                { id: JoystickButtons.Reset, cx: cw * 9, cy: scy, small: true },\n            ].filter(p => !!(p.id & buttonsAvailable)),\n        [buttonsAvailable]\n    )\n\n    const handleRefresh = async () => await directionRegister.refresh()\n\n    const abx = cw * 8 + 1\n    const aby = ch * 3 + 4\n    const abr = cw / 2\n    const abw = cw * 5 - 6\n    const padcx = 3 * cw\n    const padcy = 2 * ch\n    const padr = 2.6 * cw\n\n    // need button info\n    if (buttonsAvailable === undefined) return <LoadingProgress />\n\n    return (\n        <SvgWidget width={w} height={h}>\n            {!analog && (\n                <circle\n                    cx={padcx}\n                    cy={padcy}\n                    r={padr}\n                    fill=\"none\"\n                    stroke={background}\n                    strokeWidth={4}\n                />\n            )}\n            {analog && (\n                <g transform={`scale(${padr / 16}) translate(${-1.8},${-1.8})`}>\n                    <JoystickWidget {...props} />\n                </g>\n            )}\n            {hasButtons && (\n                <rect\n                    transform={`rotate(-66, ${abx}, ${aby})`}\n                    x={abx}\n                    y={aby}\n                    rx={abr}\n                    ry={abr}\n                    width={abw}\n                    height={cw * 2.2}\n                    fill=\"none\"\n                    stroke={background}\n                    strokeWidth={4}\n                />\n            )}\n            {pos.map(({ id, cx, cy, small }) => (\n                <ArcadeButton\n                    key={id}\n                    cx={cx}\n                    cy={cy}\n                    ro={small ? sro : ro}\n                    ri={small ? sri : ri}\n                    button={id}\n                    server={server}\n                    onRefresh={handleRefresh}\n                    pressure={buttons & id ? 1 : 0}\n                    color={color}\n                />\n            ))}\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}