{"version":3,"file":"8743-ef8fe3af67470abbeb8d.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAGA,IAAMM,OAAO,GAAG,EAAhB;AASe,SAASC,iBAAT,CAA2BC,KAA3B,EAAyD;AACpE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8BT,+CAAQ,CAAsB,EAAtB,CAA5C;;AAEA,MAAMU,aAAa,GAAIC,IAAD,IAAwB;AAC1C,QAAI,CAACA,IAAL,EAAW;AAEX,QAAM,CAACC,IAAD,EAAOC,YAAP,EAAqBC,IAArB,EAA2B,GAAGC,OAA9B,IAAyCJ,IAA/C;AACAF,IAAAA,aAAa,CAACD,UAAU,IAAI;AACxB,UAAMQ,GAAG,GAAGR,UAAU,CAACS,KAAX,CAAiB,CAAjB,CAAZ;AACA,UAAMC,GAAG,GAAG;AAAEN,QAAAA,IAAF;AAAQC,QAAAA,YAAR;AAAsBC,QAAAA,IAAtB;AAA4BC,QAAAA;AAA5B,OAAZ;AACAC,MAAAA,GAAG,CAACG,IAAJ,CAASD,GAAT;;AACA,aAAOF,GAAG,CAACI,MAAJ,GAAahB,OAApB;AAA6BY,QAAAA,GAAG,CAACK,KAAJ;AAA7B;;AACA,aAAOb,UAAP;AACH,KANY,CAAb;AAOH,GAXD;;AAaAT,EAAAA,gDAAS,CACL,MACIQ,OAAO,CAACe,SAAR,CAAkBpB,oFAAlB,EAAmCqB,GAAD,IAAiB;AAC/C,QAAIC,MAAJ;AACA,QAAM;AAAEb,MAAAA,IAAF;AAAQc,MAAAA;AAAR,QAA2BF,GAAjC;;AACA,YAAQE,cAAR;AACI,WAAKxB,2HAAL;AACIuB,QAAAA,MAAM,GAAGrB,4EAAQ,CAACQ,IAAD,EAAO,uBAAP,CAAjB;AACA;;AACJ,WAAKV,2HAAL;AACIuB,QAAAA,MAAM,GAAGrB,4EAAQ,CAACQ,IAAD,EAAO,mBAAP,CAAjB;AACA;;AACJ,WAAKV,2HAAL;AACIuB,QAAAA,MAAM,GAAGrB,4EAAQ,CAACQ,IAAD,EAAO,mBAAP,CAAjB;AACA;AATR;;AAWA,QAAIa,MAAJ,EACId,aAAa,CACTc,MAAM,CAACK,MAAP,CAAcC,CAAC,IAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,EAA5C,CADS,CAAb;AAGP,GAlBD,CAFC,EAqBL,CAACvB,OAAD,EAAUC,UAAV,CArBK,CAAT;AAwBA,MAAMwB,IAAI,GAAGxB,UAAU,CAClByB,GADQ,CACJC,EAAE;AAAA;;AAAA,0BACHA,EAAE,CAACnB,OADA,gDACH,YAAYc,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,EAAjD,EAAqDK,IAArD,CAA0D,GAA1D,CADG;AAAA,GADE,EAIRN,MAJQ,CAIDO,EAAE,IAAI,CAAC,CAACA,EAJP,EAKRD,IALQ,CAKH,IALG,CAAb;AAMA,sBAAO,8DAAMH,IAAN,CAAP;AACH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardBitRadio.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { BitRadioCmd } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { REPORT_RECEIVE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { jdunpack, PackedValues } from \"../../../jacdac-ts/src/jdom/pack\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\n\nconst HORIZON = 10\n\ninterface RadioMessageProps {\n    time: number\n    deviceSerial: number\n    rssi: number\n    payload: PackedValues\n}\n\nexport default function DashboardBitRadio(props: DashboardServiceProps) {\n    const { service } = props\n    const [lastEvents, setLastEvents] = useState<RadioMessageProps[]>([])\n\n    const appendMessage = (data: PackedValues) => {\n        if (!data) return\n\n        const [time, deviceSerial, rssi, ...payload] = data\n        setLastEvents(lastEvents => {\n            const evs = lastEvents.slice(0)\n            const msg = { time, deviceSerial, rssi, payload }\n            evs.push(msg)\n            while (evs.length > HORIZON) evs.shift()\n            return lastEvents\n        })\n    }\n\n    useEffect(\n        () =>\n            service.subscribe(REPORT_RECEIVE, (pkt: Packet) => {\n                let values: PackedValues\n                const { data, serviceCommand } = pkt\n                switch (serviceCommand) {\n                    case BitRadioCmd.NumberReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[3] f64 s\")\n                        break\n                    case BitRadioCmd.StringReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[1] s\")\n                        break\n                    case BitRadioCmd.BufferReceived:\n                        values = jdunpack(data, \"u32 u32 i8 x[1] b\")\n                        break\n                }\n                if (values)\n                    appendMessage(\n                        values.filter(v => v !== undefined && v !== \"\")\n                    )\n            }),\n        [service, lastEvents]\n    )\n\n    const text = lastEvents\n        .map(ev =>\n            ev.payload?.filter(v => v !== undefined && v !== \"\").join(\",\")\n        )\n        .filter(el => !!el)\n        .join(\"\\n\")\n    return <pre>{text}</pre>\n}\n"],"names":["React","useEffect","useState","BitRadioCmd","REPORT_RECEIVE","jdunpack","HORIZON","DashboardBitRadio","props","service","lastEvents","setLastEvents","appendMessage","data","time","deviceSerial","rssi","payload","evs","slice","msg","push","length","shift","subscribe","pkt","values","serviceCommand","NumberReceived","StringReceived","BufferReceived","filter","v","undefined","text","map","ev","join","el"],"sourceRoot":""}