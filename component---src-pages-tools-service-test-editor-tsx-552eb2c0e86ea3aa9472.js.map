{"version":3,"sources":["webpack://jacdac-docs/./jacdac-ts/node_modules/jsep/build/jsep.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Info.js","webpack://jacdac-docs/./node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","webpack://jacdac-docs/./src/components/ServiceSpecificationSelect.tsx","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/SelectService.tsx","webpack://jacdac-docs/./src/components/test/ServiceTest.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./node_modules/use-editable/dist/use-editable.es.js","webpack://jacdac-docs/./src/components/ui/HighlightTextField.tsx","webpack://jacdac-docs/./jacdac-ts/jacdac-spec/spectool/jdtest.ts","webpack://jacdac-docs/./src/components/tools/ServiceTestEditor.tsx","webpack://jacdac-docs/./src/pages/tools/service-test-editor.tsx"],"names":["useStyles","makeStyles","createStyles","root","minWidth","ServiceSpecificationSelect","props","label","serviceClass","setServiceClass","variant","fullWidth","error","useState","Math","random","labelId","classes","specs","serviceSpecifications","filter","spec","test","shortId","handleChange","event","parseInt","target","value","map","classIdentifier","name","cmp","a","b","d","major","minor","patch","pre","length","i","aa","bb","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","slice","m","exec","split","semverCmp","useFetch","url","options","undefined","response","setResponse","setError","status","setStatus","loading","setLoading","useEffectAsync","mounted","fetch","res","json","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","version","type","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","slug","replace","parseRepoUrl","owner","fetchLatestRelease","uri","resp","releases","ignoreThrottled","Error","fetchReleaseBinary","downloadUrl","headers","Accept","req","blob","firmware","fetchText","tag","path","mimeType","text","src","useFetchApi","console","log","useRepository","useLatestRelease","useLatestReleases","SelectService","useContext","JacdacContext","bus","onSelect","services","useChange","n","gridBreakpoints","useGridBreakpoints","handleSelect","service","id","device","Diagnostics","hostDefinition","serviceProviderDefinitionFromServiceClass","handleStartSimulator","addServiceProvider","ServiceTestRunnerSelect","ServiceTest","serviceSpec","showStartSimulator","serviceTest","serviceTestFromServiceClass","setService","useEffect","subscribe","DISCONNECT","Flags","theme","hr","background","palette","disabled","marginBottom","start","width","spacing","GridHeader","title","count","action","clsx","GithubPullRequestButton","lazy","AnnotationTooltip","withStyles","arrow","color","main","tooltip","backgroundColor","common","white","boxShadow","shadows","fontSize","typography","body2","Tooltip","HighlightTextField","code","onChange","language","annotations","pullRequestTitle","pullRequestPath","pullRequestDescription","DarkModeContext","darkMode","DARK_THEME","LIGHT_THEME","editorRef","useRef","useEditable","indentation","defaultProps","className","style","tokens","getTokenProps","minHeight","whiteSpace","line","annotation","find","message","el","borderBottom","token","empty","key","supportedExpressions","parseSpecificationTestMarkdownToJSON","filecontent","filename","info","description","serviceClassIdentifier","tests","backticksType","errors","lineNo","currentTest","testHeading","testPrompt","processLine","e","finishTest","trim","interpret","hd","cont","expanded","processCommand","argsRequiredOptional","args","optional","prompt","registers","events","testCommands","call","callee","testCommandFunctions","getTestCommandFunctions","cmdIndex","findIndex","jsep","arguments","exprVisitor","p","c","indexOf","command","minArgs","maxArgs","newExpressions","def","lit","raw","toString","push","concat","processArguments","processCalls","eventSymTable","forEach","arg","argType","pkt","lookupEvent","lookupRegister","elements","lookupReplace","member","object","property","computed","testExpressionFunctions","getTestExpressionFunctions","parent","callExpr","tef","context","ce","expected","packets","kind","fld","reg","getRegister","isBoolOrNumericFormat","packFormat","child","Array","isArray","lookup","Object","keys","k","toName","val","parseIntFloat","fields","f","msg","some","file","SERVICE_TEST_SERVICE_STORAGE_KEY","SERVICE_TEST_SOURCE_STORAGE_KEY","SERVICE_MARKDOWN_SOURCE_STORAGE_KEY","ServiceTestEditor","AppContext","useLocalStorage","SRV_BUTTON","source","setSource","markdownSource","setMarkdownSource","useMemo","serviceSpecificationFromClassIdentifier","servicePath","camelName","toLowerCase","handleLoadFromGithub","ghSource","Page"],"mappings":";;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC;AAChC,GAAG;AACH;AACA;AACA;AACA;AACA,wEAAwE;AACxE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,6EAA6E;AAC7E;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA,2BAA2B;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA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;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd,UAAU,kBAAQ;AAClB,UAAU,kBAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,UAAU,iBAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,EAAE,yBAAe;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE,yBAAe;AACjB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,mBAAmB;AAC3C;;AAEA,+CAA+C,QAAQ;AACvD;AACA;;AAEA,6CAA6C,QAAQ;AACrD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;;;;;;;ACrUA;;AACA;AACA;CAMA;;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","file":"component---src-pages-tools-service-test-editor-tsx-552eb2c0e86ea3aa9472.js","sourcesContent":["//     JavaScript Expression Parser (JSEP) 0.4.0\n//     JSEP may be freely distributed under the MIT License\n//     https://ericsmekens.github.io/jsep/\n\n/*global module: true, exports: true, console: true */\n(function (root) {\n  'use strict'; // Node Types\n  // ----------\n  // This is the full set of types that any JSEP node can be.\n  // Store them here to save space when minified\n\n  var COMPOUND = 'Compound',\n      IDENTIFIER = 'Identifier',\n      MEMBER_EXP = 'MemberExpression',\n      LITERAL = 'Literal',\n      THIS_EXP = 'ThisExpression',\n      CALL_EXP = 'CallExpression',\n      UNARY_EXP = 'UnaryExpression',\n      BINARY_EXP = 'BinaryExpression',\n      LOGICAL_EXP = 'LogicalExpression',\n      CONDITIONAL_EXP = 'ConditionalExpression',\n      ARRAY_EXP = 'ArrayExpression',\n      PERIOD_CODE = 46,\n      // '.'\n  COMMA_CODE = 44,\n      // ','\n  SQUOTE_CODE = 39,\n      // single quote\n  DQUOTE_CODE = 34,\n      // double quotes\n  OPAREN_CODE = 40,\n      // (\n  CPAREN_CODE = 41,\n      // )\n  OBRACK_CODE = 91,\n      // [\n  CBRACK_CODE = 93,\n      // ]\n  QUMARK_CODE = 63,\n      // ?\n  SEMCOL_CODE = 59,\n      // ;\n  COLON_CODE = 58,\n      // :\n  throwError = function throwError(message, index) {\n    var error = new Error(message + ' at character ' + index);\n    error.index = index;\n    error.description = message;\n    throw error;\n  },\n      // Operations\n  // ----------\n  // Set `t` to `true` to save space (when minified, not gzipped)\n  t = true,\n      // Use a quickly-accessible map to store all of the unary operators\n  // Values are set to `true` (it really doesn't matter)\n  unary_ops = {\n    '-': t,\n    '!': t,\n    '~': t,\n    '+': t\n  },\n      // Also use a map for the binary operations but set their values to their\n  // binary precedence for quick reference:\n  // see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\n  binary_ops = {\n    '||': 1,\n    '&&': 2,\n    '|': 3,\n    '^': 4,\n    '&': 5,\n    '==': 6,\n    '!=': 6,\n    '===': 6,\n    '!==': 6,\n    '<': 7,\n    '>': 7,\n    '<=': 7,\n    '>=': 7,\n    '<<': 8,\n    '>>': 8,\n    '>>>': 8,\n    '+': 9,\n    '-': 9,\n    '*': 10,\n    '/': 10,\n    '%': 10\n  },\n      // Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n  additional_identifier_chars = {\n    '$': t,\n    '_': t\n  },\n      // Get return the longest key length of any object\n  getMaxKeyLen = function getMaxKeyLen(obj) {\n    var max_len = 0,\n        len;\n\n    for (var key in obj) {\n      if ((len = key.length) > max_len && obj.hasOwnProperty(key)) {\n        max_len = len;\n      }\n    }\n\n    return max_len;\n  },\n      max_unop_len = getMaxKeyLen(unary_ops),\n      max_binop_len = getMaxKeyLen(binary_ops),\n      // Literals\n  // ----------\n  // Store the values to return for the various literals we may encounter\n  literals = {\n    'true': true,\n    'false': false,\n    'null': null\n  },\n      // Except for `this`, which is special. This could be changed to something like `'self'` as well\n  this_str = 'this',\n      // Returns the precedence of a binary operator or `0` if it isn't a binary operator\n  binaryPrecedence = function binaryPrecedence(op_val) {\n    return binary_ops[op_val] || 0;\n  },\n      // Utility function (gets called from multiple places)\n  // Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\n  createBinaryExpression = function createBinaryExpression(operator, left, right) {\n    var type = operator === '||' || operator === '&&' ? LOGICAL_EXP : BINARY_EXP;\n    return {\n      type: type,\n      operator: operator,\n      left: left,\n      right: right\n    };\n  },\n      // `ch` is a character code in the next three functions\n  isDecimalDigit = function isDecimalDigit(ch) {\n    return ch >= 48 && ch <= 57; // 0...9\n  },\n      isIdentifierStart = function isIdentifierStart(ch) {\n    return ch >= 65 && ch <= 90 || // A...Z\n    ch >= 97 && ch <= 122 || // a...z\n    ch >= 128 && !binary_ops[String.fromCharCode(ch)] || // any non-ASCII that is not an operator\n    additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch)); // additional characters\n  },\n      isIdentifierPart = function isIdentifierPart(ch) {\n    return ch >= 65 && ch <= 90 || // A...Z\n    ch >= 97 && ch <= 122 || // a...z\n    ch >= 48 && ch <= 57 || // 0...9\n    ch >= 128 && !binary_ops[String.fromCharCode(ch)] || // any non-ASCII that is not an operator\n    additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch)); // additional characters\n  },\n      // Parsing\n  // -------\n  // `expr` is a string with the passed in expression\n  jsep = function jsep(expr) {\n    // `index` stores the character number we are currently at while `length` is a constant\n    // All of the gobbles below will modify `index` as we move along\n    var index = 0,\n        charAtFunc = expr.charAt,\n        charCodeAtFunc = expr.charCodeAt,\n        exprI = function exprI(i) {\n      return charAtFunc.call(expr, i);\n    },\n        exprICode = function exprICode(i) {\n      return charCodeAtFunc.call(expr, i);\n    },\n        length = expr.length,\n        // Push `index` up to the next non-space character\n    gobbleSpaces = function gobbleSpaces() {\n      var ch = exprICode(index); // space or tab\n\n      while (ch === 32 || ch === 9 || ch === 10 || ch === 13) {\n        ch = exprICode(++index);\n      }\n    },\n        // The main parsing function. Much of this code is dedicated to ternary expressions\n    gobbleExpression = function gobbleExpression() {\n      var test = gobbleBinaryExpression(),\n          consequent,\n          alternate;\n      gobbleSpaces();\n\n      if (exprICode(index) === QUMARK_CODE) {\n        // Ternary expression: test ? consequent : alternate\n        index++;\n        consequent = gobbleExpression();\n\n        if (!consequent) {\n          throwError('Expected expression', index);\n        }\n\n        gobbleSpaces();\n\n        if (exprICode(index) === COLON_CODE) {\n          index++;\n          alternate = gobbleExpression();\n\n          if (!alternate) {\n            throwError('Expected expression', index);\n          }\n\n          return {\n            type: CONDITIONAL_EXP,\n            test: test,\n            consequent: consequent,\n            alternate: alternate\n          };\n        } else {\n          throwError('Expected :', index);\n        }\n      } else {\n        return test;\n      }\n    },\n        // Search for the operation portion of the string (e.g. `+`, `===`)\n    // Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n    // and move down from 3 to 2 to 1 character until a matching binary operation is found\n    // then, return that binary operation\n    gobbleBinaryOp = function gobbleBinaryOp() {\n      gobbleSpaces();\n      var biop,\n          to_check = expr.substr(index, max_binop_len),\n          tc_len = to_check.length;\n\n      while (tc_len > 0) {\n        // Don't accept a binary op when it is an identifier.\n        // Binary ops that start with a identifier-valid character must be followed\n        // by a non identifier-part valid character\n        if (binary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n          index += tc_len;\n          return to_check;\n        }\n\n        to_check = to_check.substr(0, --tc_len);\n      }\n\n      return false;\n    },\n        // This function is responsible for gobbling an individual expression,\n    // e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n    gobbleBinaryExpression = function gobbleBinaryExpression() {\n      var ch_i, node, biop, prec, stack, biop_info, left, right, i, cur_biop; // First, try to get the leftmost thing\n      // Then, check to see if there's a binary operator operating on that leftmost thing\n\n      left = gobbleToken();\n      biop = gobbleBinaryOp(); // If there wasn't a binary operator, just return the leftmost node\n\n      if (!biop) {\n        return left;\n      } // Otherwise, we need to start a stack to properly place the binary operations in their\n      // precedence structure\n\n\n      biop_info = {\n        value: biop,\n        prec: binaryPrecedence(biop)\n      };\n      right = gobbleToken();\n\n      if (!right) {\n        throwError(\"Expected expression after \" + biop, index);\n      }\n\n      stack = [left, biop_info, right]; // Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n\n      while (biop = gobbleBinaryOp()) {\n        prec = binaryPrecedence(biop);\n\n        if (prec === 0) {\n          break;\n        }\n\n        biop_info = {\n          value: biop,\n          prec: prec\n        };\n        cur_biop = biop; // Reduce: make a binary expression from the three topmost entries.\n\n        while (stack.length > 2 && prec <= stack[stack.length - 2].prec) {\n          right = stack.pop();\n          biop = stack.pop().value;\n          left = stack.pop();\n          node = createBinaryExpression(biop, left, right);\n          stack.push(node);\n        }\n\n        node = gobbleToken();\n\n        if (!node) {\n          throwError(\"Expected expression after \" + cur_biop, index);\n        }\n\n        stack.push(biop_info, node);\n      }\n\n      i = stack.length - 1;\n      node = stack[i];\n\n      while (i > 1) {\n        node = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\n        i -= 2;\n      }\n\n      return node;\n    },\n        // An individual part of a binary expression:\n    // e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n    gobbleToken = function gobbleToken() {\n      var ch, to_check, tc_len, node;\n      gobbleSpaces();\n      ch = exprICode(index);\n\n      if (isDecimalDigit(ch) || ch === PERIOD_CODE) {\n        // Char code 46 is a dot `.` which can start off a numeric literal\n        return gobbleNumericLiteral();\n      }\n\n      if (ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\n        // Single or double quotes\n        node = gobbleStringLiteral();\n      } else if (ch === OBRACK_CODE) {\n        node = gobbleArray();\n      } else {\n        to_check = expr.substr(index, max_unop_len);\n        tc_len = to_check.length;\n\n        while (tc_len > 0) {\n          // Don't accept an unary op when it is an identifier.\n          // Unary ops that start with a identifier-valid character must be followed\n          // by a non identifier-part valid character\n          if (unary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n            index += tc_len;\n            return {\n              type: UNARY_EXP,\n              operator: to_check,\n              argument: gobbleToken(),\n              prefix: true\n            };\n          }\n\n          to_check = to_check.substr(0, --tc_len);\n        }\n\n        if (isIdentifierStart(ch)) {\n          node = gobbleIdentifier();\n        } else if (ch === OPAREN_CODE) {\n          // open parenthesis\n          node = gobbleGroup();\n        }\n      }\n\n      if (!node) {\n        return false;\n      }\n\n      gobbleSpaces();\n      ch = exprICode(index); // Gobble properties of of identifiers/strings/arrays/groups.\n      // e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n      // It also gobbles function calls:\n      // e.g. `Math.acos(obj.angle)`\n\n      while (ch === PERIOD_CODE || ch === OBRACK_CODE || ch === OPAREN_CODE) {\n        index++;\n\n        if (ch === PERIOD_CODE) {\n          gobbleSpaces();\n          node = {\n            type: MEMBER_EXP,\n            computed: false,\n            object: node,\n            property: gobbleIdentifier()\n          };\n        } else if (ch === OBRACK_CODE) {\n          node = {\n            type: MEMBER_EXP,\n            computed: true,\n            object: node,\n            property: gobbleExpression()\n          };\n          gobbleSpaces();\n          ch = exprICode(index);\n\n          if (ch !== CBRACK_CODE) {\n            throwError('Unclosed [', index);\n          }\n\n          index++;\n        } else if (ch === OPAREN_CODE) {\n          // A function call is being made; gobble all the arguments\n          node = {\n            type: CALL_EXP,\n            'arguments': gobbleArguments(CPAREN_CODE),\n            callee: node\n          };\n        }\n\n        gobbleSpaces();\n        ch = exprICode(index);\n      }\n\n      return node;\n    },\n        // Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n    // keep track of everything in the numeric literal and then calling `parseFloat` on that string\n    gobbleNumericLiteral = function gobbleNumericLiteral() {\n      var number = '',\n          ch,\n          chCode;\n\n      while (isDecimalDigit(exprICode(index))) {\n        number += exprI(index++);\n      }\n\n      if (exprICode(index) === PERIOD_CODE) {\n        // can start with a decimal marker\n        number += exprI(index++);\n\n        while (isDecimalDigit(exprICode(index))) {\n          number += exprI(index++);\n        }\n      }\n\n      ch = exprI(index);\n\n      if (ch === 'e' || ch === 'E') {\n        // exponent marker\n        number += exprI(index++);\n        ch = exprI(index);\n\n        if (ch === '+' || ch === '-') {\n          // exponent sign\n          number += exprI(index++);\n        }\n\n        while (isDecimalDigit(exprICode(index))) {\n          //exponent itself\n          number += exprI(index++);\n        }\n\n        if (!isDecimalDigit(exprICode(index - 1))) {\n          throwError('Expected exponent (' + number + exprI(index) + ')', index);\n        }\n      }\n\n      chCode = exprICode(index); // Check to make sure this isn't a variable name that start with a number (123abc)\n\n      if (isIdentifierStart(chCode)) {\n        throwError('Variable names cannot start with a number (' + number + exprI(index) + ')', index);\n      } else if (chCode === PERIOD_CODE) {\n        throwError('Unexpected period', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: parseFloat(number),\n        raw: number\n      };\n    },\n        // Parses a string literal, staring with single or double quotes with basic support for escape codes\n    // e.g. `\"hello world\"`, `'this is\\nJSEP'`\n    gobbleStringLiteral = function gobbleStringLiteral() {\n      var str = '',\n          quote = exprI(index++),\n          closed = false,\n          ch;\n\n      while (index < length) {\n        ch = exprI(index++);\n\n        if (ch === quote) {\n          closed = true;\n          break;\n        } else if (ch === '\\\\') {\n          // Check for all of the common escape codes\n          ch = exprI(index++);\n\n          switch (ch) {\n            case 'n':\n              str += '\\n';\n              break;\n\n            case 'r':\n              str += '\\r';\n              break;\n\n            case 't':\n              str += '\\t';\n              break;\n\n            case 'b':\n              str += '\\b';\n              break;\n\n            case 'f':\n              str += '\\f';\n              break;\n\n            case 'v':\n              str += '\\x0B';\n              break;\n\n            default:\n              str += ch;\n          }\n        } else {\n          str += ch;\n        }\n      }\n\n      if (!closed) {\n        throwError('Unclosed quote after \"' + str + '\"', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: str,\n        raw: quote + str + quote\n      };\n    },\n        // Gobbles only identifiers\n    // e.g.: `foo`, `_value`, `$x1`\n    // Also, this function checks if that identifier is a literal:\n    // (e.g. `true`, `false`, `null`) or `this`\n    gobbleIdentifier = function gobbleIdentifier() {\n      var ch = exprICode(index),\n          start = index,\n          identifier;\n\n      if (isIdentifierStart(ch)) {\n        index++;\n      } else {\n        throwError('Unexpected ' + exprI(index), index);\n      }\n\n      while (index < length) {\n        ch = exprICode(index);\n\n        if (isIdentifierPart(ch)) {\n          index++;\n        } else {\n          break;\n        }\n      }\n\n      identifier = expr.slice(start, index);\n\n      if (literals.hasOwnProperty(identifier)) {\n        return {\n          type: LITERAL,\n          value: literals[identifier],\n          raw: identifier\n        };\n      } else if (identifier === this_str) {\n        return {\n          type: THIS_EXP\n        };\n      } else {\n        return {\n          type: IDENTIFIER,\n          name: identifier\n        };\n      }\n    },\n        // Gobbles a list of arguments within the context of a function call\n    // or array literal. This function also assumes that the opening character\n    // `(` or `[` has already been gobbled, and gobbles expressions and commas\n    // until the terminator character `)` or `]` is encountered.\n    // e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n    gobbleArguments = function gobbleArguments(termination) {\n      var ch_i,\n          args = [],\n          node,\n          closed = false;\n      var separator_count = 0;\n\n      while (index < length) {\n        gobbleSpaces();\n        ch_i = exprICode(index);\n\n        if (ch_i === termination) {\n          // done parsing\n          closed = true;\n          index++;\n\n          if (termination === CPAREN_CODE && separator_count && separator_count >= args.length) {\n            throwError('Unexpected token ' + String.fromCharCode(termination), index);\n          }\n\n          break;\n        } else if (ch_i === COMMA_CODE) {\n          // between expressions\n          index++;\n          separator_count++;\n\n          if (separator_count !== args.length) {\n            // missing argument\n            if (termination === CPAREN_CODE) {\n              throwError('Unexpected token ,', index);\n            } else if (termination === CBRACK_CODE) {\n              for (var arg = args.length; arg < separator_count; arg++) {\n                args.push(null);\n              }\n            }\n          }\n        } else {\n          node = gobbleExpression();\n\n          if (!node || node.type === COMPOUND) {\n            throwError('Expected comma', index);\n          }\n\n          args.push(node);\n        }\n      }\n\n      if (!closed) {\n        throwError('Expected ' + String.fromCharCode(termination), index);\n      }\n\n      return args;\n    },\n        // Responsible for parsing a group of things within parentheses `()`\n    // This function assumes that it needs to gobble the opening parenthesis\n    // and then tries to gobble everything within that parenthesis, assuming\n    // that the next thing it should see is the close parenthesis. If not,\n    // then the expression probably doesn't have a `)`\n    gobbleGroup = function gobbleGroup() {\n      index++;\n      var node = gobbleExpression();\n      gobbleSpaces();\n\n      if (exprICode(index) === CPAREN_CODE) {\n        index++;\n        return node;\n      } else {\n        throwError('Unclosed (', index);\n      }\n    },\n        // Responsible for parsing Array literals `[1, 2, 3]`\n    // This function assumes that it needs to gobble the opening bracket\n    // and then tries to gobble the expressions as arguments.\n    gobbleArray = function gobbleArray() {\n      index++;\n      return {\n        type: ARRAY_EXP,\n        elements: gobbleArguments(CBRACK_CODE)\n      };\n    },\n        nodes = [],\n        ch_i,\n        node;\n\n    while (index < length) {\n      ch_i = exprICode(index); // Expressions can be separated by semicolons, commas, or just inferred without any\n      // separators\n\n      if (ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\n        index++; // ignore separators\n      } else {\n        // Try to gobble each expression individually\n        if (node = gobbleExpression()) {\n          nodes.push(node); // If we weren't able to find a binary expression and are out of room, then\n          // the expression passed in probably has too much\n        } else if (index < length) {\n          throwError('Unexpected \"' + exprI(index) + '\"', index);\n        }\n      }\n    } // If there's only one expression just try returning the expression\n\n\n    if (nodes.length === 1) {\n      return nodes[0];\n    } else {\n      return {\n        type: COMPOUND,\n        body: nodes\n      };\n    }\n  }; // To be filled in by the template\n\n\n  jsep.version = '0.4.0';\n\n  jsep.toString = function () {\n    return 'JavaScript Expression Parser (JSEP) v' + jsep.version;\n  };\n  /**\n   * @method jsep.addUnaryOp\n   * @param {string} op_name The name of the unary op to add\n   * @return jsep\n   */\n\n\n  jsep.addUnaryOp = function (op_name) {\n    max_unop_len = Math.max(op_name.length, max_unop_len);\n    unary_ops[op_name] = t;\n    return this;\n  };\n  /**\n   * @method jsep.addBinaryOp\n   * @param {string} op_name The name of the binary op to add\n   * @param {number} precedence The precedence of the binary op (can be a float)\n   * @return jsep\n   */\n\n\n  jsep.addBinaryOp = function (op_name, precedence) {\n    max_binop_len = Math.max(op_name.length, max_binop_len);\n    binary_ops[op_name] = precedence;\n    return this;\n  };\n  /**\n   * @method jsep.addIdentifierChar\n   * @param {string} char The additional character to treat as a valid part of an identifier\n   * @return jsep\n   */\n\n\n  jsep.addIdentifierChar = function (char) {\n    additional_identifier_chars[char] = t;\n    return this;\n  };\n  /**\n   * @method jsep.addLiteral\n   * @param {string} literal_name The name of the literal to add\n   * @param {*} literal_value The value of the literal\n   * @return jsep\n   */\n\n\n  jsep.addLiteral = function (literal_name, literal_value) {\n    literals[literal_name] = literal_value;\n    return this;\n  };\n  /**\n   * @method jsep.removeUnaryOp\n   * @param {string} op_name The name of the unary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeUnaryOp = function (op_name) {\n    delete unary_ops[op_name];\n\n    if (op_name.length === max_unop_len) {\n      max_unop_len = getMaxKeyLen(unary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllUnaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllUnaryOps = function () {\n    unary_ops = {};\n    max_unop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeIdentifierChar\n   * @param {string} char The additional character to stop treating as a valid part of an identifier\n   * @return jsep\n   */\n\n\n  jsep.removeIdentifierChar = function (char) {\n    delete additional_identifier_chars[char];\n    return this;\n  };\n  /**\n   * @method jsep.removeBinaryOp\n   * @param {string} op_name The name of the binary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeBinaryOp = function (op_name) {\n    delete binary_ops[op_name];\n\n    if (op_name.length === max_binop_len) {\n      max_binop_len = getMaxKeyLen(binary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllBinaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllBinaryOps = function () {\n    binary_ops = {};\n    max_binop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeLiteral\n   * @param {string} literal_name The name of the literal to remove\n   * @return jsep\n   */\n\n\n  jsep.removeLiteral = function (literal_name) {\n    delete literals[literal_name];\n    return this;\n  };\n  /**\n   * @method jsep.removeAllLiterals\n   * @return jsep\n   */\n\n\n  jsep.removeAllLiterals = function () {\n    literals = {};\n    return this;\n  }; // In desktop environments, have a way to restore the old value for `jsep`\n\n\n  if (typeof exports === 'undefined') {\n    var old_jsep = root.jsep; // The star of the show! It's a function!\n\n    root.jsep = jsep; // And a courteous function willing to move out of the way for other similarly-named objects!\n\n    jsep.noConflict = function () {\n      if (root.jsep === jsep) {\n        root.jsep = old_jsep;\n      }\n\n      return jsep;\n    };\n  } else {\n    // In Node.JS environments\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = jsep;\n    } else {\n      exports.parse = jsep;\n    }\n  }\n})(this);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import { createStyles, makeStyles, MenuItem, TextField, Theme } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { serviceSpecifications } from \"../../jacdac-ts/src/jdom/spec\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            minWidth: \"18rem\",\n        }\n    }),\n);\n\nexport default function ServiceSpecificationSelect(props: {\n    label: string,\n    serviceClass: number;\n    setServiceClass: (serviceClass: number) => void;\n    variant?: \"outlined\" | \"filled\" | \"standard\";\n    fullWidth?: boolean;\n    error?: string;\n}) {\n    const { label, serviceClass, setServiceClass, variant, fullWidth, error } = props;\n    const [labelId] = useState('select-' + Math.random());\n    const classes = useStyles();\n    const specs = serviceSpecifications().filter(spec => !/^_/.test(spec.shortId))\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>\n        setServiceClass(parseInt(event.target.value));\n\n    return <TextField\n        id={labelId}\n        className={classes.root}\n        label={label}\n        error={!!error}\n        helperText={error}\n        value={serviceClass}\n        select\n        variant={variant}\n        fullWidth={fullWidth}\n        onChange={handleChange}>\n        <MenuItem key=\"none\" value=\"NaN\">No service selected</MenuItem>\n        {specs.map(spec => <MenuItem\n            key={spec.classIdentifier}\n            value={spec.classIdentifier}>{spec.name}</MenuItem>)}\n    </TextField>\n}","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                const res = await fetch(url, options)\n                if (!mounted()) return\n                const status = res.status\n                setStatus(status)\n                if (status >= 200 && status <= 204) {\n                    const json = await res.json()\n                    if (!mounted()) return\n                    setResponse(json)\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string): string {\n    return slug.replace(/^https:\\/\\/github.com\\//, \"\")\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<GithubFirmwareRelease> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const uri = `${ROOT}repos/${normalizeSlug(slug)}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    switch (resp.status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return releases[0]\n        }\n        case 404:\n            // unknow repo or no access\n            return undefined\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return undefined\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const downloadUrl = `https://raw.githubusercontent.com/${normalizeSlug(\n        slug\n    )}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const downloadUrl = `https://raw.githubusercontent.com/${normalizeSlug(\n        slug\n    )}/${tag}/${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useRepository(slug: string) {\n    const path = `repos/${normalizeSlug(slug)}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const uri = `repos/${normalizeSlug(slug)}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import React, { useContext } from \"react\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport useChange from \"../jacdac/useChange\"\nimport { Grid, Card, CardActions, Button } from \"@material-ui/core\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport Alert from \"./ui/Alert\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function SelectService(props: {\n    serviceClass: number\n    onSelect: (service: JDService) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { serviceClass, onSelect } = props\n    const services = useChange(bus, n => n.services({ serviceClass }), [])\n    const gridBreakpoints = useGridBreakpoints()\n\n    const handleSelect = (service: JDService) => () => onSelect(service)\n\n    return (\n        <>\n            {!!services.length && (\n                <Grid container spacing={2}>\n                    {services.map(service => (\n                        <Grid key={service.id} item {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={service.device}\n                                    showAvatar={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleSelect(service)}\n                                    >\n                                        Select\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            )}\n            {!services?.length && (\n                <Alert severity=\"info\">\n                    Not seeing your device? Try some of the following.\n                    <ul>\n                        <li>Check that your device is connected</li>\n                        <li>\n                            Use the <strong>packet console</strong> to monitor\n                            packets on the bus\n                        </li>\n                        <li>\n                            Check the class identifier in your annoucement\n                            packets\n                        </li>\n                    </ul>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { AlertTitle } from \"@material-ui/lab\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport Alert from \"../ui/Alert\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\nimport SelectService from \"../SelectService\"\nimport ServiceTestRunner from \"./ServiceTestRunner\"\nimport { DISCONNECT } from \"../../../jacdac-ts/src/jdom/constants\"\n\nfunction Diagnostics(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    const hostDefinition = serviceProviderDefinitionFromServiceClass(serviceClass)\n    const handleStartSimulator = () => addServiceProvider(bus, hostDefinition)\n\n    if (!hostDefinition) return null\n\n    return (\n        <Alert severity=\"info\">\n            <AlertTitle>Developer zone</AlertTitle>\n            <Button variant=\"outlined\" onClick={handleStartSimulator}>\n                start simulator\n            </Button>\n        </Alert>\n    )\n}\n\nfunction ServiceTestRunnerSelect(props: {\n    serviceClass: number\n    onSelect: (service: JDService) => void\n}) {\n    const { serviceClass, onSelect } = props\n    return (\n        <>\n            <h3>Select a device to test</h3>\n            <SelectService serviceClass={serviceClass} onSelect={onSelect} />\n        </>\n    )\n}\n\nexport default function ServiceTest(props: {\n    serviceSpec: jdspec.ServiceSpec\n    serviceTest?: jdtest.ServiceTestSpec\n    showStartSimulator?: boolean\n}) {\n    const {\n        serviceSpec,\n        showStartSimulator,\n        serviceTest = serviceTestFromServiceClass(serviceSpec?.classIdentifier),\n    } = props\n    const { classIdentifier: serviceClass } = serviceSpec\n    const [service, setService] = useState<JDService>(undefined)\n    const handleSelect = (service: JDService) => setService(service)\n    // clear selected service when json changes\n    useEffect(() => {\n        setService(undefined)\n    }, [serviceTest])\n    // clear service if device disconnects\n    useEffect(() => service?.device?.subscribe(DISCONNECT, () => {\n        setService(undefined)\n    }), [service])\n\n    return (\n        <>\n            <h1>\n                {`${serviceSpec.name} tests`}\n                <IconButtonWithTooltip\n                    title=\"go to specification\"\n                    to={`/services/${serviceSpec.shortId}/`}\n                >\n                    <InfoIcon />\n                </IconButtonWithTooltip>\n            </h1>\n            {(Flags.diagnostics || showStartSimulator) && (\n                <Diagnostics serviceClass={serviceClass} />\n            )}\n            {!service && (\n                <ServiceTestRunnerSelect\n                    serviceClass={serviceClass}\n                    onSelect={handleSelect}\n                />\n            )}\n            {service && (\n                <ServiceTestRunner\n                    service={service}\n                    serviceTest={serviceTest}\n                />\n            )}\n        </>\n    )\n}\n","import { Box, Chip, createStyles, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n","import { useState, useMemo, useLayoutEffect } from \"react\";\nvar m = {\n  characterData: !0,\n  characterDataOldValue: !0,\n  childList: !0,\n  subtree: !0\n};\n\nfunction p(c) {\n  var a = window.getSelection();\n  a.empty();\n  a.addRange(c);\n}\n\nfunction q(c) {\n  return (c.metaKey || c.ctrlKey) && !c.altKey && \"KeyZ\" === c.code;\n}\n\nfunction r(c) {\n  c = [c.firstChild];\n\n  for (var b, a = \"\"; b = c.pop();) {\n    b.nodeType === Node.TEXT_NODE ? a += b.textContent : b.nodeType === Node.ELEMENT_NODE && \"BR\" === b.nodeName && (a += \"\\n\"), b.nextSibling && c.push(b.nextSibling), b.firstChild && c.push(b.firstChild);\n  }\n\n  \"\\n\" !== a[a.length - 1] && (a += \"\\n\");\n  return a;\n}\n\nfunction w(c) {\n  var a = window.getSelection().getRangeAt(0),\n      b = a.collapsed ? 0 : a.toString().length,\n      f = document.createRange();\n  f.setStart(c, 0);\n  f.setEnd(a.startContainer, a.startOffset);\n  return {\n    position: c = (f = f.toString()).length,\n    extent: b,\n    content: f = (f = f.split(\"\\n\"))[a = f.length - 1],\n    line: a\n  };\n}\n\nfunction C(c, a, b) {\n  b || (b = a);\n  var f = document.createRange();\n  c = [c.firstChild];\n\n  for (var d, k = 0, g = a; d = c[c.length - 1];) {\n    if (d.nodeType === Node.TEXT_NODE) {\n      if (k + d.textContent.length >= g) {\n        var h = g - k;\n\n        if (g === a) {\n          if (g = f, h < d.textContent.length ? g.setStart(d, h) : g.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          h < (b = d).textContent.length ? a.setEnd(b, h) : a.setEndAfter(b);\n          break;\n        }\n      }\n\n      k += d.textContent.length;\n    } else if (d.nodeType === Node.ELEMENT_NODE && \"BR\" === d.nodeName) {\n      if (k + 1 >= g) {\n        if (g === a) {\n          if (h = f, 0 < d.textContent.length ? h.setStart(d, 0) : h.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          0 < (b = d).textContent.length ? a.setEnd(b, 0) : a.setEndAfter(b);\n          break;\n        }\n      }\n\n      k++;\n    }\n\n    c.pop();\n    d.nextSibling && c.push(d.nextSibling);\n    d.firstChild && c.push(d.firstChild);\n  }\n\n  return f;\n}\n\nexport function useEditable(c, a, b) {\n  function f(l) {\n    var b = c.current;\n\n    if (b) {\n      var a = w(b);\n      b = r(b);\n      a.position += l.length - b.length;\n      e.position = a;\n      e.onChange(l, a);\n    }\n  }\n\n  function k(l, b) {\n    var e = c.current;\n\n    if (e) {\n      var a = window.getSelection().getRangeAt(0);\n      a.deleteContents();\n      a.collapse();\n      var d = b || 0;\n      (a = C(e, b = (a = w(e)).position + (0 > d ? d : 0), a.position + (0 < d ? d : 0))).deleteContents();\n      a.insertNode(document.createTextNode(l));\n      p(C(e, b + l.length));\n    }\n  }\n\n  function d(b) {\n    var a = c.current;\n\n    if (a) {\n      a.focus();\n      var e = 0;\n\n      if (\"number\" == typeof b) {\n        e = b;\n      } else {\n        var l = r(a).split(\"\\n\").slice(0, b.row);\n        b.row && (e += l.join(\"\\n\").length + 1);\n        e += b.column;\n      }\n\n      p(C(a, e));\n    }\n  }\n\n  function g() {\n    var b = c.current;\n    return {\n      text: r(b),\n      position: b = w(b)\n    };\n  }\n\n  function h() {\n    e.observer.disconnect();\n  }\n\n  b || (b = {});\n  var D = useState([])[1],\n      e = useState(function () {\n    var e = {\n      observer: null,\n      disconnected: !1,\n      onChange: a,\n      queue: [],\n      history: [],\n      historyAt: -1,\n      position: null\n    };\n    \"undefined\" != typeof MutationObserver && (e.observer = new MutationObserver(function b(b) {\n      var a;\n      (a = e.queue).push.apply(a, b);\n    }));\n    return e;\n  })[0],\n      n = useMemo(function () {\n    return {\n      update: f,\n      insert: k,\n      move: d,\n      getState: g\n    };\n  }, []);\n\n  if (\"object\" != typeof navigator) {\n    return n;\n  }\n\n  useLayoutEffect(function () {\n    e.onChange = a;\n\n    if (c.current && !b.disabled) {\n      e.disconnected = !1;\n      e.observer.observe(c.current, m);\n\n      if (e.position) {\n        var l = e.position,\n            d = l.position;\n        p(C(c.current, d, d + l.extent));\n      }\n\n      return h;\n    }\n  });\n  useLayoutEffect(function () {\n    if (!c.current || b.disabled) {\n      e.history.length = 0, e.historyAt = -1;\n    } else {\n      var a = c.current;\n\n      if (e.position) {\n        a.focus();\n        var d = e.position,\n            f = d.position;\n        p(C(a, f, f + d.extent));\n      }\n\n      var g = a.style.whiteSpace,\n          h = a.contentEditable,\n          k = !0;\n\n      try {\n        a.contentEditable = \"plaintext-only\";\n      } catch (u) {\n        a.contentEditable = \"true\", k = !1;\n      }\n\n      \"pre\" !== g && (a.style.whiteSpace = \"pre-wrap\");\n      b.indentation && (a.style.tabSize = a.style.MozTabSize = \"\" + b.indentation);\n      d = \"\" + \" \".repeat(b.indentation || 0);\n\n      var x,\n          E = new RegExp(\"^(?:\" + d + \")\"),\n          F = new RegExp(\"^(?:\" + d + \")*(\" + d + \")$\"),\n          t = function t(b) {\n        if (c.current && e.position) {\n          var u = r(a),\n              d = w(a),\n              f = new Date().valueOf(),\n              g = e.history[e.historyAt];\n          !b && 500 > f - x || g && g[1] === u ? x = f : (b = ++e.historyAt, e.history[b] = [d, u], e.history.splice(b + 1), 500 < b && (e.historyAt--, e.history.shift()));\n        }\n      },\n          v = function v() {\n        var b;\n        (b = e.queue).push.apply(b, e.observer.takeRecords());\n        b = w(a);\n\n        if (e.queue.length) {\n          e.observer.disconnect();\n          e.disconnected = !0;\n          var d = r(a);\n          e.position = b;\n\n          for (var c, f; c = e.queue.pop();) {\n            null !== c.oldValue && (c.target.textContent = c.oldValue);\n\n            for (f = c.removedNodes.length - 1; 0 <= f; f--) {\n              c.target.insertBefore(c.removedNodes[f], c.nextSibling);\n            }\n\n            for (f = c.addedNodes.length - 1; 0 <= f; f--) {\n              c.addedNodes[f].parentNode && c.target.removeChild(c.addedNodes[f]);\n            }\n          }\n\n          e.onChange(d, b);\n        }\n      },\n          y = function y(c) {\n        if (!c.defaultPrevented && c.target === a) {\n          if (e.disconnected) {\n            return c.preventDefault(), D([]);\n          }\n\n          if (q(c)) {\n            c.preventDefault(), c.shiftKey ? (c = ++e.historyAt, (c = e.history[c]) || (e.historyAt = e.history.length - 1)) : (c = --e.historyAt, (c = e.history[c]) || (e.historyAt = 0)), c && (e.observer.disconnect(), e.disconnected = !0, e.position = c[0], e.onChange(c[1], c[0]));\n          } else {\n            t();\n\n            if (\"Enter\" === c.key) {\n              c.preventDefault();\n              var d = w(a),\n                  f = /\\S/g.exec(d.content);\n              d = \"\\n\" + d.content.slice(0, f ? f.index : d.content.length);\n              n.insert(d);\n            } else if ((!k || b.indentation) && \"Backspace\" === c.key) {\n              c.preventDefault(), window.getSelection().getRangeAt(0).collapsed ? (d = w(a), d = F.exec(d.content), n.insert(\"\", d ? -d[1].length : -1)) : n.insert(\"\", 0);\n            } else if (b.indentation && \"Tab\" === c.key) {\n              c.preventDefault();\n              f = (d = w(a)).position - d.content.length;\n              var g = r(a);\n              d = c.shiftKey ? g.slice(0, f) + d.content.replace(E, \"\") + g.slice(f + d.content.length) : g.slice(0, f) + (b.indentation ? \" \".repeat(b.indentation) : \"\\t\") + g.slice(f);\n              n.update(d);\n            }\n\n            c.repeat && v();\n          }\n        }\n      },\n          z = function z(b) {\n        b.defaultPrevented || b.isComposing || (q(b) || t(), v(), a.focus());\n      },\n          A = function A(b) {\n        e.position = window.getSelection().rangeCount && b.target === a ? w(a) : null;\n      },\n          B = function B(a) {\n        a.preventDefault();\n        t(!0);\n        n.insert(a.clipboardData.getData(\"text/plain\"));\n        t(!0);\n        v();\n      };\n\n      document.addEventListener(\"selectstart\", A);\n      window.addEventListener(\"keydown\", y);\n      a.addEventListener(\"paste\", B);\n      a.addEventListener(\"keyup\", z);\n      return function () {\n        document.removeEventListener(\"selectstart\", A);\n        window.removeEventListener(\"keydown\", y);\n        a.removeEventListener(\"paste\", B);\n        a.removeEventListener(\"keyup\", z);\n        a.style.whiteSpace = g;\n        a.contentEditable = h;\n      };\n    }\n  }, [c.current, b.disabled, b.indentation]);\n  return n;\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-key */\nimport React, { useContext, useRef, lazy } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useEditable } from \"use-editable\"\nimport { Alert } from \"@material-ui/lab\"\nimport { Grid, Tooltip, withStyles } from \"@material-ui/core\"\nimport Suspense from \"../ui/Suspense\";\nconst GithubPullRequestButton = lazy(() => import('../buttons/GithubPullRequestButton'));\n\nconst AnnotationTooltip = withStyles(theme => ({\n    arrow: {\n        color: theme.palette.error.main,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.error.main,\n        color: theme.palette.common.white,\n        boxShadow: theme.shadows[1],\n        fontSize: theme.typography.body2.fontSize,\n    },\n}))(Tooltip)\n\nexport default function HighlightTextField(props: {\n    language: string\n    code: string\n    onChange: (newValue: string) => void\n    annotations?: jdspec.Diagnostic[]\n    pullRequestTitle?: string\n    pullRequestPath?: string\n    pullRequestDescription?: string\n}) {\n    const {\n        code,\n        onChange,\n        language,\n        annotations,\n        pullRequestTitle,\n        pullRequestPath,\n        pullRequestDescription,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const editorRef = useRef(null)\n\n    useEditable(editorRef, onChange, {\n        disabled: false,\n        indentation: 4,\n    })\n    return (\n        <Grid container spacing={1} direction=\"row\">\n            <Grid item xs={12}>\n                <Highlight\n                    {...defaultProps}\n                    code={code}\n                    language={language as Language}\n                    theme={theme}\n                >\n                    {({ className, style, tokens, getTokenProps }) => (\n                        <pre\n                            ref={editorRef}\n                            className={className}\n                            spellCheck={false}\n                            style={{\n                                ...style,\n                                ...{\n                                    minHeight: \"12rem\",\n                                    whiteSpace: \"pre-wrap\",\n                                },\n                            }}\n                        >\n                            {tokens.map((line, i) => {\n                                const annotation = annotations?.find(\n                                    a => a.line === i + 1\n                                )\n                                const title = annotation?.message\n                                const el = (\n                                    <span\n                                        key={i}\n                                        style={\n                                            annotation && {\n                                                borderBottom: \"dashed 1px red\",\n                                            }\n                                        }\n                                    >\n                                        {line\n                                            .filter(token => !token.empty)\n                                            .map((token, key) => (\n                                                <span\n                                                    {...getTokenProps({\n                                                        token,\n                                                        key,\n                                                    })}\n                                                />\n                                            ))}\n                                        {i < tokens.length - 1 ? \"\\n\" : null}\n                                    </span>\n                                )\n                                return title ? (\n                                    <AnnotationTooltip\n                                        title={title}\n                                        arrow\n                                        key={i}\n                                    >\n                                        {el}\n                                    </AnnotationTooltip>\n                                ) : (\n                                    el\n                                )\n                            })}\n                        </pre>\n                    )}\n                </Highlight>\n            </Grid>\n            {!!annotations?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"error\">\n                        <ul>\n                            {annotations.map((a, i) => (\n                                <li key={i}>\n                                    line {a.line}: {a.message}\n                                </li>\n                            ))}\n                        </ul>\n                    </Alert>\n                </Grid>\n            )}\n            {pullRequestTitle && pullRequestPath && (\n                <Grid item>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            title={pullRequestTitle}\n                            head={pullRequestPath}\n                            description={pullRequestDescription}\n                            files={{\n                                [pullRequestPath + \".md\"]: code,\n                            }}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdspec.d.ts\" />\n/// <reference path=\"jdtest.d.ts\" />\n\nimport { \n    parseIntFloat, \n    getRegister, \n    exprVisitor,\n    isBoolOrNumericFormat\n} from \"./jdutils\"\nimport { getTestCommandFunctions, getTestExpressionFunctions } from \"./jdtestfuns\"\nimport jsep from \"jsep\"\n\nconst supportedExpressions: jsep.ExpressionType[] = [\n    \"MemberExpression\",\n    \"ArrayExpression\",\n    \"BinaryExpression\",\n    \"CallExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\n// we parse a test with respect to an existing ServiceSpec\nexport function parseSpecificationTestMarkdownToJSON(\n    filecontent: string,\n    spec: jdspec.ServiceSpec,\n    filename = \"\"\n): jdtest.ServiceTestSpec {\n    if (!spec)\n        return undefined;\n\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: jdtest.ServiceTestSpec = {\n        description: \"\",\n        serviceClassIdentifier: spec.classIdentifier,\n        tests: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentTest: jdtest.TestSpec = null\n    let testHeading = \"\"\n    let testPrompt = \"\"\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentTest) finishTest()\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" || \n            line.slice(0, 4) == \"    \" ||\n            /^\\t/.exec(line)\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                testHeading = \"\"\n                testPrompt = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\") {\n                    if (!info.description)\n                        info.description = cont.trim()\n                    else \n                        error(\"use ## to start a test, not #\")\n                } else if (hd == \"##\") {\n                    if (currentTest) finishTest()\n                    testHeading = cont.trim()\n                }\n            } else {\n                testPrompt += line\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function argsRequiredOptional(args: any[], optional: boolean = false) {\n        return args.filter(a => !optional && typeof(a) === \"string\" || optional && typeof(a) === \"object\")\n    }\n\n    function processCommand(expanded: string) {\n        // TODO: if there is a prompt, the test has no commands, and\n        // TODO: the first command is not ask/say\n        // TODO: then add a say command\n\n        if (!currentTest) {\n            if (!testHeading)\n                error(`every test must have a description (via ##)`)\n            currentTest = {\n                description: testHeading,\n                prompt: testPrompt,\n                registers: [],\n                events: [],\n                testCommands: [],\n            }\n            testHeading = \"\"\n            testPrompt = \"\"\n        }\n        const call = /^([a-zA-Z]\\w*)\\(.*\\)$/.exec(expanded)\n        if (!call) {\n            error(\n                `a command must be a call to a registered test function (JavaScript syntax)`\n            )\n            return\n        }\n        const [, callee] = call\n        const testCommandFunctions = getTestCommandFunctions();\n        const cmdIndex = testCommandFunctions.findIndex(r => callee == r.id)\n        if (cmdIndex < 0) {\n            error(`${callee} is not a registered test command function.`)\n            return\n        }\n        const root: jsep.CallExpression = <jsep.CallExpression>jsep(expanded)\n        if (\n            !root ||\n            !root.type ||\n            root.type != \"CallExpression\" ||\n            !root.callee ||\n            !root.arguments\n        ) {\n            error(`a command must be a call expression in JavaScript syntax`)\n        } else {\n            // check for unsupported expression types\n            exprVisitor(null, root, (p, c) => {\n                if (supportedExpressions.indexOf(c.type) < 0)\n                    error(`Expression of type ${c.type} not currently supported`)\n            })\n            // check arguments\n            const command = testCommandFunctions[cmdIndex]\n            const minArgs = argsRequiredOptional(command.args).length\n            const maxArgs = command.args.length\n            if (root.arguments.length < minArgs)\n                error(\n                    `${callee} expects at least ${minArgs} arguments; got ${root.arguments.length}`\n                )\n            else if (root.arguments.length > maxArgs) {\n                error(\n                    `${callee} expects at most ${maxArgs} arguments; got ${root.arguments.length}`\n                )\n            }\n            else {\n                // deal with optional arguments\n                let newExpressions: jsep.Expression[] = []\n                for(let i = root.arguments.length; i<command.args.length;i++) {\n                    let [name, def] = command.args[i] as [string, any] \n                    const lit: jsep.Literal = {\n                        type: \"Literal\",\n                        value: def,\n                        raw: def.toString(),\n                    }\n                    newExpressions.push(lit)\n                }\n                root.arguments = root.arguments.concat(newExpressions)\n                // type checking of arguments.\n                processArguments(command, root.arguments);\n                // check all calls in subexpressions\n                processCalls(command, root.arguments)\n            }\n            currentTest.testCommands.push({ prompt: testPrompt, call: root })\n            testPrompt = \"\"\n        }\n\n        function processArguments(command: jdtest.TestFunctionDescription, args: jsep.Expression[]) {\n            let eventSymTable: jdspec.PacketInfo[] = []\n            args.forEach((arg, a) => {\n                let argType = command.args[a]\n                if (typeof(argType) === \"object\")\n                    argType = command.args[a][0]\n                if (argType === \"register\" || argType === \"event\") {\n                   if (arg.type !== \"Identifier\")\n                        error(\n                            `${callee} expects a ${argType} in argument position ${a + 1}`\n                        )\n                   else if (argType === \"event\" && a === 0) { \n                        let pkt = lookupEvent(arg)\n                        if (pkt && eventSymTable.indexOf(pkt) === -1)\n                        eventSymTable.push(pkt)\n                   } else if (argType === \"register\") {\n                        try {\n                            lookupRegister((arg as jsep.Identifier).name, \"\")\n                        } catch (e) {\n                            error(e.message)\n                        }\n                   }\n                } else if (argType === \"events\") {\n                    if (arg.type != 'ArrayExpression')\n                        error(`events function expects a list of service events`)\n                    else {\n                        (arg as jsep.ArrayExpression).elements.forEach(lookupEvent)\n                    }\n                } else if (argType === \"number\" || argType === \"boolean\") {\n                    exprVisitor(root, arg, (p, c) => {\n                        if (p.type !== 'MemberExpression' && c.type === 'Identifier') {\n                            lookupReplace(eventSymTable, p, c as jsep.Identifier)\n                        } else if (c.type === 'ArrayExpression') {\n                            error(\n                                `array expression not allowed in this context`\n                            )\n                        } else if (c.type === 'MemberExpression') {\n                            const member = c as jsep.MemberExpression;\n                            // A member expression must be of form id1.id2\n                            if (member.object.type !== 'Identifier' || member.property.type !== 'Identifier' || member.computed) {\n                                error('property access must be of form id.property')\n                            } else {\n                                lookupReplace(eventSymTable, p, c as jsep.MemberExpression)\n                            }\n                        }\n                    })\n                } else {\n                    error(`unexpected argument type (${argType}) in jdtestfuns.ts`)\n                }\n            })\n        }\n\n        function processCalls(command: jdtest.TestFunctionDescription, args: jsep.Expression[]) {\n            const testExpressionFunctions = getTestExpressionFunctions()\n            args.forEach((arg, a) => {\n                const argType = command.args[a]\n                exprVisitor(root, arg, (parent, callExpr: jsep.CallExpression) => {\n                    if (callExpr.type !== 'CallExpression')\n                        return;\n                    if (callExpr.callee.type !== \"Identifier\")\n                        error(`all calls must be direct calls`)\n                    const id = (<jsep.Identifier>callExpr.callee).name\n                    const tef = testExpressionFunctions.find(r => id == r.id)\n                    if (!tef)\n                        error(\n                            `${id} is not a registered test expression function.`\n                        )\n                    if (tef.context === \"expression\" || tef.context === \"either\") {\n                        if (argType != \"boolean\")\n                            error(`${id} expression function can only be used inside a boolean expression`)\n                        // no nested calls\n                        if (command.context === \"expression\" || command.context === \"either\") \n                            error(`cannot nest ${tef.id} underneath ${command.id}`)\n                        // look under tef\n                        exprVisitor(null, callExpr, (parent, ce: jsep.CallExpression) => {\n                            if (ce.type !== 'CallExpression')\n                                return;\n                            if (ce.callee.type === \"Identifier\" && (<jsep.Identifier>ce.callee).name)\n                                error(`cannot nest ${(<jsep.Identifier>ce.callee).name} underneath ${id}`)\n                        })\n                    }\n                    const expected = tef.args.length\n                    if (expected !== callExpr.arguments.length)\n                        error(\n                            `${callee} expects ${expected} arguments; got ${callExpr.arguments.length}`\n                        )\n                })\n            })\n        }\n\n        function lookupEvent(e: jsep.Expression) {\n            const events = spec.packets?.filter(pkt => pkt.kind == \"event\")\n            if (e.type !== 'Identifier') {\n                error(`event identifier expected`)\n            } else {\n                const id = (e as jsep.Identifier).name\n                const pkt = events.find(p => p.name === id)\n                if (!pkt) {\n                    error(`no event ${id} in specification`)\n                } else {\n                    if (currentTest.events.indexOf(id) < 0)\n                        currentTest.events.push(id)\n                    return pkt;\n                }\n            }\n            return null;\n        }\n    }\n\n    function lookupRegister(root:string, fld:string)  {\n        let reg = getRegister(spec, root, fld)\n        if (reg.pkt && (!reg.fld && !isBoolOrNumericFormat(reg.pkt.packFormat) ||\n                        reg.fld && reg.fld.type && !isBoolOrNumericFormat(reg.fld.type)))\n            error(\"only bool/numeric registers allowed in tests\")\n        // if (!fld && regField.pkt.fields.length > 0)\n        //    error(`register ${root} has fields, but no field specified`)\n        if (currentTest.registers.indexOf(root) < 0)\n            currentTest.registers.push(root)\n    }\n\n    function lookupReplace(events: jdspec.PacketInfo[], parent: jsep.Expression, child: jsep.Identifier | jsep.MemberExpression) {\n        if (Array.isArray(parent)) {\n            let replace = lookup(events, parent, child)\n            parent.forEach(i => {\n                if (parent[i] === child)\n                    parent[i] = replace\n            })\n        } else {\n            // don't process identifiers that are callees of CallExpression\n            if (parent?.type === \"CallExpression\" && child === (<jsep.CallExpression>parent).callee)\n                return;\n            let replace = lookup(events, parent, child)\n            if (replace) {\n                Object.keys(parent).forEach(k => {\n                    if ((parent as any)[k] === child)\n                        (parent as any)[k] = replace\n                })\n            }\n        }\n\n        function lookup(events: jdspec.PacketInfo[], parent: jsep.Expression, child: jsep.Identifier | jsep.MemberExpression) {\n            try {\n                try {\n                    let [root,fld] = toName()\n                    const val = parseIntFloat(spec, fld ? `${root}.${fld}` : root)\n                    const lit: jsep.Literal = {\n                        type: \"Literal\",\n                        value: val,\n                        raw: val.toString(),\n                    }\n                    return lit\n                } catch (e) {\n                    let [root,fld] = toName()\n                    lookupRegister(root, fld)\n                }\n            } catch (e) {\n                if (events.length > 0) {\n                    let [root,fld] = toName()\n                    let pkt = events.find(pkt => pkt.name === root)\n                    if (!pkt)\n                        error(`event ${root} not bound correctly`)\n                    else if (!fld && pkt.fields.length > 0)\n                        error(`event ${root} has fields, but no field specified`)\n                    else if (fld && !pkt.fields.find(f => f.name === fld))\n                        error(`Field ${fld} of event ${root} not found in specification`)\n                } else {\n                    error(e.message)\n                }\n            }\n            return undefined\n            function toName() {\n                if (child.type !== 'MemberExpression')\n                    return [child.name, \"\"];\n                else {\n                    return [(child.object as jsep.Identifier).name,\n                            (child.property as jsep.Identifier).name]\n                }\n            }\n        }\n    }\n\n    function finishTest() {\n        info.tests.push(currentTest)\n        currentTest = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import React, { useContext, useEffect, useMemo } from \"react\"\nimport { Button, Grid } from \"@material-ui/core\"\nimport { parseSpecificationTestMarkdownToJSON } from \"../../../jacdac-ts/jacdac-spec/spectool/jdtest\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useLocalStorage from \"../useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport ServiceSpecificationSelect from \"../ServiceSpecificationSelect\"\nimport { SRV_BUTTON } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceTest from \"../test/ServiceTest\"\nimport { fetchText } from \"../github\"\nimport AppContext from \"../AppContext\"\nimport Markdown from \"../ui/Markdown\"\nimport GridHeader from \"../ui/GridHeader\"\n\nconst SERVICE_TEST_SERVICE_STORAGE_KEY = \"jacdac:servicetesteditor:service\"\nconst SERVICE_TEST_SOURCE_STORAGE_KEY = \"jacdac:servicetesteditorsource\"\nconst SERVICE_MARKDOWN_SOURCE_STORAGE_KEY =\n    \"jacdac:servicetesteditorsource:markdown\"\n\nexport default function ServiceTestEditor() {\n    const { setError } = useContext(AppContext)\n    const [serviceClass, setServiceClass] = useLocalStorage<number>(\n        SERVICE_TEST_SERVICE_STORAGE_KEY,\n        SRV_BUTTON\n    )\n    const [source, setSource] = useLocalStorage(\n        SERVICE_TEST_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [markdownSource, setMarkdownSource] = useLocalStorage(\n        SERVICE_MARKDOWN_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const serviceSpec = useMemo(\n        () => serviceSpecificationFromClassIdentifier(serviceClass),\n        [serviceClass]\n    )\n    const json = useMemo(\n        () => parseSpecificationTestMarkdownToJSON(source, serviceSpec),\n        [source, serviceSpec]\n    )\n    const servicePath =\n        json &&\n        `services/tests/${(\n            serviceSpec.camelName ||\n            serviceSpec.shortId ||\n            `0x${serviceSpec.classIdentifier.toString(16)}`\n        ).toLowerCase()}`\n    const handleLoadFromGithub = async () => {\n        try {\n            const ghSource = await fetchText(\n                \"microsoft/jacdac\",\n                \"main\",\n                `services/tests/${serviceSpec.shortId}.md`,\n                \"text/plain\"\n            )\n            setSource(ghSource || \"\")\n        } catch (e) {\n            setError(e)\n        }\n        try {\n            const ghSource = await fetchText(\n                \"microsoft/jacdac\",\n                \"main\",\n                `services/${serviceSpec.shortId}.md`,\n                \"text/plain\"\n            )\n            if (ghSource) setMarkdownSource(ghSource)\n            else setError(\"Specification source not found\")\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <Grid spacing={2} container>\n            <Grid item xs={12}>\n                <Grid container spacing={2} direction=\"row\">\n                    <Grid item>\n                        <ServiceSpecificationSelect\n                            label={\"Select a service to test\"}\n                            serviceClass={serviceClass}\n                            setServiceClass={setServiceClass}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            disabled={!serviceSpec}\n                            onClick={handleLoadFromGithub}\n                        >\n                            Load from GitHub\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid spacing={2} container>\n                <Grid item xs={12} sm={7}>\n                    <HighlightTextField\n                        code={source}\n                        language={\"markdown\"}\n                        onChange={setSource}\n                        annotations={json?.errors}\n                        pullRequestTitle={\n                            json && `Service test: ${serviceSpec.name}`\n                        }\n                        pullRequestPath={servicePath}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                    <Markdown source={markdownSource} />\n                </Grid>\n            </Grid>\n            <GridHeader title=\"Preview\" />\n            {json && (\n                <Grid item xs={12} xl={7}>\n                    <ServiceTest\n                        showStartSimulator={true}\n                        serviceSpec={serviceSpec}\n                        serviceTest={json}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport ServiceTestEditor from \"../../components/tools/ServiceTestEditor\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Service Test Editor</h1>\n            <p>\n                Read the{\" \"}\n                <Link to=\"/reference/service-tests\">\n                    service test\n                </Link>{\" \"}\n                documentation.\n            </p>\n            <ServiceTestEditor />\n        </>\n    )\n}\n"],"sourceRoot":""}