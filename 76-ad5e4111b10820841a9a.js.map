{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardColor.tsx"],"names":["DashboardColor","props","service","services","variant","register","ColorReg","Color","useRegisterUnpackedValue","r","g","b","host","useServiceHost","color","useWidgetTheme","background","textProps","undefined","value","handleChange","console","log","rgb","reading","setValues","refresh","w","rx"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEe,SAASA,cAAT,CAAwBC,KAAxB,EAAsD;AAAA,MACzDC,OADyD,GAC1BD,KAD0B,CACzDC,OADyD;AAAA,MAChDC,QADgD,GAC1BF,KAD0B,CAChDE,QADgD;AAAA,MACtCC,OADsC,GAC1BH,KAD0B,CACtCG,OADsC;AAEjE,MAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAR,CAAiBC,8EAAQ,CAACC,KAA1B,CAAjB;;AAFiE,8BAG/CC,iGAAwB,CAA2BH,QAA3B,CAHuB;AAAA,MAG1DI,CAH0D;AAAA,MAGvDC,CAHuD;AAAA,MAGpDC,CAHoD;;AAIjE,MAAMC,IAAI,GAAGC,6EAAc,CAA8CX,OAA9C,CAA3B;AACA,MAAMY,KAAK,GAAGF,IAAI,GAAG,WAAH,GAAiB,SAAnC;;AALiE,wBAM/BG,+EAAc,CAACD,KAAD,CANiB;AAAA,MAMzDE,UANyD,mBAMzDA,UANyD;AAAA,MAM7CC,SAN6C,mBAM7CA,SAN6C;;AAQjE,MAAIR,CAAC,KAAKS,SAAV,EACI,oBAAO,2DAAC,mEAAD,OAAP;AAEJ,MAAMC,KAAK,aAAWV,CAAC,GAAG,IAAL,IAAc,CAAxB,YAA+BC,CAAC,GAAG,IAAL,IAAc,CAA5C,YAAmDC,CAAC,GAAG,IAAL,IAAc,CAAhE,OAAX;;AACA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACN,KAAD,EAAyD;AAC1EO,WAAO,CAACC,GAAR,CAAY;AAAER,WAAK,EAALA;AAAF,KAAZ;AAD0E,QAElES,GAFkE,GAE1DT,KAF0D,CAElES,GAFkE;AAG1EX,QAAI,CAACY,OAAL,CAAaC,SAAb,CAAuB,CAACF,GAAG,CAACd,CAAJ,GAAQ,IAAT,EAAec,GAAG,CAACb,CAAJ,GAAQ,IAAvB,EAA6Ba,GAAG,CAACZ,CAAJ,GAAQ,IAArC,CAAvB;AACAN,YAAQ,CAACqB,OAAT;AACH,GALD;;AAMA,MAAMC,CAAC,GAAG,EAAV;AACA,MAAMC,EAAE,GAAG,CAAX;AACA,MAAIhB,IAAJ,EACI,oBAAO,2DAAC,+DAAD;AAAa,SAAK,EAAEO,KAApB;AAA2B,YAAQ,EAAC,MAApC;AAA2C,oBAAgB,EAAEP,IAAI,IAAIQ;AAArE,IAAP,CADJ,KAGI,oBAAO,2DAAC,kEAAD;AAAW,SAAK,EAAEO,CAAlB;AAAqB,UAAM,EAAEA;AAA7B,kBACH;AAAM,KAAC,EAAE,CAAT;AAAY,KAAC,EAAE,CAAf;AAAkB,SAAK,EAAEA,CAAzB;AAA4B,UAAM,EAAEA,CAApC;AAAuC,MAAE,EAAEC,EAA3C;AAA+C,MAAE,EAAEA,EAAnD;AAAuD,QAAI,EAAET,KAA7D;AACI,UAAM,EAAEH,UADZ;AAEI,eAAW,EAAE,CAFjB;AAGI,YAAQ,EAAE,CAHd;AAII,iBAAU,QAJd;AAKI,6BAAqBG,KAArB;AALJ,IADG,CAAP;AAUP,C","file":"76-ad5e4111b10820841a9a.js","sourcesContent":["import React from \"react\";\nimport { ColorReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport SensorServiceHost from \"../../../jacdac-ts/src/hosts/sensorservicehost\";\nimport { BlockPicker } from \"react-color\"\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardColor(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n    const register = service.register(ColorReg.Color);\n    const [r, g, b] = useRegisterUnpackedValue<[number, number, number]>(register);\n    const host = useServiceHost<SensorServiceHost<[number, number, number]>>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, textProps } = useWidgetTheme(color)\n\n    if (r === undefined)\n        return <LoadingProgress />;\n\n    const value = `rgb(${(r * 0xff) >> 0}, ${(g * 0xff) >> 0}, ${(b * 0xff) >> 0})`\n    const handleChange = (color: { rgb: { r: number, g: number, b: number } }) => {\n        console.log({ color })\n        const { rgb } = color;\n        host.reading.setValues([rgb.r / 0xff, rgb.g / 0xff, rgb.b / 0xff])\n        register.refresh();\n    }\n    const w = 64;\n    const rx = 4;\n    if (host)\n        return <BlockPicker color={value} triangle=\"hide\" onChangeComplete={host && handleChange} />\n    else\n        return <SvgWidget width={w} height={w}>\n            <rect x={0} y={0} width={w} height={w} rx={rx} ry={rx} fill={value}\n                stroke={background}\n                strokeWidth={2}\n                tabIndex={0}\n                aria-live=\"polite\"\n                aria-label={`color ${value} detected`}\n            />\n        </SvgWidget>\n\n}"],"sourceRoot":""}