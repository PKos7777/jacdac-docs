{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/settingsclient.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/KeyboardKeyInput.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts","webpack://jacdac-docs/./src/pages/tools/hid-events.tsx"],"names":["SettingsClient","service","registersUseAcks","clear","sendCmdAsync","SettingsCmd","listKeys","inp","InPipeReader","bus","sendPacketAsync","openCommand","readAll","output","keys","map","pkt","stringData","filter","k","list","jdunpack","key","value","kv","setValue","trim","undefined","deleteValue","Packet","jdpack","emit","CHANGE","setStringValue","stringToBuffer","getValue","sendCmdAwaitResponseAsync","resp","data","rkey","console","error","getStringValue","bufferToString","JDServiceClient","useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","transport","type","ConnectAlert","useServices","options","services","JSON","stringify","hr","background","palette","text","disabled","marginBottom","start","width","GridHeader","title","count","variant","action","clsx","capture","cursor","borderColor","primary","main","active","darkKeyboard","backgroundColor","color","dark","keyboard","KeyboardKeyInput","initialSelector","initialModifiers","selector","modifiers","onChange","uncontrolled","useMemo","useState","selector_","setSelector_","HidKeyboardModifiers","modifiers_","setModifiters_","DarkModeContext","darkMode","keyboardRef","useRef","keyboardId","useId","layout","default","display","handleKeyboardKeyPress","code","toLowerCase","replace","newSelector","newModifiers","msel","selectors","mcode","modifierCodes","useEffect","warn","renderKeyboardKey","current","addButtonTheme","removeButtonTheme","r","useGridBreakpoints","itemCount","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","useServiceClient","factory","deps","client","setClient","c","unmount","ImportButton","lazy","PREFIX","FORMAT","HIDEventToBuffer","event","ev","deviceId","fromHex","device","serviceIndex","payload","bufferToHIDEvent","eventCode","deviceIds","toHex","eventId","id","SelectHIDEvent","onAdd","setEvent","setSelector","setModifiers","excludedServices","SRV_CONTROL","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SRV_SETTINGS","SRV_LOGGER","eventFilter","SystemEvent","specification","srv","indexOf","events","some","arrayConcatMany","handleClickEvent","newEvent","handleKeyChange","handleAdd","humanify","HIDEvents","setError","settingsServices","settingsService","setSettingsService","hidEvents","setHIDEvents","open","setOpen","gridBreakpoints","exportRef","handleOpenAdd","handleCloseAdd","settings","useServiceProviderFromServiceClass","hes","all","entry","startsWith","he","push","hidEvent","node","randomDeviceId","handleRemoveBinding","index","handleSelectSettingsService","exportUri","encodeURIComponent","clone","h","download","handleFilesUploaded","files","file","json","parse","Array","isArray"],"mappings":"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","file":"component---src-pages-tools-hid-events-tsx-c1f86854bdaeac7237ac.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { CHANGE, SettingsCmd } from \"./constants\"\nimport { jdpack, jdunpack } from \"./pack\"\nimport Packet from \"./packet\"\nimport { InPipeReader } from \"./pipes\"\nimport { JDService } from \"./service\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { bufferToString, stringToBuffer } from \"./utils\"\n\nexport default class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useContext } from \"react\";\nimport { DeviceFilter, ServiceFilter } from \"../../../jacdac-ts/src/jdom/bus\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { Box, Chip, createStyles, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport Keyboard from \"react-simple-keyboard\"\nimport \"react-simple-keyboard/build/css/index.css\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useId } from \"react-use-id-hook\"\nimport {\n    modifierCodes,\n    renderKeyboardKey,\n    selectors,\n} from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        capture: {\n            cursor: \"pointer\",\n            \"&:hover\": {\n                borderColor: theme.palette.primary.main,\n            },\n            \"&:focus\": {\n                borderColor: theme.palette.action.active,\n            },\n        },\n        darkKeyboard: {\n            backgroundColor: \"#333 !important\",\n            borderColor: \"#777 !important\",\n            color: \"white !important\",\n            \"& .hg-button\": {\n                background: \"rgba(0, 0, 0, 0.5) !important\",\n                color: \"white\",\n            },\n            \"& .hg-button.buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n        keyboard: {\n            \"& .buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n    })\n)\n\nexport default function KeyboardKeyInput(props: {\n    initialSelector?: number\n    initialModifiers?: HidKeyboardModifiers\n    selector?: number\n    modifiers?: HidKeyboardModifiers\n    onChange: (newSelector: number, newModifiers: HidKeyboardModifiers) => void\n}) {\n    const { initialSelector, initialModifiers, selector, modifiers, onChange } =\n        props\n    const uncontrolled = useMemo(\n        () => selector === undefined || modifiers === undefined,\n        []\n    )\n    const [selector_, setSelector_] = useState<number>(initialSelector || 0)\n    const [modifiers_, setModifiters_] = useState<HidKeyboardModifiers>(\n        initialModifiers || HidKeyboardModifiers.None\n    )\n    const { darkMode } = useContext(DarkModeContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyboardRef = useRef<any>()\n    const classes = useStyles()\n    const theme = `hg-theme-default hg-layout-default ${\n        darkMode === \"dark\" ? classes.darkKeyboard : classes.keyboard\n    }`\n    const keyboardId = useId()\n\n    const layout = {\n        default: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6 7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space} {metaright} {altright}\",\n        ],\n    }\n    const display = {\n        \"{escape}\": \"esc ⎋\",\n        \"{tab}\": \"tab ⇥\",\n        \"{backspace}\": \"backspace ⌫\",\n        \"{enter}\": \"enter ↵\",\n        \"{capslock}\": \"caps lock ⇪\",\n        \"{shiftleft}\": \"shift ⇧\",\n        \"{shiftright}\": \"shift ⇧\",\n        \"{controlleft}\": \"ctrl ⌃\",\n        \"{controlright}\": \"ctrl ⌃\",\n        \"{altleft}\": \"alt ⌥\",\n        \"{altright}\": \"alt ⌥\",\n        \"{metaleft}\": \"cmd ⌘\",\n        \"{metaright}\": \"cmd ⌘\",\n    }\n    const handleKeyboardKeyPress = (code: string) => {\n        code = code.toLowerCase().replace(/[{}]/g, \"\")\n        let newSelector = selector_\n        let newModifiers = modifiers_\n        const msel = selectors[code]\n        const mcode = modifierCodes[code]\n        if (msel) {\n            if (msel === selector) newSelector = undefined\n            else newSelector = msel\n        } else {\n            if (mcode) {\n                if (newModifiers & mcode) newModifiers &= ~mcode\n                else newModifiers |= mcode\n            }\n        }\n        setSelector_(newSelector)\n        setModifiters_(newModifiers)\n        onChange(newSelector, newModifiers)\n    }\n\n    // update external values\n    useEffect(() => {\n        if (selector !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled selector`)\n            setSelector_(selector)\n        }\n    }, [selector])\n    useEffect(() => {\n        if (modifiers !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled modifier`)\n            setModifiters_(modifiers)\n        }\n    }, [modifiers])\n\n    const value = renderKeyboardKey(selector_, modifiers_, false)\n    useEffect(() => {\n        keyboardRef.current?.addButtonTheme(value, \"buttonSelected\")\n        return () =>\n            keyboardRef.current?.removeButtonTheme(value, \"buttonSelected\")\n    }, [value])\n\n    return (\n        <Keyboard\n            baseClass={keyboardId}\n            keyboardRef={r => (keyboardRef.current = r)}\n            onKeyPress={handleKeyboardKeyPress}\n            layout={layout}\n            theme={theme}\n            display={display}\n            mergeDisplay={true}\n        />\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}","import React, { lazy, useContext, useEffect, useRef, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Typography,\n} from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    HidKeyboardModifiers,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SystemEvent,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport KeyboardKeyInput from \"../../components/ui/KeyboardKeyInput\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport SettingsClient from \"../../../jacdac-ts/src/jdom/settingsclient\"\nimport useServiceClient from \"../../components/useServiceClient\"\nimport {\n    arrayConcatMany,\n    clone,\n    fromHex,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport { jdpack, jdunpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { randomDeviceId } from \"../../../jacdac-ts/src/jdom/random\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport useServices from \"../../components/hooks/useServices\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport Alert from \"../../components/ui/Alert\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport DeviceCardHeader from \"../../components/DeviceCardHeader\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport AppContext from \"../../components/AppContext\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { renderKeyboardKey } from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst ImportButton = lazy(() => import(\"../../components/ImportButton\"))\n\n// all settings keys are prefixed with this string\nconst PREFIX = \"@ke_\"\n// data layout format (18bytes)\nconst FORMAT = \"b[8] u32 u8 u8 u16 u16\"\n// data layout types\ntype FORMAT_TYPE = [Uint8Array, number, number, number, number, number]\n\ninterface HIDEvent {\n    key?: string\n    eventId: string\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nfunction HIDEventToBuffer(event: JDEvent, ev: HIDEvent) {\n    const deviceId = fromHex(event.service.device.deviceId)\n    const { service, code } = event\n    const { serviceClass, serviceIndex } = service\n    const { selector, modifiers } = ev\n    const payload = jdpack<FORMAT_TYPE>(FORMAT, [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        code,\n        selector,\n        modifiers,\n    ])\n    return payload\n}\n\nfunction bufferToHIDEvent(key: string, data: Uint8Array, bus: JDBus): HIDEvent {\n    if (data?.length !== 18) return undefined\n    const [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        eventCode,\n        selector,\n        modifiers,\n    ] = jdunpack<FORMAT_TYPE>(data, FORMAT)\n    const deviceIds = toHex(deviceId)\n    const device = bus.device(deviceIds, true)\n    const event = device?.service(serviceIndex)?.event(eventCode)\n\n    if (!event || event.service.serviceClass !== serviceClass) return undefined\n    return {\n        key,\n        eventId: event.id,\n        selector,\n        modifiers,\n    }\n}\n\nfunction SelectHIDEvent(props: { onAdd: (hidEvent: HIDEvent) => void }) {\n    const { onAdd } = props\n    const [event, setEvent] = useState<JDEvent>()\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    const excludedServices = [\n        SRV_CONTROL,\n        SRV_PROTO_TEST,\n        SRV_ROLE_MANAGER,\n        SRV_SETTINGS,\n        SRV_LOGGER,\n    ]\n    const eventFilter = (ev: JDEvent) =>\n        ev.code !== SystemEvent.StatusCodeChanged\n    const services = useServices({ ignoreSelf: true, specification: true })\n        .filter(srv => excludedServices.indexOf(srv.serviceClass) < 0)\n        .filter(srv => srv.events.some(eventFilter))\n    const events = arrayConcatMany(\n        services.map(service => service.events.filter(eventFilter))\n    )\n\n    const handleClickEvent = (newEvent: JDEvent) => () =>\n        setEvent(event === newEvent ? undefined : newEvent)\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n    const disabled = !event || !selector\n    const handleAdd = () => onAdd({ eventId: event.id, selector, modifiers })\n\n    return (\n        <Grid container spacing={2}>\n            {!events?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        Connect your devices to bind keyboard commands.\n                    </Alert>\n                </Grid>\n            )}\n            {events\n                .filter(ev => !event || ev === event)\n                .map(ev => (\n                    <Grid item xs={12} sm={6} lg={4} xl={3} key={ev.id}>\n                        <Card>\n                            <DeviceCardHeader\n                                device={ev.service.device}\n                                showAvatar={true}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\">\n                                    {ev.service.name}\n                                </Typography>\n                                <Typography variant=\"h4\">\n                                    {humanify(ev.name)}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    onClick={handleClickEvent(ev)}\n                                    variant={\"outlined\"}\n                                >\n                                    {ev === event ? \"unselect\" : \"select\"}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            {event && (\n                <>\n                    <GridHeader title=\"Enter your keyboard/mouse command\" />\n                    <Grid item xs={12}>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Grid>\n                </>\n            )}\n            {!disabled && (\n                <>\n                    <GridHeader title=\"Save your binding\" />\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={disabled}\n                            onClick={handleAdd}\n                        >\n                            Save binding\n                        </Button>\n                    </Grid>\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function HIDEvents() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const settingsServices = useServices({ serviceClass: SRV_SETTINGS })\n    const [settingsService, setSettingsService] = useState<JDService>()\n    const [hidEvents, setHIDEvents] = useState<HIDEvent[]>([])\n    const [open, setOpen] = useState(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const exportRef = useRef()\n\n    const handleOpenAdd = () => setOpen(true)\n    const handleCloseAdd = () => setOpen(false)\n\n    const settings = useServiceClient(\n        settingsService,\n        srv => new SettingsClient(srv)\n    )\n\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    useChange(settings, async () => {\n        const hes: HIDEvent[] = []\n        if (settings) {\n            const all = await settings.list()\n            for (const kv of all.filter(entry =>\n                entry.key?.startsWith(PREFIX)\n            )) {\n                const { key, value } = kv\n                const he = bufferToHIDEvent(key, value, bus)\n                if (he) hes.push(he)\n            }\n        }\n        if (JSON.stringify(hes) !== JSON.stringify(hidEvents)) setHIDEvents(hes)\n    })\n    const handleAdd = async (hidEvent: HIDEvent) => {\n        setOpen(false)\n\n        const event = bus.node(hidEvent.eventId) as JDEvent\n        if (!event) return\n\n        const payload = HIDEventToBuffer(event, hidEvent)\n        settings.setValue(PREFIX + randomDeviceId(), payload)\n    }\n    const handleRemoveBinding = (index: number) => () => {\n        const { key } = hidEvents[index]\n        if (key) settings.deleteValue(key)\n    }\n    const handleSelectSettingsService = (service: JDService) => () =>\n        setSettingsService(settingsService === service ? undefined : service)\n\n    const exportUri =\n        hidEvents &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            JSON.stringify(\n                clone(hidEvents).map(h => {\n                    delete h.key\n                    return h\n                })\n            )\n        )}`\n    useEffect(() => {\n        if (exportRef.current)\n            (exportRef.current as HTMLAnchorElement).download = \"bindings.json\"\n    }, [exportRef.current])\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const hidEvent of json as HIDEvent[]) {\n                        const event = bus.node(hidEvent.eventId) as JDEvent\n                        if (event) {\n                            const payload = HIDEventToBuffer(event, hidEvent)\n                            settings.setValue(\n                                PREFIX + randomDeviceId(),\n                                payload\n                            )\n                        }\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <>\n            <h1>Accessibility Adapter</h1>\n            <Grid container spacing={1}>\n                <GridHeader title=\"Select an adapter\" />\n                {!settingsServices?.length && (\n                    <Grid item xs>\n                        <ConnectAlert serviceClass={SRV_SETTINGS} />\n                    </Grid>\n                )}\n                {settingsServices\n                    .filter(srv => !settingsService || srv === settingsService)\n                    .map(srv => (\n                        <Grid item key={srv.id} {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={srv.device}\n                                    showAvatar={true}\n                                    showMedia={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant={\"outlined\"}\n                                        onClick={handleSelectSettingsService(\n                                            srv\n                                        )}\n                                    >\n                                        {settingsService === srv\n                                            ? \"unselect\"\n                                            : \"select\"}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                {settings && (\n                    <>\n                        <GridHeader title=\"Command Bindings\" />\n                        {!hidEvents?.length && (\n                            <Grid item xs>\n                                <Alert severity=\"info\">\n                                    No bindings yet! Click{\" \"}\n                                    <strong>Add binding</strong> to start\n                                    building your adapter.\n                                </Alert>\n                            </Grid>\n                        )}\n                        {hidEvents\n                            ?.map(({ eventId, selector, modifiers }) => ({\n                                eventId,\n                                event: bus.node(eventId) as JDEvent,\n                                selector,\n                                modifiers,\n                            }))\n                            .map(\n                                (\n                                    { eventId, event, selector, modifiers },\n                                    index\n                                ) => (\n                                    <Grid\n                                        item\n                                        {...gridBreakpoints}\n                                        key={eventId}\n                                    >\n                                        <Card>\n                                            <DeviceCardHeader\n                                                device={event?.service.device}\n                                                showAvatar={true}\n                                            />\n                                            <CardContent>\n                                                {event ? (\n                                                    <Typography variant=\"h6\">\n                                                        {`${\n                                                            event.service.name\n                                                        } ${humanify(\n                                                            event.name\n                                                        )}`}\n                                                    </Typography>\n                                                ) : (\n                                                    <Alert severity=\"warning\">\n                                                        <AlertTitle>\n                                                            Device not found\n                                                        </AlertTitle>\n                                                    </Alert>\n                                                )}\n\n                                                <Typography variant=\"h5\">\n                                                    {renderKeyboardKey(\n                                                        selector,\n                                                        modifiers,\n                                                        true\n                                                    )}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <IconButtonWithTooltip\n                                                    title={\"Remove binding\"}\n                                                    onClick={handleRemoveBinding(\n                                                        index\n                                                    )}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButtonWithTooltip>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n                                )\n                            )}\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleOpenAdd}\n                                    >\n                                        Add binding\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        ref={exportRef}\n                                        variant=\"outlined\"\n                                        href={exportUri}\n                                    >\n                                        Export\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Suspense>\n                                        <ImportButton\n                                            icon={false}\n                                            text=\"Import\"\n                                            onFilesUploaded={\n                                                handleFilesUploaded\n                                            }\n                                            acceptedFiles={[\"application/json\"]}\n                                        />\n                                    </Suspense>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n            <Dialog\n                open={open}\n                onClose={handleCloseAdd}\n                maxWidth={\"lg\"}\n                fullWidth={true}\n            >\n                <DialogTitle>Add binding</DialogTitle>\n                <DialogContent>\n                    <SelectHIDEvent onAdd={handleAdd} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n"],"sourceRoot":""}