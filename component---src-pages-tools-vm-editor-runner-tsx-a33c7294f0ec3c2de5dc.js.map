{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/markdown.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx","webpack://jacdac-docs/./src/components/tools/VMEditorRunner.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor-runner.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","useId","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","specification","filter","rs","strcmp","deviceId","defaultDeviceFilter","d","Dashboard","showConnect","showStartSimulators","deviceSort","deviceFilter","AppContext","toggleShowDeviceHostsDialog","useDevices","announced","sort","useMediaQueries","mobile","splitFilter","findServiceProvider","simulators","physicals","roleManager","useRoleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","handleStartSimulator","provider","serviceProviderDefinitionFromServiceClass","addServiceProvider","SRV_BUTTON","SRV_BUZZER","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","DashboardDeviceItem","variant","drawerType","breakpoints","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","DrawerType","xs","sm","md","lg","xl","IT4Functions","args","prompt","context","supportedExpressions","parseITTTMarkdownToJSON","filecontent","filename","replace","info","description","handlers","backticksType","errors","lineNo","currentHandler","handlerHeading","split","line","processLine","e","error","message","finishHandler","trim","m","exec","interpret","hd","cont","processCommand","argsRequiredOptional","optional","a","commands","call","callee","cmdIndex","root","jsep","arguments","exprVisitor","p","indexOf","command","minArgs","maxArgs","newExpressions","i","def","lit","raw","toString","push","concat","guard","undefined","msg","some","file","VMStatus","IT4CommandEvaluator","env","gc","checkExpression","expr","JDExprEvaluator","lookup","eval","evaluate","_status","Running","inst","event","hasEvent","Completed","ev","reg","writeRegister","writeLocal","Stopped","IT4CommandRunner","_eval","reset","status","step","isWaiting","finish","cancel","IT4HandlerRunner","handler","stopped","_commandIndex","_currentCommand","unsubscribe","post_process","Ready","IT4ProgramRunner","program","_waitQueue","_running","_env","VMEnvironment","run","_handlers","h","index","emit","CHANGE","start","refreshEnvironment","nextTime","consumeEvent","ret","JDEventSource","VMRunner","json","factory","useCallback","testRunner","useMemo","t","handleRun","handleCancel","running","VM_MARKDOWN_SOURCE_STORAGE_KEY","VMEditorRunner","useLocalStorage","source","setSource","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-runner-tsx-a33c7294f0ec3c2de5dc.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../../jacdac/ConnectButtons\"\nimport useRoleManager from \"../services/useRoleManager\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { IconButton } from \"gatsby-theme-material-ui\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport Alert from \"../ui/Alert\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const { mobile } = useMediaQueries()\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManager()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n    const handleStartSimulator = (serviceClass: number) => () => {\n        const provider = serviceProviderDefinitionFromServiceClass(serviceClass)\n        addServiceProvider(bus, provider)\n    }\n\n    return (\n        <>\n            <DashboardDeviceGroup\n                title=\"Simulators\"\n                action={\n                    <>\n                        {showStartSimulators && !!roleManager && (\n                            <IconButtonWithTooltip\n                                title=\"start missing simulators\"\n                                onClick={handleStartSimulators}\n                            >\n                                <DevicesIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        <IconButtonWithTooltip\n                            title=\"clear simulators\"\n                            onClick={handleClearSimulators}\n                        >\n                            <ClearIcon />\n                        </IconButtonWithTooltip>{\" \"}\n                    </>\n                }\n                devices={simulators}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showStartSimulators && !simulators?.length && (\n                    <Grid item xs={12}>\n                        <Alert severity=\"info\" closeable={true}>\n                            Simulate devices (\n                            <IconButton\n                                onClick={handleStartSimulator(SRV_BUTTON)}\n                                title=\"button\"\n                                aria-label=\"start button simulator\"\n                            >\n                                🔘\n                            </IconButton>\n                            ,\n                            <IconButton\n                                onClick={handleStartSimulator(SRV_BUZZER)}\n                                title=\"buzzer\"\n                                aria-label=\"start buzzer simulator\"\n                            >\n                                🎹\n                            </IconButton>\n                            <IconButton\n                                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                                title=\"joystick\"\n                                aria-label=\"start joystick simulator\"\n                            >\n                                🕹️\n                            </IconButton>\n                            ,\n                            <IconButton\n                                onClick={handleStartSimulator(SRV_LED)}\n                                title=\"LED\"\n                                aria-label=\"start LED simulator\"\n                            >\n                                💡\n                            </IconButton>\n                            ,\n                            <IconButton\n                                onClick={handleStartSimulator(\n                                    SRV_TRAFFIC_LIGHT\n                                )}\n                                title=\"traffic light\"\n                                aria-label=\"start traffic light simulator\"\n                            >\n                                🚦\n                            </IconButton>\n                            , ...) by clicking &nbsp;\n                            <IconButtonWithTooltip\n                                title=\"start simulator\"\n                                onClick={toggleShowDeviceHostsDialog}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                            .\n                        </Alert>\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","export interface IT4GuardedCommand {\n    guard?: jsep.Expression;\n    command: jsep.CallExpression\n}\n\nexport interface IT4Handler {\n    description: string\n    commands: IT4GuardedCommand[]\n}\n\nexport interface IT4Program {\n    description: string\n    handlers: IT4Handler[]\n    errors?: jdspec.Diagnostic[]\n}\n\nexport type JDIT4Functions =\n    | \"awaitEvent\"\n    | \"awaitCondition\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n\nexport const IT4Functions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true] ],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n]","import jsep from \"jsep\"\n\nimport { exprVisitor } from \"../../jacdac-spec/spectool/jdutils\"\nimport { IT4Program, IT4Handler, IT4Functions } from \"./ir\"\n\nconst supportedExpressions: jsep.ExpressionType[] = [\n    \"MemberExpression\",\n    \"ArrayExpression\",\n    \"BinaryExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\nexport function parseITTTMarkdownToJSON(\n    filecontent: string,\n    filename = \"\"\n): IT4Program {\n\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: IT4Program = {\n        description: \"\",\n        handlers: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentHandler: IT4Handler= null\n    let handlerHeading = \"\"\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentHandler) finishHandler()\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" || \n            line.slice(0, 4) == \"    \" ||\n            /^\\t/.exec(line)\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                handlerHeading = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\") {\n                    if (!info.description)\n                        info.description = cont.trim()\n                    else \n                        error(\"use ## to start a handler, not #\")\n                } else if (hd == \"##\") {\n                    if (currentHandler) finishHandler()\n                    handlerHeading = cont.trim()\n                }\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function argsRequiredOptional(args: any[], optional: boolean = false) {\n        return args.filter(a => !optional && typeof(a) === \"string\" || optional && typeof(a) === \"object\")\n    }\n\n    function processCommand(expanded: string) {\n        if (!currentHandler) {\n            if (!handlerHeading)\n                error(`every handler must have a description (via ##)`)\n            currentHandler = {\n                description: handlerHeading,\n                commands: []\n            }\n            handlerHeading = \"\"\n        }\n        const call = /^([a-zA-Z]\\w*)\\(.*\\)$/.exec(expanded)\n        if (!call) {\n            error(\n                `a command must be a call to a registered ITTT function (JavaScript syntax)`\n            )\n            return\n        }\n        const [, callee] = call\n        const cmdIndex = IT4Functions.findIndex(r => callee == r.id)\n        if (cmdIndex < 0) {\n            error(`${callee} is not a registered ITTT function.`)\n            return\n        } else if (currentHandler.commands.length === 0 && callee !== \"awaitEvent\" && callee !== \"awaitCondition\") {\n            error(`An ITTT handler must begin with call to an await function (awaitEvent | awaitCondition)`)\n            return\n        }\n        const root: jsep.CallExpression = <jsep.CallExpression>jsep(expanded)\n        if (\n            !root ||\n            !root.type ||\n            root.type != \"CallExpression\" ||\n            !root.callee ||\n            !root.arguments\n        ) {\n            error(`a command must be a call expression in JavaScript syntax`)\n        } else {\n            // check for unsupported expression types\n            exprVisitor(null, root, (p, c) => {\n                if (supportedExpressions.indexOf(c.type) < 0)\n                    error(`Expression of type ${c.type} not currently supported`)\n            })\n            // check arguments\n            const command = IT4Functions[cmdIndex]\n            const minArgs = argsRequiredOptional(command.args).length\n            const maxArgs = command.args.length\n            if (root.arguments.length < minArgs)\n                error(\n                    `${callee} expects at least ${minArgs} arguments; got ${root.arguments.length}`\n                )\n            else if (root.arguments.length > maxArgs) {\n                error(\n                    `${callee} expects at most ${maxArgs} arguments; got ${root.arguments.length}`\n                )\n            }\n            else {\n                // deal with optional arguments\n                let newExpressions: jsep.Expression[] = []\n                for(let i = root.arguments.length; i<command.args.length;i++) {\n                    let [name, def] = command.args[i] as [string, any] \n                    const lit: jsep.Literal = {\n                        type: \"Literal\",\n                        value: def,\n                        raw: def.toString(),\n                    }\n                    newExpressions.push(lit)\n                }\n                root.arguments = root.arguments.concat(newExpressions)\n            }\n            currentHandler.commands.push({ guard: undefined, command: root })\n        }\n    }\n\n    function finishHandler() {\n        info.handlers.push(currentHandler)\n        currentHandler = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import { IT4Program, IT4Handler, IT4GuardedCommand } from \"./ir\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\";\nimport { \n    CHANGE, \n} from \"../jdom/constants\"\n\nexport enum VMStatus {\n    Ready,\n    Running,\n    Completed,\n    Stopped\n}\n\ninterface Environment {\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeRegister: (e: jsep.MemberExpression | string, v: any) => boolean\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    refreshEnvironment: () => void\n    unsubscribe: () => void\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus;\n    constructor(\n        private readonly env: Environment,\n        private readonly gc: IT4GuardedCommand) {\n\n    }\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier).name\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator((e) => this.env.lookup(e), undefined)\n        return expr.eval(e) ? true : false\n    }\n\n    public evaluate() {\n        // console.log(unparse(this.gc.command))\n        this._status = VMStatus.Running\n        const args = this.gc.command.arguments\n        switch(this.inst) {\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1]) ? VMStatus.Completed : VMStatus.Running;\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0]) ? VMStatus.Completed : VMStatus.Running;\n                break\n            }\n            case \"writeRegister\": \n            case \"writeLocal\": \n            {\n                const expr = new JDExprEvaluator(\n                    (e) => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\" && this.env.writeRegister(reg, ev) ||\n                    this.inst === \"writeLocal\" && this.env.writeLocal(reg, ev)\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n        }\n    }\n}\n\nclass  IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator;\n    constructor(env: Environment, gc: IT4GuardedCommand) {\n        this._eval = new IT4CommandEvaluator(env, gc)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n        }\n    }\n\n    get isWaiting(): boolean {\n        return (\n            this.status === VMStatus.Running\n        )\n    }\n\n    reset() {\n        this.status = VMStatus.Running\n    }\n\n    step() {\n        if (this.isWaiting) {\n            this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        if (\n            this.isWaiting &&\n            s === VMStatus.Completed || s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner;\n    private stopped: boolean = false;\n\n    constructor(\n        public readonly id: number, \n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        this.reset()\n    }\n\n    get status() {\n        return this.stopped ? VMStatus.Stopped :\n            this._currentCommand === undefined ? VMStatus.Ready : this._currentCommand.status\n    }\n\n    public reset() {\n        this._commandIndex = undefined\n        this._currentCommand = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe();\n    }\n    \n    private post_process() {\n        // console.log(`IT4HandlerRunner${this.id}.step: ${this._commandIndex}`)\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    // run-to-completion semantics\n    step() {\n        if (this.stopped)\n            return\n        if (this._commandIndex === undefined) {\n            this._commandIndex = 0\n            this._currentCommand = new IT4CommandRunner(this.env, this.handler.commands[this._commandIndex])\n        }\n        this._currentCommand.step()\n        this.post_process()\n        while (this._currentCommand.status === VMStatus.Completed &&\n               this._commandIndex < this.handler.commands.length - 1) {\n            this._commandIndex++\n            this._currentCommand = new IT4CommandRunner(this.env, this.handler.commands[this._commandIndex])\n            this._currentCommand.step()\n            this.post_process()\n        }\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[]\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n\n    constructor(program: IT4Program, bus: JDBus) {\n        super()\n        this._env = new VMEnvironment(bus, () => { this.run() })\n        this._handlers = program.handlers.map((h,index) => new IT4HandlerRunner(index, this._env, h))\n        this._waitQueue = this._handlers.slice(0)\n    }\n\n    get status() {\n        const ret = this._running === false ? VMStatus.Stopped :\n            this._waitQueue.length > 0 ? VMStatus.Running : VMStatus.Completed \n        return ret\n    }\n\n    cancel() {\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n    }\n\n    start() {\n        this._running = true\n        this.emit(CHANGE)\n        this.run()\n    }\n\n    run() {\n        if (!this._running)\n            return\n        this._env.refreshEnvironment()\n        if (this._waitQueue.length > 0) {\n            let nextTime: IT4HandlerRunner[] = []\n            this._waitQueue.forEach(h => {\n                h.step()\n                if (h.status !== VMStatus.Stopped) {\n                    if (h.status === VMStatus.Completed)\n                        h.reset()\n                    nextTime.push(h)\n                }\n            })\n            this._waitQueue = nextTime\n            this._env.consumeEvent()\n        } else {\n            this.emit(CHANGE)\n        }\n    }\n}","import React, { useCallback, useMemo } from \"react\"\nimport { Grid, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n\nexport default function VMRunner(props: { json: IT4Program; bus: JDBus }) {\n    const { json, bus } = props\n    const factory = useCallback(\n        bus => json && new IT4ProgramRunner(json, bus),\n        [json]\n    )\n    const testRunner = useMemo(() => factory(bus), [json])\n    const status = useChange(testRunner, t => t.status)\n    const handleRun = () => testRunner.start()\n    const handleCancel = () => testRunner.cancel()\n    const running = status === VMStatus.Running\n\n    return (\n        <Button\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <LoadingProgress /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n","import React, { useMemo, useContext } from \"react\"\nimport { parseITTTMarkdownToJSON } from \"../../../jacdac-ts/src/vm/markdown\"\nimport useLocalStorage from \"../useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport { Grid } from \"@material-ui/core\"\nimport GridHeader from \"../ui/GridHeader\"\nimport Alert from \"../ui/Alert\"\nimport VMRunner from \"../vm/VMRunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DashBoard from \"../dashboard/Dashboard\"\n\nconst VM_MARKDOWN_SOURCE_STORAGE_KEY = \"jacdac:vmeditorsource:markdown\"\n\nexport default function VMEditorRunner() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [source, setSource] = useLocalStorage(\n        VM_MARKDOWN_SOURCE_STORAGE_KEY,\n        `# VM Handler program\\n\\n`\n    )\n    const json = useMemo(() => parseITTTMarkdownToJSON(source), [source])\n    return (\n        <Grid spacing={2} container>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={source}\n                    language={\"markdown\"}\n                    onChange={setSource}\n                    annotations={json?.errors}\n                />\n            </Grid>\n            <GridHeader title=\"Preview\" />\n            {json && bus && (\n                <Grid item xs={12}>\n                    <VMRunner json={json} bus={bus} />\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <DashBoard />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditorRunner from \"../../components/tools/VMEditorRunner\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>VM Editor/Runner</h1>\n            <VMEditorRunner />\n        </>\n    )\n}\n"],"sourceRoot":""}