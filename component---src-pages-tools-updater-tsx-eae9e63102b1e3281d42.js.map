{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteForever.js","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/DeviceCard.tsx","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/alert/DeviceLostAlert.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/jacdac/useEventRaised.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"names":["ServiceButton","props","service","onClick","others","name","useStyles","makeStyles","createStyles","root","bullet","display","margin","transform","title","fontSize","pos","marginBottom","navigateToService","spec","specification","navigate","shortId","DeviceDescription","device","register","useChange","_","ControlReg","useRegisterUnpackedValue","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","classes","services","filter","serviceClass","SRV_CONTROL","SRV_LOGGER","map","id","theme","button","marginLeft","spacing","NoSsrConnectAlert","useContext","JacdacContext","bus","transports","devices","b","ignoreSelf","serviceSpecificationFromClassIdentifier","length","transport","type","ConnectAlert","DeviceLostAlert","lost","useEventRaised","LOST","FOUND","dev","CircularProgressWithLabel","Math","round","value","eventName","node","query","useState","version","setVersion","undefined","useEffect","subscribe","useFirmwareRepos","showAllRepos","repos","setRepos","DEVICE_CHANGE","announced","bootloaders","hasService","SRV_BOOTLOADER","registers","reg","useEffectAsync","mounted","deviceSpecifications","repo","firmwares","refresh","firmwareIdentifier","intValue","indexOf","push","bootloader","boot","bl_announce","Packet","BootloaderCmd","sendCmdAwaitResponseAsync","resp","jdunpack","console","warn","fw","deviceSpecificationFromFirmwareIdentifier","urepos","unique","join","ImportButton","lazy","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","useFirmwareBlob","setFirmwareFile","firmwareBlobs","disabled","handleFiles","files","file","handleClear","blob","toString","FirmwareCardGrid","gridBreakpoints","useGridBreakpoints","safeBoot","firmwareRepos","firmwareRepo","FlashDeviceButton","ignoreFirmwareCheck","AppContext","progress","setProgress","firmwareInfo","d","update","updateApplicable","flashing","missing","useMounted","handleFlashing","updateCandidates","flashFirmwareBlob","prog","UpdateDeviceCard","blobs","useFirmwareBlobs","find","UpdateDeviceList","scanning","useRef","useDevices","ignoreSimulators","isFlashing","some","scan","current","log","scanFirmwares","FIRMWARE_BLOBS_CHANGE","SafeBootAlert","DbContext","db","useSnackbar","enqueueSnackbar","setSafeBoot","handleRecovery","v","clear","variant","SelectDevice","deviceId","onChange","handleDeviceChange","ev","target","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","Flash","tab","setTab","handleTabChange","event","newValue","a11yProps","Page"],"mappings":"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","file":"component---src-pages-tools-updater-tsx-eae9e63102b1e3281d42.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","import { ButtonProps } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@material-ui/core/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@material-ui/core/CardContent\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport {\n    SRV_CONTROL,\n    SRV_LOGGER,\n    ControlReg,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"./ServiceButton\"\nimport useChange from \"../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { CardActions, createStyles } from \"@material-ui/core\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"./alert/DeviceLostAlert\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {},\n        bullet: {\n            display: \"inline-block\",\n            margin: \"0 2px\",\n            transform: \"scale(0.8)\",\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    })\n)\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n    const classes = useStyles()\n    const services = useChange(device, () =>\n        device\n            .services()\n            .filter(\n                service =>\n                    service.serviceClass != SRV_CONTROL &&\n                    service.serviceClass != SRV_LOGGER\n            )\n    )\n\n    return (\n        <Card className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </Card>\n    )\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React from \"react\";\nimport { LOST, FOUND } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport useEventRaised from \"../../jacdac/useEventRaised\";\nimport Alert from \"../ui/Alert\";\n\nexport function DeviceLostAlert(props: { device: JDDevice }) {\n    const { device } = props;\n    const lost = useEventRaised([LOST, FOUND], device, dev => !!dev?.lost)\n    return <>\n        {lost && <Alert severity=\"info\">Device lost...</Alert>}\n    </>\n}","import React from \"react\"\nimport { CircularProgressProps, Box, CircularProgress, Typography } from \"@material-ui/core\";\n\nexport default function CircularProgressWithLabel(props: CircularProgressProps & { value: number }) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}","import { useState, useEffect } from \"react\";\nimport { JDEventSource } from \"../../jacdac-ts/src/jdom/eventsource\";\n\nexport default function useEventRaised<TEventSource extends JDEventSource, TValue>(eventName: string | string[], node: TEventSource, query?: (n: TEventSource) => TValue): TValue {\n    const [version, setVersion] = useState(0)\n    const value = query ? query(node) : undefined\n\n    useEffect(() => node?.subscribe(eventName, () => {\n        setVersion(version + 1)\n    }), [node, version])\n\n    return value;\n}\n","import { useContext, useState } from \"react\";\nimport { deviceSpecificationFromFirmwareIdentifier, deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useEffectAsync from \"../useEffectAsync\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { BootloaderCmd, ControlReg, DEVICE_CHANGE, SRV_BOOTLOADER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useEventRaised from \"../../jacdac/useEventRaised\";\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\";\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () => bus.devices({ announced: true, ignoreSelf: true }))\n    const bootloaders = devices.filter(device => device.hasService(SRV_BOOTLOADER));\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device => device.service(0)?.register(ControlReg.FirmwareIdentifier))\n        .filter(reg => !!reg);\n\n    useEffectAsync(async (mounted) => {\n        let repos: string[] = [];\n        if (showAllRepos)\n            repos = deviceSpecifications().map(spec => spec.repo);\n        else {\n            const firmwares: number[] = [];\n            // ask firmware registers\n            for (const register of registers) {\n                await register.refresh(true)\n                const firmwareIdentifier = register.intValue;\n                if (firmwareIdentifier !== undefined && firmwares.indexOf(firmwareIdentifier) < 0)\n                    firmwares.push(firmwareIdentifier);\n            }\n\n            // ask bootloaders\n            for (const bootloader of bootloaders) {\n                const boot = bootloader.services({ serviceClass: SRV_BOOTLOADER })[0];\n                const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                try {\n                    const resp = await boot.sendCmdAwaitResponseAsync(bl_announce);\n                    const [, , , firmwareIdentifier] = resp.jdunpack<[number, number, number, number]>(\"u32 u32 u32 u32\");\n                    if (firmwareIdentifier !== undefined && firmwares.indexOf(firmwareIdentifier) < 0)\n                        firmwares.push(firmwareIdentifier);\n                }\n                catch (e) {\n                    console.warn(`bootloader firmware identifier failed`, e)\n                }\n            }\n            repos = firmwares.map(fw => deviceSpecificationFromFirmwareIdentifier(fw)?.repo)\n                .filter(repo => !!repo);\n        }\n        if (mounted) {\n            const urepos = unique(repos);\n            setRepos(urepos)\n        }\n    }, [devices.map(dev => dev.id).join(), registers.map(reg => reg.id).join(), showAllRepos])\n    return repos;\n}","import React, { lazy, useState } from \"react\"\nimport { Button, Card, CardHeader, CardActions, CardContent, ListItem, List, ListItemText, Typography } from \"@material-ui/core\";\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\";\nimport Alert from \"../ui/Alert\";\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\";\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG;\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading;\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        }\n        finally {\n            setDownloading(false)\n        }\n    }\n\n    return <Card>\n        <CardHeader\n            title={slug} />\n        <CardContent>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            {version && <Typography variant=\"body2\">version <code>{version}</code></Typography>}\n            {!!firmwareBlobs?.length && <List dense>\n                {firmwareBlobs.map(blob => <ListItem key={blob.firmwareIdentifier}>\n                    <ListItemText primary={blob.name} secondary={`0x${blob.firmwareIdentifier.toString(16)}`} />\n                </ListItem>)}\n            </List>}\n        </CardContent>\n        <CardActions>\n            {!downloading && <Suspense><ImportButton text={\"Import UF2 file\"} onFilesUploaded={handleFiles} /></Suspense>}\n            {!downloading && firmwareBlobs?.length && <Button disabled={disabled} variant=\"text\" arial-label={\"Clear\"} onClick={handleClear}>\n                Clear\n            </Button>}\n        </CardActions>\n    </Card>\n}","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Button } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport React, { useContext, useState } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [progress, setProgress] = useState(0)\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const flashing = useChange(device, d => !!d?.flashing)\n    const missing = !device || !blob\n    const disabled = flashing\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(bus, blob, updateCandidates, ignoreFirmwareCheck, prog => {\n                if (mounted()) setProgress(prog)\n            })\n            // trigger info\n            device.firmwareInfo = undefined\n        } catch (e) {\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return missing ? null : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : update ? (\n        <Button\n            aria-label=\"flash firmware to device\"\n            disabled={disabled}\n            variant=\"contained\"\n            color={\"primary\"}\n            onClick={handleFlashing}\n        >\n            Flash\n        </Button>\n    ) : firmwareInfo ? (\n        <Alert severity=\"success\">Up to date!</Alert>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    DEVICE_CHANGE,\n    FIRMWARE_BLOBS_CHANGE,\n    SRV_BOOTLOADER,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport { scanFirmwares } from \"../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport useFirmwareBlobs from \"./firmware/useFirmwareBlobs\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { device } = props\n    const blobs = useFirmwareBlobs()\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(\n            b => firmwareInfo.firmwareIdentifier == b.firmwareIdentifier\n        )\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const scanning = useRef(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreSelf: true,\n            ignoreSimulators: true,\n            firmwareIdentifier: true,\n        },\n        [safeBoot]\n    ).filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n    const isFlashing = useChange(bus, () => devices.some(dev => dev.flashing))\n    const blobs = useFirmwareBlobs()\n    async function scan() {\n        if (!blobs?.length || isFlashing || scanning.current) return\n        console.log(`start scanning bus`)\n        try {\n            scanning.current = true\n            await scanFirmwares(bus)\n        } finally {\n            scanning.current = false\n        }\n    }\n    // load indexed db file once\n    useEffect(() => {\n        scan()\n    }, [isFlashing, blobs])\n    useEffect(\n        () =>\n            bus.subscribe([DEVICE_CHANGE, FIRMWARE_BLOBS_CHANGE], () => scan()),\n        []\n    )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Button, Switch, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport Alert from \"../ui/Alert\";\nimport DbContext, { DbContextProps } from \"../DbContext\";\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { useSnackbar } from \"notistack\";\n\nexport default function SafeBootAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const [safeBoot, setSafeBoot] = useState(bus.safeBoot);\n    const firmwares = db?.firmwares;\n\n    const handleRecovery = async () => {\n        const v = !safeBoot;\n        setSafeBoot(v);\n    }\n    const handleClear = async () => {\n        await firmwares.clear();\n        enqueueSnackbar(\"firmwares cleared\", {\n            variant: \"info\"\n        })\n    }\n\n    // turn on and off safeboot mode\n    useEffect(() => {\n        bus.safeBoot = safeBoot;\n        return () => { bus.safeBoot = false }\n    }, [safeBoot]);\n\n    return (<>\n        <Alert severity=\"info\">\n            <Switch value={safeBoot} onChange={handleRecovery} />\n            <Typography component=\"span\" variant=\"body1\">\n                recovery mode\n                </Typography>\n            <Box mr={1}>\n                <Typography component=\"span\" variant=\"caption\">\n                    If your module is malfunctioning from the start, you can flash it in bootloader mode.\n                    Turn on recovery mode and unplug/replug any malfunctioning device to switch it to bootloader mode (glowing status LED).\n                    Once your module is flashed, turn off recovery mode and unplug/replug your module again.\n                    </Typography>\n            </Box>\n        </Alert>\n        {safeBoot && <Alert severity=\"warning\">\n            <Button size=\"small\" variant=\"outlined\" disabled={!firmwares} onClick={handleClear} startIcon={<DeleteForeverIcon />}>\n                clear cache\n            </Button>\n            <Box mr={1}>\n                <Typography component=\"span\" variant=\"caption\">\n                    Delete all firmware cached in the browser. The firmware will have to be deleted again from this interface.\n                    </Typography>\n            </Box>\n        </Alert>}\n    </>)\n}\n","import { MenuItem } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Switch, Typography } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useDevices from \"../hooks/useDevices\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.firmwareIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreSelf: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useFirmwareBlobs()\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.firmwareIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <Switch value={enabled} onChange={handleToggle} />\n                <Typography component=\"span\" variant=\"body1\">\n                    manual mode\n                </Typography>\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { Box, Tab, Tabs } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport TabPanel, { a11yProps } from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\n\nexport default function Flash() {\n    const [tab, setTab] = useState(0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    return (\n        <Box mb={2}>\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                <Tab label={`Updates`} {...a11yProps(1)} />\n                <Tab label={`Firmwares`} {...a11yProps(0)} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert />\n            <ManualFirmwareAlert />\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return <>\n        <h1>Firmware Updater</h1>\n        <p>\n        This page allows you to update your Jacdac module with new firmware. Find the latest UF2 firmware file from your manufacturer \nand import it with the button below.\n            \n        </p>\n        <Flash />\n    </>\n}"],"sourceRoot":""}