{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/utils.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx"],"names":["VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","register","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","sendCommandAsync","command","values","commandName","p","isCommand","sendCmdAsync","jdpack","packFormat","console","log","shortName","writeRegisterAsync","ev","jdreg","sendSetPackedAsync","lookup","e","root","type","object","fld","undefined","property","unpackedValue","field","fields","f","value","refreshRegistersAsync","k","refresh","JDServiceClient","VMEnvironment","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","reg","serviceEnv","getService","emit","getRootName","s","JACDAC_ROLE_HAS_NO_SERVICE","Object","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","val","JDVMError","id","lit","getServiceFromRole","info","shortId","roles","pair","def","serviceSpecificationFromName","serviceShortId","assert","checkProgram","prog","errors","errorFun","file","line","message","symbolResolver","SpecSymbolResolver","checker","CheckExpression","_","handlers","forEach","h","commands","c","check","IT4Functions","registers","split","events","args","prompt","context","JACDAC_VM_ERROR","JACDAC_ROLE_SERVICE_BOUND","JACDAC_ROLE_SERVICE_UNBOUND","JACDAC_VM_COMMAND_ATTEMPTED","JACDAC_VM_COMMAND_COMPLETED","jacdacName","Error","errorPath","MyRoleManager","bus","notify","_roles","_devices","on","DEVICE_ANNOUNCE","dev","addServices","DEVICE_DISCONNECT","removeServices","services","roleNeedingService","keys","nameMatch","indexOf","filter","d","rolesToUnmap","n1","n2","cn1","slice","toLowerCase","replace","trim","cn2","getServicesFromName","addRoleService","existingServices","device","VMStatus","IT4CommandEvaluator","parent","gc","_regSaved","_changeSaved","_started","trace","msg","evalExpression","expr","checkExpression","start","inst","evaluate","_status","Running","neededStart","a","Completed","regValue","Stopped","IT4CommandRunner","handlerId","_eval","step","isWaiting","finish","status","cancel","IT4HandlerRunner","stopped","reset","_commandIndex","_currentCommand","post_process","sourceId","Ready","IT4ProgramRunner","TRACE","program","_waitQueue","_running","_in_run","regs","debug","_rm","_env","r","ERROR","run","_handlers","index","nextTime","VMRunner","props","autoStartDefault","autoStart","runnerRef","useContext","JacdacContext","AppContext","setError","useState","testRunner","setTestRunner","setAutoStart","useEffect","runner","current","handleTrace","disabled","useChange","t","handleRun","handleCancel","running","handleRoleClick","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","friendlyName"],"mappings":"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","file":"8681e1d67a6dd0cf4967cae72c671a181d17268f-5aa3f7270c965143bdcb.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { isEvent, isRegister, isCommand } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { jdpack, PackedValues } from \"../jdom/pack\"\nimport { JACDAC_ROLE_HAS_NO_SERVICE } from \"./utils\"\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    public async sendCommandAsync(command: jsep.Identifier, values: PackedValues) {\n        const commandName = command?.name\n        const pkt = this.service.specification.packets.find(\n            p => isCommand(p) && p.name === commandName\n        )\n        if (pkt) {\n            await this.service.sendCmdAsync(\n                pkt.identifier,\n                jdpack(pkt.packFormat, values),\n                true\n            )\n            console.log(this.service?.specification.shortName, command.name, values)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async writeRegisterAsync(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        await jdreg?.sendSetPackedAsync(jdreg.specification?.packFormat, [ev], true)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public async refreshRegistersAsync() {\n        for (const k in this._registers) {\n            const register = this._registers[k]\n            await register.refresh()\n        }\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor() {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, () => { this.emit(CHANGE)})\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        let s = this._envs[root]\n        if (!s) {\n            this.emit(JACDAC_ROLE_HAS_NO_SERVICE, root)\n        }\n        return s\n    }\n\n    public async refreshRegistersAsync() {\n        for(const s of Object.values(this._envs)) {\n            await s?.refreshRegistersAsync()\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async sendCommandAsync(e: jsep.MemberExpression, values: PackedValues) {\n        const serviceEnv = this.getService(e)\n        await serviceEnv?.sendCommandAsync(e.property as jsep.Identifier, values)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) {\n            return undefined\n        }\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public async writeRegisterAsync(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            await serviceEnv.writeRegisterAsync(reg, ev)\n        }\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        for(const vs of Object.values(this._envs)) {\n            vs.unmount()\n         }\n    }\n}\n","import { JDVMError } from \"./utils\"\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                if (val === undefined)\n                    throw new JDVMError(`lookup of ${unparse(e)} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                const val = this.env(id.name)\n                if (val === undefined)\n                    throw new JDVMError(`lookup of ${id.name} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    CheckExpression,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport interface IT4GuardedCommand {\n    guard?: jsep.Expression\n    sourceId?: string\n    command: jsep.CallExpression\n}\n\nexport interface IT4Handler {\n    description?: string\n    commands: IT4GuardedCommand[]\n}\n\nexport interface IT4Role {\n    role: string\n    serviceShortId: string\n}\n\nexport interface IT4Program {\n    description?: string\n    roles: IT4Role[]\n    handlers: IT4Handler[]\n    errors?: jdspec.Diagnostic[]\n}\n\nexport const getServiceFromRole = (info: IT4Program) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport function checkProgram(prog: IT4Program): [RoleRegister[], RoleEvent[]] {\n    prog.errors = []\n    let errorFun = (e: string) => {\n        prog.errors.push({ file: \"\", line: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new CheckExpression(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        h.commands.forEach(c => {\n            checker.check(c.command, IT4Functions)\n        })\n    })\n    return [\n        symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n    ]\n}\n\nexport type JDIT4Functions =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"role\"\n\nexport const IT4Functions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"role\",\n        args: [\"Identifier\", \"Identifier\"],\n        prompt: `role variable {1} of service type {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n]\n","export const JACDAC_VM_ERROR = \"JacdacVMError\"\nexport const JACDAC_ROLE_SERVICE_BOUND = \"JacdacVMRoleServiceBound\"\nexport const JACDAC_ROLE_SERVICE_UNBOUND = \"JacdacVMRoleServiceUnbound\"\nexport const JACDAC_ROLE_HAS_NO_SERVICE = \"JacdacVMRoleHasNoService\"\nexport const JACDAC_VM_COMMAND_ATTEMPTED = \"JacdacVMCommandAttempted\"\nexport const JACDAC_VM_COMMAND_COMPLETED = \"JacdacVMCommandCompleted\"\n\nexport class JDVMError extends Error {\n    constructor(message: string, readonly jacdacName?: string) {\n        super(message)\n        this.name = JACDAC_VM_ERROR\n    }\n}\n\nexport default function errorPath(e: JDVMError): string {\n    return (e as JDVMError)?.jacdacName\n}","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<{ shortName: string; service: JDService }> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    roles() {\n        return this._roles\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            let roleNeedingService = Object.keys(this._roles).find(\n                k =>\n                    !this._roles[k].service &&\n                    this.nameMatch(\n                        this._roles[k].shortName,\n                        s.specification.shortName\n                    )\n            )\n            if (roleNeedingService && this._devices.indexOf(dev) === -1) {\n                this._roles[roleNeedingService] = {\n                    shortName: s.specification.shortName,\n                    service: s,\n                }\n                this._devices.push(dev)\n                if (this.notify) this.notify(roleNeedingService, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            let rolesToUnmap = Object.keys(this._roles).filter(\n                k => dev.services().indexOf(this._roles[k].service) >= 0\n            )\n            if (rolesToUnmap.length > 0) {\n                rolesToUnmap.forEach(role => {\n                    let service = this._roles[role].service\n                    this._roles[role] = {\n                        shortName: service.specification.shortName,\n                        service: undefined,\n                    }\n                    if (this.notify) this.notify(role, service, false)\n                })\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        return this._roles[role].service\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortName, root))\n    }\n\n    public addRoleService(role: string, shortName: string) {\n        if (role in this._roles && this._roles[role].service) return\n        this._roles[role] = { shortName, service: undefined }\n        const existingServices = Object.values(this._roles)\n            .filter(p => p.service)\n            .map(p => p.service)\n        let ret = this.getServicesFromName(shortName).filter(\n            s => existingServices.indexOf(s) === -1\n        )\n        if (ret.length > 0) {\n            this._roles[role].service = ret[0]\n            this._devices.push(ret[0].device)\n            this.notify(role, ret[0], true)\n        }\n    }\n}\n","import { IT4Program, IT4Handler, IT4GuardedCommand } from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR, TRACE } from \"../jdom/constants\"\nimport { checkProgram } from \"./ir\"\nimport {\n    JACDAC_ROLE_SERVICE_BOUND,\n    JACDAC_ROLE_SERVICE_UNBOUND,\n    JACDAC_VM_COMMAND_ATTEMPTED,\n    JACDAC_VM_COMMAND_COMPLETED,\n} from \"./utils\"\nimport { unparse } from \"./expr\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TraceContext = any\n\nexport enum VMStatus {\n    Ready = \"ready\",\n    Running = \"running\",\n    Completed = \"completed\",\n    Stopped = \"stopped\",\n}\n\ninterface Environment {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: IT4CommandRunner,\n        private readonly env: Environment,\n        private readonly gc: IT4GuardedCommand\n    ) {}\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate() {\n        this._status = VMStatus.Running\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            this._status = VMStatus.Completed\n            return\n        }\n        switch (this.inst) {\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(\n        public readonly parent: IT4HandlerRunner,\n        private handlerId: number,\n        env: Environment,\n        public gc: IT4GuardedCommand\n    ) {\n        this._eval = new IT4CommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n            // TODO: emit event\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    async step() {\n        if (this.isWaiting) {\n            try {\n                this.trace(unparse(this.gc.command))\n                await this._eval.evaluate()\n                this.finish(this._eval.status)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        this.trace(s)\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner extends JDEventSource {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped = false\n\n    constructor(\n        public readonly parent: IT4ProgramRunner,\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        super()\n        this.reset()\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this._commandIndex = undefined\n        this._currentCommand = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private post_process() {\n        if (this._currentCommand.status === VMStatus.Completed)\n            this.emit(\n                JACDAC_VM_COMMAND_COMPLETED,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    // run-to-completion semantics\n    async step() {\n        // handler stopped or/ empty\n        if (this.stopped || !this.handler.commands.length) return\n        // if (this._currentCommand?.status === VMStatus.Completed) return\n        this.trace(\"step begin\")\n        if (this._commandIndex === undefined) {\n            this._commandIndex = 0\n            this._currentCommand = new IT4CommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n        }\n        this.emit(JACDAC_VM_COMMAND_ATTEMPTED, this._currentCommand.gc.sourceId)\n        await this._currentCommand.step()\n        this.post_process()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this._commandIndex < this.handler.commands.length - 1\n        ) {\n            this._commandIndex++\n            this._currentCommand = new IT4CommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n            this.emit(\n                JACDAC_VM_COMMAND_ATTEMPTED,\n                this._currentCommand.gc.sourceId\n            )\n            await this._currentCommand.step()\n            this.post_process()\n        }\n        this.trace(\"step end\")\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[]\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _in_run = false\n    private _rm: MyRoleManager\n\n    trace(message: string, context: TraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    constructor(private readonly program: IT4Program, bus: JDBus) {\n        super()\n        try {\n            const [regs, events] = checkProgram(program)\n            if (program.errors.length > 0) {\n                console.debug(program.errors)\n            }\n            this._rm = new MyRoleManager(bus, (role, service, added) => {\n                try {\n                    this._env.serviceChanged(role, service, added)\n                    if (added) {\n                        this.emit(JACDAC_ROLE_SERVICE_BOUND, service)\n                        this.emit(CHANGE)\n                        this.program.handlers.forEach(h => {\n                            regs.forEach(r => {\n                                if (r.role === role) {\n                                    this._env.registerRegister(role, r.register)\n                                }\n                            })\n                            events.forEach(e => {\n                                if (e.role === role) {\n                                    this._env.registerEvent(role, e.event)\n                                }\n                            })\n                        })\n                    } else {\n                        this.emit(JACDAC_ROLE_SERVICE_UNBOUND, service)\n                        this.emit(CHANGE)\n                    }\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._env = new VMEnvironment()\n            this._env.subscribe(CHANGE, () => {\n                try {\n                    this.run()\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._handlers = program.handlers.map(\n                (h, index) => new IT4HandlerRunner(this, index, this._env, h)\n            )\n            this._waitQueue = this._handlers.slice(0)\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get status() {\n        const ret =\n            this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        if (!this._running) return // nothing to cancel\n\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n        this.trace(\"cancelled\")\n    }\n\n    start() {\n        if (this._running) return // already running\n        this.trace(\"start\")\n        try {\n            this.program.roles.forEach(role => {\n                this._rm.addRoleService(role.role, role.serviceShortId)\n            })\n            this._running = true\n            this._in_run = false\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get roles() {\n        return this._rm?.roles()\n    }\n\n    async run() {\n        if (!this._running) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            if (this._waitQueue.length > 0) {\n                const nextTime: IT4HandlerRunner[] = []\n                for (const h of this._waitQueue) {\n                    await h.step()\n                    if (h.status !== VMStatus.Stopped) {\n                        if (h.status === VMStatus.Completed) h.reset()\n                        nextTime.push(h)\n                    }\n                }\n                this._waitQueue = nextTime\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n}\n","import React, { MutableRefObject, useContext, useEffect, useState } from \"react\"\nimport { Button, Chip, Grid, Tooltip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    IT4ProgramRunner,\n    TraceContext,\n    VMStatus,\n} from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function VMRunner(props: {\n    program: IT4Program\n    autoStart?: boolean\n    runnerRef?: MutableRefObject<IT4ProgramRunner>\n}) {\n    const { program, autoStart: autoStartDefault, runnerRef } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [testRunner, setTestRunner] = useState<IT4ProgramRunner>()\n    const [autoStart, setAutoStart] = useState(!!autoStartDefault)\n\n    // create runner\n    useEffect(() => {\n        const runner = program && new IT4ProgramRunner(program, bus)\n        setTestRunner(runner)\n        if (runner && runnerRef) runnerRef.current = runner\n        if (runner && autoStart) runner.start()\n        return () => {\n            runner?.cancel()\n            runnerRef.current = undefined\n        }\n    }, [program, autoStart])\n\n    // errors\n    useEffect(() => testRunner?.subscribe(ERROR, e => setError(e)))\n    // traces\n    const handleTrace = (value: { message: string; context: TraceContext }) => {\n        const { message, context } = value\n        console.debug(`vm> ${message}`, context)\n    }\n    useEffect(() =>\n        testRunner?.subscribe<{ message: string; context: TraceContext }>(\n            TRACE,\n            handleTrace\n        )\n    )\n\n    const disabled = !testRunner\n    const status = useChange(testRunner, t => t?.status)\n    const handleRun = () => {\n        setAutoStart(autoStartDefault)\n        try {\n            testRunner.start()\n        } catch (e) {\n            console.debug(e)\n        }\n    }\n    const handleCancel = () => {\n        setAutoStart(false)\n        testRunner.cancel()\n    }\n    const running = status === VMStatus.Running\n    const roles = useChange(runnerRef.current, _ => {\n        const r = _?.roles\n        if (r) console.debug(`vm roles`, { roles: r })\n        return r\n    })\n\n    const handleRoleClick =\n        (role: string, service: JDService, specification: jdspec.ServiceSpec) =>\n        () => {\n            if (!service && specification) {\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n            } else {\n                // do nothing\n            }\n        }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Button\n                    disabled={disabled}\n                    variant=\"contained\"\n                    onClick={running ? handleCancel : handleRun}\n                    color={running ? \"default\" : \"primary\"}\n                    startIcon={running ? <StopIcon /> : <PlayArrowIcon />}\n                >\n                    {running ? \"Stop\" : \"Run\"}\n                </Button>\n            </Grid>\n            {roles &&\n                Object.keys(roles)\n                    .map(role => ({\n                        role,\n                        service: roles[role].service,\n                        specification: serviceSpecificationFromName(\n                            roles[role].shortName\n                        ),\n                    }))\n                    .map(({ role, service, specification }) => (\n                        <Grid item key={role}>\n                            <Tooltip\n                                title={\n                                    service\n                                        ? `bound to ${service.device.friendlyName}`\n                                        : `start ${specification.name} simulator`\n                                }\n                            >\n                                <Chip\n                                    label={role}\n                                    variant={service ? \"default\" : \"outlined\"}\n                                    avatar={\n                                        service ? (\n                                            <DeviceAvatar\n                                                device={service.device}\n                                            />\n                                        ) : (\n                                            <AddIcon />\n                                        )\n                                    }\n                                    onClick={handleRoleClick(\n                                        role,\n                                        service,\n                                        specification\n                                    )}\n                                />\n                            </Tooltip>\n                        </Grid>\n                    ))}\n        </Grid>\n    )\n}\n"],"sourceRoot":""}