{"version":3,"file":"component---src-pages-tools-makecode-sim-tsx-cddc50a6a8a7c5ed352a.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/alert/SimulateDeviceAlert.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/pages/tools/makecode-sim.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const classes = useStyles()\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreSelf: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useRef, useState } from \"react\"\nimport JDNode from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(\n    singleSelection?: boolean\n) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value) nodes.current.delete(node.id)\n            else {\n                if (singleSelection) nodes.current.clear()\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        },\n    }\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import React, { useContext } from \"react\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { startServiceProviderFromServiceClass } from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Alert from \"../ui/Alert\"\n\nexport function SimulateDeviceHint() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const handleStartSimulator = (serviceClass: number) => () =>\n        startServiceProviderFromServiceClass(bus, serviceClass)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <>\n            Simulate devices (\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUTTON)}\n                title=\"button\"\n                aria-label=\"start button simulator\"\n            >\n                <span aria-label=\"button emoji\" role=\"img\">\n                    🔘\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUZZER)}\n                title=\"buzzer\"\n                aria-label=\"start buzzer simulator\"\n            >\n                <span aria-label=\"piano emoji\" role=\"img\">\n                    🎹\n                </span>\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                title=\"joystick\"\n                aria-label=\"start joystick simulator\"\n            >\n                <span aria-label=\"joystick emoji\" role=\"img\">\n                    🕹️\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_LED)}\n                title=\"LED\"\n                aria-label=\"start LED simulator\"\n            >\n                <span aria-label=\"lightbulb emoji\" role=\"img\">\n                    💡\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_TRAFFIC_LIGHT)}\n                title=\"traffic light\"\n                aria-label=\"start traffic light simulator\"\n            >\n                <span aria-label=\"traffic light emoji\" role=\"img\">\n                    🚦\n                </span>\n            </IconButtonWithTooltip>\n            , ...) by clicking &nbsp;\n            <IconButtonWithTooltip\n                title=\"start simulator\"\n                onClick={toggleShowDeviceHostsDialog}\n            >\n                <AddIcon />\n            </IconButtonWithTooltip>\n            .\n        </>\n    )\n}\n\nexport default function SimulateDeviceAlert() {\n    return (\n        <Alert severity=\"info\">\n            <SimulateDeviceHint />\n        </Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useRoleManagerClient from \"../services/useRoleManagerClient\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport SimulateDeviceAlert from \"../alert/SimulateDeviceAlert\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    hideSimulators?: boolean\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        hideSimulators,\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const { mobile } = useMediaQueries()\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManagerClient()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            {!hideSimulators && (\n                <DashboardDeviceGroup\n                    title=\"Simulators\"\n                    action={\n                        <>\n                            {showStartSimulators && !!roleManager && (\n                                <IconButtonWithTooltip\n                                    title=\"start missing simulators\"\n                                    onClick={handleStartSimulators}\n                                >\n                                    <DevicesIcon />\n                                </IconButtonWithTooltip>\n                            )}\n                            <IconButtonWithTooltip\n                                title=\"start simulator\"\n                                onClick={toggleShowDeviceHostsDialog}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                title=\"clear simulators\"\n                                onClick={handleClearSimulators}\n                            >\n                                <ClearIcon />\n                            </IconButtonWithTooltip>{\" \"}\n                        </>\n                    }\n                    devices={simulators}\n                    expanded={selected}\n                    toggleExpanded={toggleSelected}\n                    {...other}\n                >\n                    {showStartSimulators && !simulators?.length && (\n                        <Grid item xs={12}>\n                            <SimulateDeviceAlert />\n                        </Grid>\n                    )}\n                </DashboardDeviceGroup>\n            )}\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert closeable={true} />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import React, { useContext, useEffect } from \"react\"\nimport {\n    Box,\n    Button,\n    createTheme,\n    responsiveFontSizes,\n} from \"@material-ui/core\"\nimport ThemedLayout from \"../../components/ui/ThemedLayout\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeIcon from \"../../components/icons/MakeCodeIcon\"\nimport Helmet from \"react-helmet\"\nimport Dashboard from \"../../components/dashboard/Dashboard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport DarkModeContext from \"../../components/ui/DarkModeContext\"\nimport IFrameBridgeClient from \"../../components/makecode/iframebridgeclient\"\n\nfunction deviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\nfunction Carousel() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const iframeBridge = bus.nodeData[\n        IFrameBridgeClient.DATA_ID\n    ] as IFrameBridgeClient\n    const deviceFilter = iframeBridge.deviceFilter.bind(iframeBridge)\n    const serviceFilter = iframeBridge.serviceFilter.bind(iframeBridge)\n    const extensions = useChange(iframeBridge, _ => _?.candidateExtensions)\n    const handleAdd = () => iframeBridge?.postAddExtensions()\n\n    return (\n        <>\n            <Dashboard\n                showHeader={false}\n                deviceSort={deviceSort}\n                deviceFilter={deviceFilter}\n                serviceFilter={serviceFilter}\n                showStartSimulators={false}\n            />\n            {!!extensions?.length && (\n                <Box m={1}>\n                    <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        startIcon={<MakeCodeIcon />}\n                        onClick={handleAdd}\n                        aria-label={\"Add blocks\"}\n                    >\n                        Add blocks\n                    </Button>\n                </Box>\n            )}\n        </>\n    )\n}\n\nexport default function Page() {\n    const { toggleDarkMode, darkModeMounted } = useContext(DarkModeContext)\n    const rawTheme = createTheme({\n        palette: {\n            primary: {\n                main: \"#63c\",\n            },\n            secondary: {\n                main: \"#ffc400\",\n            },\n            type: \"light\",\n            contrastThreshold: 3.1,\n        },\n    })\n    const theme = responsiveFontSizes(rawTheme)\n\n    useEffect(() => {\n        if (darkModeMounted) toggleDarkMode(\"light\")\n    }, [darkModeMounted])\n\n    return (\n        <ThemedLayout theme={theme}>\n            <Helmet>\n                <style>\n                    {`\nhtml {\n    margin-right: 4px;\n}\nhtml, body {\n    background: transparent !important;\n    overflow: hidden !important;\n}\n`}\n                </style>\n            </Helmet>\n            <Carousel />\n        </ThemedLayout>\n    )\n}\n"],"names":["Box","createStyles","makeStyles","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","ConnectButton","NoSsr","useChange","useStyles","theme","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","closeable","bus","transports","devices","b","ignoreSelf","spec","length","name","map","transport","type","ConnectAlert","useRef","useState","useSelectedNodes","singleSelection","nodes","Set","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","Grid","useId","GridHeader","DashboardDeviceItem","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","SRV_BUTTON","SRV_BUZZER","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","startServiceProviderFromServiceClass","AppContext","IconButtonWithTooltip","AddIcon","SimulateDeviceHint","handleStartSimulator","toggleShowDeviceHostsDialog","SimulateDeviceAlert","isReading","isValueOrIntensity","splitFilter","strcmp","useDevices","DashboardDeviceGroup","ClearIcon","DevicesIcon","ConnectButtons","useRoleManagerClient","useMediaQueries","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","score","srvs","ls","services","slice","specification","filter","rs","deviceId","defaultDeviceFilter","d","Dashboard","hideSimulators","showConnect","showStartSimulators","deviceSort","deviceFilter","announced","sort","mobile","simulators","physicals","findServiceProvider","roleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","DashboardDevice","dashboardServiceWeight","DrawerType","variant","drawerType","breakpoints","breakpointWeight","readingRegister","valueRegister","intensityRegister","c","v","None","xs","sm","md","lg","xl","useEffect","Button","createTheme","responsiveFontSizes","ThemedLayout","MakeCodeIcon","Helmet","DarkModeContext","IFrameBridgeClient","Carousel","iframeBridge","nodeData","DATA_ID","bind","serviceFilter","extensions","_","candidateExtensions","handleAdd","postAddExtensions","Page","toggleDarkMode","darkModeMounted","rawTheme","palette","primary","main","secondary","contrastThreshold"],"sourceRoot":""}