{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRealTimeClock.tsx"],"names":["DashboardRealTimeClock","props","service","useRegisterUnpackedValue","register","RealTimeClockReg","year","month","dayOfMonth","hour","min","seconds","undefined","t","Date","date","toLocaleDateString","time","toLocaleTimeString"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAEe,SAASA,sBAAT,CAAgCC,KAAhC,EAA8D;AAAA,MACjEC,OADiE,GACrDD,KADqD,CACjEC,OADiE;;AAAA,8BAUrEC,4FAAwB,CACxBD,OAAO,CAACE,QAAR,CAAiBC,0GAAjB,CADwB,EAExBJ,KAFwB,CAV6C;AAAA,MAIrEK,IAJqE;AAAA,MAKrEC,KALqE;AAAA,MAMrEC,UANqE;AAAA,MAOrEC,IAPqE;AAAA,MAQrEC,GARqE;AAAA,MASrEC,OATqE;;AAczE,MAAIL,IAAI,KAAKM,SAAb,EAAwB,oBAAO,iDAAC,iEAAD,OAAP;AACxB,MAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASR,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4CC,GAA5C,EAAiDC,OAAjD,CAAV;AACA,MAAMI,IAAI,GAAGF,CAAC,CAACG,kBAAF,EAAb;AACA,MAAMC,IAAI,GAAGJ,CAAC,CAACK,kBAAF,EAAb;AACA,sBACI,iHACI,iDAAC,+DAAD;AACI,SAAK,EAAC,QADV;AAEI,YAAQ,EAAE,CAFd;AAGI,QAAI,EAAC,OAHT;AAII,kBAAYH,IAJhB;AAKI,WAAO,EAAC;AALZ,KAOKA,IAPL,CADJ,eAUI,iDAAC,+DAAD;AACI,SAAK,EAAC,QADV;AAEI,YAAQ,EAAE,CAFd;AAGI,QAAI,EAAC,OAHT;AAII,kBAAYE,IAJhB;AAKI,WAAO,EAAC;AALZ,KAOKA,IAPL,CAVJ,CADJ;AAsBH,C","file":"360-98b8ace0f1978b52abf9.js","sourcesContent":["import React from \"react\"\nimport { RealTimeClockReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { RealTimeClockReadingType } from \"../../../jacdac-ts/src/servers/realtimeclockserver\"\nimport { Typography } from \"@material-ui/core\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nexport default function DashboardRealTimeClock(props: DashboardServiceProps) {\n    const { service } = props\n\n    const [\n        year,\n        month,\n        dayOfMonth,\n        hour,\n        min,\n        seconds,\n    ] = useRegisterUnpackedValue<RealTimeClockReadingType>(\n        service.register(RealTimeClockReg.LocalTime),\n        props\n    )\n    if (year === undefined) return <LoadingProgress />\n    const t = new Date(year, month - 1, dayOfMonth, hour, min, seconds)\n    const date = t.toLocaleDateString()\n    const time = t.toLocaleTimeString()\n    return (\n        <>\n            <Typography\n                align=\"center\"\n                tabIndex={0}\n                role=\"timer\"\n                aria-label={date}\n                variant=\"body2\"\n            >\n                {date}\n            </Typography>\n            <Typography\n                align=\"center\"\n                tabIndex={0}\n                role=\"timer\"\n                aria-label={time}\n                variant=\"body1\"\n            >\n                {time}\n            </Typography>\n        </>\n    )\n}\n"],"sourceRoot":""}