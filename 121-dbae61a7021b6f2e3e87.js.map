{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardSolenoid.tsx"],"names":["DashboardSolenoid","props","service","pulledRegister","register","SolenoidReg","Pulled","pulled","useRegisterBoolValue","host","useServiceHost","color","useWidgetTheme","active","background","controlBackground","textProps","w","bw","h","m","bh","bsh","pos","useThrottledValue","label","onToggle","ev","setValues","refresh","buttonProps","useSvgButtonProps"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASA,iBAAT,CAA2BC,KAA3B,EAAyD;AAAA,MAC5DC,OAD4D,GAChDD,KADgD,CAC5DC,OAD4D;AAEpE,MAAMC,cAAc,GAAGD,OAAO,CAACE,QAAR,CAAiBC,kFAAW,CAACC,MAA7B,CAAvB;AACA,MAAMC,MAAM,GAAGC,6FAAoB,CAACL,cAAD,EAAiBF,KAAjB,CAAnC;AACA,MAAMQ,IAAI,GAAGC,6EAAc,CAACR,OAAD,CAA3B;AACA,MAAMS,KAAK,GAAGF,IAAI,GAAG,WAAH,GAAiB,SAAnC;;AALoE,wBAMPG,+EAAc,CAACD,KAAD,CANP;AAAA,MAM5DE,MAN4D,mBAM5DA,MAN4D;AAAA,MAMpDC,UANoD,mBAMpDA,UANoD;AAAA,MAMxCC,iBANwC,mBAMxCA,iBANwC;AAAA,MAMrBC,SANqB,mBAMrBA,SANqB;;AAQpE,MAAMC,CAAC,GAAG,GAAV;AACA,MAAMC,EAAE,GAAG,EAAX;AACA,MAAMC,CAAC,GAAG,EAAV;AACA,MAAMC,CAAC,GAAG,CAAV;AACA,MAAMC,EAAE,GAAGF,CAAC,GAAG,IAAIC,CAAnB;AACA,MAAME,GAAG,GAAGD,EAAE,GAAG,IAAID,CAArB;AAEA,MAAMG,GAAG,GAAGC,gFAAiB,CAACjB,MAAM,GAAGa,CAAH,GAAOH,CAAC,GAAGC,EAAJ,GAAS,IAAIE,CAA3B,EAA8BH,CAA9B,CAA7B;AACA,MAAMQ,KAAK,GAAGlB,MAAM,GAAG,eAAH,GAAqB,eAAzC;;AAEA,MAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD,EAA4B;AAAA;;AACzClB,QAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEL,QAAN,CAAeC,kFAAW,CAACC,MAA3B,mEAAoCsB,SAApC,CAA8C,CAAC,CAACrB,MAAD,GAAU,CAAV,GAAc,CAAf,CAA9C;AACAJ,kBAAc,CAAC0B,OAAf;AACH,GAHD;;AAKA,MAAMC,WAAW,GAAGC,gFAAiB,CAAiBN,KAAjB,EAAwB,CAAC,CAAChB,IAAF,IAAUiB,QAAlC,CAArC;AAEA,sBAAO,2DAAC,kEAAD;AAAW,SAAK,EAAET,CAAlB;AAAqB,UAAM,EAAEE,CAA7B;AAAgC,cAAU,EAAEL;AAA5C,kBACH;AAAM,KAAC,EAAEM,CAAC,GAAGG,GAAb;AAAkB,KAAC,EAAEH,CAAC,GAAG,CAACC,EAAE,GAAGC,GAAN,IAAa,CAAtC;AAAyC,SAAK,EAAEJ,EAAhD;AAAoD,UAAM,EAAEI,GAA5D;AAAiE,MAAE,EAAEF,CAArE;AAAwE,MAAE,EAAEA,CAA5E;AAA+E,QAAI,EAAEP,MAArF;AAA6F,UAAM,EAAEE;AAArG,IADG,eAEH;AAAM,KAAC,EAAEK,CAAT;AAAY,KAAC,EAAEA,CAAf;AAAkB,SAAK,EAAEF,EAAzB;AAA6B,UAAM,EAAEG,EAArC;AAAyC,MAAE,EAAED,CAA7C;AAAgD,MAAE,EAAEA,CAApD;AAAuD,UAAM,EAAEN,UAA/D;AAA2E,QAAI,EAAEC;AAAjF,KAAwGe,WAAxG,EAFG,eAGH,qFAAUd,SAAV;AAAqB,KAAC,EAAEI,CAAC,GAAGF,EAAE,GAAG,CAAjC;AAAoC,KAAC,EAAEE,CAAC,GAAGC,EAAE,GAAG;AAAhD,MAAoDd,MAAM,GAAG,QAAH,GAAc,QAAxE,CAHG,CAAP;AAKH,C","file":"121-dbae61a7021b6f2e3e87.js","sourcesContent":["import React from \"react\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport { SolenoidReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\";\nimport useServiceHost from \"../hooks/useServiceHost\";\n\nexport default function DashboardSolenoid(props: DashboardServiceProps) {\n    const { service } = props;\n    const pulledRegister = service.register(SolenoidReg.Pulled);\n    const pulled = useRegisterBoolValue(pulledRegister, props);\n    const host = useServiceHost(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { active, background, controlBackground, textProps } = useWidgetTheme(color);\n\n    const w = 128\n    const bw = 84;\n    const h = 72;\n    const m = 6;\n    const bh = h - 2 * m;\n    const bsh = bh - 6 * m;\n\n    const pos = useThrottledValue(pulled ? m : w - bw - 2 * m, w);\n    const label = pulled ? \"pull solenoid\" : \"push solenoid\"\n\n    const onToggle = (ev: React.PointerEvent) => {\n        host?.register(SolenoidReg.Pulled)?.setValues([!pulled ? 1 : 0]);\n        pulledRegister.refresh();\n    }\n\n    const buttonProps = useSvgButtonProps<SVGRectElement>(label, !!host && onToggle)\n\n    return <SvgWidget width={w} height={h} background={background} >\n        <rect x={m + pos} y={m + (bh - bsh) / 2} width={bw} height={bsh} rx={m} ry={m} fill={active} stroke={controlBackground} />\n        <rect x={m} y={m} width={bw} height={bh} rx={m} ry={m} stroke={background} fill={controlBackground} {...buttonProps} />\n        <text {...textProps} x={m + bw / 2} y={m + bh / 2}>{pulled ? \"pulled\" : \"pushed\"}</text>\n    </SvgWidget>\n}"],"sourceRoot":""}