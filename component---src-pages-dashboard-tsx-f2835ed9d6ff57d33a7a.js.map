{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Add.js","webpack:///./src/components/ui/GridHeader.tsx","webpack:///./src/components/dashboard/DashboardDeviceItem.tsx","webpack:///./src/jacdac/useSelectedNodes.ts","webpack:///./src/components/dashboard/DashboardDeviceGroup.tsx","webpack:///./src/components/dashboard/Dashboard.tsx","webpack:///./src/pages/dashboard.tsx","webpack:///./node_modules/@material-ui/icons/Clear.js"],"names":["useStyles","makeStyles","theme","createStyles","hr","background","palette","text","disabled","marginBottom","start","width","spacing","GridHeader","props","title","count","variant","action","classes","clsx","undefined","DashboardDeviceItem","device","expanded","toggleExpanded","other","breakpoints","useChange","breakpointWeight","services","map","srv","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","reduce","c","v","xs","sm","md","lg","xl","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","devices","children","handleExpand","deviceSort","l","r","srvScore","packets","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","slice","specification","filter","spec","rs","strcmp","deviceId","Dashboard","useContext","JacdacContext","bus","AppContext","toggleShowDeviceHostsDialog","useDevices","announced","ignoreSelf","sort","useTheme","mobile","useMediaQuery","down","MOBILE_BREAKPOINT","splitFilter","d","deviceHost","hosted","physicals","handleClearSimulators","deviceHosts","forEach","dev","removeDeviceHost","length","Page"],"mappings":"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","file":"component---src-pages-dashboard-tsx-f2835ed9d6ff57d33a7a.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { Box, Chip, createStyles, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    return <section>\n        <Grid container spacing={2}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import { Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\";\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\";\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\";\nimport Alert from \"../ui/Alert\";\nimport useDevices from \"../hooks/useDevices\";\nimport { MOBILE_BREAKPOINT } from \"../layout\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport ConnectButton from \"../../jacdac/ConnectButton\";\nimport AppContext from \"../AppContext\";\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\";\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\";\nimport AddIcon from '@material-ui/icons/Add';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from '@material-ui/icons/Clear';\n\nfunction deviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) => srv.packets\n        .reduce((prev, pkt) => prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0), 0) || 0;\n    const score = (srvs: jdspec.ServiceSpec[]) => srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(l.services().slice(1).map(srv => srv.specification).filter(spec => !!spec))\n    const rs = score(r.services().slice(1).map(srv => srv.specification).filter(spec => !!spec))\n    if (ls !== rs)\n        return -ls + rs;\n    return strcmp(l.deviceId, r.deviceId);\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean,\n    showAvatar?: boolean\n}\n\nexport default function Dashboard(props: DashboardDeviceProps) {\n    const { ...other } = props;\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .sort(deviceSort);\n    const theme = useTheme();\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT));\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [hosted, physicals] = splitFilter(devices, d => !!bus.deviceHost(d.deviceId))\n\n    const handleClearSimulators = () => {\n        bus.deviceHosts().forEach(dev => bus.removeDeviceHost(dev));\n    }\n\n    return <>\n        <DashboardDeviceGroup\n            title=\"Simulators\"\n            action={<>\n                <IconButtonWithTooltip\n                    title=\"start simulator\"\n                    onClick={toggleShowDeviceHostsDialog}>\n                    <AddIcon />\n                </IconButtonWithTooltip>\n                <IconButtonWithTooltip\n                    title=\"clear simulators\"\n                    onClick={handleClearSimulators}>\n                    <ClearIcon />\n                </IconButtonWithTooltip>            </>}\n            devices={hosted}\n            expanded={selected}\n            toggleExpanded={toggleSelected}\n            {...other} />\n        <DashboardDeviceGroup\n            title=\"Devices\"\n            action={<ConnectButton full={false} transparent={true} showAlways={true} />}\n            devices={physicals}\n            expanded={selected}\n            toggleExpanded={toggleSelected}\n            {...other}>\n            {!physicals.length && <Grid item xs={12}>\n                <Alert severity=\"info\">\n                    Please <ConnectButton showAlways={true} full={true} transparent={true} /> to see your physical devices.\n                </Alert>\n            </Grid>}\n        </DashboardDeviceGroup>\n    </>\n}","import React from \"react\"\nimport Dashboard from \"../components/dashboard/Dashboard\"\n\nexport default function Page() {\n    return <Dashboard showAvatar={true} showHeader={true} />\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;"],"sourceRoot":""}