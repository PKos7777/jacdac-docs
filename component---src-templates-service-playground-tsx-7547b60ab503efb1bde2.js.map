{"version":3,"sources":["webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/ServiceSpecification.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/templates/service-playground.tsx"],"names":["EnumSpecification","props","serviceClass","spec","serviceSpecificationFromClassIdentifier","enums","Object","values","filter","en","derived","length","map","e","name","isFlags","keys","members","toString","DashboardServiceDevices","useContext","JacdacContext","bus","devices","useChange","b","device","id","ServiceSpecification","node","service","showDerived","shortId","classIdentifier","packets","pkt","registers","isRegister","events","isEvent","commands","isCommand","reports","r","secondary","pipeReports","isPipeReport","others","indexOf","useServiceProviderFromServiceClass","reportOf","find","rep","isReportOf","pipeReportOf","isPipeReportOf","notes","short","extends","extend","i","serviceSpecificationFromName","long","note","group","sort","l","DashboardDeviceItem","expanded","toggleExpanded","variant","other","AppContext","drawerType","breakpoints","breakpointWeight","services","srv","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","reduce","c","v","DrawerType","xs","sm","md","lg","xl","Page","pageContext"],"mappings":"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","file":"component---src-templates-service-playground-tsx-7547b60ab503efb1bde2.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n            <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n        </Fragment>)}\n    </Fragment>\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\"\nimport Markdown from \"./ui/Markdown\"\nimport EnumSpecification from \"./EnumSpecification\"\nimport { Box, Grid } from \"@material-ui/core\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"./hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport useChange from \"../jacdac/useChange\"\nimport DashbardDeviceItem from \"./dashboard/DashboardDeviceItem\"\nimport VMBlockEditor from \"./vm/VMBlockEditor\"\nimport PaperBox from \"./ui/PaperBox\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <Fragment key={`servicespec${shortId}`}>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <PaperBox>\n                <VMBlockEditor />\n            </PaperBox>\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map((pkt, i) => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.name}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </Fragment>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import React from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecification from \"../components/ServiceSpecification\"\n\nexport default function Page(props: { pageContext: { node: { classIdentifier: number } } }) {\n    const spec = serviceSpecificationFromClassIdentifier(props.pageContext.node.classIdentifier);\n    return <ServiceSpecification service={spec} />\n}\n"],"sourceRoot":""}