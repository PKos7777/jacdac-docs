{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/ExpandMore.js","webpack:///./node_modules/@material-ui/icons/FiberManualRecord.js","webpack:///./node_modules/@material-ui/core/esm/AccordionActions/AccordionActions.js","webpack:///./src/components/ApiKeyAccordion.tsx","webpack:///./node_modules/@material-ui/core/esm/Accordion/Accordion.js","webpack:///./node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","webpack:///./node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","webpack:///./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","webpack:///./src/pages/tools/edge-impulse.tsx","webpack:///./node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@material-ui/icons/CheckCircleOutline.js","webpack:///./node_modules/@material-ui/icons/GetApp.js","webpack:///./src/components/ReadingFieldGrid.tsx"],"names":["ApiKeyAccordion","props","apiName","validateKey","instructions","title","useDbValue","apiKey","value","setApiKey","setValue","apiKeyId","useId","useState","key","setKey","expanded","setExpanded","validated","setValidated","useSnackbar","enqueueSnackbar","useEffectAsync","mounted","statusCode","undefined","handleApiChange","event","target","handleSave","handleReset","handleExpanded","display","EDGE_IMPULSE_API_KEY","IDLE","STARTING","SAMPLING","UPLOADING","SAMPLING_STATE","EdgeImpulseClient","aggregator","inputRegisters","palette","connectionState","DISCONNECT","samplingState","handleMessage","bind","handleOpen","handleError","handleReport","handlePing","aggregatorClient","SensorAggregatorClient","subscribeSample","mount","disconnect","unmount","clearSampling","_pingInterval","clearInterval","_ws","w","close","e","console","debug","setConnectionState","state","emit","CONNECTION_STATE","log","setSamplingState","CHANGE","send","msg","JSON","stringify","service","device","resolveFirmwareIdentifier","firmwareIdentifier","deviceSpec","deviceSpecificationFromFirmwareIdentifier","_hello","deviceId","name","toString","map","reg","serviceName","serviceClass","join","reconnect","connect","data","pong","parse","hello","ERROR","err","CONNECT","sample","startSampling","row","connected","sampling","some","r","bus","timestamp","_sample","startTimestamp","lastProgressTimestamp","ds","dataSet","addRow","REPORT_RECEIVE","PROGRESS","progress","length","stopSampling","uploadData","payload","Date","now","deviceType","interval","headers","h","i","units","fetch","path","method","label","body","then","resp","text","filename","generatedFilename","finally","ev","FieldDataSet","create","unsubscribers","aggregatorConfig","samplingInterval","samplesInWindow","inputs","serviceIndex","setInputs","collect","forEach","unsub","CONNECTING","WebSocket","onmessage","onopen","onerror","setInterval","currentProjectInfo","valid","apiFetch","rsj","success","errorStatus","projectId","projects","id","project","API_ROOT","url","options","status","error","statusText","json","message","deviceInfo","renameDevice","JDClient","ApiKeyManager","useEdgeImpulseProjectInfo","info","setInfo","ProjectInfo","disabled","dataSummary","dataCount","logo","ModelDownloadButton","setModel","theme","useTheme","downloading","setDownloading","setError","download","downloads","find","type","handleDownload","blob","res","readBlobToUint8Array","bytes","spacing","link","AggregatorCard","selected","onChecked","handleChecked","Acquisition","client","setClient","samplingProgress","setSamplingProgress","setDeviceInfo","deviceName","useDeviceName","useChartPalette","generatedSampleName","useEffect","c","ip","subscribe","v","p","rename","EdgeImpulse","useContext","JacdacContext","model","registerIdsChecked","setRegisterIdsChecked","aggregatorId","setAggregatorId","gridBreakPoints","useGridBreakpoints","aggregators","useChange","services","SRV_SENSOR_AGGREGATOR","currentAggregator","srv","readingRegisters","devices","isSensor","specification","readingRegister","filter","indexOf","handleAggregatorChecked","handleRegisterCheck","splice","push","sort","SRV_MODEL_RUNNER","useStyles","makeStyles","createStyles","vmiddle","verticalAlign","ReadingFieldGridItem","register","recording","registerChecked","liveDataSet","gridBreakpoints","classes","handleCheck","fields","field","color","colorOf","ReadingFieldGrid"],"mappings":"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","file":"component---src-pages-tools-edge-impulse-tsx-60e019cd40f450373bcd.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar AccordionActions = /*#__PURE__*/React.forwardRef(function AccordionActions(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionActions'\n})(AccordionActions);","import React, { useState } from \"react\"\nimport useDbValue from \"./useDbValue\"\nimport useEffectAsync from \"./useEffectAsync\"\nimport Alert from \"./ui/Alert\"\nimport {\n    AccordionActions,\n    AccordionSummary,\n    AccordionDetails,\n    Accordion,\n    Typography,\n    TextField,\n    Box,\n} from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\"\nimport { useSnackbar } from \"notistack\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function ApiKeyAccordion(props: {\n    apiName: string\n    title?: string\n    validateKey?: (key: string) => Promise<{ statusCode: number }>\n    instructions: JSX.Element | JSX.Element[]\n}) {\n    const { apiName, validateKey, instructions, title } = props\n    const { value: apiKey, setValue: setApiKey } = useDbValue(apiName, \"\")\n    const apiKeyId = useId()\n    const [key, setKey] = useState(\"\")\n    const [expanded, setExpanded] = useState(!apiKey)\n    const [validated, setValidated] = useState(false)\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffectAsync(\n        async mounted => {\n            if (!apiKey) {\n                setValidated(false)\n            } else {\n                const { statusCode } = validateKey\n                    ? await validateKey(apiKey)\n                    : { statusCode: 200 }\n                if (!mounted()) return\n                if (statusCode === 200) {\n                    setValidated(true)\n                    setExpanded(false)\n                } else {\n                    setValidated(false)\n                    if (statusCode === 403) setApiKey(undefined)\n                }\n            }\n        },\n        [apiKey]\n    )\n\n    const handleApiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setKey(event.target.value)\n    }\n    const handleSave = () => {\n        setApiKey(key)\n        setKey(\"\")\n        enqueueSnackbar(\"key saved...\")\n    }\n    const handleReset = () => {\n        setApiKey(\"\")\n        enqueueSnackbar(\"key cleared...\")\n    }\n\n    const handleExpanded = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Accordion expanded={expanded} onChange={handleExpanded}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body1\">{`${\n                    title || \"API key\"\n                } Configuration`}</Typography>\n                {validated && (\n                    <Box ml={1} color=\"success.main\">\n                        <CheckCircleOutlineIcon />\n                    </Box>\n                )}\n            </AccordionSummary>\n            <AccordionDetails style={{ display: \"block\" }}>\n                {validated && (\n                    <Alert severity={\"success\"}>API key ready!</Alert>\n                )}\n                {instructions}\n                <TextField\n                    id={apiKeyId}\n                    autoFocus\n                    label=\"API key\"\n                    fullWidth\n                    value={key}\n                    onChange={handleApiChange}\n                />\n            </AccordionDetails>\n            <AccordionActions>\n                <Button\n                    aria-label=\"save api key\"\n                    disabled={!key}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSave}\n                >\n                    Save\n                </Button>\n                <Button\n                    aria-label=\"clear api key\"\n                    disabled={!apiKey}\n                    variant=\"contained\"\n                    onClick={handleReset}\n                >\n                    Clear\n                </Button>\n            </AccordionActions>\n        </Accordion>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import React, { useContext, useEffect, useState } from \"react\"\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, CardMedia, CircularProgress, Grid, Switch, Typography, useTheme } from '@material-ui/core';\nimport { Link } from 'gatsby-theme-material-ui';\nimport useDbValue from \"../../components/useDbValue\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from \"../../jacdac/useChange\";\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\";\nimport DeviceCardHeader from \"../../components/DeviceCardHeader\";\nimport Alert from \"../../components/ui/Alert\";\nimport useEffectAsync from \"../../components/useEffectAsync\";\nimport { CHANGE, CONNECT, CONNECTING, CONNECTION_STATE, DISCONNECT, ERROR, PROGRESS, REPORT_RECEIVE, SRV_MODEL_RUNNER, SRV_SENSOR_AGGREGATOR } from \"../../../jacdac-ts/src/jdom/constants\";\nimport FieldDataSet from \"../../components/FieldDataSet\";\nimport { deviceSpecificationFromFirmwareIdentifier, isSensor } from \"../../../jacdac-ts/src/jdom/spec\";\nimport CircularProgressWithLabel from \"../../components/ui/CircularProgressWithLabel\";\nimport Trend from \"../../components/Trend\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ServiceList from \"../../components/ServiceList\";\nimport { ModelActions, ModelContent } from \"./model-uploader\";\nimport { readBlobToUint8Array } from \"../../../jacdac-ts/src/jdom/utils\";\nimport useDeviceName from \"../../components/useDeviceName\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\nimport ReadingFieldGrid from \"../../components/ReadingFieldGrid\";\nimport useChartPalette from '../../components/useChartPalette';\nimport { SensorAggregatorClient, SensorAggregatorConfig } from \"../../../jacdac-ts/src/jdom/sensoraggregatorclient\";\nimport { AlertTitle } from \"@material-ui/lab\";\nimport { serviceName } from \"../../../jacdac-ts/src/jdom/pretty\";\nimport ConnectAlert from \"../../components/alert/ConnectAlert\";\nimport ApiKeyAccordion from \"../../components/ApiKeyAccordion\";\n\nconst EDGE_IMPULSE_API_KEY = \"edgeimpulseapikey\"\n\nconst IDLE = \"idle\";\nconst STARTING = \"starting\";\nconst SAMPLING = \"sampling\";\nconst UPLOADING = \"uploading\";\n\nconst SAMPLING_STATE = \"samplingState\";\n\ninterface EdgeImpulseResponse {\n    success: boolean;\n    error?: string;\n    // HTTP status code\n    errorStatus?: number;\n}\n\ninterface EdgeImpulseHello {\n    hello?: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    err?: any;\n}\n\ninterface EdgeImpulseSensorInfo {\n    \"name\": string,\n    \"maxSampleLengthS\": number,\n    \"frequencies\": number[]\n}\n\ninterface EdgeImpulseRemoteManagementInfo {\n    version: number;\n    apiKey: string;\n    deviceId: string;\n    deviceType: string;\n    connection: string;\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceInfo {\n    id: number;\n    deviceId: string;\n    name: string;\n    created: string;\n    lastSeen: string;\n    deviceType: string;\n    sensors: EdgeImpulseSensorInfo[]\n}\n\ninterface EdgeImpulseDeviceResponse extends EdgeImpulseResponse {\n    device?: EdgeImpulseDeviceInfo;\n}\n\ninterface EdgeImpulseSample extends EdgeImpulseResponse {\n    \"label\": string;\n    \"length\": number;\n    \"path\": string;\n    \"hmacKey\": string;\n    \"interval\": number;\n    \"sensor\": string;\n}\n\ninterface EdgeImpulseSampling extends EdgeImpulseSample {\n    dataSet?: FieldDataSet;\n    startTimestamp?: number;\n    lastProgressTimestamp?: number;\n    generatedFilename?: string;\n    aggregatorConfig?: SensorAggregatorConfig;\n    unsubscribers?: (() => void)[];\n}\n\ninterface EdgeImpulseProjectInfo {\n    id: number;\n    name: string;\n    logo?: string;\n}\n\ninterface EdgeImpulseProject extends EdgeImpulseResponse {\n    project: EdgeImpulseProjectInfo,\n    devices: EdgeImpulseDeviceInfo[],\n    impulse: {\n        created: boolean;\n        configured: boolean;\n        complete: boolean;\n    },\n    dataSummary: {\n        totalLengthMs: number;\n        labels: string[];\n        dataCount: number;\n    },\n    downloads: {\n        name: string;\n        type: string;\n        size: string;\n        link: string;\n    }[];\n}\n\ninterface EdgeImpulseProjects extends EdgeImpulseResponse {\n    projects: EdgeImpulseProjectInfo[];\n}\n\n/*\nA client for the EdgeImpulse remote management\nhttps://docs.edgeimpulse.com/reference#remote-management\n*/\nclass EdgeImpulseClient extends JDClient {\n    private _ws: WebSocket;\n    public connectionState = DISCONNECT;\n    public samplingState = IDLE;\n    private _hello: EdgeImpulseRemoteManagementInfo;\n    private _sample: EdgeImpulseSampling;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _pingInterval: any;\n    private pong: boolean;\n    private aggregatorClient: SensorAggregatorClient;\n\n    constructor(\n        private readonly apiKey: string,\n        private readonly aggregator: JDService,\n        private readonly inputRegisters: JDRegister[],\n        private readonly palette: string[]\n    ) {\n        super()\n\n        this.handleMessage = this.handleMessage.bind(this);\n        this.handleOpen = this.handleOpen.bind(this)\n        this.handleError = this.handleError.bind(this);\n        this.handleReport = this.handleReport.bind(this);\n        this.handlePing = this.handlePing.bind(this);\n\n        this.aggregatorClient = new SensorAggregatorClient(this.aggregator);\n        this.aggregatorClient.subscribeSample(this.handleReport);\n\n        this.mount(() => this.disconnect());\n        this.mount(() => this.aggregatorClient.unmount());\n    }\n\n    get dataSet() {\n        return this._sample?.dataSet;\n    }\n\n    disconnect() {\n        this.clearSampling();\n        if (this._pingInterval) {\n            clearInterval(this._pingInterval)\n            this._pingInterval = undefined;\n        }\n        // stop socket\n        if (this._ws) {\n            const w = this._ws;\n            this._ws = undefined;\n            try {\n                w.close();\n            }\n            catch (e) {\n                console.debug(e)\n            }\n            finally {\n                this.setConnectionState(DISCONNECT);\n            }\n        }\n    }\n\n    private setConnectionState(state: string) {\n        if (this.connectionState !== state) {\n            this.connectionState = state;\n            this.emit(CONNECTION_STATE, this.connectionState);\n            console.log(`ei: connection state changed`, this.connectionState)\n        }\n    }\n\n    private setSamplingState(state: string) {\n        if (this.samplingState !== state) {\n            this.samplingState = state;\n            this.emit(SAMPLING_STATE, this.samplingState)\n            this.emit(CHANGE)\n            console.log(`ei: sampling state changed`, this.samplingState)\n        }\n    }\n\n    private send(msg: unknown) {\n        this._ws?.send(JSON.stringify(msg))\n    }\n\n    private async handleOpen() {\n        console.log(`ws: open`)\n        const service = this.aggregator;\n        const { device } = service;\n\n        // fetch device spec\n        const firmwareIdentifier = await service.device.resolveFirmwareIdentifier();\n        const deviceSpec = deviceSpecificationFromFirmwareIdentifier(firmwareIdentifier);\n\n        this._hello = {\n            \"version\": 2,\n            \"apiKey\": this.apiKey,\n            \"deviceId\": device.deviceId,\n            \"deviceType\": deviceSpec?.name || firmwareIdentifier?.toString(16) || \"Jacdac device\",\n            \"connection\": \"ip\", // direct connection\n            \"sensors\": [{\n                \"name\": this.inputRegisters.map(reg => serviceName(reg.service.serviceClass)).join(','),\n                \"maxSampleLengthS\": 10000,\n                \"frequencies\": [50, 30, 20, 10]\n            }]\n        };\n        this.send({\n            \"hello\": this._hello\n        })\n    }\n\n    private reconnect() {\n        this.disconnect();\n        this.connect();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private handleMessage(msg: any) {\n        // response to ping?\n        if (msg.data === \"pong\") {\n            this.pong = true;\n            return;\n        }\n\n        const data = JSON.parse(msg.data)\n        if (data.hello !== undefined) {\n            const hello = data as EdgeImpulseHello;\n            if (!hello.hello) {\n                this.emit(ERROR, hello.err)\n                this.disconnect();\n            } else {\n                this.setConnectionState(CONNECT);\n            }\n        } else if (data.sample) {\n            const sample = data.sample as EdgeImpulseSample;\n            this.startSampling(sample);\n        }\n    }\n\n    get connected() {\n        return this.connectionState === CONNECT;\n    }\n\n    get sampling() {\n        return this.samplingState !== IDLE;\n    }\n\n    get generatedSampleName() {\n        return this._sample?.generatedFilename;\n    }\n\n    get aggregatorConfig() {\n        return this._sample?.aggregatorConfig;\n    }\n\n    private handleReport(row: number[]) {\n        console.log(`ei: aggregator report`, this.connected, this.sampling)\n        if (!this.connected) return; // ignore\n\n        // partial data? ignore\n        if (row.some(r => r === undefined))\n            return;\n\n        const { bus } = this.aggregator.device\n        const { timestamp } = bus;\n        // first sample, notify we're started\n        if (this.samplingState == STARTING) {\n            this._sample.startTimestamp = this._sample.lastProgressTimestamp = timestamp;\n            this.send({ \"sampleStarted\": true });\n            this.setSamplingState(SAMPLING);\n        }\n        // store sample\n        if (this.samplingState == SAMPLING) {\n            const ds = this.dataSet;\n            ds.addRow(row);\n            this.emit(REPORT_RECEIVE);\n\n            // debounced progress update\n            if (timestamp - this._sample.lastProgressTimestamp > 100) {\n                this._sample.lastProgressTimestamp = timestamp;\n                this.emit(PROGRESS, this.progress)\n            }\n\n            if (timestamp - this._sample.startTimestamp >= this._sample.length) {\n                // first stop the sampling\n                this.stopSampling();\n                // we're done!\n                this.emit(PROGRESS, this.progress)\n                // and upload...\n                this.uploadData();\n            }\n        }\n    }\n\n    private uploadData(): Promise<void> {\n        this.setSamplingState(UPLOADING);\n        const ds = this.dataSet;\n        const payload = {\n            \"protected\": {\n                \"ver\": \"v1\",\n                \"alg\": \"none\",\n                \"iat\": Date.now()\n            },\n            \"signature\": \"\",\n            \"payload\": {\n                \"device_name\": this._hello.deviceId,\n                \"device_type\": this._hello.deviceType,\n                \"interval_ms\": this._sample.interval,\n                \"sensors\": ds.headers.map((h, i) => ({\n                    \"name\": ds.headers[i],\n                    \"units\": ds.units[i] || \"/\"\n                })\n                ),\n                \"values\": ds.data(true)\n            }\n        }\n        console.log(`payload`, payload)\n        // upload dataset\n        // https://docs.edgeimpulse.com/reference#ingestion-api\n        return fetch(`https://ingestion.edgeimpulse.com${this._sample.path}`, {\n            method: \"POST\",\n            headers: {\n                \"x-api-key\": this.apiKey,\n                \"x-label\": this._sample.label,\n                \"x-file-name\": ds.name,\n                \"x-disallow-duplicates\": \"true\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(payload)\n        }).then(async (resp) => {\n            // response contains the filename\n            const filename = await resp.text();\n            this._sample.generatedFilename = filename;\n        }).finally(() => {\n            this.send({\n                \"sampleFinished\": true\n            })\n            this.setSamplingState(IDLE);\n        })\n    }\n\n    private handleError(ev: Event) {\n        this.emit(ERROR, ev)\n        this.reconnect();\n    }\n\n    private async startSampling(sample: EdgeImpulseSample) {\n        this._sample = sample;\n        this._sample.dataSet = FieldDataSet.create(this.aggregator.device.bus, this.inputRegisters, \"sample\", this.palette)\n        this._sample.unsubscribers = [];\n        this.send({ \"sample\": true })\n        this.setSamplingState(STARTING);\n\n        // prepare configuration\n        this._sample.aggregatorConfig = {\n            samplingInterval: this._sample.interval,\n            samplesInWindow: 10,\n            inputs: this.inputRegisters.map(reg => ({\n                serviceClass: reg.service.serviceClass,\n                deviceId: reg.service.device.deviceId,\n                serviceIndex: reg.service.serviceIndex\n            }))\n        }\n\n        console.log(`ei: input`, this._sample.aggregatorConfig)\n        // setup aggregator client\n        await this.aggregatorClient.setInputs(this._sample.aggregatorConfig)\n        // schedule data collection, ask a few more samples\n        await this.aggregatorClient.collect(this._sample.length * 1.1);\n    }\n\n    private stopSampling() {\n        const sample = this._sample;\n        if (sample) {\n            sample.unsubscribers.forEach(unsub => {\n                try {\n                    unsub();\n                }\n                catch (e) {\n                    console.log(e)\n                }\n            })\n            sample.unsubscribers = [];\n        }\n    }\n\n    private clearSampling() {\n        this.stopSampling();\n        if (this._sample) {\n            this._sample = undefined;\n            this._hello = undefined;\n            this.setSamplingState(IDLE);\n        }\n    }\n\n    connect() {\n        if (this._ws) return; // already connected\n\n        console.log(`ei: connect`)\n        this.setConnectionState(CONNECTING)\n        this._ws = new WebSocket(\"wss://remote-mgmt.edgeimpulse.com\")\n        this._ws.onmessage = this.handleMessage;\n        this._ws.onopen = this.handleOpen;\n        this._ws.onerror = this.handleError;\n\n        this.pong = true;\n        this._pingInterval = setInterval(this.handlePing, 3000);\n    }\n\n    private handlePing() {\n        if (!this.connected) return;\n\n        if (!this.pong) {\n            // the socket did not response\n            console.log(`missing pong`)\n            this.reconnect();\n        } else {\n            // send a new ping and wait for pong\n            this.pong = false;\n            this._ws.send(\"ping\");\n        }\n    }\n\n    get progress() {\n        const timestamp = this.aggregator.device.bus.timestamp;\n        return this.samplingState !== IDLE\n            && (timestamp - this._sample.startTimestamp) / this._sample.length;\n    }\n\n    static async currentProjectInfo(apiKey: string): Promise<{\n        valid: boolean,\n        errorStatus?: number,\n        project?: EdgeImpulseProject\n    }> {\n        if (!apiKey) return { valid: false };\n\n        const rsj = await EdgeImpulseClient.apiFetch<EdgeImpulseProjects>(apiKey, \"projects\");\n        if (!rsj.success) {\n            return {\n                valid: false,\n                errorStatus: rsj.errorStatus\n            }\n        }\n\n        // the API returns the current project when using the API key\n        const projectId = rsj.projects?.[0]?.id;\n        if (!rsj?.success || projectId === undefined) {\n            return {\n                valid: true,\n                errorStatus: 402\n            }\n        }\n\n        const project = await EdgeImpulseClient.apiFetch<EdgeImpulseProject>(apiKey, projectId);\n        return {\n            valid: true,\n            errorStatus: project.errorStatus,\n            project\n        }\n    }\n\n    static async apiFetch<T extends EdgeImpulseResponse>(apiKey: string, path: string | number, body?: unknown): Promise<T> {\n        const API_ROOT = \"https://studio.edgeimpulse.com/v1/api/\"\n        const url = `${API_ROOT}${path}`\n        const options: RequestInit = {\n            method: body ? \"POST\" : \"GET\",\n            headers: {\n                \"x-api-key\": apiKey,\n                \"Accept\": \"application/json\"\n            },\n            body: body && JSON.stringify(body)\n        }\n        if (options.method === \"POST\")\n            options.headers[\"Content-Type\"] = \"application/json\"\n\n        const resp = await fetch(url, options)\n        if (resp.status !== 200)\n            return {\n                success: false,\n                errorStatus: resp.status,\n                error: resp.statusText\n            } as T;\n        try {\n            const payload = await resp.json() as T;\n            return payload;\n        } catch (e) {\n            return {\n                success: false,\n                errorStatus: 500,\n                error: e.message\n            } as T;\n        }\n    }\n\n    static async deviceInfo(apiKey: string, projectId: number, deviceId: string): Promise<EdgeImpulseDeviceResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseDeviceResponse>(apiKey, `${projectId}/device/${deviceId}`)\n    }\n\n    static async renameDevice(apiKey: string, projectId: number, deviceId: string, name: string): Promise<EdgeImpulseResponse> {\n        return await EdgeImpulseClient.apiFetch<EdgeImpulseResponse>(apiKey, `${projectId}/devices/${deviceId}/rename`, { name })\n    }\n}\n\nfunction ApiKeyManager() {\n    const validateKey = async (key: string) => {\n        const r = await EdgeImpulseClient.currentProjectInfo(key)\n        return {\n            statusCode: (r?.valid && 200) || r?.errorStatus || 500\n        }\n    };\n    return <ApiKeyAccordion\n        apiName={EDGE_IMPULSE_API_KEY}\n        validateKey={validateKey}\n        instructions={<p>To get an <b>API key</b>, navigate to &nbsp;\n            <Link to=\"https://studio.edgeimpulse.com/studio/8698/keys\" target=\"_blank\">https://studio.edgeimpulse.com/studio/8698/keys</Link>\n            &nbsp; and generate a new key.</p>}\n    />\n}\n\nfunction useEdgeImpulseProjectInfo(apiKey: string) {\n    const [info, setInfo] = useState<EdgeImpulseProject>(undefined);\n\n    useEffectAsync(async (mounted) => {\n        if (!apiKey) {\n            if (mounted())\n                setInfo(undefined);\n        } else {\n            const r = await EdgeImpulseClient.currentProjectInfo(apiKey)\n            if (mounted())\n                setInfo(r?.project);\n        }\n    }, [apiKey])\n\n    return info;\n}\n\nfunction ProjectInfo(props: { info: EdgeImpulseProject }) {\n    const { info } = props;\n    const disabled = !info?.success;\n\n    return <Card>\n        <CardHeader title={info?.project?.name || \"...\"}\n            subheader={info?.dataSummary && `${info?.dataSummary?.dataCount} samples`}\n        />\n        {info?.project?.logo && <CardMedia image={info?.project?.logo} />}\n        <CardActions>\n            <Button disabled={disabled} target=\"_blank\" href={`https://studio.edgeimpulse.com/studio/${info?.project?.id}/`} variant=\"contained\" color=\"primary\">Open EdgeImpulse</Button>\n        </CardActions>\n    </Card >\n}\n\nfunction ModelDownloadButton(props: { apiKey: string, info: EdgeImpulseProject, setModel: (blob: Uint8Array) => void }) {\n    const { apiKey, info, setModel } = props;\n    const theme = useTheme();\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const download = info?.downloads.find(download => download.type === \"TensorFlow Lite (float32)\");\n\n    const handleDownload = (url: string) => async () => {\n        try {\n            setDownloading(true)\n            setError(\"\")\n            const resp = await fetch(url, {\n                headers: {\n                    \"x-api-key\": apiKey\n                }\n            })\n            const res = await resp.blob()\n            const bytes = await readBlobToUint8Array(res);\n            setModel(bytes)\n        }\n        catch (e) {\n            console.log(e)\n            setError(\"Oops, download failed.\")\n        }\n        finally {\n            setDownloading(false)\n        }\n    }\n\n    return <Box mb={1}>\n        {error && <Alert severity=\"error\">{error}</Alert>}\n        <Button\n            variant=\"contained\"\n            disabled={!download || downloading}\n            startIcon={downloading ? <CircularProgress size={theme.spacing(2)} /> : <GetAppIcon />}\n            onClick={handleDownload(`https://studio.edgeimpulse.com${download?.link}`)}>DOWNLOAD MODEL</Button>\n    </Box>\n}\n\nfunction AggregatorCard(props: {\n    aggregator: JDService,\n    selected: boolean,\n    onChecked: () => void\n}) {\n    const { aggregator, selected, onChecked } = props;\n    const { device } = aggregator;\n\n    const handleChecked = () => onChecked();\n\n    return <Card>\n        <DeviceCardHeader device={device} showMedia={true} />\n        <CardContent>\n            <Switch checked={selected} onChange={handleChecked} />\n        </CardContent>\n    </Card>\n}\n\nfunction Acquisition(props: {\n    aggregator: JDService,\n    inputs: JDRegister[],\n    apiKey: string,\n    info: EdgeImpulseProjectInfo\n}) {\n    const { aggregator, inputs, apiKey, info } = props;\n\n    const { device } = aggregator;\n    const [client, setClient] = useState<EdgeImpulseClient>(undefined)\n    const [error, setError] = useState(\"\")\n    const [connectionState, setConnectionState] = useState(DISCONNECT)\n    const [samplingState, setSamplingState] = useState(IDLE)\n    const [samplingProgress, setSamplingProgress] = useState(0)\n    const [, setDeviceInfo] = useState<EdgeImpulseDeviceInfo>(undefined);\n    const { deviceId } = device;\n    const deviceName = useDeviceName(device, false);\n    const projectId = info?.id;\n    const palette = useChartPalette()\n\n    const connected = connectionState === CONNECT;\n    const sampling = samplingState !== IDLE\n    const dataSet = client?.dataSet;\n    const generatedSampleName = client?.generatedSampleName;\n    const aggregatorConfig = client?.aggregatorConfig;\n\n    useEffect(() => {\n        if (!apiKey || !aggregator || !inputs?.length) {\n            setClient(undefined);\n            setError(undefined);\n            return undefined;\n        }\n        else {\n            console.log(`ei: start client`)\n            const c = new EdgeImpulseClient(apiKey, aggregator, inputs, palette)\n            c.connect();\n            setClient(c);\n            setError(undefined);\n            return () => c.unmount();\n        }\n    }, [apiKey, aggregator, inputs?.map(ip => ip.id).join(\",\")])\n    // subscribe to client changes\n    useEffect(() => client?.subscribe(CONNECTION_STATE,\n        (v: string) => setConnectionState(v))\n        , [client])\n    // subscribe to client changes\n    useEffect(() => client?.subscribe(SAMPLING_STATE,\n        (v: string) => setSamplingState(v))\n        , [client])\n    // listen to errors\n    useEffect(() => client?.subscribe(ERROR, (e: string) => setError(e))\n        , [client])\n    // progress\n    useEffect(() => client?.subscribe(PROGRESS, (p: number) => setSamplingProgress(p * 100))\n        , [client])\n\n    // name checking\n    useEffectAsync(async () => {\n        if (!apiKey || projectId === undefined) {\n            setDeviceInfo(undefined)\n        } else {\n            const resp = await EdgeImpulseClient.deviceInfo(apiKey, projectId, deviceId);\n            const info = resp.success && resp.device;\n            if (info && info.name !== deviceName) {\n                // no name assigned, use current\n                if (info.name === deviceId) {\n                    console.log(`ei: sync name`)\n                    const rename = await EdgeImpulseClient.renameDevice(apiKey, projectId, deviceId, deviceName)\n                    if (rename.success) {\n                        info.name = deviceName;\n                    }\n                } else {\n                    // name assigned in EI, pull it in\n                    console.log(`ei: pull name`)\n                    device.name = info.name;\n                }\n            }\n            setDeviceInfo(info)\n        }\n    }, [apiKey, projectId, deviceName])\n\n    return <Box>\n        {connected && <Alert severity={\"success\"}>Connected to EdgeImpulse</Alert>}\n        {error && <Alert severity={\"error\"}>{error}</Alert>}\n        {sampling && <Alert severity={\"info\"}>\n            <AlertTitle>Sampling...</AlertTitle>\n            <CircularProgressWithLabel value={samplingProgress} />\n        </Alert>}\n        {!!dataSet && <Trend dataSet={dataSet} />}\n        {generatedSampleName && <Typography variant=\"body2\">sample name: {generatedSampleName}</Typography>}\n        {aggregatorConfig && <pre>{JSON.stringify(aggregatorConfig, null, 2)}</pre>}\n    </Box>\n}\n\nexport default function EdgeImpulse() {\n    const { value: apiKey } = useDbValue(EDGE_IMPULSE_API_KEY, \"\")\n    const { bus } = useContext<JacdacContextProps>(JacdacContext);\n    const [model, setModel] = useState<Uint8Array>(undefined)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const gridBreakPoints = useGridBreakpoints()\n    const info = useEdgeImpulseProjectInfo(apiKey);\n\n    const aggregators: JDService[] = useChange(bus, bus => bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR }))\n    const currentAggregator: JDService = aggregators.find(srv => srv.id == aggregatorId) || aggregators[0]\n    const readingRegisters = useChange(bus, bus =>\n        bus.devices().map(device => device\n            .services().find(srv => isSensor(srv.specification))\n            ?.readingRegister\n        ).filter(reg => !!reg))\n    const inputs = readingRegisters.filter(reg => registerIdsChecked.indexOf(reg.id) > -1)\n\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? '' : srv?.id\n        setAggregatorId(id);\n    }\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1)\n            registerIdsChecked.splice(i, 1)\n        else\n            registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n    }\n\n    return <>\n        <h1>Edge Impulse</h1>\n        <p>\n            Use Jacdac to inject data and download models into <Link href=\"https://studio.edgeimpulse.com\">https://studio.edgeimpulse.com</Link>.\n        </p>\n        <ConnectAlert />\n        <ApiKeyManager />\n        <Box mb={1} />\n        <ProjectInfo info={info} />\n        <h3>Data</h3>\n        <h4>Select Sensors</h4>\n        {!readingRegisters?.length && <Alert severity=\"info\">No sensor found...</Alert>}\n        {!!readingRegisters.length && <ReadingFieldGrid\n            readingRegisters={readingRegisters}\n            registerIdsChecked={registerIdsChecked}\n            handleRegisterCheck={handleRegisterCheck}\n        />}\n        <h4>Select Sensor Aggregator</h4>\n        {!aggregators?.length && <Alert severity=\"info\">No data aggregator found...</Alert>}\n        <Grid container spacing={2}>\n            {aggregators.map(aggregator => <Grid key={aggregator.id} item {...gridBreakPoints}>\n                <AggregatorCard\n                    aggregator={aggregator}\n                    selected={currentAggregator === aggregator}\n                    onChecked={handleAggregatorChecked(aggregator)} />\n            </Grid>)}\n        </Grid>\n        <h4>Acquisition status</h4>\n        {!currentAggregator && <Alert severity=\"info\">No data aggregator selected...</Alert>}\n        {!inputs?.length && <Alert severity=\"info\">Select sensors to collect data from...</Alert>}\n        {currentAggregator && !!inputs?.length && <Acquisition aggregator={currentAggregator} inputs={inputs} apiKey={apiKey} info={info?.project} />}\n        <h3>Deployment</h3>\n        {model && <Box mb={1}><Alert severity=\"success\">Model downloaded!</Alert></Box>}\n        <ModelDownloadButton apiKey={apiKey} info={info} setModel={setModel} />\n        <ServiceList\n            serviceClass={SRV_MODEL_RUNNER}\n            content={service => <ModelContent service={service} />}\n            actions={service => <ModelActions\n                service={service}\n                model={model}\n            />}\n            alertMissing={\"No model runner found...\"}\n        />\n    </>\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","import { Card, CardActions, CardContent, CardHeader, createStyles, Grid, makeStyles, Switch, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\";\nimport DeviceActions from \"./DeviceActions\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FieldDataSet from \"./FieldDataSet\";\nimport useDeviceName from \"./useDeviceName\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister,\n    handleRegisterCheck: (register: JDRegister) => void,\n    recording: boolean,\n    registerChecked: boolean,\n    liveDataSet?: FieldDataSet\n}) {\n    const { register, handleRegisterCheck, recording, registerChecked, liveDataSet } = props;\n    const gridBreakpoints = useGridBreakpoints();\n    const classes = useStyles();\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return <Grid item {...gridBreakpoints} key={'source' + register.id}>\n        <Card>\n            <CardHeader subheader={register.service.name}\n                title={`${deviceName}/${register.name}`}\n                action={<DeviceActions device={register.service.device} showReset={true} />} />\n            <CardContent>\n                {register.fields.map((field) => <span key={field.id}>\n                    <FiberManualRecordIcon className={classes.vmiddle} fontSize=\"large\" style={({\n                        color: (registerChecked && liveDataSet?.colorOf(field)) || \"#ccc\"\n                    })} />\n                    {field.name}\n                </span>)}\n            </CardContent>\n            <CardActions>\n                <Switch disabled={recording} onChange={handleCheck} checked={registerChecked} />\n            </CardActions>\n        </Card>\n    </Grid>;\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[],\n    registerIdsChecked: string[],\n    recording?: boolean,\n    handleRegisterCheck: (register: JDRegister) => void,\n    liveDataSet?: FieldDataSet\n}) {\n    const { readingRegisters, registerIdsChecked, recording, handleRegisterCheck, liveDataSet } = props\n\n    return <Grid container spacing={2}>\n        {readingRegisters.map(register => {\n            const registerChecked = registerIdsChecked.indexOf(register.id) > -1;\n            return <ReadingFieldGridItem\n                key={register.id}\n                register={register}\n                registerChecked={registerChecked}\n                recording={recording}\n                handleRegisterCheck={handleRegisterCheck}\n                liveDataSet={liveDataSet}\n            />;\n        })}\n    </Grid>\n}"],"sourceRoot":""}