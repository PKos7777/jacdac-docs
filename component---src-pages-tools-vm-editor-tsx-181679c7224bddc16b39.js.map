{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/BugReport.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/dtdl.ts","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/ImportButton.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/compile.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/runner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/blockly/BlockRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/blockly/BlockFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/blockly/BlockDiagnostics.tsx","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/blockly/dsl/servicesdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/azureiothubdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/devicetwindsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/toolsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/loopsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/logicdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/mathdsl.ts","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["DTDL_REFERENCE_URL","DTDL_NAME","DTDL_CONTEXT","objectSchema","schemas","fields","arraySchema","schema","elementSchema","escapeName","name","trim","replace","test","toLowerCase","slice","escapeDisplayName","DTDLUnits","sort","useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","front","parts","split","length","m","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","DropzoneDialog","ImportButton","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","open","setOpen","handleOpen","handleSave","files","handleClose","PaperBox","padding","elevation","bgcolor","others","useTheme","spacing","VMFunctions","args","prompt","context","toIdentifier","toMemberExpression","field","object","property","computed","handlerVisitor","handler","visitITE","visitCommand","commands","visitBase","base","ite","else","then","compileProgram","prog","newProgram","roles","handlers","h","removeIfThenElse","errors","newSequence","labels","labelId","time","end","command","callee","arguments","expr","assert","pop","cmd","getServiceFromRole","role","shortId","find","pair","def","serviceSpecificationFromName","serviceShortId","service","checkProgram","allErrors","goodHandlers","errorFun","e","sourceId","message","symbolResolver","SpecSymbolResolver","checker","VMChecker","_","errorCount","c","checkCommand","registers","s","fld","register","events","VMInternalStatus","VM_WAKE_SLEEPER","VMJumpException","label","Error","VMTimerException","ms","VMCommandEvaluator","parent","env","gc","_regSaved","_changeSaved","_started","trace","evalExpression","VMExprEvaluator","lookup","eval","checkExpression","start","inst","evaluate","neededStart","Running","values","a","sendCommandAsync","Completed","hasEvent","regValue","unparse","reg","writeRegisterAsync","writeLocal","watch","Stopped","VMError","VMCode","VMCommandRunner","handlerId","_status","_eval","val","stepAsync","status","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","reset","gotoTop","Ready","commandIndex","cancel","unsubscribe","wake","next","runToCompletionAsync","singleStep","singleStepCheckBreakAsync","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","VM_EVENT","vmt","Sleeping","sleepAsync","JDEventSource","isEveryHandler","VMStatus","VMProgramRunner","roleManager","program","_handlerRunners","_roles","_waitQueue","_everyQueue","_runQueue","_sleepQueue","_watch","_breaks","_in_run","compiled","warn","_env","VMEnvironment","_waitRunMutex","Mutex","_breaksMutex","_sleepMutex","mount","CHANGE","waitingToRunning","wakeSleeper","initializeRoleManagement","setStatus","TRACE","oldValue","lookupWatch","setBreakpointsAsync","breaks","acquire","b","clearBreakpointsAsync","ret","handlerRunner","setTimeout","findIndex","p","splice","runAsync","debug","startAsync","setRoles","resumeAsync","Paused","getCurrentRunner","runHandlerAsync","postProcessHandler","newHead","emitBreakpoint","oneStep","brkCommand","VMRoleNoServiceException","moveToWait","done","shift","refreshRegistersAsync","atTop","waitCopy","handlersStarted","newRunners","sleepingRunners","hs","consumeEvent","addRoleService","getService","serviceChanged","rv","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoRun","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","run","newTestRunner","unmount","ERROR","handleTrace","Flags","VMDiagnostics","stringify","RoleChip","BlockContext","workspace","server","useServiceServer","handleRoleClick","specification","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","twinBlock","getTopBlocks","TWIN_BLOCK","inputList","fieldRow","getVariable","newBlock","variable","setValue","getId","getMetrics","moveBy","viewWidth","viewHeight","initSvg","centerOnBlock","handleDelete","removeServiceProvider","device","BlockRoles","useChange","useWorkspaceBreakpoints","breakpoints","arrayConcatMany","setBreakpointHighlight","highlightBlock","VMRunnerButtons","t","indeterminate","setIndeterminate","breakpoint","setBreakpoint","pausing","paused","mounted","useMounted","handleRun","handleCancel","handleResume","handlePause","handleStep","VMStartSimulatorButton","toggleShowDeviceHostsDialog","LoadButton","handleFiles","file","jsfile","xml","dom","Xml","clear","SaveButton","workspaceXml","json","BlockFileButtons","VMToolbar","BlockDiagnostics","workspaceJSON","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","ADD","MULTIPLY","DIVIDE","MINUS","makeVMBase","block","processErrors","workspaceJSONToVMProgram","dsls","variables","v","BUILTIN_TYPES","EmptyExpression","blockToExpression","blockIn","blockToExpressionInner","inputs","raw","argument","child","op","operator","prefix","right","definition","resolveServiceBlockDefinition","d","Blockly","dslName","dsl","res","compileExpressionToVM","template","blockToCommand","thenHandler","elseHandler","addCommands","exprErrors","ifThenElse","dslRes","compileCommandToVM","nop","blocks","topEvent","topErrors","topMeta","compileEventToVM","expression","isBooleanField","isStringField","toBlocklyType","isNumericType","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_SETTINGS","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","JoystickReg","get","commandColor","ServicesBlockDomainSpecificLanguage","supportedServices","createServiceColor","sensorColor","palette","success","main","otherColor","serviceColor","isSensor","createBlocks","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","ServoAngleField","SRV_BUZZER","BuzzerCmd","NoteField","lookupCustomShadow","cs","serviceHelp","fieldsSupported","every","fieldName","fieldToShadow","unit","defaultValue","min","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","humanify","camelName","fieldVariable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","isEnabledRegister","customMessage","allServices","serviceSpecifications","resolveService","cls","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","SRV_HID_KEYBOARD","message0","args0","KeyboardKeyField","colour","inputsInline","previousStatement","CODE_STATEMENT_TYPE","nextStatement","tooltip","helpUrl","SRV_LED","color","LEDColorField","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","LEDMatrixField","eventBlocks","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","output","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","members","member","registerNumericsGetBlocks","re","registerSetBlocks","commandBlocks","_serviceBlocks","_eventFieldBlocks","_runtimeBlocks","CONNECTION_BLOCK","CONNECTED_BLOCK","SET_STATUS_LIGHT_BLOCK","createCategory","liveServices","blockServices","usedEvents","Set","eventName","jdBlocks","services","uniqueMap","toolboxServices","srvid","l","localeCompare","servicesCategories","serviceBlocks","contents","has","button","callbackKey","cat","commonCategory","toString","eventInfo","serviceCommand","exprsErrors","flatMap","servicesDSL","AzureIoTHubBlockDomainSpecificLanguage","_blocks","PRIMITIVE_TYPES","azureIoTHubDSL","DEVICE_TWIN_SEND_TELEMETRY","DEVICE_TWIN_DEFINITION_BLOCK","DEVICE_TWIN_PROPERTY_BLOCK","DEVICE_TWIN_PROPERTY_TYPE","DEVICE_TWIN_VALUE_TYPE","deviceTwinContentType","deviceTwinCommonOptionType","deviceTwinPropertyOptionType","deviceTwinStatementType","deviceTwinCommonOptionStatementType","deviceTwinPropertyOptionStatementType","DeviceTwinBlockDomainSpecificLanguage","deviceTwinDSL","toolsDSL","TwinField","INSPECT_BLOCK","JDomTreeField","WATCH_BLOCK","WatchValueField","loopsDsl","WAIT_BLOCK","REPEAT_EVERY_BLOCK","order","interval","logicDsl","A","B","BOOL","mathDSL","extensions","NUM","VM_SOURCE_STORAGE_KEY","VMEditorWithContext","setProgram","autoStart","error","ws","jacdacServices","VMEditor","variablesDsl","shadowDsl","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6BAAU;AACvL,gDAAgD,oBAAoB,gCAAgC,kBAAkB;AACtH,iBAAiB,yBAAI;AACrB;AACA,KAAK,iBAAiB,mBAAmB,CAAC,MAAU;AACpD,iBAAiB,yBAAI;AACrB;AACA,KAAK;AACL;;AAEA;;AAEA,iCAAiC,oBAAoB;AACrD,0BAA0B,kBAAkB;AAC5C,iBAAiB,yBAAI,+HAA+H,6BAAU;AAC9J,KAAK;AACL;;AAEA;;AAEA,+BAA+B,oBAAoB;AACnD,wBAAwB,kBAAkB;AAC1C,iBAAiB,yBAAI,uHAAuH,6BAAU;AACtJ,KAAK;AACL;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH,sBAAsB,mBAAmB,YAAY,8BAAQ;AAC7D;AACA,eAAe,yBAAI,yEAAyE,6BAAU,wDAAwD,6BAAU,uDAAuD,6BAAU;AACzO;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kDAAkD,mBAAmB;AACxE,eAAe,yBAAI;AACnB,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,8CAAe,6BAAU;AACzB;AACA,CAAC,OAAO,E;;;;;;;;;ACpaK;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;ACnBf,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,aAAa,mBAAO,CAAC,KAA4B;AACjD,2BAA2B,mBAAO,CAAC,IAAqC;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;ACnBA,eAAe,mBAAO,CAAC,KAAwB;AAC/C,cAAc,mBAAO,CAAC,KAAuB;AAC7C,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACnBa;AACb,cAAc,mBAAO,CAAC,KAAuB;AAC7C,eAAe,mBAAO,CAAC,KAAwB;AAC/C,WAAW,mBAAO,CAAC,KAAoC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA,gBAAgB,mBAAO,CAAC,KAAyB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA,iBAAiB,mBAAO,CAAC,KAA2B;;AAEpD;;;;;;;;ACFA,cAAc,mBAAO,CAAC,KAA0B;;AAEhD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,KAAwB;AAC/C,uBAAuB,mBAAO,CAAC,KAAuC;AACtE,kBAAkB,mBAAO,CAAC,KAA4B;AACtD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,WAAW,mBAAO,CAAC,KAAmB;AACtC,4BAA4B,mBAAO,CAAC,KAAsC;AAC1E,gBAAgB,mBAAO,CAAC,IAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,gBAAgB;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;AC7EA,kBAAkB,mBAAO,CAAC,KAA0B;AACpD,2BAA2B,mBAAO,CAAC,IAAqC;AACxE,eAAe,mBAAO,CAAC,KAAwB;AAC/C,iBAAiB,mBAAO,CAAC,KAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA,yBAAyB,mBAAO,CAAC,KAAmC;AACpE,kBAAkB,mBAAO,CAAC,KAA4B;;AAEtD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA,6BAA6B,mBAAO,CAAC,KAAuC;;AAE5E;AACA;AACA;AACA;AACA;;;;;;;;;ACNa;AACb,QAAQ,mBAAO,CAAC,KAAqB;AACrC,uBAAuB,mBAAO,CAAC,IAAiC;AAChE,eAAe,mBAAO,CAAC,KAAwB;AAC/C,eAAe,mBAAO,CAAC,KAAwB;AAC/C,gBAAgB,mBAAO,CAAC,KAAyB;AACjD,yBAAyB,mBAAO,CAAC,KAAmC;;AAEpE;AACA;AACA,GAAG,+BAA+B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACpBD;AACA;AACA,uBAAuB,mBAAO,CAAC,KAAiC;;AAEhE;AACA;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACO,IAAMA,kBAAkB,GAC3B,8EADG;AAEA,IAAMC,SAAS,GAAG,mCAAlB;AACA,IAAMC,YAAY,GAAG,qBAArB,C,CAEP;;AACO,SAASC,YAAT,CAAsBC,OAAtB,EAAyD;AAC5D,SAAO;AACH,aAAS,QADN;AAEHC,UAAM,EAAED;AAFL,GAAP;AAIH,C,CAED;;AACO,SAASE,WAAT,CAAqBC,MAArB,EAA8D;AACjE,SAAO;AACH,aAAS,OADN;AAEHC,iBAAa,EAAED;AAFZ,GAAP;AAIH;AA+BM,SAASE,UAAT,CAAoBC,IAApB,EAAkC;AACrCA,MAAI,GAAGA,IAAI,CAACC,IAAL,GAAYC,OAAZ,CAAoB,gBAApB,EAAsC,GAAtC,CAAP;AACA,MAAI,CAAC,YAAYC,IAAZ,CAAiBH,IAAjB,CAAL,EAA6BA,IAAI,GAAG,MAAMA,IAAb;AAC7BA,MAAI,GAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQI,WAAR,KAAwBJ,IAAI,CAACK,KAAL,CAAW,CAAX,CAA/B;AACA,SAAOL,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,EAAd,CAAP;AACH;AAEM,SAASC,iBAAT,CAA2BN,IAA3B,EAAyC;AAC5C,SAAOA,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,EAAd,CAAP;AACH;AAEM,SAASE,SAAT,GAAqB;AACxB,SAAO,CACH,uBADG,EAEH,4BAFG,EAGH,QAHG,EAIH,QAJG,EAKH,aALG,EAMH,aANG,EAOH,aAPG,EAQH,MARG,EASH,wBATG,EAUH,iBAVG,EAWH,iBAXG,EAYH,qBAZG,EAaH,qBAbG,EAcH,aAdG,EAeH,kBAfG,EAgBH,kBAhBG,EAiBH,iBAjBG,EAkBH,SAlBG,EAmBH,YAnBG,EAoBH,YApBG,EAqBH,MArBG,EAsBH,OAtBG,EAuBH,YAvBG,EAwBH,YAxBG,EAyBH,WAzBG,EA0BH,WA1BG,EA2BH,QA3BG,EA4BH,aA5BG,EA6BH,aA7BG,EA8BH,cA9BG,EA+BH,kBA/BG,EAgCH,kBAhCG,EAiCH,kBAjCG,EAkCH,kBAlCG,EAmCH,kBAnCG,EAoCH,kBApCG,EAqCH,kBArCG,EAsCH,eAtCG,EAuCH,mBAvCG,EAwCH,mBAxCG,EAyCH,mBAzCG,EA0CH,mBA1CG,EA2CH,mBA3CG,EA4CH,mBA5CG,EA6CH,mBA7CG,EA8CH,KA9CG,EA+CH,SA/CG,EAgDH,SAhDG,EAiDH,SAjDG,EAkDH,SAlDG,EAmDH,SAnDG,EAoDH,SApDG,EAqDH,SArDG,EAsDH,MAtDG,EAuDH,UAvDG,EAwDH,UAxDG,EAyDH,UAzDG,EA0DH,UA1DG,EA2DH,UA3DG,EA4DH,UA5DG,EA6DH,UA7DG,EA8DH,uBA9DG,EA+DH,mBA/DG,EAgEH,OAhEG,EAiEH,YAjEG,EAkEH,YAlEG,EAmEH,YAnEG,EAoEH,WApEG,EAqEH,WArEG,EAsEH,MAtEG,EAuEH,MAvEG,EAwEH,MAxEG,EAyEH,cAzEG,EA0EH,kBA1EG,EA2EH,SA3EG,EA4EH,OA5EG,EA6EH,WA7EG,EA8EH,WA9EG,EA+EH,WA/EG,EAgFH,cAhFG,EAiFH,kBAjFG,EAkFH,cAlFG,EAmFH,QAnFG,EAoFH,OApFG,EAqFH,OArFG,EAsFH,KAtFG,EAuFH,OAvFG,EAwFH,WAxFG,EAyFH,WAzFG,EA0FH,WA1FG,EA2FH,uBA3FG,EA4FH,mBA5FG,EA6FH,KA7FG,EA8FH,YA9FG,EA+FH,OA/FG,EAgGH,YAhGG,EAiGH,YAjGG,EAkGH,QAlGG,EAmGH,aAnGG,EAoGH,aApGG,EAqGH,aArGG,EAsGH,MAtGG,EAuGH,QAvGG,EAwGH,aAxGG,EAyGH,aAzGG,EA0GH,aA1GG,EA2GH,MA3GG,EA4GH,OA5GG,EA6GH,YA7GG,EA8GH,YA9GG,EA+GH,YA/GG,EAgHH,WAhHG,EAiHH,WAjHG,EAkHH,MAlHG,EAmHH,MAnHG,EAoHH,MApHG,EAqHH,cArHG,EAsHH,kBAtHG,EAuHH,uBAvHG,EAwHH,MAxHG,EAyHH,WAzHG,EA0HH,WA1HG,EA2HH,UA3HG,EA4HH,UA5HG,EA6HH,UA7HG,EA8HH,YA9HG,EA+HH,qBA/HG,EAgIH,OAhIG,EAiIH,SAjIG,EAkIH,OAlIG,EAmIH,SAnIG,EAoIH,OApIG,EAqIH,UArIG,EAsIH,MAtIG,EAuIH,WAvIG,EAwIH,WAxIG,EAyIH,OAzIG,EA0IH,MA1IG,EA2IH,eA3IG,EA4IH,mBA5IG,EA6IH,aA7IG,EA8IH,iBA9IG,EA+IH,MA/IG,EAgJH,WAhJG,EAiJH,WAjJG,EAkJH,UAlJG,EAmJH,UAnJG,EAoJH,UApJG,EAqJH,YArJG,EAsJH,qBAtJG,EAuJH,QAvJG,EAwJH,YAxJG,EAyJH,KAzJG,EA0JH,UA1JG,EA2JH,sBA3JG,EA4JH,oBA5JG,EA6JH,iBA7JG,EA8JH,eA9JG,EA+JH,eA/JG,EAgKH,KAhKG,EAiKH,UAjKG,EAkKH,SAlKG,EAmKH,SAnKG,EAoKH,SApKG,EAqKH,KArKG,EAsKH,QAtKG,EAuKH,eAvKG,EAwKH,kBAxKG,EAyKH,QAzKG,EA0KH,OA1KG,EA2KH,OA3KG,EA4KH,KA5KG,EA6KH,QA7KG,EA8KH,aA9KG,EA+KH,aA/KG,EAgLH,YAhLG,EAiLH,QAjLG,EAkLH,MAlLG,EAmLH,KAnLG,EAoLH,MApLG,EAqLH,aArLG,EAsLH,gBAtLG,EAuLH,qBAvLG,EAwLH,oBAxLG,EAyLH,cAzLG,EA0LH,kBA1LG,EA2LH,aA3LG,EA4LH,eA5LG,EA6LH,MA7LG,EA8LH,MA9LG,EA+LH,WA/LG,EAgMH,WAhMG,EAiMH,UAjMG,EAkMH,UAlMG,EAmMH,YAnMG,EAoMH,iBApMG,EAqMH,OArMG,EAsMH,YAtMG,EAuMH,WAvMG,EAwMH,WAxMG,EAyMH,YAzMG,EA0MH,QA1MG,EA2MH,gBA3MG,EA4MH,qBA5MG,EA6MH,cA7MG,EA8MH,mBA9MG,EA+MLC,IA/MK,EAAP;AAgNH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjRD;AAEe,SAASC,6BAAT,CAAwDC,IAAxD,EACXC,QADW,EAEXC,OAFW,EAGXC,IAHW,EAGW;AAAA,MADtBD,OACsB;AADtBA,WACsB,GADZ,KACY;AAAA;;AACtBE,WAAS,CAAC,YAAM;AACZ,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EACI,OAAOC,SAAP,CAFQ,CAEU;AAEtB;;AACAD,UAAM,CAACE,gBAAP,CAA2BP,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C,EALY,CAOZ;;AACA,WAAO,YAAM;AACTG,YAAM,CAACG,mBAAP,CAA8BR,IAA9B,EAAoCC,QAApC;AACH,KAFD;AAGH,GAXQ,EAWN,CAACD,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,EAA0BO,MAA1B,CAAiCN,IAAI,IAAI,EAAzC,CAXM,CAAT;AAYH,C;;AClBD;AACA;AACA;AACA;AACA;AAqBO,SAASO,oBAAT,CAA8BC,MAA9B,EAAqE;AACxE,MAAIC,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAMC,IAIL,GAAG;AACAC,gBAAY,EAAE;AADd,GAJJ;;AAQA,MAAI,SAAStB,IAAT,CAAckB,MAAd,CAAJ,EAA2B;AAAA;;AACvB,QAAIK,KAAJ;AACA,QAAMC,KAAK,GAAGN,MAAM,CAACnB,OAAP,CAAe,QAAf,EAAyB,EAAzB,EAA6B0B,KAA7B,CAAmC,SAAnC,CAAd;;AACA,YAAQD,KAAK,CAACE,MAAd;AACI,WAAK,CAAL;AAAQH,aAAK,GAAGJ,KAAK,GAAGN,SAAhB;AAA2BO,YAAI,GAAGF,MAAP;AAAe;;AAClD,WAAK,CAAL;AAASK,aAAT,GAAwBC,KAAxB;AAAgBJ,YAAhB,GAAwBI,KAAxB;AAA+B;;AAC/B;AAAUD,aAAV,GAAgCC,KAAhC;AAAiBL,aAAjB,GAAgCK,KAAhC;AAAwBJ,YAAxB,GAAgCI,KAAhC;AAAuC;AAH3C,KAHuB,CASvB;;;AACA,cAAAD,KAAK,UAAL,wCAAOxB,OAAP,CAAe,oBAAf,EAAqC,UAAC4B,CAAD,EAAI9B,IAAJ,EAAU+B,KAAV,EAAoB;AACrD,cAAQ/B,IAAR;AACI,aAAK,KAAL;AAAYwB,cAAI,CAACC,YAAL,CAAkBO,IAAlB,CAAuBD,KAAvB;AAA+B;;AAC3C,aAAK,SAAL;AAAgBP,cAAI,CAACS,OAAL,GAAe,CAAC,CAACF,KAAjB;AAAwB;;AACxC;AAASP,cAAI,CAACxB,IAAD,CAAJ,GAAa+B,KAAb;AAHb;;AAKA,aAAO,EAAP;AACH,KAPD;AAQH,GAlBD,MAkBO;AACHR,QAAI,GAAGF,MAAP;AACH,GA/BuE,CAiCxE;;;AACA,MAAMa,KAAK,GAAGC,qCAAgB,EAA9B;AACAD,OAAK,CAACE,MAAN,CAAa,UAAAC,IAAI,EAAI;AACjB,QAAMC,GAAG,GAAG,CAAChB,KAAK,IAAI,EAAV,IAAgB,IAAhB,IAAwBC,IAAI,IAAI,EAAhC,CAAZ;AACA,WAAOe,GAAG,CAACC,OAAJ,CAAYF,IAAI,CAACG,MAAL,CAAYC,KAAxB,IAAiC,CAAC,CAAlC,IACCJ,IAAI,CAACG,MAAL,CAAYE,OAAZ,IAAuBJ,GAAG,CAACC,OAAJ,CAAYF,IAAI,CAACG,MAAL,CAAYE,OAAxB,IAAmC,CAAC,CADnE;AAEH,GAJD,EAIGC,GAJH,CAIO,UAAAN,IAAI;AAAA,WAAOA,IAAI,CAACG,MAAL,CAAYxC,IAAZ,CAAiBE,OAAjB,CAAyB,OAAzB,EAAkC,EAAlC,CAAP,gBAAuDmC,IAAI,CAACG,MAAL,CAAYI,IAAnE;AAAA,GAJX,EAKKC,OALL,CAKa,UAAAC,GAAG;AAAA,WAAItB,IAAI,CAACC,YAAL,CAAkBO,IAAlB,CAAuBc,GAAvB,CAAJ;AAAA,GALhB,EAnCwE,CA0CxE;;AACA,MAAI,CAACtB,IAAI,CAACC,YAAL,CAAkBI,MAAvB,EACIL,IAAI,CAACC,YAAL,CAAkBO,IAAlB,CAAuB,oCAAvB,EA5CoE,CA8CxE;;AACAR,MAAI,CAACC,YAAL,GAAoBsB,wBAAM,CAACvB,IAAI,CAACC,YAAN,CAA1B;AAEA,SAAO;AACHF,QAAI,EAAJA,IADG;AAEHD,SAAK,EAALA,KAFG;AAGHE,QAAI,EAAJA;AAHG,GAAP;AAKH;AAiCM,SAASwB,mBAAT,GAA+B;AAClC,oBAAgCC,UAAU,CAACC,sBAAD,CAA1C;AAAA,MAAQC,MAAR,eAAQA,MAAR;AAAA,MAAgBC,WAAhB,eAAgBA,WAAhB;;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,QAAQ,GAAG,qBAAqBH,MAAtC;AACA,MAAMI,eAAe,GAAGC,OAAO,CAE5B;AAAA,WAAO,EAAP;AAAA,GAF4B,EAEhB,CAACL,MAAD,EAASE,IAAT,CAFgB,CAA/B;;AAIA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAqC;AACrD,QAAMC,MAAM,GAAG,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACC,cAAT,CAAwBP,QAAxB,CAAlD;AACA,QAAIK,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEG,OAAR,CAAgBC,KAApB,EACIJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,aAAR,CAAsBC,WAAtB,CAAkCP,GAAlC,EAAuCN,WAAvC;AACP,GAJD;;AAMA,MAAMc,MAAM,GAAG,SAATA,MAAS,CAAC7C,MAAD,EAAqE;AAChF,QAAQE,IAAR,GAA8BF,MAA9B,CAAQE,IAAR;AAAA,QAAcD,KAAd,GAA8BD,MAA9B,CAAcC,KAAd;AAAA,QAAqBE,IAArB,GAA8BH,MAA9B,CAAqBG,IAArB;AACA,QAAQC,YAAR,GAAkCD,IAAlC,CAAQC,YAAR;AAAA,QAAsBQ,OAAtB,GAAkCT,IAAlC,CAAsBS,OAAtB,CAFgF,CAIhF;;AACA,QAAI,OAAO2B,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,cAAT,CAAwBP,QAAxB,CAAxC,EAA2E;AACvEa,aAAO,CAACC,GAAR;AACA,UAAMC,CAAC,GAAGT,QAAQ,CAACU,aAAT,CAAuB,QAAvB,CAAV;AACAD,OAAC,CAACE,EAAF,GAAOjB,QAAP;AACAe,OAAC,CAACG,KAAF,CAAQC,QAAR,GAAmB,UAAnB;AACAJ,OAAC,CAACG,KAAF,CAAQE,IAAR,GAAe,GAAf;AACAL,OAAC,CAACG,KAAF,CAAQG,MAAR,GAAiB,GAAjB;AACAN,OAAC,CAACG,KAAF,CAAQI,KAAR,GAAgB,KAAhB;AACAP,OAAC,CAACG,KAAF,CAAQK,MAAR,GAAiB,KAAjB;AACAR,OAAC,CAAC/B,GAAF,GAAWc,WAAX,kBAAkCC,IAAI,cAAYA,IAAZ,GAAqB,EAA3D;AACAO,cAAQ,CAACkB,IAAT,CAAcC,WAAd,CAA0BV,CAA1B;AACH;;AAED,QAAMX,GAA+B,GAAG;AACpChD,UAAI,EAAE,cAD8B;AAEpC6D,QAAE,EAAE,MAAMS,IAAI,CAACC,MAAL,EAF0B;AAGpC1D,UAAI,EAAJA,IAHoC;AAIpCD,WAAK,EAALA,KAJoC;AAKpC4D,aAAO,EAAE;AACLzD,oBAAY,EAAZA,YADK;AAEL0D,mBAAW,EAAElD;AAFR;AAL2B,KAAxC;AAUA,WAAO,IAAImD,OAAJ,CAAyC,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjE/B,qBAAe,CAACG,GAAG,CAACa,EAAL,CAAf,GAA0B;AAAEb,WAAG,EAAHA,GAAF;AAAO2B,eAAO,EAAPA,OAAP;AAAgBC,cAAM,EAANA;AAAhB,OAA1B;AACA7B,iBAAW,CAACC,GAAD,CAAX;AACH,KAHM,CAAP;AAIH,GAhCD,CAdkC,CAgDlC;;;AACA,MAAM6B,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAsB;AACxC,QAAMC,GAAG,GAAGD,EAAE,CAACE,IAAf;AACA,QAAID,GAAG,CAACpE,MAAJ,IAAc,UAAlB,EAA8B;;AAC9B,YAAQoE,GAAG,CAAC/E,IAAZ;AACI,WAAK,aAAL;AAAoB;AAChByD,iBAAO,CAACC,GAAR,4BAAqCuB,MAAM,CAACC,IAAP,CAAYrC,eAAZ,EAA6B1B,MAAlE;AACA,cAAM8B,MAAM,GAAG,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACC,cAAT,CAAwBP,QAAxB,CAAlD;;AACA,cAAIK,MAAJ,EAAY;AACRQ,mBAAO,CAACC,GAAR;AACAT,kBAAM,CAACG,OAAP,CAAeC,KAAf,GAAuB,GAAvB;AACA4B,kBAAM,CAACC,IAAP,CAAYrC,eAAZ,EACKV,OADL,CACa,UAAAgD,CAAC;AAAA,qBAAIpC,WAAW,CAACF,eAAe,CAACsC,CAAD,CAAf,CAAmBnC,GAApB,CAAf;AAAA,aADd;AAEH;;AACD;AACH;;AACD,WAAK,cAAL;AAAqB;AACjB,cAAMa,EAAE,GAAGkB,GAAG,CAAClB,EAAf,CADiB,CACE;;AACnB,cAAMuB,CAAC,GAAGvC,eAAe,CAACgB,EAAD,CAAzB;AACA,cAAI,CAACuB,CAAL,EAAQ;AACR,iBAAOvC,eAAe,CAACgB,EAAD,CAAtB;AACAuB,WAAC,CAACT,OAAF,CAAUI,GAAV;AACA;AACH;AAnBL;AAqBH,GAxBD;;AA0BAhF,gBAAc,CAAC,SAAD,EAAY8E,aAAZ,EAA2B,KAA3B,EAAkC,EAAlC,CAAd;AAEA,SAAO;AACHrB,UAAM,EAANA;AADG,GAAP;AAGH,C;;;;;;;;;;AChMD;AACA;AACA;AAMA;AACA;AACA;AAGA,IAAM6B,SAAS,GAAGC,6BAAU,CAAC;AAAA,SACzBC,+BAAY,CAAC;AACTC,QAAI,EAAE;AACFtB,WAAK,EAAE;AADL,KADG;AAITuB,SAAK,EAAE;AACH1B,cAAQ,EAAE,UADP;AAEH2B,gBAAU,EAAE;AAFT,KAJE;AAQTzC,UAAM,EAAE;AACJc,cAAQ,EAAE,UADN;AAEJC,UAAI,EAAE,CAFF;AAGJ2B,SAAG,EAAE,CAHD;AAIJC,YAAM,EAAE,MAJJ;AAKJ1B,WAAK,EAAE,MALH;AAMJC,YAAM,EAAE;AANJ;AARC,GAAD,CADa;AAAA,CAAD,CAA5B;AAoBe,SAAS0B,iBAAT,CAA2BC,KAA3B,EAEZ;AAAA;;AACC,oBAAmBvD,oBAAU,CAACC,8CAAD,CAA7B;AAAA,MAAQuD,MAAR,eAAQA,MAAR;;AACA,MAAQxE,OAAR,GAAoBuE,KAApB,CAAQvE,OAAR;AACA,MAAQV,IAAR,GAA8BU,OAA9B,CAAQV,IAAR;AAAA,MAAcD,KAAd,GAA8BW,OAA9B,CAAcX,KAAd;AAAA,MAAqBE,IAArB,GAA8BS,OAA9B,CAAqBT,IAArB;AACA,MAAQC,YAAR,GAAyBD,IAAzB,CAAQC,YAAR;;AACA,qBAAgBwB,oBAAU,CAAqByD,sBAArB,CAA1B;AAAA,MAAQC,GAAR,gBAAQA,GAAR;;AACA,MAAMC,QAAQ,GAAGC,gBAAM,EAAvB;AACA,MAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEA,MAAMzD,GAAG,IAAMhB,KAAK,IAAI,EAAf,YAAsBC,IAAI,IAAI,EAA9B,CAAT;AACA,MAAMwF,GAAG,GAAMN,MAAN,8CAAqDO,kBAAkB,CAC5EvF,YAAY,CAACwF,IAAb,CAAkB,GAAlB,CAD4E,CAAvE,cAECD,kBAAkB,CAAC1E,GAAD,CAF5B;AAGA,MAAM4E,MAAM,GAAG,IAAIC,GAAJ,CAAQJ,GAAR,EAAaG,MAA5B;AAEApG,qBAAS,CAAC;AAAA,WACN6F,GAAG,CAACS,SAAJ,CAAc,CAACC,8BAAD,EAAcC,iCAAd,CAAd,EAA6C,UAACC,GAAD,EAAiB;AAAA;;AAC1D,WAAI,CAACC,UAAL;AACA,UAAM/B,GAAkB,GAAG;AACvB/E,YAAI,EAAE,eADiB;AAEvB+G,eAAO,EAAE,QAFc;AAGvBC,iBAAS,EAAE,IAHY;AAIvBhC,YAAI,EAAE6B,GAAG,CAACI,QAAJ,EAJiB;AAKvBC,cAAM,EAAEL,GAAG,CAACK;AALW,OAA3B;AAOA,2BAAAhB,QAAQ,CAACiB,OAAT,iGAAkB7D,aAAlB,gFAAiCC,WAAjC,CAA6CwB,GAA7C,EAAkDyB,MAAlD;AACH,KAVD,CADM;AAAA,GAAD,CAAT;AAcA,sBACI,oBAAC,uBAAD,qBACI;AAAK,aAAS,EAAEJ,OAAO,CAACZ;AAAxB,kBACI;AAAK,aAAS,EAAEY,OAAO,CAACX;AAAxB,kBACI;AACI,OAAG,EAAES,QADT;AAEI,aAAS,EAAEE,OAAO,CAACnD,MAFvB;AAGI,OAAG,EAAEoD,GAHT;AAII,kBAAW;AAJf,IADJ,CADJ,CADJ,CADJ;AAcH,C;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOe,SAASe,eAAT,CAAyBtB,KAAzB,EAA4D;AACvE,MAAQuB,cAAR,GAA2BvB,KAA3B,CAAQuB,cAAR;;AACA,aAA6BC,IAAI,CAACC,KAAL,CAAWF,cAAX,CAA7B;AAAA,MAAQ1G,MAAR,QAAQA,MAAR;AAAA,MAAgB6G,QAAhB,QAAgBA,QAAhB;;AACA,cAA+BA,QAAQ,IAAI,EAA3C;AAAA,MAAQrD,MAAR,SAAQA,MAAR;AAAA,MAAgBD,KAAhB,SAAgBA,KAAhB;AAAA,MAAuBmC,GAAvB,SAAuBA,GAAvB;;AACA,MAAMoB,IAAI,GAAG,CAAC,QAAD,EAAW,YAAX,EAAyB,KAAzB,CAAb;;AACA,oBAA8BlF,oBAAU,CAACC,8CAAD,CAAxC;AAAA,MAAQkF,MAAR,eAAQA,MAAR;AAAA,MAAgBC,SAAhB,eAAgBA,SAAhB;;AACA,kBAAsBC,kBAAQ,CAACH,IAAI,CAAC5F,OAAL,CAAa6F,MAAb,KAAwB,CAAzB,CAA9B;AAAA,MAAOG,GAAP;AAAA,MAAYC,MAAZ;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAoCC,QAApC,EAAyD;AAC7E,QAAIA,QAAQ,GAAGR,IAAI,CAACtG,MAAL,GAAc,CAA7B,EACIwG,SAAS,CAACF,IAAI,CAACQ,QAAD,CAAL,CAAT;AACJH,UAAM,CAACG,QAAD,CAAN;AACH,GAJD;;AAKA,MAAM1G,OAAO,GAAGuB,iBAAO,CAAC;AAAA,WAAMpC,oBAAoB,CAACC,MAAD,CAA1B;AAAA,GAAD,EAAqC,CAACA,MAAD,CAArC,CAAvB;AACA,MAAQE,IAAR,GAAiBU,OAAjB,CAAQV,IAAR;AAEA,sBAAO,oBAAC,uBAAD,qBACH,oBAAC,mBAAD;AAAM,SAAK,EAAEgH,GAAb;AAAkB,YAAQ,EAAEE,eAA5B;AAA6C,kBAAW;AAAxD,kBACI,oBAAC,kBAAD;AAAK,SAAK,EAAE;AAAZ,IADJ,eAEI,oBAAC,kBAAD;AAAK,SAAK,EAAE;AAAZ,IAFJ,eAGI,oBAAC,kBAAD;AAAK,SAAK,EAAE;AAAZ,IAHJ,CADG,eAMH,oBAAC,uBAAD;AAAU,SAAK,EAAEF,GAAjB;AAAsB,SAAK,EAAE;AAA7B,kBACI;AAAK,OAAG,EAAEK,mCAAU,CAAC7B,GAAD,CAApB;AAA2B,OAAG,EAAE1F,MAAhC;AAAwC,WAAO,EAAC;AAAhD,IADJ,CANG,eASH,oBAAC,uBAAD;AAAU,SAAK,EAAEkH,GAAjB;AAAsB,SAAK,EAAE;AAA7B,kBACI,oBAAC,SAAD;AAAW,aAAS,EAAC;AAArB,KAAmChH,IAAnC,CADJ,CATG,eAYH,oBAAC,uBAAD;AAAU,SAAK,EAAEgH,GAAjB;AAAsB,SAAK,EAAE;AAA7B,kBACI,oBAAC,iBAAD;AAAmB,WAAO,EAAEtG;AAA5B,IADJ,CAZG,CAAP;AAgBH,C;;;;;;;;;;AC9CD;CAMA;;CAEA;;AACA;AACA;CAEA;;CAEA;;AACA;AACA;AACA;AACA;AAEA,IAAM4G,YAAY,gBAAGC,cAAI,CAAC;AAAA,SAAM,qGAAN;AAAA,CAAD,CAAzB;AACA,IAAMC,iBAAiB,gBAAGD,cAAI,CAAC;AAAA,SAAM,qGAAN;AAAA,CAAD,CAA9B;;AAEA,SAASE,eAAT,CAAyBxC,KAAzB,EAOG;AACC,MACIyC,QADJ,GAOIzC,KAPJ,CACIyC,QADJ;AAAA,MAEIC,WAFJ,GAOI1C,KAPJ,CAEI0C,WAFJ;AAAA,MAGIC,SAHJ,GAOI3C,KAPJ,CAGI2C,SAHJ;AAAA,MAIIC,YAJJ,GAOI5C,KAPJ,CAII4C,YAJJ;AAAA,MAKIC,YALJ,GAOI7C,KAPJ,CAKI6C,YALJ;AAAA,MAMItC,GANJ,GAOIP,KAPJ,CAMIO,GANJ;;AAQA,oBAAqB9D,oBAAU,CAACqG,8BAAD,CAA/B;AAAA,MAAQC,QAAR,eAAQA,QAAR;;AACA,MAAMC,QAAQ,GAAG,CAAAL,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEjJ,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,MAAuC,EAAxD;AACA,MAAMuJ,KAAK,GAAIF,QAAQ,KAAK,MAAb,GAAsBG,qBAAtB,GAAmCC,qBAAlD;AACA,MAAMC,QAAQ,GACV,CAAC,CAACP,YAAF,6CACuCrC,kBAAkB,CACrDqC,YADqD,CAF7D;AAMA,sBACI,oBAAC,oBAAD,oBACQQ,yBADR;AAEI,QAAI,EAAE,CAAAZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAE/I,OAAV,CAAkB,aAAlB,EAAiC,EAAjC,MAAwC,EAFlD;AAGI,YAAQ,EAAEsJ,QAHd;AAII,SAAK,EAAEC;AAJX,MAMK;AAAA,QAAGN,SAAH,QAAGA,SAAH;AAAA,QAAc3E,KAAd,QAAcA,KAAd;AAAA,QAAqBsF,MAArB,QAAqBA,MAArB;AAAA,QAA6BC,YAA7B,QAA6BA,YAA7B;AAAA,QAA2CC,aAA3C,QAA2CA,aAA3C;AAAA,wBACG;AAAK,eAAS,EAAEb,SAAhB;AAA2B,WAAK,oBAAO3E,KAAP;AAAhC,OACK,CAAC,CAACuC,GAAF,iBACG,oBAAC,6BAAD;AAAM,WAAK,EAAE;AAAEkD,aAAK,EAAE;AAAT,OAAb;AAAiC,UAAI,EAAElD;AAAvC,oBACI,oBAAC,sBAAD;AAAS,WAAK,YAAUA;AAAxB,oBACI,oBAAC,mCAAD,qBACI,oBAAC,qBAAD,OADJ,CADJ,CADJ,CAFR,EAUK,CAAC,CAACsC,YAAF,iBACG,oBAAC,6BAAD;AACI,WAAK,EAAE;AAAEY,aAAK,EAAE;AAAT,OADX;AAEI,UAAI,EAAEL,QAFV;AAGI,cAAQ,EAAER,YAAY,IAAI;AAH9B,oBAKI,oBAAC,sBAAD;AAAS,WAAK,EAAC;AAAf,oBACI,oBAAC,mCAAD,qBACI,oBAAC,qBAAD,OADJ,CADJ,CALJ,CAXR,EAuBKF,WAAW,iBACR;AAAK,WAAK,EAAE;AAAEe,aAAK,EAAE;AAAT;AAAZ,oBACI,oBAAC,uBAAD,qBACI,oBAAC,iBAAD;AAAmB,YAAM,EAAEhB;AAA3B,MADJ,CADJ,CAxBR,EA8BKa,MA9BL,aA8BKA,MA9BL,uBA8BKA,MAAM,CAAEnH,GAAR,CAAY,UAACuH,IAAD,EAAOC,KAAP,EAAiB;AAC1B,UAAMC,SAAS,GAAGL,YAAY,CAAC;AAAEG,YAAI,EAAJA,IAAF;AAAQG,WAAG,EAAEF;AAAb,OAAD,CAA9B;AACA,0BACI;AAAK,WAAG,EAAEA;AAAV,SAAqBC,SAArB,GACKF,IAAI,CAACvH,GAAL,CAAS,UAAC2H,KAAD,EAAQD,GAAR;AAAA,4BACN;AACI,aAAG,EAAEA;AADT,WAEQL,aAAa,CAAC;AAAEM,eAAK,EAALA,KAAF;AAASD,aAAG,EAAHA;AAAT,SAAD,CAFrB,EADM;AAAA,OAAT,CADL,CADJ;AAUH,KAZA,CA9BL,CADH;AAAA,GANL,CADJ;AAuDH;;AAEc,SAASE,SAAT,CAAmB/D,KAAnB,EAMZ;AACC,MAAQyC,QAAR,GAAgCzC,KAAhC,CAAQyC,QAAR;AAAA,MAAkBE,SAAlB,GAAgC3C,KAAhC,CAAkB2C,SAAlB;AACA,MAAMK,QAAQ,GAAG,CAAAL,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEjJ,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,MAAuC,EAAxD;;AAEA,UAAQsJ,QAAR;AACI,SAAK,OAAL;AACI,0BACI,oBAAC,uBAAD,qBACI,oBAAC,YAAD;AAAc,cAAM,EAAEP;AAAtB,QADJ,CADJ;;AAKJ,SAAK,QAAL;AACI,0BAAO,oBAAC,eAAD;AAAiB,sBAAc,EAAEA;AAAjC,QAAP;;AACJ,SAAK,SAAL;AACI,0BACI,oBAAC,eAAD,oBACQzC,KADR;AAEI,iBAAS,EAAE,YAFf;AAGI,mBAAW,EAAE;AAHjB,SADJ;;AAOJ;AACI,0BAAO,oBAAC,eAAD,EAAqBA,KAArB,CAAP;AAlBR;AAoBH,C;;;;;;;;;;;;;;;;;;ACvID;CAEA;;AACA;AACA;AACA;AACA,IAAMgE,cAAc,gBAAG1B,2CAAI,CAAC;AAAA,SAAM,qGAAN;AAAA,CAAD,CAA3B;AAEe,SAAS2B,YAAT,CAAsBjE,KAAtB,EAQZ;AACC,MACIkE,IADJ,GAQIlE,KARJ,CACIkE,IADJ;AAAA,MAEIC,eAFJ,GAQInE,KARJ,CAEImE,eAFJ;AAAA,MAGIC,QAHJ,GAQIpE,KARJ,CAGIoE,QAHJ;AAAA,MAIIC,aAJJ,GAQIrE,KARJ,CAIIqE,aAJJ;AAAA,MAKIC,IALJ,GAQItE,KARJ,CAKIsE,IALJ;AAAA,MAMIC,UANJ,GAQIvE,KARJ,CAMIuE,UANJ;AAAA,MAOI5B,SAPJ,GAQI3C,KARJ,CAOI2C,SAPJ;;AASA,kBAAwBb,+CAAQ,CAAC,KAAD,CAAhC;AAAA,MAAO0C,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBD,WAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAGA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAmB;AAClC,QAAIA,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEvJ,MAAX,EAAmB8I,eAAe,CAACS,KAAD,CAAf;AACnBH,WAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAIA,MAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMJ,OAAO,CAAC,KAAD,CAAb;AAAA,GAApB;;AAEA,sBACI,iDAAC,+DAAD;AAAK,aAAS,EAAE9B;AAAhB,KACK2B,IAAI,iBACD,iDAAC,uEAAD;AAAuB,SAAK,EAAEJ,IAA9B;AAAoC,WAAO,EAAEQ;AAA7C,kBACI,iDAAC,8EAAD,OADJ,CAFR,EAMK,CAACJ,IAAD,iBACG,iDAAC,+DAAD;AACI,YAAQ,EAAEF,QADd;AAEI,WAAO,EAAC,UAFZ;AAGI,WAAO,EAAEM,UAHb;AAII,aAAS,eAAE,iDAAC,8EAAD;AAJf,KAMKR,IANL,CAPR,EAgBKM,IAAI,iBACD,iDAAC,0DAAD,qBACI,iDAAC,cAAD;AACI,QAAI,EAAEA,IADV;AAEI,UAAM,EAAEG,UAFZ;AAGI,eAAW,EAAE,OAHjB;AAII,WAAO,EAAEE,WAJb;AAKI,iBAAa,EAAER,aALnB;AAMI,kBAAc,EAAE,IANpB;AAOI,cAAU,EAAEE,UAAU,IAAI,CAP9B;AAQI,oBAAgB,EAAE;AARtB,IADJ,CAjBR,CADJ;AAiCH,C;;;;;;;;;;;;;;;;;;ACtED;AACA;AAEe,SAASO,QAAT,CAAkB9E,KAAlB,EAAgG;AAC3G,MAAQyC,QAAR,GAA6DzC,KAA7D,CAAQyC,QAAR;AAAA,MAAkBsC,OAAlB,GAA6D/E,KAA7D,CAAkB+E,OAAlB;AAAA,MAA2BC,SAA3B,GAA6DhF,KAA7D,CAA2BgF,SAA3B;AAAA,MAAsCC,OAAtC,GAA6DjF,KAA7D,CAAsCiF,OAAtC;AAAA,MAAkDC,MAAlD,6GAA6DlF,KAA7D;;AACA,MAAMiD,KAAK,GAAGkC,mEAAQ,EAAtB;AAEA,sBAAO,iDAAC,+DAAD,oBAASD,MAAT;AAAiB,WAAO,EAAED,OAA1B;AAAmC,MAAE,EAAEhC,KAAK,CAACmC,OAAN,CAAc,IAAd;AAAvC,mBACH,iDAAC,+DAAD;AAAO,UAAM,MAAb;AAAc,aAAS,EAAEJ;AAAzB,KACKD,OAAO,KAAK,CAAZ,iBAAiB,iDAAC,+DAAD;AAAK,KAAC,EAAE9B,KAAK,CAACmC,OAAN,CAAcL,OAAO,IAAI,IAAzB;AAAR,KACbtC,QADa,CADtB,EAIKsC,OAAO,KAAK,CAAZ,IAAiBtC,QAJtB,CADG,CAAP;AAQH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyCM,IAAM4C,WAA6C,GAAG,CACzD;AACItH,IAAE,EAAE,OADR;AAEIuH,MAAI,EAAE,CAAC,YAAD,CAFV;AAGIC,QAAM,oBAHV;AAIIC,SAAO,EAAE;AAJb,CADyD,EAOzD;AACIzH,IAAE,EAAE,MADR;AAEIuH,MAAI,EAAE,CAAC,YAAD,CAFV;AAGIC,QAAM,qBAHV;AAIIC,SAAO,EAAE;AAJb,CAPyD,EAazD;AACIzH,IAAE,EAAE,mBADR;AAEIuH,MAAI,EAAE,CAAC,SAAD,EAAY,YAAZ,CAFV;AAGIC,QAAM,iCAHV;AAIIC,SAAO,EAAE;AAJb,CAbyD,EAmBzD;AACIzH,IAAE,EAAE,eADR;AAEIuH,MAAI,EAAE,CAAC,UAAD,CAFV;AAGIC,QAAM,wCAHV;AAIIC,SAAO,EAAE;AAJb,CAnByD,EAyBzD;AACIzH,IAAE,EAAE,aADR;AAEIuH,MAAI,EAAE,CAAC,UAAD,EAAa,QAAb,CAFV;AAGIC,QAAM,0CAHV;AAIIC,SAAO,EAAE;AAJb,CAzByD,EA+BzD;AACIzH,IAAE,EAAE,MADR;AAEIuH,MAAI,EAAE,CAAC,QAAD,CAFV;AAGIC,QAAM,6BAHV;AAIIC,SAAO,EAAE;AAJb,CA/ByD,EAqCzD;AACIzH,IAAE,EAAE,OADR;AAEIuH,MAAI,EAAE,CAAC,QAAD,CAFV;AAGIC,QAAM,wBAHV;AAIIC,SAAO,EAAE;AAJb,CArCyD,EA2CzD;AACIzH,IAAE,EAAE,YADR;AAEIuH,MAAI,EAAE,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,IAAZ,CAAV,CAFV;AAGIC,QAAM,gEAHV;AAIIC,SAAO,EAAE;AAJb,CA3CyD,EAiDzD;AACIzH,IAAE,EAAE,gBADR;AAEIuH,MAAI,EAAE,CAAC,SAAD,CAFV;AAGIC,QAAM,0BAHV;AAIIC,SAAO,EAAE;AAJb,CAjDyD,EAuDzD;AACIzH,IAAE,EAAE,eADR;AAEIuH,MAAI,EAAE,CAAC,UAAD,EAAa,QAAb,CAFV;AAGIC,QAAM,8BAHV;AAIIC,SAAO,EAAE;AAJb,CAvDyD,EA6DzD;AACIzH,IAAE,EAAE,YADR;AAEIuH,MAAI,EAAE,CAAC,UAAD,EAAa,QAAb,CAFV;AAGIC,QAAM,8BAHV;AAIIC,SAAO,EAAE;AAJb,CA7DyD,EAmEzD;AACIzH,IAAE,EAAE,MADR;AAEIuH,MAAI,EAAE,EAFV;AAGIC,QAAM,kCAHV;AAIIC,SAAO,EAAE;AAJb,CAnEyD,EAyEzD;AACIzH,IAAE,EAAE,KADR;AAEIuH,MAAI,EAAE,EAFV;AAGIC,QAAM,gBAHV;AAIIC,SAAO,EAAE;AAJb,CAzEyD,EA+EzD;AACIzH,IAAE,EAAE,iBADR;AAEIuH,MAAI,EAAE,CAAC,YAAD,CAFV;AAGIC,QAAM,kCAHV;AAIIC,SAAO,EAAE;AAJb,CA/EyD,EAqFzD;AACIzH,IAAE,EAAE,oBADR;AAEIuH,MAAI,EAAE,CAAC,YAAD,CAFV;AAGIC,QAAM,qCAHV;AAIIC,SAAO,EAAE;AAJb,CArFyD,CAAtD,C;;;;;;ACxDP;AACA;AASA;AAIA;AAEO,SAASC,YAAT,CAAsB1H,EAAtB,EAAkC;AACrC,SAAO;AACH7D,QAAI,EAAE,YADH;AAEHV,QAAI,EAAEuE;AAFH,GAAP;AAIH;AAEM,SAAS2H,kBAAT,CACHhG,IADG,EAEHiG,KAFG,EAGL;AACE,SAAO;AACHzL,QAAI,EAAE,kBADH;AAEH0L,UAAM,EAAEH,YAAY,CAAC/F,IAAD,CAFjB;AAGHmG,YAAQ,EAAE,OAAOF,KAAP,KAAiB,QAAjB,GAA4BF,YAAY,CAACE,KAAD,CAAxC,GAAkDA,KAHzD;AAIHG,YAAQ,EAAE;AAJP,GAAP;AAMH;;AAED,SAASC,cAAT,CACIC,OADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIE;AACEF,SAAO,CAACG,QAAR,CAAiB9J,OAAjB,CAAyB+J,SAAzB;;AAEA,WAASA,SAAT,CAAmBC,IAAnB,EAAiC;AAC7B,YAAQA,IAAI,CAACnM,IAAb;AACI,WAAK,KAAL;AAAY;AACR,cAAIgM,YAAJ,EAAkBA,YAAY,CAACG,IAAD,CAAZ;AAClB;AACH;;AACD,WAAK,KAAL;AAAY;AAAA;;AACR,cAAMC,IAAG,GAAGD,IAAZ;AACA,cAAIJ,QAAJ,EAAcA,QAAQ,CAACK,IAAD,EAAM,CAAN,CAAR;AACdA,cAAG,SAAH,IAAAA,IAAG,WAAH,yBAAAA,IAAG,CAAEC,IAAL,wDAAWlK,OAAX,CAAmB+J,SAAnB;AACA,cAAIH,QAAJ,EAAcA,QAAQ,CAACK,IAAD,EAAM,CAAN,CAAR;AACdA,cAAG,SAAH,IAAAA,IAAG,WAAH,yBAAAA,IAAG,CAAEE,IAAL,wDAAWnK,OAAX,CAAmB+J,SAAnB;AACA,cAAIH,QAAJ,EAAcA,QAAQ,CAACK,IAAD,EAAM,CAAN,CAAR;AACjB;AAZL;AAcH;AACJ;;AAEM,SAASG,cAAT,CAAwBC,IAAxB,EAAyC;AAC5C,MAAMC,UAAqB,GAAG;AAAEC,SAAK,EAAEF,IAAI,CAACE,KAAL,CAAW/M,KAAX,CAAiB,CAAjB,CAAT;AAA8BgN,YAAQ,EAAE;AAAxC,GAA9B;AACAF,YAAU,CAACE,QAAX,GAAsBH,IAAI,CAACG,QAAL,CAAc1K,GAAd,CAAkB,UAAA2K,CAAC,EAAI;AACzC,WAAO;AAAEX,cAAQ,EAAEY,gBAAgB,CAACD,CAAD,CAA5B;AAAiCE,YAAM,EAAEF,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEE;AAA5C,KAAP;AACH,GAFqB,CAAtB;AAGA,SAAOL,UAAP;AACH;;AAED,SAASI,gBAAT,CAA0Bf,OAA1B,EAAwD;AACpD,MAAMiB,WAAwB,GAAG,EAAjC;AACA,MAAMC,MAAuC,GAAG,EAAhD;AACA,MAAIC,OAAO,GAAG,CAAd;AACApB,gBAAc,CACVC,OADU,EAEV,UAACM,GAAD,EAAMc,IAAN,EAAe;AACX,YAAQA,IAAR;AACI,WAAK,CAAL;AAAQ;AACJ;AACA,cAAMZ,IAAI,aAAWW,OAArB;AACA,cAAME,GAAG,YAAUF,OAAnB;AACAD,gBAAM,CAAC1L,IAAP,CAAY;AAAEgL,gBAAI,EAAJA,IAAF;AAAQa,eAAG,EAAHA;AAAR,WAAZ;AACAF,iBAAO;AACPF,qBAAW,CAACzL,IAAZ,CAAiB;AACbtB,gBAAI,EAAE,KADO;AAEboN,mBAAO,EAAE;AACLpN,kBAAI,EAAE,gBADD;AAELqN,oBAAM,EAAE9B,YAAY,CAAC,mBAAD,CAFf;AAGL+B,uBAAS,EAAE,CAAClB,GAAG,CAACmB,IAAL,EAAWhC,YAAY,CAACe,IAAD,CAAvB;AAHN;AAFI,WAAjB;AAQA;AACH;;AACD,WAAK,CAAL;AAAQ;AACJ;AACA,wBAAsBU,MAAM,CAACA,MAAM,CAAC7L,MAAP,GAAgB,CAAjB,CAA5B;AAAA,cAAQmL,KAAR,WAAQA,IAAR;AAAA,cAAca,IAAd,WAAcA,GAAd;AACAJ,qBAAW,CAACzL,IAAZ,CAAiB;AACbtB,gBAAI,EAAE,KADO;AAEboN,mBAAO,EAAE;AACLpN,kBAAI,EAAE,gBADD;AAELqN,oBAAM,EAAE9B,YAAY,CAAC,MAAD,CAFf;AAGL+B,uBAAS,EAAE,CAAC/B,YAAY,CAAC4B,IAAD,CAAb;AAHN;AAFI,WAAjB;AAQAJ,qBAAW,CAACzL,IAAZ,CAAiB;AACbtB,gBAAI,EAAE,KADO;AAEboN,mBAAO,EAAE;AACLpN,kBAAI,EAAE,gBADD;AAELqN,oBAAM,EAAE9B,YAAY,CAAC,OAAD,CAFf;AAGL+B,uBAAS,EAAE,CAAC/B,YAAY,CAACe,KAAD,CAAb;AAHN;AAFI,WAAjB;AAQA;AACH;;AACD,WAAK,CAAL;AAAQ;AACJkB,kCAAM,CAACR,MAAM,CAAC7L,MAAP,GAAgB,CAAjB,CAAN;AACA,cAAQgM,KAAR,GAAgBH,MAAM,CAACA,MAAM,CAAC7L,MAAP,GAAgB,CAAjB,CAAtB,CAAQgM,GAAR;AACAJ,qBAAW,CAACzL,IAAZ,CAAiB;AACbtB,gBAAI,EAAE,KADO;AAEboN,mBAAO,EAAE;AACLpN,kBAAI,EAAE,gBADD;AAELqN,oBAAM,EAAE9B,YAAY,CAAC,OAAD,CAFf;AAGL+B,uBAAS,EAAE,CAAC/B,YAAY,CAAC4B,KAAD,CAAb;AAHN;AAFI,WAAjB;AAQAH,gBAAM,CAACS,GAAP;AACH;AAlDL;AAoDH,GAvDS,EAwDV,UAAAC,GAAG,EAAI;AACHX,eAAW,CAACzL,IAAZ,CAAiBoM,GAAjB;AACH,GA1DS,CAAd;AA4DA,SAAOX,WAAP;AACH;;AAYM,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChM,IAAD;AAAA,SAAqB,UAACiM,IAAD,EAAkB;AACrE;AACA,QAAMC,OAAO,GAAGlM,IAAI,CAAC+K,KAAL,CAAWoB,IAAX,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACH,IAAL,KAAcA,IAAlB;AAAA,KAApB,CAAhB;;AACA,QAAIC,OAAJ,EAAa;AACT;AACA,UAAMG,GAAG,GAAGC,6CAA4B,CAACJ,OAAO,CAACK,cAAT,CAAxC;AACAV,8BAAM,CAAC,CAAC,CAACQ,GAAH,eAAmBH,OAAO,CAACK,cAA3B,mBAAN;AACA,aAAOF,GAAP;AACH,KALD,MAKO;AACH,UAAMG,OAAO,GAAGF,6CAA4B,CAACL,IAAD,CAA5C;AACA,aAAOO,OAAP;AACH;AACJ,GAZiC;AAAA,CAA3B;AAcA,SAASC,YAAT,CAAsB5B,IAAtB,EAIL;AACE,MAAM6B,SAAoB,GAAG,EAA7B;AACA,MAAMC,YAAyB,GAAG,EAAlC;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAe;AAC5BH,aAAS,CAAC/M,IAAV,CAAe;AAAEmN,cAAQ,EAAEnO,SAAZ;AAAuBoO,aAAO,EAAEF;AAAhC,KAAf;AACH,GAFD;;AAGA,MAAMG,cAAc,GAAG,IAAIC,kCAAJ,CACnBtO,SADmB,EAEnBqN,kBAAkB,CAACnB,IAAD,CAFC,EAGnB+B,QAHmB,CAAvB;AAKA,MAAMM,OAAO,GAAG,IAAIC,yBAAJ,CAAcH,cAAd,EAA8B,UAAAI,CAAC;AAAA,WAAI,IAAJ;AAAA,GAA/B,EAAyCR,QAAzC,CAAhB;AACA/B,MAAI,CAACG,QAAL,CAAcxK,OAAd,CAAsB,UAAAyK,CAAC,EAAI;AACvB,QAAIA,CAAJ,aAAIA,CAAJ,eAAIA,CAAC,CAAEE,MAAH,CAAU3L,MAAd,EAAsB;AAClByL,OAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEE,MAAH,CAAU3K,OAAV,CAAkB,UAAAqM,CAAC;AAAA,eAAIH,SAAS,CAAC/M,IAAV,CAAekN,CAAf,CAAJ;AAAA,OAAnB;AACA;AACH;;AACD,QAAMQ,UAAU,GAAGX,SAAS,CAAClN,MAA7B;AACAwN,kBAAc,CAACjC,KAAf,GAAuB,EAAvB;AACAb,kBAAc,CAACe,CAAD,EAAItM,SAAJ,EAAe,UAAA2O,CAAC;AAAA,aAC1BJ,OAAO,CAACK,YAAR,CAAqBD,CAAC,CAAC7B,OAAvB,EAAgCjC,WAAhC,CAD0B;AAAA,KAAhB,CAAd;;AAGA,QAAI,CAAAyB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEE,MAAH,CAAU3L,MAAV,MAAqB,CAArB,IAA0BkN,SAAS,CAAClN,MAAV,KAAqB6N,UAAnD,EAA+D;AAC3DpC,OAAC,CAACF,KAAF,GAAUiC,cAAc,CAACjC,KAAzB;AACA4B,kBAAY,CAAChN,IAAb,CAAkBsL,CAAlB;AACH,KAHD,MAGO;AACHA,OAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEE,MAAH,CAAU3K,OAAV,CAAkB,UAAAqM,CAAC;AAAA,eAAIH,SAAS,CAAC/M,IAAV,CAAekN,CAAf,CAAJ;AAAA,OAAnB;AACH;AACJ,GAhBD;AAiBAhC,MAAI,CAACG,QAAL,GAAgB2B,YAAhB;AAEA,SAAO;AACHa,aAAS,EAAER,cAAc,CAACQ,SAAf,CAAyBlN,GAAzB,CAA6B,UAAAmN,CAAC,EAAI;AACzC,qBAAoBA,CAAC,CAAClO,KAAF,CAAQ,GAAR,CAApB;AAAA,UAAOsE,IAAP;AAAA,UAAa6J,GAAb;;AACA,aAAO;AAAEzB,YAAI,EAAEpI,IAAR;AAAc8J,gBAAQ,EAAED;AAAxB,OAAP;AACH,KAHU,CADR;AAKHE,UAAM,EAAEZ,cAAc,CAACY,MAAf,CAAsBtN,GAAtB,CAA0B,UAAAuM,CAAC,EAAI;AACnC,qBAAoBA,CAAC,CAACtN,KAAF,CAAQ,GAAR,CAApB;AAAA,UAAOsE,IAAP;AAAA,UAAa6J,GAAb;;AACA,aAAO;AAAEzB,YAAI,EAAEpI,IAAR;AAAcwC,aAAK,EAAEqH;AAArB,OAAP;AACH,KAHO,CALL;AASHvC,UAAM,EAAEuB;AATL,GAAP;AAWH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3MD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;CAGA;;IAGKmB,gB;;WAAAA,gB;AAAAA,kB;AAAAA,kB;AAAAA,kB;AAAAA,kB;AAAAA,kB;AAAAA,kB;GAAAA,gB,KAAAA,gB;;AASL,IAAMC,eAAe,GAAG,eAAxB;;IAkBMC,e;;;AACF,2BAAmBC,KAAnB,EAAkC;AAAA;;AAC9B;AAD8B,UAAfA,KAAe,GAAfA,KAAe;AAAA;AAEjC;;;mDAHyBC,K;;IAMxBC,gB;;;AACF,4BAAmBC,EAAnB,EAA+B;AAAA;;AAC3B;AAD2B,WAAZA,EAAY,GAAZA,EAAY;AAAA;AAE9B;;;mDAH0BF,K;;IAMzBG,kB;AAIF,8BACWC,MADX,EAEqBC,GAFrB,EAGqBC,EAHrB,EAIE;AAAA,SAPMC,SAON,GAP0B7P,SAO1B;AAAA,SANM8P,YAMN,GAN6B9P,SAM7B;AAAA,SALM+P,QAKN,GALiB,KAKjB;AAAA,SAHSL,MAGT,GAHSA,MAGT;AAAA,SAFmBC,GAEnB,GAFmBA,GAEnB;AAAA,SADmBC,EACnB,GADmBA,EACnB;AAAE;;;;SAEJI,K,GAAA,eAAMvL,GAAN,EAAmBuG,OAAnB,EAAiD;AAAA,QAA9BA,OAA8B;AAA9BA,aAA8B,GAAJ,EAAI;AAAA;;AAC7C,SAAK0E,MAAL,CAAYM,KAAZ,CAAkBvL,GAAlB;AAAyBqI,aAAO,EAAE,KAAK8C,EAAL,CAAQ9C,OAAR,CAAgBpN;AAAlD,OAA2DsL,OAA3D;AACH,G;;SAMOiF,c,GAAR,wBAAuB/B,CAAvB,EAA2C;AAAA;;AACvC,QAAMjB,IAAI,GAAG,IAAIiD,8BAAJ,CAAoB,UAAAhC,CAAC;AAAA,aAAI,MAAI,CAACyB,GAAL,CAASQ,MAAT,CAAgBjC,CAAhB,CAAJ;AAAA,KAArB,EAA6ClO,SAA7C,CAAb;AACA,WAAOiN,IAAI,CAACmD,IAAL,CAAUlC,CAAV,CAAP;AACH,G;;SAEOmC,e,GAAR,yBAAwBnC,CAAxB,EAA4C;AACxC,WAAO,KAAK+B,cAAL,CAAoB/B,CAApB,IAAyB,IAAzB,GAAgC,KAAvC;AACH,G;;SAEOoC,K,GAAR,iBAAgB;AACZ,QACI,KAAKV,EAAL,CAAQ9C,OAAR,CAAgBC,MAAhB,CAAuBrN,IAAvB,KAAgC,kBAAhC,KACC,KAAK6Q,IAAL,KAAc,eAAd,IAAiC,KAAKA,IAAL,KAAc,aADhD,CADJ,EAGE;AACE;AACA,UAAMzF,IAAI,GAAG,KAAK8E,EAAL,CAAQ9C,OAAR,CAAgBE,SAA7B;AACA,WAAK6C,SAAL,GAAiB,KAAKI,cAAL,CAAoBnF,IAAI,CAAC,CAAD,CAAxB,CAAjB;AACA,UAAI,KAAKyF,IAAL,KAAc,aAAlB,EACI,KAAKT,YAAL,GAAoB,KAAKG,cAAL,CAAoBnF,IAAI,CAAC,CAAD,CAAxB,CAApB;AACJ,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,G;;SAEY0F,Q;iGAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACS,KAAKT,QADd;AAAA;AAAA;AAAA;;AAEcU,yBAFd,GAE4B,KAAKH,KAAL,EAF5B;AAGQ,mBAAKP,QAAL,GAAgB,IAAhB;;AAHR,mBAIYU,WAJZ;AAAA;AAAA;AAAA;;AAAA,+CAIgCvB,gBAAgB,CAACwB,OAJjD;;AAAA;AAMU5F,kBANV,GAMiB,KAAK8E,EAAL,CAAQ9C,OAAR,CAAgBE,SANjC;;AAAA,oBAOQ,KAAK4C,EAAL,CAAQ9C,OAAR,CAAgBC,MAAhB,CAAuBrN,IAAvB,KAAgC,kBAPxC;AAAA;AAAA;AAAA;;AAQQ;AACMuN,kBATd,GASqB,IAAIiD,8BAAJ,CAAoB,UAAAhC,CAAC;AAAA,uBAAI,MAAI,CAACyB,GAAL,CAASQ,MAAT,CAAgBjC,CAAhB,CAAJ;AAAA,eAArB,EAA6ClO,SAA7C,CATrB;AAUc2Q,qBAVd,GAUuB,KAAKf,EAAL,CAAQ9C,OAAR,CAAgBE,SAAhB,CAA0BrL,GAA1B,CAA8B,UAAAiP,CAAC;AAAA,uBAAI3D,IAAI,CAACmD,IAAL,CAAUQ,CAAV,CAAJ;AAAA,eAA/B,CAVvB;AAAA;AAAA,qBAWc,KAAKjB,GAAL,CAASkB,gBAAT,CACF,KAAKjB,EAAL,CAAQ9C,OAAR,CAAgBC,MADd,EAEF4D,OAFE,CAXd;;AAAA;AAAA,+CAeezB,gBAAgB,CAAC4B,SAfhC;;AAAA;AAAA,4BAiBY,KAAKP,IAjBjB;AAAA,8CAkBa,mBAlBb,wBAyBa,MAzBb,wBA4Ba,OA5Bb,wBA+Ba,YA/Bb,wBAwCa,gBAxCb,wBA6Ca,aA7Cb,wBA8Ca,eA9Cb,wBAiEa,eAjEb,wBAkEa,YAlEb,wBAmFa,OAnFb,wBA4Fa,MA5Fb,wBA+Fa,KA/Fb,wBAkGa,MAlGb,wBA0Ga,iBA1Gb,wBA+Ga,mBA/Gb;AAAA;;AAAA;AAmBkBtD,mBAnBlB,GAmByB,KAAKoD,eAAL,CAAqBvF,IAAI,CAAC,CAAD,CAAzB,CAnBzB;;AAAA,mBAoBgBmC,KApBhB;AAAA;AAAA;AAAA;;AAAA,oBAqBsB,IAAImC,eAAJ,CAAqBtE,IAAI,CAAC,CAAD,CAAL,CAA6B9L,IAAjD,CArBtB;;AAAA;AAAA,+CAuBmBkQ,gBAAgB,CAAC4B,SAvBpC;;AAAA;AAAA,oBA0BkB,IAAI1B,eAAJ,CAAqBtE,IAAI,CAAC,CAAD,CAAL,CAA6B9L,IAAjD,CA1BlB;;AAAA;AAAA,+CA6BmBkQ,gBAAgB,CAAC4B,SA7BpC;;AAAA;AAgCkBpJ,mBAhClB,GAgC0BoD,IAAI,CAAC,CAAD,CAhC9B;;AAAA,mBAiCgB,KAAK6E,GAAL,CAASoB,QAAT,CAAkBrJ,KAAlB,CAjChB;AAAA;AAAA;AAAA;;AAAA,+CAkCuB,KAAK2I,eAAL,CAAqBvF,IAAI,CAAC,CAAD,CAAzB,IACDoE,gBAAgB,CAAC4B,SADhB,GAED5B,gBAAgB,CAACwB,OApCvC;;AAAA;AAAA,+CAsCmBxB,gBAAgB,CAACwB,OAtCpC;;AAAA;AAAA,+CAyCmB,KAAKL,eAAL,CAAqBvF,IAAI,CAAC,CAAD,CAAzB,IACDoE,gBAAgB,CAAC4B,SADhB,GAED5B,gBAAgB,CAACwB,OA3CnC;;AAAA;AA+CkBM,sBA/ClB,GA+C6B,KAAKf,cAAL,CAAoBnF,IAAI,CAAC,CAAD,CAAxB,CA/C7B;;AAAA,oBAiDiB,KAAKyF,IAAL,KAAc,eAAd,IACGS,QAAQ,KAAK,KAAKnB,SADtB,IAEC,KAAKU,IAAL,KAAc,aAAd,KACK,KAAKT,YAAL,KAAsB,CAAtB,IACEkB,QAAQ,KAAK,KAAKnB,SADrB,IAEI,KAAKC,YAAL,GAAoB,CAApB,IACGkB,QAAQ,IACJ,KAAKnB,SAAL,GAAiB,KAAKC,YAJjC,IAKI,KAAKA,YAAL,GAAoB,CAApB,IACGkB,QAAQ,IACJ,KAAKnB,SAAL,GAAiB,KAAKC,YARrC,CAnDjB;AAAA;AAAA;AAAA;;AAAA,+CA6DuBZ,gBAAgB,CAAC4B,SA7DxC;;AAAA;AAAA,+CA+DmB5B,gBAAgB,CAACwB,OA/DpC;;AAAA;AAmEkBzD,oBAnElB,GAmEyB,IAAIiD,8BAAJ,CACT,UAAAhC,CAAC;AAAA,uBAAI,MAAI,CAACyB,GAAL,CAASQ,MAAT,CAAgBjC,CAAhB,CAAJ;AAAA,eADQ,EAETlO,SAFS,CAnEzB;AAuEkBwE,gBAvElB,GAuEuByI,MAAI,CAACmD,IAAL,CAAUtF,IAAI,CAAC,CAAD,CAAd,CAvEvB;AAwEY,mBAAKkF,KAAL,CAAW,UAAX,EAAuB;AAAE/C,oBAAI,EAAEgE,0BAAO,CAACnG,IAAI,CAAC,CAAD,CAAL;AAAf,eAAvB;AACMoG,iBAzElB,GAyEwBpG,IAAI,CAAC,CAAD,CAzE5B;;AAAA,oBA0EgB,KAAKyF,IAAL,KAAc,eA1E9B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA2EsB,KAAKZ,GAAL,CAASwB,kBAAT,CAA4BD,GAA5B,EAAiC1M,EAAjC,CA3EtB;;AAAA;AA4EgB,mBAAKwL,KAAL,CAAW,kBAAX,EAA+B;AAC3BkB,mBAAG,EAAED,0BAAO,CAACC,GAAD,CADe;AAE3BjE,oBAAI,EAAEzI;AAFqB,eAA/B;AA5EhB;AAAA;;AAAA;AAgFmB,mBAAKmL,GAAL,CAASyB,UAAT,CAAoBF,GAApB,EAAyB1M,EAAzB;;AAhFnB;AAAA,+CAiFmB0K,gBAAgB,CAAC4B,SAjFpC;;AAAA;AAoFkB7D,oBApFlB,GAoFyB,IAAIiD,8BAAJ,CACT,UAAAhC,CAAC;AAAA,uBAAI,MAAI,CAACyB,GAAL,CAASQ,MAAT,CAAgBjC,CAAhB,CAAJ;AAAA,eADQ,EAETlO,SAFS,CApFzB;AAwFkBwE,iBAxFlB,GAwFuByI,MAAI,CAACmD,IAAL,CAAUtF,IAAI,CAAC,CAAD,CAAd,CAxFvB;AAyFY,mBAAK4E,MAAL,CAAY2B,KAAZ,aAAkB,KAAKzB,EAAvB,6CAAkB,SAASzB,QAA3B,EAAqC3J,GAArC;AAzFZ,+CA0FmB0K,gBAAgB,CAAC4B,SA1FpC;;AAAA;AAAA,+CA6FmB5B,gBAAgB,CAACoC,OA7FpC;;AAAA;AAAA,+CAgGmBpC,gBAAgB,CAAC4B,SAhGpC;;AAAA;AAmGkB7D,oBAnGlB,GAmGyB,IAAIiD,8BAAJ,CACT,UAAAhC,CAAC;AAAA,uBAAI,MAAI,CAACyB,GAAL,CAASQ,MAAT,CAAgBjC,CAAhB,CAAJ;AAAA,eADQ,EAETlO,SAFS,CAnGzB;AAuGkBwE,kBAvGlB,GAuGuByI,MAAI,CAACmD,IAAL,CAAUtF,IAAI,CAAC,CAAD,CAAd,CAvGvB;AAAA,oBAwGkB,IAAIyE,gBAAJ,CAAqB/K,IAAE,GAAG,IAA1B,CAxGlB;;AAAA;AAAA,+CA6GmB0K,gBAAgB,CAAC4B,SA7GpC;;AAAA;AAAA,+CAkHmB5B,gBAAgB,CAAC4B,SAlHpC;;AAAA;AAAA,oBAqHkB,IAAIS,wBAAJ,CACFC,gDADE,2BAEqB,KAAKjB,IAF1B,CArHlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;SA5BA,eAAmB;AAAA;;AACf,sCAAQ,KAAKX,EAAL,CAAQ9C,OAAR,CAAgBC,MAAxB,0DAAO,sBAA6C/N,IAApD;AACH;;;;;;IAuJCyS,e;AAGF,2BACoB/B,MADpB,EAEYgC,SAFZ,EAGI/B,GAHJ,EAIWC,EAJX,EAKE;AAAA,SANM+B,OAMN,GANkCzC,gBAAgB,CAACwB,OAMnD;AAAA,SAJkBhB,MAIlB,GAJkBA,MAIlB;AAAA,SAHUgC,SAGV,GAHUA,SAGV;AAAA,SADS9B,EACT,GADSA,EACT;AACE,SAAKgC,KAAL,GAAa,IAAInC,kBAAJ,CAAuB,IAAvB,EAA6BE,GAA7B,EAAkCC,EAAlC,CAAb;AACH;;;;UAEDI,K,GAAA,eAAMvL,GAAN,EAAmBuG,OAAnB,EAAiD;AAAA,QAA9BA,OAA8B;AAA9BA,aAA8B,GAAJ,EAAI;AAAA;;AAC7C,SAAK0E,MAAL,CAAYM,KAAZ,CAAkBvL,GAAlB;AAAyB+G,aAAO,EAAE,KAAKkG;AAAvC,OAAqD1G,OAArD;AACH,G;;UAEDqG,K,GAAA,eAAM9N,EAAN,EAAkBsO,GAAlB,EAA4B;AACxB,SAAKnC,MAAL,CAAY2B,KAAZ,CAAkB9N,EAAlB,EAAsBsO,GAAtB;AACH,G;;UAUKC,S;kGAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKC,MAAL,KAAgB7C,gBAAgB,CAACwB,OADzC;AAAA;AAAA;AAAA;;AAEQ,mBAAKV,KAAL,CAAWiB,0BAAO,CAAC,KAAKrB,EAAL,CAAQ9C,OAAT,CAAlB;AAFR;AAAA,qBAG4B,KAAK8E,KAAL,CAAWpB,QAAX,EAH5B;;AAAA;AAGQ,mBAAKuB,MAHb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;SARA,eAAa;AACT,aAAO,KAAKJ,OAAZ;AACH,K;SAED,aAAW7C,CAAX,EAAgC;AAC5B,WAAK6C,OAAL,GAAe7C,CAAf;AACH;;;;;;IAUCkD,e;;;AAMF,2BACoBtC,MADpB,EAEoBnM,EAFpB,EAGoBoM,GAHpB,EAIoBnE,OAJpB,EAKE;AAAA;;AACE,+CADF,CAEE;;AAFF,WAVMyG,aAUN,GAV8BjS,SAU9B;AAAA,WATMkS,eASN,GATyClS,SASzC;AAAA,WARMmS,OAQN,GARgB,KAQhB;AAAA,WAPMC,aAON,GAPoC,EAOpC;AAAA,WAJkB1C,MAIlB,GAJkBA,MAIlB;AAAA,WAHkBnM,EAGlB,GAHkBA,EAGlB;AAAA,WAFkBoM,GAElB,GAFkBA,GAElB;AAAA,WADkBnE,OAClB,GADkBA,OAClB;;AAGE,WAAKA,OAAL,CAAaG,QAAb,CAAsB9J,OAAtB,CAA8B,UAAC8M,CAAD,EAAIxF,KAAJ,EAAc;AAAA;;AACxC,UAAMiE,GAAG,GAAGuB,CAAZ;AACA,UAAMpL,EAAE,mBAAG6J,GAAG,CAACN,OAAP,iDAAG,aAAaC,MAAxB;;AACA,UAAI,CAAAxJ,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEvE,IAAJ,MAAa,OAAjB,EAA0B;AACtB,YAAMqQ,MAAK,GAAGjC,GAAG,CAACN,OAAJ,CAAYE,SAAZ,CAAsB,CAAtB,CAAd;AACA,eAAKoF,aAAL,CAAmB/C,MAAK,CAACrQ,IAAzB,IAAiCmK,KAAjC;AACH;AACJ,KAPD;;AAQA,WAAKkJ,KAAL;;AAXF;AAYD;;;;UAEDrC,K,GAAA,eAAMvL,GAAN,EAAmBuG,OAAnB,EAAiD;AAAA,QAA9BA,OAA8B;AAA9BA,aAA8B,GAAJ,EAAI;AAAA;;AAC7C,SAAK0E,MAAL,CAAYM,KAAZ,CAAkBvL,GAAlB;AAAyBlB,QAAE,EAAE,KAAKA;AAAlC,OAAyCyH,OAAzC;AACH,G;;UAEDqG,K,GAAA,eAAM9N,EAAN,EAAkBsO,GAAlB,EAA4B;AACxB,SAAKnC,MAAL,CAAY2B,KAAZ,CAAkB9N,EAAlB,EAAsBsO,GAAtB;AACH,G;;UAoBDS,O,GAAA,mBAAU;AACN,QACI,KAAKP,MAAL,KAAgB7C,gBAAgB,CAACqD,KAAjC,IACA,KAAK/G,OAAL,CAAaG,QAAb,CAAsB9K,MAF1B,EAII,KAAK2R,YAAL,GAAoB,CAApB;AACP,G;;UAEDH,K,GAAA,iBAAQ;AACJ,SAAKG,YAAL,GAAoBxS,SAApB;AACA,SAAKmS,OAAL,GAAe,KAAf;AACH,G;;UAEDM,M,GAAA,kBAAS;AACL,SAAKN,OAAL,GAAe,IAAf;AACA,SAAKxC,GAAL,CAAS+C,WAAT;AACH,G;;UAEDC,I,GAAA,gBAAO;AACH,QAAI,KAAKT,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBH,MAArB,GAA8B7C,gBAAgB,CAAC4B,SAA/C;AACA,WAAK8B,IAAL;AACH;AACJ,G,CAED;;;UACMC,oB;;;6GAAN,kBAA2BC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2BA,UAA3B;AAA2BA,0BAA3B,GAAwC,KAAxC;AAAA;;AAAA,oBACQ,KAAKX,OAAL,IAAgB,CAAC,KAAK3G,OAAL,CAAaG,QAAb,CAAsB9K,MAD/C;AAAA;AAAA;AAAA;;AAAA,gDAC8Db,SAD9D;;AAAA;AAEI,kBAAI,KAAKwS,YAAL,KAAsBxS,SAA1B,EAAqC;AACjC,qBAAKwS,YAAL,GAAoB,CAApB;AACH;;AAJL;AAAA,qBAKe,KAAKO,yBAAL,CAA+BD,UAA/B,CALf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,6BAK8D,CAACA,UAL/D;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gDAMe,KAAKZ,eANpB;;AAAA;AAAA,mBAOW,KAAKU,IAAL,EAPX;AAAA;AAAA;AAAA;;AAAA,6BAQYE,UARZ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQiC,KAAKC,yBAAL,EARjC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gDASmB,KAAKb,eATxB;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAWWlS,SAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;UAcQ4S,I,GAAR,gBAAe;AACX,QACI,KAAKV,eAAL,CAAqBH,MAArB,KAAgC7C,gBAAgB,CAAC4B,SAAjD,IACA,KAAK0B,YAAL,GAAoB,KAAKhH,OAAL,CAAaG,QAAb,CAAsB9K,MAAtB,GAA+B,CAFvD,EAGE;AACE,WAAK2R,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,G;;UAEOQ,U,GAAR,sBAAqB;AACjB,QAAM5F,GAAG,GAAG,KAAK5B,OAAL,CAAaG,QAAb,CAAsB,KAAKsG,aAA3B,CAAZ;;AACA,QAAI7E,GAAG,CAAC1N,IAAJ,KAAa,KAAjB,EAAwB;AACpB,YAAM,IAAI6R,wBAAJ,CAAYC,gDAAZ,EAAkC,uBAAlC,CAAN;AACH;;AACD,WAAOpE,GAAP;AACH,G;;UAEa2F,yB;kHAAd,kBAAwCD,UAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwCA,UAAxC;AAAwCA,0BAAxC,GAAqD,KAArD;AAAA;;AACI,mBAAK9C,KAAL,CAAW,YAAX;AACMiD,iBAFV,4BAEgB,KAAKf,eAAL,CAAqBtC,EAFrC,0DAEgB,sBAAyBzB,QAFzC;AAAA,6BAGQ,CAAC2E,UAHT;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAG8B,KAAKpD,MAAL,CAAYwD,iBAAZ,CAA8BD,GAA9B,CAH9B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gDAIe,IAJf;;AAAA;AAAA;AAAA,qBAMU,KAAKE,eAAL,EANV;;AAAA;AAOI,mBAAKnD,KAAL,CAAW,UAAX;AAPJ,gDAQW,KARX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;UAWcmD,e;wGAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUF,iBADV,GACgB,KAAKf,eAAL,CAAqBtC,EAArB,CAAwBzB,QADxC;AAEI,mBAAKuB,MAAL,CAAY0D,IAAZ,CAAiBC,sBAAjB,EAA2B7B,kDAA3B,EAAkDyB,GAAlD;AAFJ;AAAA;AAAA,qBAIc,KAAKf,eAAL,CAAqBJ,SAArB,EAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAMY,wBAAa1C,eANzB;AAAA;AAAA;AAAA;;AAAA,mCAOoBC,OAPpB,QAOoBA,KAPpB;AAQkBlG,mBARlB,GAQ0B,KAAKiJ,aAAL,CAAmB/C,OAAnB,CAR1B;AASY,mBAAKmD,YAAL,GAAoBrJ,KAApB;AACA,mBAAK+I,eAAL,CAAqBH,MAArB,GAA8B7C,gBAAgB,CAAC4B,SAA/C;AAVZ;AAAA;;AAAA;AAAA,oBAWmB,wBAAavB,gBAXhC;AAAA;AAAA;AAAA;;AAYkB+D,iBAZlB;AAaY,mBAAKpB,eAAL,CAAqBH,MAArB,GAA8B7C,gBAAgB,CAACqE,QAA/C;AAbZ;AAAA,qBAckB,KAAK7D,MAAL,CAAY8D,UAAZ,CAAuB,IAAvB,EAA6BF,GAAG,CAAC9D,EAAjC,CAdlB;;AAAA;AAAA;AAAA;;AAAA;AAgBY,mBAAK4D,IAAL,CACIC,sBADJ,EAEI7B,gDAFJ,EAGI,KAAKU,eAAL,CAAqBtC,EAArB,CAAwBzB,QAH5B;AAhBZ;;AAAA;AAwBI,kBAAI,KAAK+D,eAAL,CAAqBH,MAArB,KAAgC7C,gBAAgB,CAAC4B,SAArD,EACI,KAAKpB,MAAL,CAAY0D,IAAZ,CACIC,sBADJ,EAEI7B,sDAFJ,EAGI,KAAKU,eAAL,CAAqBtC,EAArB,CAAwBzB,QAH5B;AAKJ,kBAAI,KAAK+D,eAAL,CAAqBH,MAArB,KAAgC7C,gBAAgB,CAACoC,OAArD,EACI,KAAKa,OAAL,GAAe,IAAf;;AA/BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;SAxFA,eAAa;AACT,aAAO,KAAKA,OAAL,GACDjD,gBAAgB,CAACoC,OADhB,GAED,KAAKW,aAAL,KAAuBjS,SAAvB,GACAkP,gBAAgB,CAACqD,KADjB,GAEA,KAAKL,eAAL,CAAqBH,MAJ3B;AAKH;;;SAED,eAAc;AACV,aAAO,KAAKG,eAAZ;AACH;;;SAED,eAAY;AACR,aACI,KAAKH,MAAL,KAAgB7C,gBAAgB,CAACwB,OAAjC,IAA4C,KAAKuB,aAAL,KAAuB,CADvE;AAGH;;;SAyHD,eAA2B;AACvB,aAAO,KAAKA,aAAZ;AACH,K;SAjBD,aAAyB9I,KAAzB,EAAwC;AACpC,UAAIA,KAAK,KAAKnJ,SAAd,EAAyB;AACrB,aAAKiS,aAAL,GAAqBjS,SAArB;AACA,aAAKkS,eAAL,GAAuBlS,SAAvB;AACH,OAHD,MAGO,IAAImJ,KAAK,KAAK,KAAK8I,aAAnB,EAAkC;AACrC,aAAKA,aAAL,GAAqB9I,KAArB;AACA,aAAK+I,eAAL,GAAuB,IAAIT,eAAJ,CACnB,IADmB,EAEnB,KAAKlO,EAFc,EAGnB,KAAKoM,GAHc,EAInB,KAAKqD,UAAL,EAJmB,CAAvB;AAMH;AACJ;;;;EAxKyBS,gC;;AAwL9B,SAASC,cAAT,CAAwBpH,CAAxB,EAAsC;AAClCY,0BAAM,CAAC,CAAC,CAACZ,CAAH,CAAN;;AACA,MAAIA,CAAC,CAACX,QAAF,CAAW9K,MAAf,EAAuB;AACnB,QAAMuM,GAAG,GAAId,CAAC,CAACX,QAAF,CAAW,CAAX,CAAD,CAA6BmB,OAA7B,CACPC,MADL;AAEA,WAAOK,GAAG,CAACpO,IAAJ,KAAa,MAApB;AACH;;AACD,SAAO,KAAP;AACH;;AAEM,IAAK2U,QAAZ;;WAAYA,Q;AAAAA,U;AAAAA,U;AAAAA,U;GAAAA,Q,KAAAA,Q;;AAML,IAAMC,eAAb;AAAA;;AACI;AAYA;AAKA,2BACajO,GADb,EAEakO,WAFb,EAGaC,OAHb,EAIE;AAAA;;AACE;AADF,WApBMC,eAoBN,GApB2C,EAoB3C;AAAA,WAlBMC,MAkBN,GAlByB,EAkBzB;AAAA,WAfMC,UAeN,GAfsC,EAetC;AAAA,WAdMC,WAcN,GAduC,EAcvC;AAAA,WAbMC,SAaN,GAbqC,EAarC;AAAA,WAXMC,WAWN,GAXuC,EAWvC;AAAA,WARMC,MAQN,GAR0B,EAQ1B;AAAA,WAPMC,OAON,GAP+B,EAO/B;AAAA,WAgSMC,OAhSN,GAgSgB,KAhShB;AAAA,WAHW5O,GAGX,GAHWA,GAGX;AAAA,WAFWkO,WAEX,GAFWA,WAEX;AAAA,WADWC,OACX,GADWA,OACX;AAEE,QAAMU,QAAQ,GAAGvI,cAAc,CAAC6H,OAAD,CAA/B;;AACA,wBAAsChG,YAAY,CAAC0G,QAAD,CAAlD;AAAA,QAAQ3F,SAAR,iBAAQA,SAAR;AAAA,QAAmBI,MAAnB,iBAAmBA,MAAnB;AAAA,QAA2BzC,MAA3B,iBAA2BA,MAA3B;;AACA,WAAKwH,MAAL,GAAcQ,QAAQ,CAACpI,KAAvB;;AACA,QAAII,MAAM,CAAC3L,MAAX,EAAmB;AACfsC,aAAO,CAACsR,IAAR,CAAa,QAAb,EAAuBjI,MAAvB;AACH,KAPH,CAQE;;;AACA,WAAKmF,OAAL,GAAegC,QAAQ,CAACrC,OAAxB;AACA,WAAKoD,IAAL,GAAY,IAAIC,iCAAJ,CAAkB9F,SAAlB,EAA6BI,MAA7B,CAAZ;AACA,WAAK8E,eAAL,GAAuBS,QAAQ,CAACnI,QAAT,CAAkB1K,GAAlB,CACnB,UAAC2K,CAAD,EAAInD,KAAJ;AAAA,aAAc,IAAI6I,eAAJ,mDAA0B7I,KAA1B,EAAiC,OAAKuL,IAAtC,EAA4CpI,CAA5C,CAAd;AAAA,KADmB,CAAvB,CAXF,CAcE;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAKsI,aAAL,GAAqB,IAAIC,sBAAJ,EAArB;AACA,WAAKC,YAAL,GAAoB,IAAID,sBAAJ,EAApB;AACA,WAAKE,WAAL,GAAmB,IAAIF,sBAAJ,EAAnB,CAzBF,CA0BE;;AACA,WAAKG,KAAL,CACI,OAAKN,IAAL,CAAUtO,SAAV,CAAoB6O,yBAApB,EAA4B,YAAM;AAC9B,aAAKC,gBAAL;AACH,KAFD,CADJ;;AAKA,WAAKF,KAAL,CACI,OAAK5O,SAAL,CACI+I,eADJ;AAAA,+FAEI,kBAAO7C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACU,OAAK6I,WAAL,CAAiB7I,CAAjB,CADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;;AAAA;AAAA;AAAA;AAAA,QADJ;;AAQA,WAAK8I,wBAAL;;AAxCF;AAyCD,GA/DL,CAiEI;;;AAjEJ;;AAAA,UAsEYC,SAtEZ,GAsEI,mBAAkBvG,CAAlB,EAA+B;AAC3B,QAAIA,CAAC,KAAK,KAAK6C,OAAf,EAAwB;AACpB,WAAKA,OAAL,GAAe7C,CAAf;AACA,WAAKsE,IAAL,CAAU6B,yBAAV;AACH;AACJ,GA3EL,CA6EI;AA7EJ;;AAAA,UA8EIjF,KA9EJ,GA8EI,eAAM5B,OAAN,EAAuBpD,OAAvB,EAAqD;AAAA,QAA9BA,OAA8B;AAA9BA,aAA8B,GAAJ,EAAI;AAAA;;AACjD,SAAKoI,IAAL,CAAUkC,wBAAV,EAAiB;AAAElH,aAAO,EAAPA,OAAF;AAAWpD,aAAO,EAAPA;AAAX,KAAjB;AACH,GAhFL,CAkFI;AAlFJ;;AAAA,UAmFIqG,KAnFJ,GAmFI,eAAMlD,QAAN,EAAwBpN,KAAxB,EAA+C;AAC3C,QAAMwU,QAAQ,GAAG,KAAKlB,MAAL,CAAYlG,QAAZ,CAAjB;;AACA,QAAIoH,QAAQ,KAAKxU,KAAjB,EAAwB;AACpB,WAAKsT,MAAL,CAAYlG,QAAZ,IAAwBpN,KAAxB;AACA,WAAKqS,IAAL,CAAUC,sBAAV,EAAoB7B,4CAApB,EAAwCrD,QAAxC;AACH;AACJ,GAzFL;;AAAA,UA2FIqH,WA3FJ,GA2FI,qBAAYrH,QAAZ,EAA8B;AAC1B,WAAO,KAAKkG,MAAL,CAAYlG,QAAZ,CAAP;AACH,GA7FL,CA+FI;AA/FJ;;AAAA,UAgGUsH,mBAhGV;AAAA;AAAA;AAAA,4GAgGI,kBAA0BC,MAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAKZ,YAAL,CAAkBa,OAAlB,4FAA0B;AAAA;AAAA;AAAA;AAAA;AAC5B,8BAAI,CAACrB,OAAL,GAAe,EAAf;AACAoB,8BAAM,CAAC7T,OAAP,CAAe,UAAA+T,CAAC,EAAI;AAChB,gCAAI,CAACtB,OAAL,CAAasB,CAAb,IAAkB,IAAlB;AACH,yBAFD;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B,GADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhGJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UAyGUC,qBAzGV;AAAA,8GAyGI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAKf,YAAL,CAAkBa,OAAlB,4FAA0B;AAAA;AAAA;AAAA;AAAA;AAC5B,8BAAI,CAACrB,OAAL,GAAe,EAAf;;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B,GADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzGJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA+GUpB,iBA/GV;AAAA,0GA+GI,mBAAwB3P,EAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQuS,iBADR,GACc,KADd;AAAA;AAAA,qBAEU,KAAKhB,YAAL,CAAkBa,OAAlB,4FAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5BG,2BAAG,GAAG,CAAC,oBAAC,MAAI,CAACxB,OAAN,2CAAC,eAAe/Q,EAAf,CAAD,CAAP;;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B,GAFV;;AAAA;AAAA,iDAKWuS,GALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/GJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAuHI;AAvHJ;;AAAA,UAwHUtC,UAxHV;AAAA;AAAA;AAAA,mGAwHI,mBACIuC,aADJ,EAEIvG,EAFJ,EAGIhE,OAHJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGIA,OAHJ;AAGIA,uBAHJ,GAGyBxL,SAHzB;AAAA;;AAAA;AAAA,qBAKU,KAAK+U,WAAL,CAAiBY,OAAjB,4FAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBpS,0BADqB,GAChByS,UAAU,CAAC,YAAM;AACxB,iCAAI,CAAC5C,IAAL,CACIjE,eADJ,EAEI4G,aAAa,GAAGA,aAAH,GAAmBvK,OAFpC;AAIH,yBALoB,EAKlBgE,EALkB,CADM;;AAO3B,+BAAI,CAAC4E,WAAL,CAAiBpT,IAAjB,CAAsB;AAAEwO,4BAAE,EAAFA,EAAF;AAAMuG,uCAAa,EAAbA,aAAN;AAAqBxS,4BAAE,EAAFA,EAArB;AAAyBiI,iCAAO,EAAPA;AAAzB,yBAAtB;;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB,GALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxHJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UAwIkB2J,WAxIlB;AAAA,oGAwII,mBAA0B7I,CAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ;AACIyJ,2BAHZ,GAG6C/V,SAH7C,EAIQ;;AAJR;AAAA,qBAKc,KAAK+U,WAAL,CAAiBY,OAAjB,4FAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBxM,6BADqB,GACb,OAAI,CAACiL,WAAL,CAAiB6B,SAAjB,CACV,UAAAC,CAAC;AAAA,iCAAI,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEH,aAAH,MAAqBzJ,CAAzB;AAAA,yBADS,CACkB;AADlB,yBADa;AAI3BY,gDAAM,CAAC/D,KAAK,IAAE,CAAR,CAAN;;AACA,4BAAIA,KAAK,IAAI,CAAb,EAAgB;AACN+M,2BADM,GACF,OAAI,CAAC9B,WAAL,CAAiBjL,KAAjB,CADE,EAEZ;;AAAA;AACA4M,uCAAa,GAAGG,CAAC,CAACH,aAAlB,CAHY,CAIZ;;AAAA;AACA,iCAAI,CAAC3B,WAAL,CAAiB+B,MAAjB,CAAwBhN,KAAxB,EAA+B,CAA/B,EALY,CAMZ;;AACH;;AAZ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB,GALd;;AAAA;AAAA,oBAmBY,KAAK4I,MAAL,KAAgB4B,QAAQ,CAACrC,OAnBrC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAqBc,KAAKsD,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAC7B;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgB,4BAAII,aAAJ,EAAmB;AACf;AACAA,uCAAa,CAACpD,IAAd;;AACA,iCAAI,CAACwB,SAAL,CAAenT,IAAf,CAAoB+U,aAApB;AACH;;AAhB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GArBd;;AAAA;AAuCQ;AACZ;AACA;AACA;AACA;AACA;AACY,kBAAIA,aAAJ,EAAmB,KAAKK,QAAL;AA7C3B;AAAA;;AAAA;AAAA;AAAA;AA+CQjT,qBAAO,CAACkT,KAAR;AACA,mBAAKjD,IAAL,CAAUC,sBAAV,EAAoB7B,gDAApB;;AAhDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxIJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA4LU8E,UA5LV;AAAA,mGA4LI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKvE,MAAL,KAAgB4B,QAAQ,CAACrC,OADjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACiD;AAC7C,mBAAKtB,KAAL,CAAW,OAAX;AAFJ;AAIQ,mBAAK6D,WAAL,CAAiB0C,QAAjB,CAA0B,KAAKvC,MAA/B;AAJR;AAAA,qBAKc,KAAKY,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAC7B,+BAAI,CAAC1B,UAAL,GAAkB,OAAI,CAACF,eAAL,CAAqB1U,KAArB,CAA2B,CAA3B,CAAlB;;AACA,+BAAI,CAAC4U,UAAL,CAAgBpS,OAAhB,CAAwB,UAAAyK,CAAC;AAAA,iCAAIA,CAAC,CAAC+F,KAAF,EAAJ;AAAA,yBAAzB;;AACA,+BAAI,CAAC8B,SAAL,GAAiB,EAAjB;AACA,+BAAI,CAACD,WAAL,GAAmB,EAAnB,CAJ6B,CAK7B;;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlB6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GALd;;AAAA;AAyBQ,mBAAK2B,qBAAL;AACA,mBAAKR,SAAL,CAAe1B,QAAQ,CAACjD,OAAxB;AACA,mBAAKwE,gBAAL;AACA,mBAAKkB,QAAL;AA5BR;AAAA;;AAAA;AAAA;AAAA;AA8BQjT,qBAAO,CAACkT,KAAR;AACA,mBAAKjD,IAAL,CAAUC,sBAAV,EAAoB7B,gDAApB;;AA/BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5LJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA+NIiB,MA/NJ,GA+NI,kBAAS;AACL,QAAI,KAAKV,MAAL,KAAgB4B,QAAQ,CAACrC,OAA7B,EAAsC,OADjC,CACwC;;AAC7C,SAAK+D,SAAL,CAAe1B,QAAQ,CAACrC,OAAxB;AACA,SAAKtB,KAAL,CAAW,WAAX;AACH,GAnOL;;AAAA,UAqOUwG,WArOV;AAAA,oGAqOI;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKzE,MAAL,KAAgB4B,QAAQ,CAAC8C,MADjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEI,mBAAKzG,KAAL,CAAW,QAAX;AACA,mBAAKqF,SAAL,CAAe1B,QAAQ,CAACjD,OAAxB;AAHJ;AAAA,qBAIU,KAAK0F,QAAL,EAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArOJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA4OUtE,SA5OV;AAAA,mGA4OI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKC,MAAL,KAAgB4B,QAAQ,CAAC8C,MADjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEI,mBAAKzG,KAAL,CAAW,MAAX;AAFJ;AAAA,qBAGoB,KAAK0G,gBAAL,EAHpB;;AAAA;AAGUpK,eAHV;;AAAA,mBAIQA,CAJR;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKc,KAAKqK,eAAL,CAAqBrK,CAArB,EAAwB,IAAxB,CALd;;AAAA;AAAA;AAAA,qBAMc,KAAKsK,kBAAL,CAAwBtK,CAAxB,CANd;;AAAA;AAAA;AAAA,qBAO8B,KAAKoK,gBAAL,EAP9B;;AAAA;AAOcG,qBAPd;;AAQQ,kBAAIA,OAAO,IAAIA,OAAO,KAAKvK,CAA3B,EAA8B;AAC1B,qBAAKwK,cAAL,CAAoBD,OAApB;AACH;;AAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5OJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA0PYC,cA1PZ,GA0PI,wBAAuBxK,CAAvB,EAA2C;AAAA;;AACvC,SAAK8G,IAAL,CACIC,sBADJ,EAEI7B,0CAFJ,EAGIlF,CAHJ,EAIIA,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAAC4B,SAA9B,GACM,EADN,oBAEMxE,CAAC,CAACQ,OAAF,CAAU8C,EAFhB,kDAEM,cAAczB,QANxB;AAQH,GAnQL;;AAAA,UAqQkBwI,eArQlB;AAAA,wGAqQI,mBAA8BrK,CAA9B,EAAkDyK,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkDA,OAAlD;AAAkDA,uBAAlD,GAA4D,KAA5D;AAAA;;AAAA;AAAA;AAAA,qBAEiCzK,CAAC,CAACuG,oBAAF,CAAuBkE,OAAvB,CAFjC;;AAAA;AAEcC,wBAFd;;AAGQ,kBAAKA,UAAU,IAAI,CAACD,OAAhB,IAA4B,KAAKhF,MAAL,KAAgB4B,QAAQ,CAAC8C,MAAzD,EAAiE;AAC7D,qBAAKpB,SAAL,CAAe1B,QAAQ,CAAC8C,MAAxB;AACA,qBAAKK,cAAL,CAAoBxK,CAApB;AACH;;AACD,kBAAIA,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAAC4B,SAAlC,EAA6C;AACzCxE,iBAAC,CAAC+F,KAAF;AACH;;AATT;AAAA;;AAAA;AAAA;AAAA;;AAWQ,kBAAI,yBAAa4E,4CAAjB,EAA2C;AACvC,qBAAK7D,IAAL,CACIC,sBADJ,EAEI7B,4CAFJ,EAGI,cAAgClE,IAHpC;AAKH,eAND,MAMO;AACHnK,uBAAO,CAACkT,KAAR;AACA,qBAAKjD,IAAL,CAAUC,sBAAV,EAAoB7B,gDAApB;AACH,eApBT,CAqBQ;;;AACAlF,eAAC,CAAC+F,KAAF;;AAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArQJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA+RkBuE,kBA/RlB;AAAA,2GA+RI,mBAAiCtK,CAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQA,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAACqD,KAA9B,IACAjG,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAACqE,QAHtC;AAAA;AAAA;AAAA;;AAKc2D,wBALd,GAK2B5K,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAACqD,KALzD;AAMY4E,kBANZ,GAMoCnX,SANpC;AAAA;AAAA,qBAOc,KAAK4U,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAC7B,4BAAI,OAAI,CAACxB,SAAL,CAAetT,MAAnB,EAA2B;AACvBqM,kDAAM,CAACZ,CAAC,KAAK,OAAI,CAAC6H,SAAL,CAAe,CAAf,CAAP,CAAN;AACAgD,8BAAI,GAAG,OAAI,CAAChD,SAAL,CAAeiD,KAAf,EAAP;;AACA,8BAAIF,UAAU,IAAI,CAACxD,cAAc,CAACpH,CAAC,CAACd,OAAH,CAAjC,EAA8C;AAC1C,mCAAI,CAACyI,UAAL,CAAgBjT,IAAhB,CAAqBmW,IAArB;;AACAA,gCAAI,GAAGnX,SAAP;AACH;AACJ;;AAR4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GAPd;;AAAA;AAAA,oBAiBYmX,IAAI,IAAI7K,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAACqD,KAAtC,IAA+CmB,cAAc,CAACpH,CAAC,CAACd,OAAH,CAjBzE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkBkB,KAAKmL,eAAL,CAAqBrK,CAArB,CAlBlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/RJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UAuTkB8J,QAvTlB;AAAA,iGAuTI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKrE,MAAL,KAAgB4B,QAAQ,CAACrC,OADjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,mBAEQ,KAAKiD,OAFb;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGI,mBAAKvE,KAAL,CAAW,KAAX;AACA,mBAAKuE,OAAL,GAAe,IAAf;AAJJ;AAAA;AAAA,qBAMc,KAAKG,IAAL,CAAU2C,qBAAV,EANd;;AAAA;AAOY/K,eAPZ,GAOiCtM,SAPjC;;AAAA;AAAA,8BASY,KAAK+R,MAAL,KAAgB4B,QAAQ,CAACjD,OATrC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUuB,KAAKgG,gBAAL,EAVvB;;AAAA;AAAA,8BAUapK,CAVb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYYY,sCAAM,CAAC,CAACZ,CAAC,CAACgL,KAAJ,CAAN;AAZZ;AAAA,qBAakB,KAAKX,eAAL,CAAqBrK,CAArB,CAblB;;AAAA;AAAA;AAAA,qBAckB,KAAKsK,kBAAL,CAAwBtK,CAAxB,CAdlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBQnJ,qBAAO,CAACkT,KAAR;AACA,mBAAKjD,IAAL,CAAUC,sBAAV,EAAoB7B,gDAApB;;AAlBR;AAoBI,mBAAK+C,OAAL,GAAe,KAAf;AACA,mBAAKvE,KAAL,CAAW,SAAX;;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvTJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,MA+UI;AA/UJ;;AAAA,UAgVkBkF,gBAhVlB;AAAA;AAAA;AAAA,yGAgVI;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,KAAKnD,MAAL,KAAgB4B,QAAQ,CAACrC,OADjC;AAAA;AAAA;AAAA;;AAEYiG,sBAFZ,GAE0CvX,SAF1C;AAAA;AAAA,qBAGc,KAAK4U,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzB,OAAI,CAAC5D,MAAL,KAAgB4B,QAAQ,CAAC8C,MAAzB,IAAmC,OAAI,CAACtC,SAAL,CAAetT,MADzB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAG7B0W,gCAAQ,GAAG,OAAI,CAACtD,UAAL,CAAgB5U,KAAhB,CAAsB,CAAtB,CAAX;;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GAHd;;AAAA;AAAA,kBAQakY,QARb;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAUcC,6BAVd,GAU6C,EAV7C;AAWcC,wBAXd,GAW8C,EAX9C;AAYcC,6BAZd,GAYmD,EAZnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAamBpL,yBAbnB;AAAA;AAAA,+BAckB,OAAI,CAACqK,eAAL,CAAqBrK,CAArB,EAAwB,IAAxB,CAdlB;;AAAA;AAeY,4BAAIA,CAAC,CAACyF,MAAF,KAAa7C,gBAAgB,CAACqE,QAAlC,EAA4C;AACxCmE,yCAAe,CAAC1W,IAAhB,CAAqBsL,CAArB;AACH,yBAFD,MAEO,IACH,CAACA,CAAC,CAACgL,KAAH,IACAE,eAAe,CAACvB,SAAhB,CAA0B,UAAA0B,EAAE;AAAA,iCAAIA,EAAE,KAAKrL,CAAC,CAACd,OAAb;AAAA,yBAA5B,MAAsD,CAAC,CAFpD,EAGL;AACEiM,oCAAU,CAACzW,IAAX,CAAgBsL,CAAhB;AACAkL,yCAAe,CAACxW,IAAhB,CAAqBsL,CAAC,CAACd,OAAvB;AACH;;AAvBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAawB+L,QAbxB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAyBc,KAAK3C,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAC7B8B,kCAAU,CAAC5V,OAAX,CAAmB,UAAAyK,CAAC,EAAI;AACpB,iCAAI,CAAC6H,SAAL,CAAenT,IAAf,CAAoBsL,CAApB;;AACA,8BAAMnD,KAAK,GAAG,OAAI,CAAC8K,UAAL,CAAgB1S,OAAhB,CAAwB+K,CAAxB,CAAd;;AACA,8BAAInD,KAAK,IAAI,CAAb,EACI,OAAI,CAAC8K,UAAL,CAAgBkC,MAAhB,CAAuBhN,KAAvB,EAA8B,CAA9B;AACP,yBALD;AAMAuO,uCAAe,CAAC7V,OAAhB,CAAwB,UAAAyK,CAAC,EAAI;AACzB,8BAAMnD,KAAK,GAAG,OAAI,CAAC8K,UAAL,CAAgB1S,OAAhB,CAAwB+K,CAAxB,CAAd;;AACA,8BAAInD,KAAK,IAAI,CAAb,EACI,OAAI,CAAC8K,UAAL,CAAgBkC,MAAhB,CAAuBhN,KAAvB,EAA8B,CAA9B;AACP,yBAJD;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GAzBd;;AAAA;AAsCQ,mBAAKuL,IAAL,CAAUkD,YAAV;;AACA,mBAAKxB,QAAL;;AAvCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhVJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UA2XkBM,gBA3XlB;AAAA,yGA2XI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiB,KAAK9B,aAAL,CAAmBe,OAAnB,4FAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,6BAChC,OAAI,CAACxB,SAAL,CAAetT,MADiB;AAAA;AAAA;AAAA;;AAAA,2DACF,OAAI,CAACsT,SAAL,CAAe,CAAf,CADE;;AAAA;AAAA,2DAE7BnU,SAF6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3XJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,UAkYYoV,wBAlYZ,GAkYI,oCAAmC;AAAA;;AAC/B;AACA,QAAMyC,cAAc,GAAG,SAAjBA,cAAiB,CAACvK,IAAD,EAAkB;AACrC,UAAMO,OAAO,GAAG,OAAI,CAACgG,WAAL,CAAiBiE,UAAjB,CAA4BxK,IAA5B,CAAhB;;AACA,UAAIO,OAAJ,EAAa;AACT,eAAI,CAAC6G,IAAL,CAAUqD,cAAV,CAAyBzK,IAAzB,EAA+BO,OAA/B;AACH;AACJ,KALD,CAF+B,CAQ/B;;;AACA,SAAKgG,WAAL,CAAiBzH,KAAjB,CAAuBvK,OAAvB,CAA+B,UAAAiD,CAAC,EAAI;AAChC,UAAI,OAAI,CAACkP,MAAL,CAAYxG,IAAZ,CAAiB,UAAAwK,EAAE;AAAA,eAAIA,EAAE,CAAC1K,IAAH,KAAYxI,CAAC,CAACwI,IAAlB;AAAA,OAAnB,CAAJ,EAAgD;AAC5CuK,sBAAc,CAAC/S,CAAC,CAACwI,IAAH,CAAd;AACH;AACJ,KAJD;AAKA,SAAK0H,KAAL,CACI,KAAKnB,WAAL,CAAiBzN,SAAjB,CAA2B6R,6BAA3B;AAAA,gGAAuC,mBAAO3K,IAAP;AAAA;AAAA;AAAA;AAAA;AACnCuK,8BAAc,CAACvK,IAAD,CAAd;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvC;;AAAA;AAAA;AAAA;AAAA,QADJ;AAKA,SAAK0H,KAAL,CACI,KAAKnB,WAAL,CAAiBzN,SAAjB,CAA2B8R,+BAA3B,EAAyC,UAAC5K,IAAD,EAAkB;AACvD,aAAI,CAACoH,IAAL,CAAUqD,cAAV,CAAyBzK,IAAzB,EAA+BtN,SAA/B;AACH,KAFD,CADJ;AAKH,GA1ZL;;AAAA;AAAA;AAAA,SAkEI,eAAa;AACT,aAAO,KAAK2R,OAAZ;AACH;AApEL;;AAAA;AAAA,EAAqCwG,sBAArC,E;;;;;;;;CCzcA;;AAEA;AAIA;AACA;AACA;AACA;AAGe,SAASC,WAAT,CACXvE,WADW,EAEXC,OAFW,EAGXuE,OAHW,EAIb;AACE,oBAAgBpW,oBAAU,CAAqByD,sBAArB,CAA1B;AAAA,MAAQC,GAAR,eAAQA,GAAR;;AACA,qBAAqB1D,oBAAU,CAACqW,0BAAD,CAA/B;AAAA,MAAQC,QAAR,gBAAQA,QAAR;;AACA,kBAA4BjR,kBAAQ,EAApC;AAAA,MAAOkR,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoCnR,kBAAQ,CAAU,CAAC,CAAC+Q,OAAZ,CAA5C;AAAA,MAAOK,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,GAAG;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AACRD,2BAAa,CAAC,CAAC,CAACN,OAAH,CAAb;;AADQ;AAAA,qBAEFG,MAAM,CAAClC,UAAP,EAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAHsC,GAAG;AAAA;AAAA;AAAA,KAAT;;AAIA,MAAMnG,MAAM;AAAA,6FAAG;AAAA;AAAA;AAAA;AAAA;AACXkG,2BAAa,CAAC,KAAD,CAAb;;AACAH,oBAAM,CAAC/F,MAAP;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANA,MAAM;AAAA;AAAA;AAAA,KAAZ,CAVF,CAeE;;;AACA3S,qBAAS,CAAC,YAAM;AACZ,QAAI4Y,UAAU,IAAIF,MAAlB,EAA0BA,MAAM,CAAClC,UAAP;AAC1B,WAAO;AAAA,aAAMkC,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAE/F,MAAR,EAAN;AAAA,KAAP;AACH,GAHQ,EAGN,CAAC+F,MAAD,EAASE,UAAT,CAHM,CAAT,CAhBF,CAqBE;;AACA5Y,qBAAS,CAAC,YAAM;AACZ,QAAI;AACA,UAAM+Y,aAAa,GACf/E,OAAO,IAAI,IAAIF,eAAJ,CAAoBjO,GAApB,EAAyBkO,WAAzB,EAAsCC,OAAtC,CADf;AAEA2E,eAAS,CAACI,aAAD,CAAT;AAEA,aAAO;AAAA,eAAMA,aAAN,aAAMA,aAAN,uBAAMA,aAAa,CAAEC,OAAf,EAAN;AAAA,OAAP;AACH,KAND,CAME,OAAO5K,CAAP,EAAU;AACR/K,aAAO,CAACkT,KAAR,CAAcnI,CAAd;AACAuK,eAAS,CAACzY,SAAD,CAAT;AACH;AACJ,GAXQ,EAWN,CAAC6T,WAAD,EAAcC,OAAd,CAXM,CAAT,CAtBF,CAmCE;;AACAhU,qBAAS,CAAC;AAAA,WAAM0Y,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEpS,SAAR,CAAkB2S,wBAAlB,EAAyB,UAAA7K,CAAC;AAAA,aAAIqK,QAAQ,CAACrK,CAAD,CAAZ;AAAA,KAA1B,CAAN;AAAA,GAAD,EAAmD,CAACsK,MAAD,CAAnD,CAAT,CApCF,CAqCE;;AACA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACjY,KAAD,EAGd;AACF,QAAQqN,OAAR,GAA6BrN,KAA7B,CAAQqN,OAAR;AAAA,QAAiBpD,OAAjB,GAA6BjK,KAA7B,CAAiBiK,OAAjB;AACA,QAAIiO,4CAAJ,EAAuB9V,OAAO,CAACkT,KAAR,UAAqBjI,OAArB,EAAgCpD,OAAhC;AAC1B,GAND;;AAOAlL,qBAAS,CACL;AAAA,WACI0Y,MADJ,aACIA,MADJ,uBACIA,MAAM,CAAEpS,SAAR,CACIkP,wBADJ,EAEI0D,WAFJ,CADJ;AAAA,GADK,EAML,CAACR,MAAD,CANK,CAAT;AASA,SAAO;AAAEA,UAAM,EAANA,MAAF;AAAUI,OAAG,EAAHA,GAAV;AAAenG,UAAM,EAANA;AAAf,GAAP;AACH,C;;;;;;ACxED;AACA;AAEA;AAEe,SAASyG,aAAT,CAAuB1T,KAAvB,EAAsD;AACjE,MAAQsO,OAAR,GAAoBtO,KAApB,CAAQsO,OAAR;AACA,sBACI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,yBAAD;AAAY,WAAO,EAAC;AAApB,UADJ,eAEI,oBAAC,iBAAD;AACI,aAAS,EAAC,MADd;AAEI,gBAAY,EAAE,cAFlB;AAGI,gBAAY,EAAE9M,IAAI,CAACmS,SAAL,CAAerF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B;AAHlB,KAKK9M,IAAI,CAACmS,SAAL,CAAerF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CALL,CAFJ,CADJ;AAYH,C;;;;;;;;;;;;;;;;;;;;ACnBD;CAEA;;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;;AAEA,SAASsF,QAAT,CAAkB5T,KAAlB,EAKG;AACC,oBAAsBvD,oBAAU,CAACoX,2BAAD,CAAhC;AAAA,MAAQC,SAAR,eAAQA,SAAR;;AACA,MAAQhM,IAAR,GAA0C9H,KAA1C,CAAQ8H,IAAR;AAAA,MAAcO,OAAd,GAA0CrI,KAA1C,CAAcqI,OAAd;AAAA,MAAuBD,cAAvB,GAA0CpI,KAA1C,CAAuBoI,cAAvB;;AACA,qBAAgB3L,oBAAU,CAAqByD,sBAArB,CAA1B;AAAA,MAAQC,GAAR,gBAAQA,GAAR;;AACA,MAAM4T,MAAM,GAAGC,mCAAgB,CAAC3L,OAAD,CAA/B;;AACA,MAAM4L,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B;AACA,QAAI,CAAC5L,OAAL,EAAc;AACV,UAAM6L,aAAa,GAAG/L,6CAA4B,CAACC,cAAD,CAAlD;AACA,UAAI8L,aAAJ,EACIC,sCAAkB,CACdhU,GADc,EAEdiU,6DAAyC,CACrCF,aAAa,CAACG,eADuB,CAF3B,CAAlB;AAMP,KAXyB,CAY1B;;;AACA,QAAIP,SAAJ,EAAe;AACX;AACA,UAAIQ,SAAS,GAAGR,SAAS,CACpBS,YADW,CACE,KADF,EAEXvM,IAFW,CAGR,UAAAoI,CAAC;AAAA;;AAAA,eACGA,CAAC,CAAClW,IAAF,KAAWsa,0BAAX,IACA,0BACIpE,CAAC,CAACqE,SAAF,CAAY,CAAZ,EAAeC,QAAf,CAAwB1M,IAAxB,CACI,UAAAnK,CAAC;AAAA,iBAAIA,CAAC,CAACrE,IAAF,KAAW,MAAf;AAAA,SADL,CADJ,0GAIGmb,WAJH,oFAIkBnb,IAJlB,MAI2BsO,IAN9B;AAAA,OAHO,CAAhB;;AAWA,UAAI,CAACwM,SAAL,EAAgB;AACZA,iBAAS,GAAGR,SAAS,CAACc,QAAV,CAAmBJ,0BAAnB,CAAZ;AACA,YAAMK,QAAQ,GAAGf,SAAS,CAACa,WAAV,CAAsB7M,IAAtB,EAA4BM,cAA5B,CAAjB;AACA,YAAMzC,KAAK,GAAG2O,SAAS,CAACG,SAAV,CAAoB,CAApB,EAAuBC,QAAvB,CAAgC1M,IAAhC,CACV,UAAAnK,CAAC;AAAA,iBAAIA,CAAC,CAACrE,IAAF,KAAW,MAAf;AAAA,SADS,CAAd;AAGAmM,aAAK,CAACmP,QAAN,CAAeD,QAAQ,CAACE,KAAT,EAAf;AACA,YAAMzZ,CAAC,GAAGwY,SAAS,CAACkB,UAAV,EAAV;AACAV,iBAAS,CAACW,MAAV,CAAiB3Z,CAAC,CAAC4Z,SAAF,GAAc,CAA/B,EAAkC5Z,CAAC,CAAC6Z,UAAF,GAAe,CAAjD;AACAb,iBAAS,CAACc,OAAV;AACAd,iBAAS,CAAC5W,MAAV,CAAiB,KAAjB;AACH;;AACDoW,eAAS,CAACuB,aAAV,CAAwBf,SAAS,CAACvW,EAAlC;AACH;AACJ,GAxCD;;AA0CA,MAAMuX,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMnV,GAAG,CAACoV,qBAAJ,CAA0BxB,MAAM,CAACyB,MAAjC,CAAN;AAAA,GAArB;;AACA,sBACI,oBAAC,mBAAD;AACI,SAAK,EAAE1N,IADX;AAEI,WAAO,EAAEO,OAAO,GAAG,SAAH,GAAe,UAFnC;AAGI,UAAM,EAAEA,OAAO,iBAAI,oBAAC,2BAAD;AAAc,YAAM,EAAEA,OAAO,CAACmN;AAA9B,MAHvB;AAII,WAAO,EAAEvB,eAJb;AAKI,YAAQ,EAAEF,MAAM,GAAGuB,YAAH,GAAkB9a,SALtC;AAMI,cAAU,eACN,oBAAC,uBAAD;AAAS,WAAK,EAAC;AAAf,oBACI,oBAAC,qBAAD,OADJ;AAPR,IADJ;AAcH;;AAEc,SAASib,UAAT,GAAsB;AACjC,qBAAwBhZ,oBAAU,CAACoX,2BAAD,CAAlC;AAAA,MAAQxF,WAAR,gBAAQA,WAAR;;AACA,MAAMzH,KAAK,GAAG8O,4BAAS,CAACrH,WAAD,EAAc,UAAApF,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAErC,KAAP;AAAA,GAAf,CAAvB;AAEA,sBACI,0CACKA,KADL,aACKA,KADL,uBACKA,KAAK,CAAEzK,GAAP,CAAW;AAAA,QAAG2L,IAAH,QAAGA,IAAH;AAAA,QAASO,OAAT,QAASA,OAAT;AAAA,QAAkBD,cAAlB,QAAkBA,cAAlB;AAAA,wBACR,oBAAC,mBAAD;AAAM,UAAI,MAAV;AAAW,SAAG,EAAEN;AAAhB,oBACI,oBAAC,QAAD;AACI,UAAI,EAAEA,IADV;AAEI,aAAO,EAAEO,OAFb;AAGI,oBAAc,EAAED;AAHpB,MADJ,CADQ;AAAA,GAAX,CADL,CADJ;AAaH,C;;;;;;;;;;;;;;;;;;;;ACxGD;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASuN,uBAAT,CAAiCrH,OAAjC,EAAqD;AACjD,oBAAsB7R,oBAAU,CAACoX,2BAAD,CAAhC;AAAA,MAAQC,SAAR,eAAQA,SAAR;;AACA,MAAM8B,WAAW,GAAG5Y,iBAAO,CACvB;AAAA;;AAAA,WACI,qBAAA6Y,iCAAe,CACXvH,OADW,aACXA,OADW,4CACXA,OAAO,CAAEzH,QADE,sDACX,kBACMjL,MADN,CACa,UAAAkL,CAAC;AAAA,aAAI,CAACA,CAAC,CAAC9L,IAAP;AAAA,KADd,EAC2B;AAD3B,MAC2B;AACtBmB,OAFL,CAES,UAAA2K,CAAC;AAAA,aAAIA,CAAC,CAACX,QAAF,CAAWhK,GAAX,CAAe,UAAAyL,GAAG;AAAA,eAAIA,GAAG,CAACe,QAAR;AAAA,OAAlB,CAAJ;AAAA,KAFV,CADW,CAAf,sEAIG/M,MAJH,CAIU,UAAAmC,EAAE;AAAA,aAAI,CAAC,CAACA,EAAN;AAAA,KAJZ,MAIyB,EAL7B;AAAA,GADuB,EAOvB,CAACuQ,OAAD,CAPuB,CAA3B;;AASA,MAAMwH,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACnN,QAAD,EAAsB;AACjDmL,aAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEiC,cAAX,CAA0BpN,QAA1B;AACH,GAFD;;AAIA,SAAO;AACHiN,eAAW,EAAXA,WADG;AAEHE,0BAAsB,EAAtBA;AAFG,GAAP;AAIH;;AAEc,SAASE,eAAT,CAAyBhW,KAAzB,EAIZ;AACC,MAAQgT,MAAR,GAAgChT,KAAhC,CAAQgT,MAAR;AAAA,MAAgBI,GAAhB,GAAgCpT,KAAhC,CAAgBoT,GAAhB;AAAA,MAAqBnG,MAArB,GAAgCjN,KAAhC,CAAqBiN,MAArB;AACA,MAAMV,MAAM,GAAGmJ,4BAAS,CAAC1C,MAAD,EAAS,UAAAiD,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAE1J,MAAP;AAAA,GAAV,CAAxB;AACA,MAAMI,OAAO,GAAG,CAACJ,MAAD,IAAWA,MAAM,KAAK4B,gBAAtC;AACA,MAAMG,OAAO,GAAG0E,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAE1E,OAAxB;;AACA,kBAA0CxM,kBAAQ,CAAC,KAAD,CAAlD;AAAA,MAAOoU,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAoCrU,kBAAQ,CAAStH,SAAT,CAA5C;AAAA,MAAO4b,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,OAAO,GAAGF,UAAU,KAAK,EAA/B;AACA,MAAMG,MAAM,GAAG,CAAC,EAACH,UAAD,aAACA,UAAD,eAACA,UAAU,CAAE/a,MAAb,CAAhB;AACA,MAAMmb,OAAO,GAAGC,6BAAU,EAA1B;AACA,MAAMrS,QAAQ,GAAG8R,aAAa,IAAI,CAAClD,MAAnC;;AACA,8BACI2C,uBAAuB,CAACrH,OAAD,CAD3B;AAAA,MAAQsH,WAAR,yBAAQA,WAAR;AAAA,MAAqBE,sBAArB,yBAAqBA,sBAArB,CAXD,CAcC;;;AAEA,MAAMY,SAAS;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVP,8BAAgB,CAAC,IAAD,CAAhB;AACAE,2BAAa,CAAC7b,SAAD,CAAb;AAHU;AAAA,qBAIJ4Y,GAAG,EAJC;;AAAA;AAAA;AAMV,kBAAIoD,OAAO,EAAX,EAAeL,gBAAgB,CAAC,KAAD,CAAhB;AANL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATO,SAAS;AAAA;AAAA;AAAA,KAAf;;AASA,MAAMC,YAAY;AAAA,6FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbR,8BAAgB,CAAC,IAAD,CAAhB;AAFa;AAAA,qBAGPnD,MAAM,CAAC3C,qBAAP,EAHO;;AAAA;AAIbgG,2BAAa,CAAC7b,SAAD,CAAb;AAJa;AAAA,qBAKPyS,MAAM,EALC;;AAAA;AAAA;AAOb,kBAAIuJ,OAAO,EAAX,EAAeL,gBAAgB,CAAC,KAAD,CAAhB;AAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZQ,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAUA,MAAMC,YAAY;AAAA,6FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbT,8BAAgB,CAAC,IAAD,CAAhB;AACAE,2BAAa,CAAC7b,SAAD,CAAb;AAHa;AAAA,qBAIPwY,MAAM,CAAC3C,qBAAP,EAJO;;AAAA;AAAA;AAAA,qBAKP2C,MAAM,CAAChC,WAAP,EALO;;AAAA;AAAA;AAOb,kBAAIwF,OAAO,EAAX,EAAeL,gBAAgB,CAAC,KAAD,CAAhB;AAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZS,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAUA,MAAMC,WAAW;AAAA,6FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZV,8BAAgB,CAAC,IAAD,CAAhB;AAFY;AAAA,qBAGNnD,MAAM,CAAC/C,mBAAP,CAA2B2F,WAA3B,CAHM;;AAAA;AAAA;AAAA,qBAIN5C,MAAM,CAAChC,WAAP,EAJM;;AAAA;AAKZqF,2BAAa,CAAC,EAAD,CAAb;;AALY;AAAA;AAOZ,kBAAIG,OAAO,EAAX,EAAeL,gBAAgB,CAAC,KAAD,CAAhB;AAPH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXU,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAUA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAM9D,MAAM,CAAC1G,SAAP,EAAN;AAAA,GAAnB,CAvDD,CAyDC;;;AACAhS,qBAAS,CACL;AAAA,WACI0Y,MADJ,aACIA,MADJ,uBACIA,MAAM,CAAEpS,SAAR,CACIiN,sBADJ,EAEI,UAAC9S,IAAD,EAAekO,CAAf,EAA8BN,QAA9B,EAAoD;AAChD,UAAI5N,IAAI,KAAKiR,0CAAb,EAAgC;AAC5B,YAAIwK,OAAO,EAAX,EAAeH,aAAa,CAAC1N,QAAD,CAAb;AAClB;AACJ,KANL,CADJ;AAAA,GADK,EAUL,CAACqK,MAAD,CAVK,CAAT,CA1DD,CAuEC;;AACA1Y,qBAAS,CAAC,YAAM;AACZwb,0BAAsB,CAACM,UAAD,CAAtB;AACA,WAAO;AAAA,aAAMN,sBAAsB,CAACtb,SAAD,CAA5B;AAAA,KAAP;AACH,GAHQ,EAGN,CAAC4b,UAAD,CAHM,CAAT,CAxED,CA6EC;;AACA9b,qBAAS,CAAC;AAAA,WAAM+b,aAAa,CAAC7b,SAAD,CAAnB;AAAA,GAAD,EAAiC,CAACwY,MAAD,CAAjC,CAAT;AAEA,sBACI,uDACI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,oCAAD;AACI,SAAK,EAAEuD,MAAM,GAAG,QAAH,GAAc5J,OAAO,GAAG,OAAH,GAAa,MADnD;AAEI,YAAQ,EAAEvI,QAFd;AAGI,SAAK,EAAEuI,OAAO,GAAG,SAAH,GAAe,SAHjC;AAII,WAAO,EACH4J,MAAM,GACAK,YADA,GAEAjK,OAAO,GACP+J,SADO,GAEPC;AATd,KAYKJ,MAAM,IAAI5J,OAAV,gBAAoB,oBAAC,wBAAD,OAApB,gBAAwC,oBAAC,mBAAD,OAZ7C,CADJ,EAc6B,GAd7B,CADJ,eAiBI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,qCAAD;AACI,SAAK,EAAE2J,OAAO,GAAG,cAAH,GAAoBC,MAAM,GAAG,MAAH,GAAY,OADxD;AAEI,YAAQ,EAAEnS,QAFd;AAGI,iBAAa,EAAEkS,OAHnB;AAII,WAAO,EACHA,OAAO,GACDM,YADC,GAEDL,MAAM,GACNO,UADM,GAEND;AATd,KAYKN,MAAM,gBAAG,oBAAC,0BAAD,OAAH,gBAAyB,oBAAC,oBAAD,OAZpC,CADJ,CAjBJ,EAiCK,CAACD,OAAO,IAAIC,MAAZ,kBACG,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,mBAAD;AACI,QAAI,eAAE,oBAAC,wBAAD,OADV;AAEI,SAAK,EAAED,OAAO,GAAG,SAAH,GAAe,QAFjC;AAGI,SAAK,EAAE;AAHX,IADJ,CAlCR,CADJ;AA6CH,C;;;;ACxKD;AACA;AACA;AACA;AACA;AAEe,SAASS,sBAAT,GAAkC;AAC7C,oBAAwCta,oBAAU,CAACqW,0BAAD,CAAlD;AAAA,MAAQkE,2BAAR,eAAQA,2BAAR;;AACA,sBACI,oBAAC,oCAAD;AACI,SAAK,EAAC,iBADV;AAEI,WAAO,EAAEA;AAFb,kBAII,oBAAC,kBAAD,OAJJ,CADJ;AAQH,C;;;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,UAAT,GAAsB;AAClB,oBAAsBxa,oBAAU,CAACoX,2BAAD,CAAhC;AAAA,MAAQC,SAAR,eAAQA,SAAR;;AACA,qBAAqBrX,oBAAU,CAACqW,0BAAD,CAA/B;AAAA,MAAQC,QAAR,gBAAQA,QAAR;;AACA,MAAM3O,QAAQ,GAAG,CAAC0P,SAAlB;;AAEA,MAAMoD,WAAW;AAAA,4FAAG,iBAAOtS,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVuS,kBADU,GACHvS,KADG,aACHA,KADG,uBACHA,KAAK,CAAG,CAAH,CADF;;AAAA,kBAEXuS,IAFW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAKOA,IAAI,CAACjT,IAAL,EALP;;AAAA;AAKNA,kBALM;AAMNkT,oBANM,GAMG5V,IAAI,CAACC,KAAL,CAAWyC,IAAX,CANH;AAOZvG,qBAAO,CAACkT,KAAR,kBAA+BuG,MAA/B;AACMC,iBARM,GAQAD,MARA,aAQAA,MARA,uBAQAA,MAAM,CAAEC,GARR;;AAAA,oBASR,OAAOA,GAAP,KAAe,QATP;AAAA;AAAA;AAAA;;AAAA,oBASuB,IAAIvN,KAAJ,CAAU,qBAAV,CATvB;;AAAA;AAWZ;AACMwN,iBAZM,GAYAC,qBAAA,CAAcF,GAAd,CAZA,EAcZ;;AACAvD,uBAAS,CAAC0D,KAAV;AACAD,wCAAA,CAAmBD,GAAnB,EAAwBxD,SAAxB;AAhBY;AAAA;;AAAA;AAAA;AAAA;AAkBZf,sBAAQ,aAAR;;AAlBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXmE,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAqBA,sBACI,oBAAC,oBAAD;AACI,QAAI,EAAC,SADT;AAEI,QAAI,EAAE,IAFV;AAGI,YAAQ,EAAE9S,QAHd;AAII,iBAAa,EAAE,CAAC,kBAAD,CAJnB;AAKI,mBAAe,EAAE8S,WALrB;AAMI,cAAU,EAAE;AANhB,IADJ;AAUH;;AAED,SAASO,UAAT,GAAsB;AAClB,qBAAyBhb,oBAAU,CAACoX,2BAAD,CAAnC;AAAA,MAAQ6D,YAAR,gBAAQA,YAAR,CADkB,CAElB;;;AACA,MAAMC,IAAI,GAAG;AACTN,OAAG,EAAEK;AADI,GAAb;AAIA,MAAMnX,GAAG,4CAA0CC,kBAAkB,CACjEgB,IAAI,CAACmS,SAAL,CAAegE,IAAf,CADiE,CAArE;AAIA,sBACI,oBAAC,6BAAD;AAAM,YAAQ,EAAC,oBAAf;AAAoC,QAAI,EAAEpX;AAA1C,kBACI,oBAAC,uBAAD;AAAS,SAAK,EAAE;AAAhB,kBACI,oBAAC,mCAAD,qBACI,oBAAC,mBAAD,OADJ,CADJ,CADJ,CADJ;AASH;;AAEc,SAASqX,gBAAT,GAA4B;AACvC,sBACI,uDACI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,UAAD,OADJ,CADJ,eAII,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,UAAD,OADJ,CAJJ,CADJ;AAUH,C;;ACjFD;AACA;AAEA;AACA;AACA;AACA;AAEe,SAASC,SAAT,CAAmB7X,KAAnB,EAIZ;AACC,MAAQgT,MAAR,GAAgChT,KAAhC,CAAQgT,MAAR;AAAA,MAAgBI,GAAhB,GAAgCpT,KAAhC,CAAgBoT,GAAhB;AAAA,MAAqBnG,MAArB,GAAgCjN,KAAhC,CAAqBiN,MAArB;AACA,sBACI,oBAAC,mBAAD;AACI,aAAS,MADb;AAEI,aAAS,EAAC,KAFd;AAGI,WAAO,EAAE,CAHb;AAII,cAAU,EAAC,QAJf;AAKI,gBAAY,EAAC;AALjB,kBAOI,oBAAC,gBAAD,OAPJ,eAQI,oBAAC,eAAD;AAAiB,UAAM,EAAE+F,MAAzB;AAAiC,OAAG,EAAEI,GAAtC;AAA2C,UAAM,EAAEnG;AAAnD,IARJ,eASI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,sBAAD,OADJ,CATJ,eAYI,oBAAC,UAAD,OAZJ,CADJ;AAgBH,C;;AC9BD;AACA;AACA;AACA;AAEe,SAAS6K,gBAAT,GAA4B;AACvC,oBAAwCrb,oBAAU,CAACoX,2BAAD,CAAlD;AAAA,MAAQ6D,YAAR,eAAQA,YAAR;AAAA,MAAsBK,aAAtB,eAAsBA,aAAtB;;AACA,sBACI,uDACI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,yBAAD;AAAY,WAAO,EAAC;AAApB,oBADJ,eAEI,oBAAC,iBAAD;AACI,aAAS,EAAC,MADd;AAEI,gBAAY,EAAE,WAFlB;AAGI,gBAAY,EAAEvW,IAAI,CAACmS,SAAL,CAAeoE,aAAf,EAA8B,IAA9B,EAAoC,CAApC;AAHlB,KAKKvW,IAAI,CAACmS,SAAL,CAAeoE,aAAf,EAA8B,IAA9B,EAAoC,CAApC,CALL,CAFJ,CADJ,eAWI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,yBAAD;AAAY,WAAO,EAAC;AAApB,mBADJ,eAEI,oBAAC,iBAAD;AAAW,aAAS,EAAC;AAArB,KAA4BL,YAA5B,CAFJ,CAXJ,CADJ;AAkBH,C;;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AAEA;AACA;AAIA;AAGA,IAAMM,GAAG,GAAG;AACRC,KAAG,EAAE,IADG;AAERC,IAAE,EAAE,IAFI;AAGRC,IAAE,EAAE,KAHI;AAIRC,KAAG,EAAE,KAJG;AAKRC,IAAE,EAAE,GALI;AAMRC,IAAE,EAAE,GANI;AAORC,KAAG,EAAE,IAPG;AAQRC,KAAG,EAAE,IARG;AASRC,KAAG,EAAE,GATG;AAURC,KAAG,EAAE,GAVG;AAWRC,UAAQ,EAAE,GAXF;AAYRC,QAAM,EAAE,GAZA;AAaRC,OAAK,EAAE;AAbC,CAAZ;AA0BO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAmBzR,OAAnB,EAAoD;AAC1E,SAAO;AACHqB,YAAQ,EAAEoQ,KAAK,CAAChb,EADb;AAEH7D,QAAI,EAAE,KAFH;AAGHoN,WAAO,EAAPA;AAHG,GAAP;AAKH,CANM;AAQA,IAAM0R,aAAa,GAAG,SAAhBA,aAAgB,CAACD,KAAD,EAAmB/R,MAAnB,EAAyC;AAClE,SAAOA,MAAM,CAAC7K,GAAP,CAAW,UAACuM,CAAD,EAAgB;AAC9B,WAAO;AACHC,cAAQ,EAAED,CAAC,CAACC,QAAF,GAAaD,CAAC,CAACC,QAAf,GAA0BoQ,KAAK,CAAChb,EADvC;AAEH6K,aAAO,EAAEF,CAAC,CAACE;AAFR,KAAP;AAIH,GALM,CAAP;AAMH,CAPM;AASQ,SAASqQ,wBAAT,CACXnF,SADW,EAEXoF,IAFW,EAGF;AACTvb,SAAO,CAACkT,KAAR,eAA4B;AAAEiD,aAAS,EAATA,SAAF;AAAaoF,QAAI,EAAJA;AAAb,GAA5B;AAEA,MAAI,CAACpF,SAAL,EAAgB,OAAOtZ,SAAP;AAEhB,MAAMoM,KAAe,GAAGkN,SAAS,CAACqF,SAAV,CACnBvd,MADmB,CACZ,UAAAwd,CAAC;AAAA,WAAIC,6CAAA,CAAsBD,CAAC,CAAClf,IAAxB,IAAgC,CAApC;AAAA,GADW,EAEnBiC,GAFmB,CAEf,UAAAid,CAAC;AAAA,WAAK;AAAEtR,UAAI,EAAEsR,CAAC,CAAC5f,IAAV;AAAgB4O,oBAAc,EAAEgR,CAAC,CAAClf;AAAlC,KAAL;AAAA,GAFc,CAAxB;;AALS,MASHof,eATG;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,qDASqBxP,KATrB;;AAWT,MAAMyP,iBAGmB,GAAG,SAHtBA,iBAGsB,CAACva,EAAD,EAAgBwa,OAAhB,EAAuC;AAC/D,QAAMxS,MAAiB,GAAG,EAA1B;;AAEA,QAAMyS,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACza,EAAD,EAAgB+Z,KAAhB,EAAqC;AAChE,UAAI,CAACA,KAAL,EAAY;AACR,cAAM,IAAIO,eAAJ,EAAN;AACH;;AACD,UAAQpf,IAAR,GAAgC6e,KAAhC,CAAQ7e,IAAR;AAAA,UAAcqB,KAAd,GAAgCwd,KAAhC,CAAcxd,KAAd;AAAA,UAAqBme,MAArB,GAAgCX,KAAhC,CAAqBW,MAArB;AACA/b,aAAO,CAACC,GAAR,YAAuB;AAAEoB,UAAE,EAAFA,EAAF;AAAM+Z,aAAK,EAALA,KAAN;AAAa7e,YAAI,EAAJA,IAAb;AAAmBqB,aAAK,EAALA,KAAnB;AAA0Bme,cAAM,EAANA;AAA1B,OAAvB;AAEA,UAAIne,KAAK,KAAKf,SAAd,EACI;AACA,eAAqB;AACjBN,cAAI,EAAE,SADW;AAEjBqB,eAAK,EAAEA,KAFU;AAGjBoe,aAAG,EAAEpe,KAAK,GAAG;AAHI,SAArB;;AAMJ,cAAQrB,IAAR;AACI,aAAK,aAAL,CADJ,CACwB;;AACpB,aAAK,oBAAL;AAA2B;AACvB,gBAAM0f,QAAQ,GAAGH,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAAvC;AACA,gBAAMC,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,IAAjB,EAAuBoC,KAAlC;AACA,mBAA6B;AACzBrB,kBAAI,EAAE,iBADmB;AAEzB6f,sBAAQ,EAAE/B,GAAG,CAAC8B,EAAD,CAAH,IAAWA,EAFI;AAGzBF,sBAAQ,EAARA,QAHyB;AAIzBI,oBAAM,EAAE,KAJiB,CAIV;;AAJU,aAA7B;AAMH;;AACD,aAAK,iBAAL,CAZJ,CAY4B;;AACxB,aAAK,wBAAL;AAA+B;AAC3B,gBAAM9b,IAAI,GAAGub,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAAnC;AACA,gBAAMI,KAAK,GAAGR,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAApC;AACA,gBAAMC,GAAE,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,IAAjB,EAAuBoC,KAAlC;AACA,mBAA8B;AAC1BrB,kBAAI,EAAE,kBADoB;AAE1B6f,sBAAQ,EAAE/B,GAAG,CAAC8B,GAAD,CAAH,IAAWA,GAFK;AAG1B5b,kBAAI,EAAJA,IAH0B;AAI1B+b,mBAAK,EAALA;AAJ0B,aAA9B;AAMH;;AACD,aAAK,iBAAL;AAAwB;AACpB,gBAAM/b,KAAI,GAAGub,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAAnC;;AACA,gBAAMI,MAAK,GAAGR,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAApC;;AACA,gBAAMC,IAAE,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,IAAjB,EAAuBoC,KAAlC;AACA,mBAA+B;AAC3BrB,kBAAI,EAAE,mBADqB;AAE3B6f,sBAAQ,EAAE/B,GAAG,CAAC8B,IAAD,CAAH,IAAWA,IAFM;AAG3B5b,kBAAI,EAAJA,KAH2B;AAI3B+b,mBAAK,EAALA;AAJ2B,aAA/B;AAMH;;AACD,aAAK,cAAL;AAAqB;AACjB,gBAAML,SAAQ,GAAGH,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAAvC;;AACA,mBAA6B;AACzB3f,kBAAI,EAAE,iBADmB;AAEzB6f,sBAAQ,EAAE,GAFe;AAGzBH,sBAAQ,EAARA,SAHyB;AAIzBI,oBAAM,EAAE,KAJiB,CAIV;;AAJU,aAA7B;AAMH;;AACD,aAAK,eAAL;AAAsB;AAClB,gBAAM9b,MAAI,GAAGub,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAAnC;;AACA,gBAAMI,OAAK,GAAGR,sBAAsB,CAACza,EAAD,EAAK0a,MAAM,CAAC,CAAD,CAAN,CAAUG,KAAf,CAApC;;AACA,gBAAMC,IAAE,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,IAAjB,EAAuBoC,KAAlC;AACA,mBAA8B;AAC1BrB,kBAAI,EAAE,kBADoB;AAE1B6f,sBAAQ,EAAE/B,GAAG,CAAC8B,IAAD,CAAH,IAAWA,IAFK;AAG1B5b,kBAAI,EAAJA,MAH0B;AAI1B+b,mBAAK,EAALA;AAJ0B,aAA9B;AAMH;;AACD;AAAS;AACL,gBAAMC,UAAU,GAAGC,iDAA6B,CAACjgB,IAAD,CAAhD;;AACA,gBAAI,CAACggB,UAAL,EAAiB;AACbvc,qBAAO,CAACsR,IAAR,oBAA8B/U,IAA9B,EAAsC;AAClCA,oBAAI,EAAJA,IADkC;AAElC8E,kBAAE,EAAFA,EAFkC;AAGlC+Z,qBAAK,EAALA,KAHkC;AAIlCqB,iBAAC,EAAEC,0BAAA,CAAengB,IAAf;AAJ+B,eAAtC;AAMH,aAPD,MAOO;AAAA;;AACH;AACA,kBAAaogB,OAAb,GAAyBJ,UAAzB,CAAQK,GAAR;AACA,kBAAMA,GAAG,GAAGrB,IAAI,CAAClR,IAAL,CAAU,UAAAoS,CAAC;AAAA,uBAAIA,CAAC,CAACrc,EAAF,KAASuc,OAAb;AAAA,eAAX,CAAZ;AACA,kBAAME,GAAG,GAAGD,GAAH,aAAGA,GAAH,gDAAGA,GAAG,CAAEE,qBAAR,0DAAG,2BAAAF,GAAG,EAA0B;AACrCrY,qBAAK,EAAElD,EAD8B;AAErCkb,0BAAU,EAAVA,UAFqC;AAGrCnB,qBAAK,EAALA,KAHqC;AAIrCU,sCAAsB,EAAtBA;AAJqC,eAA1B,CAAf;;AAMA,kBAAIe,GAAJ,EAAS;AACL,oBAAIA,GAAG,CAACxT,MAAR,EACIwT,GAAG,CAACxT,MAAJ,CAAW3K,OAAX,CAAmB,UAAAqM,CAAC;AAAA,yBAAI1B,MAAM,CAACxL,IAAP,CAAYkN,CAAZ,CAAJ;AAAA,iBAApB;AACJ,uBAAO8R,GAAG,CAAC/S,IAAX;AACH;;AAED,kBAAQiT,QAAR,GAAqBR,UAArB,CAAQQ,QAAR;;AACA,sBAAQA,QAAR;AACI,qBAAK,QAAL;AAAe;AACX,wBAAM/U,KAAK,GAAG+T,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,OAAjB,CAAd;AACA,wBAAMigB,CAAC,GAAGzT,KAAK,CAACpK,KAAhB;AACA,2BAAqB;AACjBrB,0BAAI,EAAE,SADW;AAEjBqB,2BAAK,EAAE6d,CAFU;AAGjBO,yBAAG,EAAEP,CAAC,GAAG;AAHQ,qBAArB;AAKH;;AACD;AAAS;AACLzb,2BAAO,CAACsR,IAAR,iCACkCyL,QADlC,aACkDxgB,IADlD,EAEI;AAAE8E,wBAAE,EAAFA,EAAF;AAAM+Z,2BAAK,EAALA;AAAN,qBAFJ;AAIA;AACH;AAhBL;;AAkBA;AACH;AACJ;AArGL;;AAuGA,YAAM,IAAIO,eAAJ,EAAN;AACH,KAvHD;;AAwHA,WAAO;AACH7R,UAAI,EAAEgS,sBAAsB,CAACza,EAAD,EAAKwa,OAAL,CADzB;AAEHxS,YAAM,EAANA;AAFG,KAAP;AAIH,GAlID;;AAoIA,MAAM2T,cAAc,GAAG,SAAjBA,cAAiB,CACnBzY,KADmB,EAEnB6W,KAFmB,EAGH;AAChB,QAAQ7e,IAAR,GAAyB6e,KAAzB,CAAQ7e,IAAR;AAAA,QAAcwf,MAAd,GAAyBX,KAAzB,CAAcW,MAAd;AACA/b,WAAO,CAACkT,KAAR,YAAyB;AAAE3O,WAAK,EAALA,KAAF;AAAShI,UAAI,EAAJA,IAAT;AAAe6e,WAAK,EAALA,KAAf;AAAsBW,YAAM,EAANA;AAAtB,KAAzB;;AACA,YAAQxf,IAAR;AACI,WAAK,YAAL;AAAmB;AAAA;;AACf,cAAM0gB,WAAsB,GAAG;AAC3BzU,oBAAQ,EAAE,EADiB;AAE3Ba,kBAAM,EAAE;AAFmB,WAA/B;AAIA,cAAM6T,WAAsB,GAAG;AAC3B1U,oBAAQ,EAAE,EADiB;AAE3Ba,kBAAM,EAAE;AAFmB,WAA/B;AAIA,cAAMiP,CAAC,eAAGyD,MAAM,CAAC,CAAD,CAAT,6CAAG,SAAWG,KAArB;AACA,cAAMnR,CAAC,gBAAGgR,MAAM,CAAC,CAAD,CAAT,8CAAG,UAAWG,KAArB;;AACA,cAAI5D,CAAJ,EAAO;AACH6E,uBAAW,CACP5Y,KADO,GAEN+T,CAFM,8CAECA,CAAC,CAACxT,QAAF,GAAawT,CAAC,CAACxT,QAAf,GAA0B,EAF3B,IAGPmY,WAHO,CAAX;AAKH;;AACD,cAAIlS,CAAJ,EAAO;AACHoS,uBAAW,CACP5Y,KADO,GAENwG,CAFM,8CAECA,CAAC,CAACjG,QAAF,GAAaiG,CAAC,CAACjG,QAAf,GAA0B,EAF3B,IAGPoY,WAHO,CAAX;AAKH;;AACD,cAAIE,UAAgC,GAAGvgB,SAAvC;;AACA,cAAI;AAAA;;AACAugB,sBAAU,GAAGxB,iBAAiB,CAACrX,KAAD,eAAQwX,MAAM,CAAC,CAAD,CAAd,8CAAQ,UAAWG,KAAnB,CAA9B;AACH,WAFD,CAEE,OAAOnR,CAAP,EAAU;AACR,gBAAIA,CAAC,YAAY4Q,eAAjB,EAAkC;AAC9ByB,wBAAU,GAAG;AACTtT,oBAAI,EAAE;AACFvN,sBAAI,EAAE,SADJ;AAEFqB,uBAAK,EAAE,KAFL;AAGFoe,qBAAG,EAAE;AAHH,iBADG;AAMT3S,sBAAM,EAAE;AANC,eAAb;AAQH,aATD,MASO;AACH,oBAAM0B,CAAN;AACH;AACJ;;AACD,4BAAyBqS,UAAzB;AAAA,cAAQtT,IAAR,eAAQA,IAAR;AAAA,cAAcT,MAAd,eAAcA,MAAd;AAEA,cAAMgU,UAAwB,GAAG;AAC7BrS,oBAAQ,EAAEoQ,KAAK,CAAChb,EADa;AAE7B7D,gBAAI,EAAE,KAFuB;AAG7BuN,gBAAI,EAAJA,IAH6B;AAI7BjB,gBAAI,EAAEoU,WAAW,CAACzU,QAJW;AAK7BI,gBAAI,EAAEsU,WAAW,CAAC1U;AALW,WAAjC;AAOA,iBAAO;AACHyB,eAAG,EAAEoT,UADF;AAEHhU,kBAAM,EAAEgS,aAAa,CACjBD,KADiB,EAEjB/R,MAAM,CACDrM,MADL,CACYigB,WAAW,CAAC5T,MADxB,EAEKrM,MAFL,CAEYkgB,WAAW,CAAC7T,MAFxB,CAFiB;AAFlB,WAAP;AASH;AACD;;AACA;AAAS;AACL,cAAMkT,UAAU,GAAGC,iDAA6B,CAACjgB,IAAD,CAAhD;;AACA,cAAIggB,UAAJ,EAAgB;AAAA;;AACZ,gBAAaI,OAAb,GAAyBJ,UAAzB,CAAQK,GAAR;AACA,gBAAMA,GAAG,GAAGrB,IAAI,CAAClR,IAAL,CAAU,UAAAuS,GAAG;AAAA,qBAAIA,GAAG,CAACxc,EAAJ,KAAWuc,OAAf;AAAA,aAAb,CAAZ;AACA,gBAAMW,MAAM,GAAGV,GAAH,aAAGA,GAAH,gDAAGA,GAAG,CAAEW,kBAAR,0DAAG,2BAAAX,GAAG,EAAuB;AACrCrY,mBAAK,EAALA,KADqC;AAErC6W,mBAAK,EAALA,KAFqC;AAGrCmB,wBAAU,EAAVA,UAHqC;AAIrCX,+BAAiB,EAAjBA;AAJqC,aAAvB,CAAlB;;AAMA,gBAAI0B,MAAJ,EAAY;AACRA,oBAAM,CAACjU,MAAP,GAAgBgS,aAAa,CAACD,KAAD,EAAQkC,MAAM,CAACjU,MAAf,CAA7B;AACA,qBAAOiU,MAAP;AACH;;AAEDtd,mBAAO,CAACsR,IAAR,wBAAkC/U,IAAlC,EAA0C;AAAE6e,mBAAK,EAALA;AAAF,aAA1C;AACA,mBAAO;AACHnR,iBAAG,EAAEpN,SADF;AAEHwM,oBAAM,EAAE;AAFL,aAAP;AAIH;AACJ;AArFL;AAuFH,GA7FD;;AA+FA,MAAMmU,GAAG,GAAG;AACRjhB,QAAI,EAAE,gBADE;AAERsN,aAAS,EAAE,EAFH;AAGRD,UAAM,EAAE9B,YAAY,CAAC,KAAD;AAHZ,GAAZ;;AAMA,MAAMqV,WAAW,GAAG,SAAdA,WAAc,CAChB5Y,KADgB,EAEhBkZ,MAFgB,EAGhBpV,OAHgB,EAIf;AACDoV,UAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE/e,OAAR,CAAgB,UAAAwd,KAAK,EAAI;AACrB,UAAIA,KAAJ,EAAW;AACP,YAAI;AACA,gCAAwBc,cAAc,CAACzY,KAAD,EAAQ2X,KAAR,CAAtC;AAAA,cAAQjS,GAAR,mBAAQA,GAAR;AAAA,cAAaZ,MAAb,mBAAaA,MAAb;;AACA,cAAIY,GAAJ,EAAS5B,OAAO,CAACG,QAAR,CAAiB3K,IAAjB,CAAsBoM,GAAtB;AACTZ,gBAAM,CAAC3K,OAAP,CAAe,UAAAqM,CAAC;AAAA,mBAAI1C,OAAO,CAACgB,MAAR,CAAexL,IAAf,CAAoBkN,CAApB,CAAJ;AAAA,WAAhB;AACH,SAJD,CAIE,OAAOA,CAAP,EAAU;AACR,cAAIA,CAAC,YAAY4Q,eAAjB,EAAkC;AAC9BtT,mBAAO,CAACG,QAAR,CAAiB3K,IAAjB,CAAsB;AAClBmN,sBAAQ,EAAEkR,KAAK,CAAC9b,EADE;AAElB7D,kBAAI,EAAE,KAFY;AAGlBoN,qBAAO,EAAE6T;AAHS,aAAtB;AAKH,WAND,MAMO;AACHxd,mBAAO,CAACkT,KAAR,CAAcnI,CAAd;AACH;AACJ;AACJ;AACJ,KAlBD;AAmBH,GAxBD;;AA0BA,MAAM7B,QAAqB,GAAGiN,SAAS,CAACsH,MAAV,CACzBjf,GADyB,CACrB,UAAA0D,GAAG,EAAI;AAAA;;AACR,QAAQ3F,IAAR,GAAiB2F,GAAjB,CAAQ3F,IAAR;AACA,QAAIoN,OAAJ;AACA,QAAI+T,QAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,OAAO,GAAG,KAAd;AACA,QAAMrB,UAAU,GAAGC,iDAA6B,CAACjgB,IAAD,CAAhD;AACAwN,4BAAM,CAAC,CAAC,CAACwS,UAAH,CAAN;AACA,QAAQQ,QAAR,GAAmCR,UAAnC,CAAQQ,QAAR;AAAA,QAAuBJ,OAAvB,GAAmCJ,UAAnC,CAAkBK,GAAlB;AACA,QAAMA,GAAG,GAAGD,OAAO,KAAIpB,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAElR,IAAN,CAAW,UAAAoS,CAAC;AAAA,aAAIA,CAAC,CAACrc,EAAF,KAASuc,OAAb;AAAA,KAAZ,CAAJ,CAAnB;;AAEA,QAAI;AAAA;;AACA,iBACI,CAAAC,GAAG,SAAH,IAAAA,GAAG,WAAH,qCAAAA,GAAG,CAAEiB,gBAAL,qFAAAjB,GAAG,EAAqB;AACpBxB,aAAK,EAAElZ,GADa;AAEpBqa,kBAAU,EAAVA,UAFoB;AAGpBX,yBAAiB,EAAjBA;AAHoB,OAArB,CAAH,KAIM,EALV;AAAA,UAAQkC,UAAR,QAAQA,UAAR;AAAA,UAAoBzU,MAApB,QAAoBA,MAApB;AAAA,UAA4B9E,KAA5B,QAA4BA,KAA5B;AAAA,UAAmClH,IAAnC,QAAmCA,IAAnC;;AAMAsM,aAAO,GAAGmU,UAAV;AACAH,eAAS,GAAGtU,MAAZ;AACAqU,cAAQ,GAAGnZ,KAAX;AACAqZ,aAAO,GAAGvgB,IAAV,CAVA,CAYA;;AACA,UAAI,CAACsM,OAAD,IAAY,gBAACgU,SAAD,uCAAC,WAAWjgB,MAAZ,CAAhB,EAAoC;AAChC,gBAAQqf,QAAR;AACI,eAAK,MAAL;AAAa;AACT;AACH;;AACD;AAAS;AACL/c,qBAAO,CAACsR,IAAR,mCACoCyL,QADpC,aACoDxgB,IADpD,EAEI;AAAE2F,mBAAG,EAAHA;AAAF,eAFJ;AAIA;AACH;AAVL;AAYH;AACJ,KA3BD,CA2BE,OAAO6I,CAAP,EAAU;AACR/K,aAAO,CAACkT,KAAR,CAAcnI,CAAd;;AACA,UAAIA,CAAC,YAAY4Q,eAAjB,EAAkC;AAC9B,eAAO9e,SAAP;AACH,OAFD,MAEO;AACH,cAAMkO,CAAN;AACH;AACJ,KA7CO,CA+CR;;;AACA,QAAI,CAACpB,OAAD,IAAY,iBAACgU,SAAD,wCAAC,YAAWjgB,MAAZ,CAAhB,EAAoC,OAAOb,SAAP;AAEpC,QAAMwL,OAAkB,GAAG;AACvBG,cAAQ,EAAE,CACN;AACIwC,gBAAQ,EAAE9I,GAAG,CAAC9B,EADlB;AAEI7D,YAAI,EAAE,KAFV;AAGIoN,eAAO,EAAPA;AAHJ,OADM,CADa;AAQvBN,YAAM,EAAEsU,SAAS,IAAI,EARE;AASvBtgB,UAAI,EAAE,CAAC,CAACugB;AATe,KAA3B;AAYAT,eAAW,CAACO,QAAD,EAAWxb,GAAG,CAAC4C,QAAf,EAAyBuD,OAAzB,CAAX;AACA,WAAOA,OAAP;AACH,GAjEyB,EAkEzBpK,MAlEyB,CAkElB,UAAAoK,OAAO;AAAA,WAAI,CAAC,CAACA,OAAN;AAAA,GAlEW,CAA9B;AAoEA,SAAO;AACHY,SAAK,EAALA,KADG;AAEHC,YAAQ,EAARA;AAFG,GAAP;AAIH,C;;;;;ACtZD;AACA;AAIA;AAoBA;AACA;AAQA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AAqBA;;AAUA,SAAS6U,cAAT,CAAwB/V,KAAxB,EAAoD;AAChD,SAAOA,KAAK,CAACzL,IAAN,KAAe,MAAtB;AACH;;AACD,SAASyhB,aAAT,CAAuBhW,KAAvB,EAAmD;AAC/C,SAAOA,KAAK,CAACzL,IAAN,KAAe,QAAtB;AACH;;AACD,SAAS0hB,aAAT,CAAuBjW,KAAvB,EAAmD;AAC/C,SAAO+V,cAAc,CAAC/V,KAAD,CAAd,GACD,SADC,GAEDgW,aAAa,CAAChW,KAAD,CAAb,GACA,QADA,GAEAkW,gCAAa,CAAClW,KAAD,CAAb,GACA,QADA,GAEAnL,SANN;AAOH;;AACD,SAASshB,QAAT,CAAkBC,GAAlB,EAA2CpW,KAA3C,EAAuE;AAAA;;AACnE,MAAM+C,CAAC,iBAAGqT,GAAG,CAACC,KAAP,+CAAG,WAAYrW,KAAK,CAACzL,IAAlB,CAAV;AACA,SAAOwO,CAAP;AACH;;AAED,IAAMuT,eAAe,GAAG,CACpBC,8BADoB,EAEpBC,6BAFoB,EAGpBC,mCAHoB,EAIpBC,iCAJoB,EAKpBC,+BALoB,EAMpBC,iCANoB,CAAxB;AAQA,IAAMC,aAAa,GAAG,CAACC,kEAAD,CAAtB;AACA,IAAMC,iBAAiB,GAAG,CACtBC,4CADsB,EAEtBA,wCAFsB,EAGtBA,gDAHsB,CAA1B;AAMA,IAAMC,cAAc,GAAG,CACnB;AACIvU,SAAO,EAAEwU,+BADb;AAEIrT,UAAQ,EAAEsT,kDAFd;AAGInX,OAAK,EAAE,SAHX;AAIIoX,KAAG,EAAE;AAJT,CADmB,CAAvB;AASA,IAAMC,YAAY,GAAG,SAArB;AAEO,IAAMC,mCAAb;AAAA;AAAA,SAGIlf,EAHJ,GAGS,gBAHT;AAAA,SAIImf,iBAJJ,GAI8C,EAJ9C;AAAA;;AAAA;;AAAA,SASYC,kBATZ,GASI,4BAA2Bla,KAA3B,EAAyC;AACrC,QAAMma,WAAW,GAAGna,KAAK,CAACoa,OAAN,CAAcC,OAAd,CAAsBC,IAA1C;AACA,QAAMC,UAAU,GAAGva,KAAK,CAACoa,OAAN,CAAcxhB,IAAd,CAAmB0hB,IAAtC;;AACA,QAAME,YAAY,GAAG,SAAfA,YAAe,CAAC1B,GAAD;AAAA,aACjB2B,yBAAQ,CAAC3B,GAAD,CAAR,GAAgBqB,WAAhB,GAA8BI,UADb;AAAA,KAArB;;AAEA,WAAOC,YAAP;AACH,GAfL;;AAAA,SAiBIE,YAjBJ,GAiBI,sBAAajf,OAAb,EAA2C;AACvC,QAAQuE,KAAR,GAAkBvE,OAAlB,CAAQuE,KAAR;AACA,QAAMwa,YAAY,GAAG,KAAKN,kBAAL,CAAwBla,KAAxB,CAArB,CAFuC,CAGvC;;AACA,QAAM2a,aAAa,GAAG,CAClB;AACIC,kBAAY,EAAEC,4BADlB;AAEIC,UAAI,EAAE,IAFV;AAGIC,gBAAU,EAAEC,uCAHhB;AAIItY,WAAK,EAAE,GAJX;AAKIuY,YAAM,EAAmB;AACrBH,YAAI,EAAE,OADe;AAErB7jB,YAAI,EAAEikB,sDAA2BjkB;AAFZ;AAL7B,KADkB,EAWlB;AACI2jB,kBAAY,EAAEO,6BADlB;AAEIL,UAAI,EAAE,SAFV;AAGIC,gBAAU,EAAEK,8CAHhB;AAII1Y,WAAK,EAAE,WAJX;AAKIuY,YAAM,EAAmB;AACrBH,YAAI,EAAE,OADe;AAErB7jB,YAAI,EAAEokB,gDAAqBpkB;AAFN;AAL7B,KAXkB,CAAtB;;AAsBA,QAAMqkB,kBAAkB,GAAG,SAArBA,kBAAqB,CACvBlW,OADuB,EAEvBxM,IAFuB,EAGvB8J,KAHuB;AAAA;;AAAA,oCAKvBiY,aAAa,CAAC5V,IAAd,CACI,UAAAwW,EAAE;AAAA,eACEA,EAAE,CAACX,YAAH,KAAoBxV,OAAO,CAACgM,eAA5B,IACAmK,EAAE,CAACT,IAAH,IAAWliB,IAAI,CAACkiB,IADhB,IAEAS,EAAE,CAACR,UAAH,KAAkBniB,IAAI,CAACmiB,UAFvB,IAGAQ,EAAE,CAAC7Y,KAAH,IAAYA,KAAK,CAACnM,IAJpB;AAAA,OADN,CALuB,wDAKvB,oBAMG0kB,MAXoB;AAAA,KAA3B;;AAaA,QAAMO,WAAW,GAAG,SAAdA,WAAc,CAACpW,OAAD;AAAA,aAChBjG,mCAAU,gBAAciG,OAAO,CAACN,OAAtB,CADM;AAAA,KAApB;;AAEA,QAAM2W,eAAe,GAAG,SAAlBA,eAAkB,CAAC3d,GAAD;AAAA,aACpBA,GAAG,CAAC5H,MAAJ,CAAWwlB,KAAX,CAAiB/C,aAAjB,CADoB;AAAA,KAAxB;;AAEA,QAAMgD,SAAS,GAAG,SAAZA,SAAY,CACdlT,GADc,EAEd/F,KAFc;AAAA,aAGZA,KAAK,CAACnM,IAAN,KAAe,GAAf,GAAqBkS,GAAG,CAAClS,IAAzB,GAAgCmM,KAAK,CAACnM,IAH1B;AAAA,KAAlB;;AAIA,QAAMqlB,aAAa,GAAG,SAAhBA,aAAgB,CAClBxW,OADkB,EAElBxM,IAFkB,EAGlB8J,KAHkB;AAAA,aAKlB4Y,kBAAkB,CAAClW,OAAD,EAAUxM,IAAV,EAAgB8J,KAAhB,CAAlB,KACC+V,cAAc,CAAC/V,KAAD,CAAd,GACK;AAAEoY,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OADL,GAEKyhB,aAAa,CAAChW,KAAD,CAAb,GACA;AAAEoY,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OADA,GAEAyL,KAAK,CAACmZ,IAAN,KAAe,GAAf,GACA;AACIf,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE;AAFV,OADA,GAKAyL,KAAK,CAACmZ,IAAN,KAAe,GAAf,GACA;AAAEf,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OADA,GAEA,KAAKP,IAAL,CAAUgM,KAAK,CAACmZ,IAAhB,IACA;AAAEf,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OADA,GAEAyL,KAAK,CAACzL,IAAN,KAAe,IAAf,GACA;AAAE6jB,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OADA,GAEA;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,aAFV;AAGIqB,aAAK,EAAEoK,KAAK,CAACoZ,YAAN,IAAsB,CAHjC;AAIIC,WAAG,EAAErZ,KAAK,CAACsZ,UAAN,IAAoBtZ,KAAK,CAACuZ,WAJnC;AAKIC,WAAG,EAAExZ,KAAK,CAACyZ,UAAN,IAAoBzZ,KAAK,CAAC0Z;AALnC,OAhBN,CALkB;AAAA,KAAtB;;AA4BA,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAACvD,GAAD;AAAA,aACdwD,2BAAQ,CAACxD,GAAG,CAACyD,SAAL,CAAR,CAAwB5lB,WAAxB,EADc;AAAA,KAArB;;AAEA,QAAM6lB,aAAa,GAAG,SAAhBA,aAAgB,CAClBpX,OADkB;AAAA,aAES;AAC3BnO,YAAI,EAAE,gBADqB;AAE3BV,YAAI,EAAE,MAFqB;AAG3Bqb,gBAAQ,EAAEyK,YAAY,CAACjX,OAAD,CAHK;AAI3BqX,qBAAa,EAAE,CAACrX,OAAO,CAACN,OAAT,CAJY;AAK3B4X,mBAAW,EAAEtX,OAAO,CAACN;AALM,OAFT;AAAA,KAAtB;;AASA,QAAM6X,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC/jB,IAAD;AAAA,aACxBA,IAAI,CAAC1C,MAAL,CAAYgD,GAAZ,CAAgB,UAAAwJ,KAAK;AAAA,eAAK;AACtBzL,cAAI,EAAE,aADgB;AAEtBV,cAAI,EAAEolB,SAAS,CAAC/iB,IAAD,EAAO8J,KAAP,CAFO;AAGtBka,eAAK,EAAEjE,aAAa,CAACjW,KAAD;AAHE,SAAL;AAAA,OAArB,CADwB;AAAA,KAA5B;;AAMA,QAAMma,cAAc,GAAG,SAAjBA,cAAiB,CACnBzX,OADmB,EAEnBxM,IAFmB;AAAA,aAInBkkB,uBAAK,CACDlkB,IAAI,CAAC1C,MADJ,EAED,UAAAwM,KAAK;AAAA,eAAIiZ,SAAS,CAAC/iB,IAAD,EAAO8J,KAAP,CAAb;AAAA,OAFJ,EAGD,UAAAA,KAAK;AAAA,eAAIkZ,aAAa,CAACxW,OAAD,EAAUxM,IAAV,EAAgB8J,KAAhB,CAAjB;AAAA,OAHJ,CAJc;AAAA,KAAvB;;AASA,QAAMqa,eAAe,GAAG,SAAlBA,eAAkB,CAACnkB,IAAD;AAAA,aACpBA,IAAI,CAAC1C,MAAL,CACKgD,GADL,CACS,UAACwJ,KAAD,EAAQsa,CAAR;AAAA,eAAiBV,2BAAQ,CAAC5Z,KAAK,CAACnM,IAAP,CAAzB,WAA0C,IAAIymB,CAA9C;AAAA,OADT,EAEKxf,IAFL,CAEU,GAFV,CADoB;AAAA,KAAxB;;AAIA,QAAMyf,iBAAiB,GAAG,SAApBA,iBAAoB,CAACrkB,IAAD;AAAA,aACtBA,IAAI,CAAC1C,MAAL,CAAYkC,MAAZ,KAAuB,CAAvB,IACAQ,IAAI,CAAC1C,MAAL,CAAY,CAAZ,EAAee,IAAf,KAAwB,MADxB,IAEA2B,IAAI,CAACrC,IAAL,KAAc,SAHQ;AAAA,KAA1B;;AAIA,QAAM2mB,aAAa,GAAG,SAAhBA,aAAgB,CAClBpE,GADkB,EAElBrQ,GAFkB,EAGlB/F,KAHkB;AAAA,aAKlBiX,cAAc,CAAC5U,IAAf,CACI,UAAA1M,CAAC;AAAA,eACGA,CAAC,CAAC+M,OAAF,KAAc0T,GAAG,CAAC1H,eAAlB,IACA/Y,CAAC,CAACkO,QAAF,KAAekC,GAAG,CAACsS,UADnB,IAEA1iB,CAAC,CAACqK,KAAF,KAAYA,KAAK,CAACnM,IAHrB;AAAA,OADL,CALkB;AAAA,KAAtB;;AAYA,QAAM4mB,WAAW,GAAGC,sCAAqB,EAAzC;AACA,SAAKnD,iBAAL,GAAyBkD,WAAW,CAC/BxkB,MADoB,CAEjB,UAAAyM,OAAO;AAAA,aACH,CAAC,KAAK1O,IAAL,CAAU0O,OAAO,CAACN,OAAlB,CAAD,IACAM,OAAO,CAACkE,MAAR,KAAmB,YAFhB;AAAA,KAFU,EAMpB3Q,MANoB,CAOjB,UAAAyM,OAAO;AAAA,aAAI4T,eAAe,CAAClgB,OAAhB,CAAwBsM,OAAO,CAACgM,eAAhC,IAAmD,CAAvD;AAAA,KAPU,CAAzB;;AASA,QAAMiM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;AAAA,aACnBH,WAAW,CAACxkB,MAAZ,CAAmB,UAAAmgB,GAAG;AAAA,eAAIA,GAAG,CAAC1H,eAAJ,KAAwBkM,GAA5B;AAAA,OAAtB,CADmB;AAAA,KAAvB;;AAEA,QAAMlX,SAAS,GAAGwM,iCAAe,CAC7B,KAAKqH,iBAAL,CAAuB/gB,GAAvB,CAA2B,UAAAkM,OAAO;AAAA,aAC9BA,OAAO,CAACmY,OAAR,CACK5kB,MADL,CAEQ,UAAAmF,GAAG;AAAA,eACC0f,2BAAU,CAAC1f,GAAD,CAAV,IACA,CAACA,GAAG,CAAC2f,QADL,IAEAhE,iBAAiB,CAAC3gB,OAAlB,CAA0BgF,GAAG,CAACid,UAA9B,IAA4C,CAAC,CAH9C;AAAA,OAFX,EAOK7hB,GAPL,CAOS,UAAAqN,QAAQ;AAAA,eAAK;AACdnB,iBAAO,EAAPA,OADc;AAEdmB,kBAAQ,EAARA;AAFc,SAAL;AAAA,OAPjB,CAD8B;AAAA,KAAlC,CAD6B,CAAjC;AAeA,QAAMC,MAAM,GAAG,KAAKyT,iBAAL,CACV/gB,GADU,CACN,UAAAkM,OAAO;AAAA,aAAK;AACbA,eAAO,EAAPA,OADa;AAEboB,cAAM,EAAEpB,OAAO,CAACmY,OAAR,CAAgB5kB,MAAhB,CACJ,UAAAmF,GAAG;AAAA,iBACC4f,wBAAO,CAAC5f,GAAD,CAAP,IACA,CAACA,GAAG,CAAC2f,QADL,IAEAlE,aAAa,CAACzgB,OAAd,CAAsBgF,GAAG,CAACid,UAA1B,IAAwC,CAHzC;AAAA,SADC;AAFK,OAAL;AAAA,KADD,EAUVpiB,MAVU,CAUH,UAAAglB,EAAE;AAAA,aAAI,CAAC,CAACA,EAAE,CAACnX,MAAH,CAAUpO,MAAhB;AAAA,KAVC,CAAf;AAWA,QAAM8K,QAAQ,GAAG0P,iCAAe,CAC5B,KAAKqH,iBAAL,CAAuB/gB,GAAvB,CAA2B,UAAAkM,OAAO;AAAA,aAC9BA,OAAO,CAACmY,OAAR,CACK5kB,MADL,CAEQ,UAAAmF,GAAG;AAAA,eACC8f,0BAAS,CAAC9f,GAAD,CAAT,IACA,CAACA,GAAG,CAAC2f,QADL,IAEAhC,eAAe,CAAC3d,GAAD,CAHhB;AAAA,OAFX,EAOK5E,GAPL,CAOS,UAAA4E,GAAG;AAAA,eAAK;AACTsH,iBAAO,EAAPA,OADS;AAETf,iBAAO,EAAEvG;AAFA,SAAL;AAAA,OAPZ,CAD8B;AAAA,KAAlC,CAD4B,CAAhC;AAgBA,QAAM+f,sBAA+C,GAAG,+CACjDR,cAAc,CAACS,mCAAD,CAAd,CAAiC5kB,GAAjC,CACC,UAAAkM,OAAO;AAAA,aACoB;AACnB0V,YAAI,EAAE,OADa;AAEnB7jB,YAAI,OAFe;AAGnB8mB,gBAAQ,kBAHW;AAInBC,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEH;AACInO,cAAI,EAAEgnB,uCADV;AAEI1nB,cAAI,EAAE;AAFV,SAFG,CAJY;AAWnB2nB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAXD;AAYnB+Y,oBAAY,EAAE,IAZK;AAanBC,yBAAiB,EAAEC,mCAbA;AAcnBC,qBAAa,EAAED,mCAdI;AAenBE,eAAO,6BAfY;AAgBnBC,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAhBD;AAiBnBA,eAAO,EAAPA,OAjBmB;AAkBnBoT,kBAAU,8CAlBS;AAmBnBf,gBAAQ,EAAE;AAnBS,OADpB;AAAA,KADR,CADiD,wCAyBjD4F,cAAc,CAACoB,0BAAD,CAAd,CAAwBvlB,GAAxB,CACC,UAAAkM,OAAO;AAAA,aACoB;AACnB0V,YAAI,EAAE,OADa;AAEnB7jB,YAAI,QAFe;AAGnB8mB,gBAAQ,6BAHW;AAInBC,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEH;AACInO,cAAI,EAAE,aADV;AAEIV,cAAI,EAAE,OAFV;AAGIqmB,eAAK,EAAE;AAHX,SAFG,EAOH;AACI3lB,cAAI,EAAE,aADV;AAEIV,cAAI,EAAE,OAFV;AAGIqmB,eAAK,EAAE;AAHX,SAPG,CAJY;AAiBnB1U,cAAM,EAAE;AACJwW,eAAK,EAAE;AACH5D,gBAAI,EAAE,OADH;AAEH7jB,gBAAI,EAAE0nB,oDAAyB1nB;AAF5B,WADH;AAKJ2nB,eAAK,EAAE;AACH9D,gBAAI,EAAE,OADH;AAEH7jB,gBAAI,EAAE,cAFH;AAGHgkB,kBAAM,EAAE;AAHL;AALH,SAjBW;AA4BnBiD,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CA5BD;AA6BnB+Y,oBAAY,EAAE,IA7BK;AA8BnBC,yBAAiB,EAAEC,mCA9BA;AA+BnBC,qBAAa,EAAED,mCA/BI;AAgCnBE,eAAO,kBAhCY;AAiCnBC,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAjCD;AAkCnBA,eAAO,EAAPA,OAlCmB;AAmCnBoT,kBAAU,8FAnCS;AAoCnBf,gBAAQ,EAAE;AApCS,OADpB;AAAA,KADR,CAzBiD,wCAkEjD4F,cAAc,CAACwB,4CAAD,CAAd,CAA0C3lB,GAA1C,CACC,UAAAkM,OAAO;AAAA,aACoB;AACnB0V,YAAI,EAAE,OADa;AAEnB7jB,YAAI,cAFe;AAGnB8mB,gBAAQ,uBAHW;AAInBC,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEH;AACInO,cAAI,EAAE,aADV;AAEIV,cAAI,EAAE,QAFV;AAGIqmB,eAAK,EAAE;AAHX,SAFG,CAJY;AAYnB1U,cAAM,EAAE;AACJ4W,gBAAM,EAAE;AACJhE,gBAAI,EAAE,OADF;AAEJ7jB,gBAAI,EAAE;AAFF;AADJ,SAZW;AAkBnBinB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAlBD;AAmBnB+Y,oBAAY,EAAE,IAnBK;AAoBnBC,yBAAiB,EAAEC,mCApBA;AAqBnBC,qBAAa,EAAED,mCArBI;AAsBnBE,eAAO,kCAtBY;AAuBnBC,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAvBD;AAwBnBA,eAAO,EAAPA,OAxBmB;AAyBnB;AACAqS,gBAAQ,EAAE;AA1BS,OADpB;AAAA,KADR,CAlEiD,wCAiGjD4F,cAAc,CAAC0B,iCAAD,CAAd,CAA+B7lB,GAA/B,CACC,UAAAkM,OAAO;AAAA,aACoB;AACnB0V,YAAI,EAAE,OADa;AAEnB7jB,YAAI,aAFe;AAGnB8mB,gBAAQ,mBAHW;AAInBC,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEH;AACInO,cAAI,EAAE+nB,qCADV;AAEIzoB,cAAI,EAAE;AAFV,SAFG,CAJY;AAWnB2nB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAXD;AAYnB+Y,oBAAY,EAAE,IAZK;AAanBC,yBAAiB,EAAEC,mCAbA;AAcnBC,qBAAa,EAAED,mCAdI;AAenBE,eAAO,kCAfY;AAgBnBC,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAhBD;AAiBnBA,eAAO,EAAPA,OAjBmB;AAkBnB;AACAqS,gBAAQ,EAAE;AAnBS,OADpB;AAAA,KADR,CAjGiD,GAyHtDve,GAzHsD,CAyHlD,UAAA+L,GAAG,EAAI;AACTA,SAAG,CAAChO,IAAJ,sBAA4BgO,GAAG,CAACG,OAAJ,CAAYN,OAAZ,CAAoBnO,WAApB,EAA5B,SACIsO,GAAG,CAAChO,IADR;AAGA,aAAOgO,GAAP;AACH,KA9HuD,CAAxD;AAgIA,QAAMga,WAAW,GAAGzY,MAAM,CAACtN,GAAP,CAChB;AAAA,UAAGkM,OAAH,QAAGA,OAAH;AAAA,UAAYoB,MAAZ,QAAYA,MAAZ;AAAA,aAA0B;AACtBsU,YAAI,EAAE,OADgB;AAEtB7jB,YAAI,qBAAmBmO,OAAO,CAACN,OAFT;AAGtBiZ,gBAAQ,YAHc;AAItBC,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEc;AACbnO,cAAI,EAAE,gBADO;AAEbV,cAAI,EAAE,OAFO;AAGbkF,iBAAO,EAAE+K,MAAM,CAACtN,GAAP,CAAW,UAAA+F,KAAK;AAAA,mBAAI,CACzBqd,2BAAQ,CAACrd,KAAK,CAAC1I,IAAP,CADiB,EAEzB0I,KAAK,CAAC1I,IAFmB,CAAJ;AAAA,WAAhB;AAHI,SAFd,CAJe;AAetB2nB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAfE;AAgBtB+Y,oBAAY,EAAE,IAhBQ;AAiBtBG,qBAAa,EAAED,mCAjBO;AAkBtBE,eAAO,sBAAoBnZ,OAAO,CAAC7O,IAA5B,aAlBe;AAmBtBioB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAnBE;AAoBtBA,eAAO,EAAPA,OApBsB;AAqBtBoB,cAAM,EAANA,MArBsB;AAsBtBiR,gBAAQ,EAAE;AAtBY,OAA1B;AAAA,KADgB,CAApB;AA2BA,QAAMyH,2BAA2B,GAAG9Y,SAAS,CACxCzN,MAD+B,CAE5B;AAAA,UAAGyM,OAAH,SAAGA,OAAH;AAAA,aACI,CAACA,OAAO,CAACmY,OAAR,CAAgB4B,IAAhB,CACG,UAAArhB,GAAG;AAAA,eACC4f,wBAAO,CAAC5f,GAAD,CAAP,IACAyb,aAAa,CAACzgB,OAAd,CAAsBgF,GAAG,CAACid,UAA1B,IAAwC,CAFzC;AAAA,OADN,CADL;AAAA,KAF4B,EAS/BpiB,MAT+B,CAU5B;AAAA,UAAG4N,QAAH,SAAGA,QAAH;AAAA,aACIA,QAAQ,CAACrQ,MAAT,CAAgBkC,MAAhB,KAA2B,CAA3B,IACAwgB,gCAAa,CAACrS,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAAD,CADb,IAEAqQ,QAAQ,CAACwU,UAAT,KAAwBrB,gDAH5B;AAAA,KAV4B,EAe/BxgB,GAf+B,CAeF;AAAA,UAAGkM,OAAH,SAAGA,OAAH;AAAA,UAAYmB,QAAZ,SAAYA,QAAZ;AAAA,aAA4B;AACtDuU,YAAI,EAAE,OADgD;AAEtD7jB,YAAI,+BAA6BmO,OAAO,CAACN,OAArC,SAAgDyB,QAAQ,CAAChQ,IAFP;AAGtDwnB,gBAAQ,aAAWzB,2BAAQ,CAAC/V,QAAQ,CAAChQ,IAAV,CAAnB,kBAH8C;AAItDynB,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,8CAEAuX,mBAAmB,CAACpW,QAAD,CAFnB,GAGL5N,MAHK,CAGE,UAAAwd,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAN;AAAA,SAHH,CAJ+C;AAQtDjO,cAAM,EAAE2U,cAAc,CAACzX,OAAD,EAAUmB,QAAV,CARgC;AAStD4X,oBAAY,EAAE,IATwC;AAUtDG,qBAAa,EAAED,mCAVuC;AAWtDH,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAXkC;AAYtDmZ,eAAO,yBAAuBhY,QAAQ,CAAChQ,IAAhC,aAZ+C;AAatDioB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAbkC;AActDA,eAAO,EAAPA,OAdsD;AAetDmB,gBAAQ,EAARA,QAfsD;AAiBtDkR,gBAAQ,EAAE;AAjB4C,OAA5B;AAAA,KAfE,CAApC;;AAmCA,uBAA8C2H,6BAAW,CACrDhZ,SADqD,EAErD,UAAAqC,GAAG;AAAA,aAAIA,GAAG,CAAClC,QAAJ,CAAarQ,MAAb,CAAoBkC,MAApB,IAA8B,CAAlC;AAAA,KAFkD,CAAzD;AAAA,QAAOinB,eAAP;AAAA,QAAwBC,kBAAxB;;AAIA,wBAAoDF,6BAAW,CAC3DC,eAD2D,EAE3D;AAAA,UAAG9Y,QAAH,SAAGA,QAAH;AAAA,aAAkB,CAAC,CAACoS,aAAa,CAACpS,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAAD,CAAjC;AAAA,KAF2D,CAA/D;AAAA,QAAOqpB,mBAAP;AAAA,QAA4BC,oBAA5B;;AAIA,QAAMC,wBAAwB,GAC1BF,mBAAmB,CAACrmB,GAApB,CACI;AAAA;;AAAA,UAAGkM,OAAH,SAAGA,OAAH;AAAA,UAAYmB,QAAZ,SAAYA,QAAZ;AAAA,aAA4B;AACxBuU,YAAI,EAAE,OADkB;AAExB7jB,YAAI,yBAAuBmO,OAAO,CAACN,OAA/B,SAA0CyB,QAAQ,CAAChQ,IAF/B;AAGxBwnB,gBAAQ,EACJ,mBAAAb,aAAa,CAAC9X,OAAD,EAAUmB,QAAV,EAAoBA,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAApB,CAAb,kEACM4jB,GADN,aACmBwC,2BAAQ,CAAC/V,QAAQ,CAAChQ,IAAV,CALP;AAMxBynB,aAAK,EAAE,CAACxB,aAAa,CAACpX,OAAD,CAAd,CANiB;AAOxB+Y,oBAAY,EAAE,IAPU;AAQxBuB,cAAM,EAAE/G,aAAa,CAACpS,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAAD,CARG;AASxBgoB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CATI;AAUxBmZ,eAAO,EAAEhY,QAAQ,CAACoZ,WAVM;AAWxBnB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAXI;AAYxBA,eAAO,EAAPA,OAZwB;AAaxBmB,gBAAQ,EAARA,QAbwB;AAcxB7D,aAAK,EAAE6D,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAdiB;AAgBxBuhB,gBAAQ,EAAE;AAhBc,OAA5B;AAAA,KADJ,CADJ;AAqBA,QAAMmI,uBAAuB,GAAGJ,oBAAoB,CAC/C7mB,MAD2B,CAExB;AAAA,UAAGyM,OAAH,SAAGA,OAAH;AAAA,UAAYmB,QAAZ,SAAYA,QAAZ;AAAA,aACI,CAAC,CAACsS,QAAQ,CAACzT,OAAD,EAAUmB,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAAV,CADd;AAAA,KAFwB,EAK3BgD,GAL2B,CAKvB;AAAA,UAAGkM,OAAH,SAAGA,OAAH;AAAA,UAAYmB,QAAZ,SAAYA,QAAZ;AAAA,aAA4B;AAC7BnB,eAAO,EAAPA,OAD6B;AAE7BmB,gBAAQ,EAARA,QAF6B;AAG7B7D,aAAK,EAAE6D,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAHsB;AAI7B2pB,aAAK,EAAEhH,QAAQ,CAACzT,OAAD,EAAUmB,QAAQ,CAACrQ,MAAT,CAAgB,CAAhB,CAAV;AAJc,OAA5B;AAAA,KALuB,CAAhC;AAWA,QAAM4pB,0BAA0B,GAAGlN,iCAAe,CAC9C0M,kBAAkB,CAACpmB,GAAnB,CAAuB;AAAA,UAAGkM,OAAH,SAAGA,OAAH;AAAA,UAAYmB,QAAZ,SAAYA,QAAZ;AAAA,aACnBA,QAAQ,CAACrQ,MAAT,CACKgD,GADL,CACS,UAAAwJ,KAAK;AAAA,eAAK;AACX0C,iBAAO,EAAPA,OADW;AAEXmB,kBAAQ,EAARA,QAFW;AAGX7D,eAAK,EAALA,KAHW;AAIXmd,eAAK,EAAEhH,QAAQ,CAACzT,OAAD,EAAU1C,KAAV;AAJJ,SAAL;AAAA,OADd,EAOK/J,MAPL,CAOY;AAAA,YAAGknB,KAAH,UAAGA,KAAH;AAAA,eAAe,CAAC,CAACA,KAAjB;AAAA,OAPZ,CADmB;AAAA,KAAvB,CAD8C,CAAlD;AAYA,QAAME,qBAAqB,GAAG,+CACvBH,uBADuB,wCAEvBE,0BAFuB,GAG5B5mB,GAH4B,CAI1B;AAAA;;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYmB,QAAZ,UAAYA,QAAZ;AAAA,UAAsB7D,KAAtB,UAAsBA,KAAtB;AAAA,UAA6Bmd,KAA7B,UAA6BA,KAA7B;AAAA,aAA0C;AACtC/E,YAAI,EAAE,OADgC;AAEtC7jB,YAAI,uBAAqBmO,OAAO,CAACN,OAA7B,SAAwCyB,QAAQ,CAAChQ,IAAjD,SAAyDmM,KAAK,CAACnM,IAF7B;AAGtCwnB,gBAAQ,EACJ,oBAAAb,aAAa,CAAC9X,OAAD,EAAUmB,QAAV,EAAoB7D,KAApB,CAAb,oEAAyCoX,GAAzC,aACMwC,2BAAQ,CAAC/V,QAAQ,CAAChQ,IAAV,CADd,IAEImM,KAAK,CAACnM,IAAN,KAAe,GAAf,GAAqB,EAArB,SAA8BmM,KAAK,CAACnM,IAFxC,SAJkC;AAQtCynB,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEqB;AACpBnO,cAAI,EAAE,gBADc;AAEpBV,cAAI,EAAEmM,KAAK,CAACnM,IAFQ;AAGpBkF,iBAAO,EAAES,MAAM,CAACC,IAAP,CAAY0jB,KAAK,CAACG,OAAlB,EAA2B9mB,GAA3B,CAA+B,UAAA+mB,MAAM;AAAA,mBAAI,CAC9C3D,2BAAQ,CAAC2D,MAAD,CADsC,EAE9CA,MAF8C,CAAJ;AAAA,WAArC;AAHW,SAFrB,CAR+B;AAmBtC9B,oBAAY,EAAE,IAnBwB;AAoBtCuB,cAAM,EAAE,SApB8B;AAqBtCxB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CArBkB;AAsBtCmZ,eAAO,EAAEhY,QAAQ,CAACoZ,WAtBoB;AAuBtCnB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAvBkB;AAwBtCA,eAAO,EAAPA,OAxBsC;AAyBtCmB,gBAAQ,EAARA,QAzBsC;AA0BtC7D,aAAK,EAALA,KA1BsC;AA4BtC+U,gBAAQ,EAAE;AA5B4B,OAA1C;AAAA,KAJ0B,CAA9B;AAoCA,QAAMyI,yBAAyB,GAAGZ,kBAAkB,CAC/C3mB,MAD6B,CACtB,UAAAwnB,EAAE;AAAA,aAAIA,EAAE,CAAC5Z,QAAH,CAAYrQ,MAAZ,CAAmBipB,IAAnB,CAAwBvG,4BAAxB,CAAJ;AAAA,KADoB,EAE7B1f,GAF6B,CAEA;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYmB,QAAZ,UAAYA,QAAZ;AAAA,aAA4B;AACtDuU,YAAI,EAAE,OADgD;AAEtD7jB,YAAI,2BAAyBmO,OAAO,CAACN,OAAjC,SAA4CyB,QAAQ,CAAChQ,IAFH;AAGtDwnB,gBAAQ,UAAQzB,2BAAQ,CAAC/V,QAAQ,CAAChQ,IAAV,CAAhB,IACJgQ,QAAQ,CAACrQ,MAAT,CAAgBkC,MAAhB,GAAyB,CAAzB,WAAqC,EADjC,CAH8C;AAMtD4lB,aAAK,EAAE,CACHxB,aAAa,CAACpX,OAAD,CADV,EAEHmB,QAAQ,CAACrQ,MAAT,CAAgBkC,MAAhB,GAAyB,CAAzB,GAC8B;AACpBnB,cAAI,EAAE,gBADc;AAEpBV,cAAI,EAAE,OAFc;AAGpBkF,iBAAO,EAAE8K,QAAQ,CAACrQ,MAAT,CACJyC,MADI,CACG,UAAAiC,CAAC;AAAA,mBAAIge,gCAAa,CAAChe,CAAD,CAAjB;AAAA,WADJ,EAEJ1B,GAFI,CAEA,UAAAwJ,KAAK;AAAA,mBAAI,CACV4Z,2BAAQ,CAAC5Z,KAAK,CAACnM,IAAP,CADE,EAEVolB,SAAS,CAACpV,QAAD,EAAW7D,KAAX,CAFC,CAAJ;AAAA,WAFL;AAHW,SAD9B,GAWMnL,SAbH,EAcLoB,MAdK,CAcE,UAAAwd,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAN;AAAA,SAdH,CAN+C;AAqBtDgI,oBAAY,EAAE,IArBwC;AAsBtDuB,cAAM,EAAE,QAtB8C;AAuBtDxB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAvBkC;AAwBtDmZ,eAAO,EAAEhY,QAAQ,CAACoZ,WAxBoC;AAyBtDnB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAzBkC;AA0BtDA,eAAO,EAAPA,OA1BsD;AA2BtDmB,gBAAQ,EAARA,QA3BsD;AA6BtDkR,gBAAQ,EAAE;AA7B4C,OAA5B;AAAA,KAFA,CAAlC;AAkCA,QAAM2I,iBAAiB,GAAGha,SAAS,CAC9BzN,MADqB,CACd;AAAA,UAAG4N,QAAH,UAAGA,QAAH;AAAA,aAAkBA,QAAQ,CAACuU,IAAT,KAAkB,IAApC;AAAA,KADc,EAErBniB,MAFqB,CAEd;AAAA,UAAG4N,QAAH,UAAGA,QAAH;AAAA,aAAkBkV,eAAe,CAAClV,QAAD,CAAjC;AAAA,KAFc,EAGrBrN,GAHqB,CAGQ;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYmB,QAAZ,UAAYA,QAAZ;AAAA,aAA4B;AACtDuU,YAAI,EAAE,OADgD;AAEtD7jB,YAAI,kBAAgBmO,OAAO,CAACN,OAAxB,SAAmCyB,QAAQ,CAAChQ,IAFM;AAGtDwnB,gBAAQ,EAAEd,iBAAiB,CAAC1W,QAAD,CAAjB,6BAEMA,QAAQ,CAAChQ,IAFf,aAGAgQ,QAAQ,CAACrQ,MAAT,CAAgBkC,MAAhB,KAA2B,CAA3B,GACM,IADN,GAEM2kB,eAAe,CAACxW,QAAD,CALrB,CAH4C;AAUtDyX,aAAK,GACDxB,aAAa,CAACpX,OAAD,CADZ,8CAEEuX,mBAAmB,CAACpW,QAAD,CAFrB,EAViD;AActD2B,cAAM,EAAE2U,cAAc,CAACzX,OAAD,EAAUmB,QAAV,CAdgC;AAetD4X,oBAAY,EAAE,IAfwC;AAgBtDD,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAhBkC;AAiBtDmZ,eAAO,EAAEhY,QAAQ,CAACoZ,WAjBoC;AAkBtDnB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAlBkC;AAmBtDA,eAAO,EAAPA,OAnBsD;AAoBtDmB,gBAAQ,EAARA,QApBsD;AAqBtD6X,yBAAiB,EAAEC,mCArBmC;AAsBtDC,qBAAa,EAAED,mCAtBuC;AAwBtD5G,gBAAQ,EAAE;AAxB4C,OAA5B;AAAA,KAHR,CAA1B;AA8BA,QAAM4I,aAAa,GAAGnd,QAAQ,CAAChK,GAAT,CAClB;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYf,OAAZ,UAAYA,OAAZ;AAAA,aAA2B;AACvByW,YAAI,EAAE,OADiB;AAEvB7jB,YAAI,sBAAoBmO,OAAO,CAACN,OAA5B,SAAuCT,OAAO,CAAC9N,IAF5B;AAGvBwnB,gBAAQ,EAAE,CAAC1Z,OAAO,CAACnO,MAAR,CAAekC,MAAhB,GACDkkB,2BAAQ,CAACjY,OAAO,CAAC9N,IAAT,CADP,WAED+lB,2BAAQ,CAACjY,OAAO,CAAC9N,IAAT,CAFP,iBAEiCwmB,eAAe,CAChD1Y,OADgD,CALnC;AAQvB2Z,aAAK,GACDxB,aAAa,CAACpX,OAAD,CADZ,8CAEEuX,mBAAmB,CAACtY,OAAD,CAFrB,EARkB;AAYvB6D,cAAM,EAAE2U,cAAc,CAACzX,OAAD,EAAUf,OAAV,CAZC;AAavB8Z,oBAAY,EAAE,IAbS;AAcvBD,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAdG;AAevBmZ,eAAO,EAAEla,OAAO,CAACsb,WAfM;AAgBvBnB,eAAO,EAAEhD,WAAW,CAACpW,OAAD,CAhBG;AAiBvBA,eAAO,EAAPA,OAjBuB;AAkBvBf,eAAO,EAAPA,OAlBuB;AAmBvB+Z,yBAAiB,EAAEC,mCAnBI;AAoBvBC,qBAAa,EAAED,mCApBQ;AAsBvB5G,gBAAQ,EAAE;AAtBa,OAA3B;AAAA,KADkB,CAAtB;AA2BA,SAAK6I,cAAL,kDACOrB,WADP,wCAEOC,2BAFP,wCAGOO,wBAHP,wCAIOM,qBAJP,wCAKOG,yBALP,wCAMOE,iBANP,wCAOOvC,sBAPP,wCAQOwC,aARP,GAhiBuC,CA2iBvC;;AACA,SAAKE,iBAAL,GAAyB3N,iCAAe,CACpCpM,MAAM,CAACtN,GAAP,CAAW;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYoB,MAAZ,UAAYA,MAAZ;AAAA,aACPA,MAAM,CACD7N,MADL,CAEQ,UAAAsG,KAAK;AAAA,eAAIA,KAAK,CAAC/I,MAAN,CAAayC,MAAb,CAAoBigB,4BAApB,EAAmCxgB,MAAnC,GAA4C,CAAhD;AAAA,OAFb,EAIKc,GAJL,CAIS,UAAA+F,KAAK;AAAA,eAAK;AAAEmG,iBAAO,EAAPA,OAAF;AAAWnG,eAAK,EAALA;AAAX,SAAL;AAAA,OAJd,EAKK/F,GALL,CAMQ;AAAA,YAAGkM,OAAH,UAAGA,OAAH;AAAA,YAAYnG,KAAZ,UAAYA,KAAZ;AAAA,eAC0B;AAClB6b,cAAI,EAAE,OADY;AAElB7jB,cAAI,0BAAwBmO,OAAO,CAACN,OAAhC,SAA2C7F,KAAK,CAAC1I,IAFnC;AAGlBwnB,kBAAQ,EAAK9e,KAAK,CAAC1I,IAAX,QAHU;AAIlBynB,eAAK,EAAE,CACc;AACb/mB,gBAAI,EAAE,gBADO;AAEbV,gBAAI,EAAE,OAFO;AAGbkF,mBAAO,EAAEwD,KAAK,CAAC/I,MAAN,CAAagD,GAAb,CAAiB,UAAAwJ,KAAK;AAAA,qBAAI,CAC/B4Z,2BAAQ,CAAC5Z,KAAK,CAACnM,IAAP,CADuB,EAE/BmM,KAAK,CAACnM,IAFyB,CAAJ;AAAA,aAAtB;AAHI,WADd,CAJW;AAclB2nB,gBAAM,EAAE1D,YAAY,CAACpV,OAAD,CAdF;AAelB+Y,sBAAY,EAAE,IAfI;AAgBlBI,iBAAO,0BAAwBtf,KAAK,CAAC1I,IAA9B,WAhBW;AAiBlBioB,iBAAO,EAAEhD,WAAW,CAACpW,OAAD,CAjBF;AAkBlBA,iBAAO,EAAPA,OAlBkB;AAmBlBnG,eAAK,EAALA,KAnBkB;AAoBlBygB,gBAAM,EAAE,QApBU;AAqBlBjI,kBAAQ,EAAE;AArBQ,SAD1B;AAAA,OANR,CADO;AAAA,KAAX,CADoC,CAAxC;AAoCA,SAAK+I,cAAL,GAAsB,CAClB;AACI1F,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAEwpB,gCAFV;AAGI1C,cAAQ,EAAE,UAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,KAHW;AAIrB6K,qBAAa,GACT,QADS,8CAEN,KAAKxC,iBAAL,CAAuB/gB,GAAvB,CACC,UAAAkM,OAAO;AAAA,iBAAIA,OAAO,CAACN,OAAZ;AAAA,SADR,CAFM,EAJQ;AAUrB4X,mBAAW,EAAE;AAVQ,OADtB,EAaqB;AACpBzlB,YAAI,EAAE,gBADc;AAEpBV,YAAI,EAAE,OAFc;AAGpBkF,eAAO,EAAE,CACL,CAAC,WAAD,EAAc,WAAd,CADK,EAEL,CAAC,cAAD,EAAiB,cAAjB,CAFK;AAHW,OAbrB,CAJX;AA0BI0iB,kBAAY,EAAE,IA1BlB;AA2BIG,mBAAa,EAAED,mCA3BnB;AA4BIH,YAAM,EAAEnE,YA5BZ;AA6BIwE,aAAO,EAAE,oDA7Bb;AA8BIC,aAAO,EAAE,EA9Bb;AA+BI/G,cAAQ,EAAE;AA/Bd,KADkB,EAkClB;AACIqD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAEypB,+BAFV;AAGI3C,cAAQ,EAAE,cAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,KAHW;AAIrB6K,qBAAa,GACT,QADS,8CAEN,KAAKxC,iBAAL,CAAuB/gB,GAAvB,CACC,UAAAkM,OAAO;AAAA,iBAAIA,OAAO,CAACN,OAAZ;AAAA,SADR,CAFM,EAJQ;AAUrB4X,mBAAW,EAAE;AAVQ,OADtB,CAJX;AAkBIgD,YAAM,EAAE,SAlBZ;AAmBIvB,kBAAY,EAAE,IAnBlB;AAoBID,YAAM,EAAEnE,YApBZ;AAqBIwE,aAAO,EAAE,oDArBb;AAsBIC,aAAO,EAAE,EAtBb;AAuBI/G,cAAQ,EAAE;AAvBd,KAlCkB,EA2DlB;AACIqD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE0pB,sCAFV;AAGI5C,cAAQ,EAAE,2BAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,KAHW;AAIrB6K,qBAAa,GACT,QADS,8CAEN,KAAKxC,iBAAL,CAAuB/gB,GAAvB,CACC,UAAAkM,OAAO;AAAA,iBAAIA,OAAO,CAACN,OAAZ;AAAA,SADR,CAFM,EAJQ;AAUrB4X,mBAAW,EAAE;AAVQ,OADtB,EAamB;AAClBzlB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE;AAHW,OAbnB,CAJX;AAuBI1U,YAAM,EAAE;AACJwW,aAAK,EAAE;AACH5D,cAAI,EAAE,OADH;AAEH7jB,cAAI,EAAE0nB,oDAAyB1nB;AAF5B;AADH,OAvBZ;AA6BIknB,kBAAY,EAAE,IA7BlB;AA8BIC,uBAAiB,EAAEC,mCA9BvB;AA+BIC,mBAAa,EAAED,mCA/BnB;AAgCIH,YAAM,EAAEnE,YAhCZ;AAiCIwE,aAAO,EAAE,oCAjCb;AAkCIC,aAAO,EAAE;AAlCb,KA3DkB,CAAtB;AAiGA,0DACO,KAAK8B,cADZ,wCAEO,KAAKC,iBAFZ,wCAGO,KAAKC,cAHZ;AAKH,GAvsBL;;AAAA,SAysBII,cAzsBJ,GAysBI,wBAAenlB,OAAf,EAA+C;AAAA;AAAA;;AAC3C,QAAQuE,KAAR,GAAwCvE,OAAxC,CAAQuE,KAAR;AAAA,QAAepI,MAAf,GAAwC6D,OAAxC,CAAe7D,MAAf;AAAA,QAAuBipB,YAAvB,GAAwCplB,OAAxC,CAAuBolB,YAAvB;AACA,QAAMrG,YAAY,GAAG,KAAKN,kBAAL,CAAwBla,KAAxB,CAArB;AAEA,QAAM8gB,aAAa,GACf,CAAAlpB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEse,SAAR,CACKhd,GADL,CACS,UAAAid,CAAC;AAAA,aAAIA,CAAC,CAAClf,IAAN;AAAA,KADV,EAEK0B,MAFL,CAEY,UAAA1B,IAAI;AAAA,aAAI,CAAC,CAACiO,6CAA4B,CAACjO,IAAD,CAAlC;AAAA,KAFhB,MAE6D,EAHjE;AAIA,QAAM8pB,UAAkC,GAAG,IAAIC,GAAJ,CACvCppB,MADuC,aACvCA,MADuC,yCACvCA,MAAM,CAAEugB,MAD+B,mDACvC,eACMjf,GADN,CACU,UAAA4c,KAAK;AAAA,aAAK;AACZA,aAAK,EAALA,KADY;AAEZmB,kBAAU,EAAEC,iDAA6B,CAACpB,KAAK,CAAC7e,IAAP;AAF7B,OAAL;AAAA,KADf,EAKK0B,MALL,CAKY;AAAA,UAAGse,UAAH,UAAGA,UAAH;AAAA,aAAoBA,UAAU,CAACQ,QAAX,KAAwB,OAA5C;AAAA,KALZ,EAMKve,GANL,CAMS,kBAA2B;AAAA,UAAxB4c,KAAwB,UAAxBA,KAAwB;AAAA,UAAjBmB,UAAiB,UAAjBA,UAAiB;AAC5B,UAAMgK,SAAS,GAAGnL,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBvgB,MAAhB,CAAuB,OAAvB,EACboC,KADL;AAEA,aAAQ2e,UAAD,CAAqCzQ,MAArC,CAA4CzB,IAA5C,CACH,UAAAhJ,EAAE;AAAA,eAAIA,EAAE,CAACxF,IAAH,KAAY0qB,SAAhB;AAAA,OADC,CAAP;AAGH,KAZL,EAaKtoB,MAbL,CAaY,UAAAoD,EAAE;AAAA,aAAI,CAAC,CAACA,EAAN;AAAA,KAbd,CADuC,CAA3C;;AAgBA,QAAMmlB,QAAQ,GAAG,KAAKZ,cAAL,CAAoB3nB,MAApB,CAA2B,UAAAmd,KAAK;AAAA,aAAI,CAAC,CAACA,KAAK,CAAC1Q,OAAZ;AAAA,KAAhC,CAAjB;;AACA,QAAM+b,QAAQ,GAAGC,2BAAS,CACtBF,QADsB,EAEtB,UAAApL,KAAK;AAAA,aAAIA,KAAK,CAAC1Q,OAAN,CAAcN,OAAlB;AAAA,KAFiB,EAGtB,UAAAgR,KAAK;AAAA,aAAIA,KAAK,CAAC1Q,OAAV;AAAA,KAHiB,CAA1B;AAMA,QAAMic,eAAqC,GAAGD,2BAAS,CACnD5Q,4CAAA,GACM2Q,QADN,kDAGaL,aAAa,CACX5nB,GADF,CACM,UAAAooB,KAAK;AAAA,aACNH,QAAQ,CAACpc,IAAT,CACI,UAAAK,OAAO;AAAA,eAAIA,OAAO,CAACN,OAAR,KAAoBwc,KAAxB;AAAA,OADX,CADM;AAAA,KADX,EAME3oB,MANF,CAMS,UAAAmgB,GAAG;AAAA,aAAI,CAAC,CAACA,GAAN;AAAA,KANZ,CAHb,wCAUa+H,YAAY,CAAC3nB,GAAb,CAAiB,UAAA4f,GAAG;AAAA,aAAIA,GAAG,CAAC7H,aAAR;AAAA,KAApB,CAVb,EADmD,EAanD,UAAA6H,GAAG;AAAA,aAAIA,GAAG,CAAChU,OAAR;AAAA,KAbgD,EAcnD,UAAAgU,GAAG;AAAA,aAAIA,GAAJ;AAAA,KAdgD,CAAT,CAgBzCngB,MAhByC,CAiBtC,UAAAmgB,GAAG;AAAA,aAAIA,GAAG,IAAIE,eAAe,CAAClgB,OAAhB,CAAwBggB,GAAG,CAAC1H,eAA5B,IAA+C,CAA1D;AAAA,KAjBmC,EAmBzCra,IAnByC,CAmBpC,UAACwqB,CAAD,EAAIllB,CAAJ;AAAA,aAAUklB,CAAC,CAAChrB,IAAF,CAAOirB,aAAP,CAAqBnlB,CAAC,CAAC9F,IAAvB,CAAV;AAAA,KAnBoC,CAA9C;AAqBA,QAAMkrB,kBAAwC,GAAGJ,eAAe,CAC3DnoB,GAD4C,CACxC,UAAAkM,OAAO;AAAA,aAAK;AACbA,eAAO,EAAPA,OADa;AAEbsc,qBAAa,EAAE,KAAI,CAACpB,cAAL,CAAoB3nB,MAApB,CACX,UAAAmd,KAAK;AAAA,iBAAIA,KAAK,CAAC1Q,OAAN,KAAkBA,OAAtB;AAAA,SADM;AAFF,OAAL;AAAA,KADiC,EAO5ClM,GAP4C,CAOpB;AAAA,UAAGkM,OAAH,UAAGA,OAAH;AAAA,UAAYsc,aAAZ,UAAYA,aAAZ;AAAA,aAAiC;AACtD5G,YAAI,EAAE,UADgD;AAEtDvkB,YAAI,EAAE6O,OAAO,CAAC7O,IAFwC;AAGtD2nB,cAAM,EAAE1D,YAAY,CAACpV,OAAD,CAHkC;AAItDuc,gBAAQ,iDACDD,aAAa,CAACxoB,GAAd,CAAmC,UAAA4c,KAAK;AAAA,iBAAK;AAC5CgF,gBAAI,EAAE,OADsC;AAE5C7jB,gBAAI,EAAE6e,KAAK,CAAC7e,IAFgC;AAG5CiR,kBAAM,EAAE4N,KAAK,CAAC5N;AAH8B,WAAL;AAAA,SAAxC,CADC,wCAMD,KAAI,CAACqY,iBAAL,CACE5nB,MADF,CAEK,UAAAoD,EAAE;AAAA,iBACEA,EAAE,CAACqJ,OAAH,KAAeA,OAAf,IACA2b,UAAU,CAACa,GAAX,CAAe7lB,EAAE,CAACkD,KAAlB,CAFF;AAAA,SAFP,EAME/F,GANF,CAMuB,UAAA4c,KAAK;AAAA,iBAAK;AAC5BgF,gBAAI,EAAE,OADsB;AAE5B7jB,gBAAI,EAAE6e,KAAK,CAAC7e,IAFgB;AAG5BiR,kBAAM,EAAE4N,KAAK,CAAC5N;AAHc,WAAL;AAAA,SAN5B,CANC,EAJ8C;AAsBtD2Z,cAAM,EAAE;AACJ/G,cAAI,EAAE,QADF;AAEJ7Z,cAAI,WAASmE,OAAO,CAAC7O,IAAjB,UAFA;AAGJurB,qBAAW,gCAA8B1c,OAAO,CAACN,OAH7C;AAIJM,iBAAO,EAAPA;AAJI;AAtB8C,OAAjC;AAAA,KAPoB,EAoC5CzM,MApC4C,CAoCrC,UAAAopB,GAAG;AAAA;;AAAA,aAAI,CAAC,mBAACA,GAAG,CAACJ,QAAL,0CAAC,cAAcvpB,MAAf,CAAL;AAAA,KApCkC,CAAjD;AAsCA,QAAM4pB,cAAkC,GAAG;AACvClH,UAAI,EAAE,UADiC;AAEvCvkB,UAAI,EAAE,UAFiC;AAGvC2nB,YAAM,EAAEnE,YAH+B;AAIvC4H,cAAQ,EAAE,CACW;AACb7G,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAEwpB,gCAAgBA;AAFT,OADX,EAKW;AACb3F,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAEypB,+BAAeA;AAFR,OALX,EASW;AACb5F,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAE0pB,sCAFO;AAGbzY,cAAM,EAAE;AACJwW,eAAK,EAAE;AACH5D,gBAAI,EAAE,OADH;AAEH7jB,gBAAI,EAAE0nB,oDAAyB1nB;AAF5B;AADH;AAHK,OATX;AAJ6B,KAA3C;AA0BA,0DACOwqB,kBADP,IAEIO,cAFJ,EAGyB;AACjBlH,UAAI,EAAE;AADW,KAHzB;AAOH,GAp0BL;;AAAA,SAs0BIvC,gBAt0BJ,GAs0BI,0BAAiB9c,OAAjB,EAA2E;AACvE,QAAQqa,KAAR,GAAiDra,OAAjD,CAAQqa,KAAR;AAAA,QAAemB,UAAf,GAAiDxb,OAAjD,CAAewb,UAAf;AAAA,QAA2BX,iBAA3B,GAAiD7a,OAAjD,CAA2B6a,iBAA3B;AACA,QAAQG,MAAR,GAAmBX,KAAnB,CAAQW,MAAR;AACA,QAAQgB,QAAR,GAAqBR,UAArB,CAAQQ,QAAR;;AAEA,YAAQA,QAAR;AACI,WAAK,OAAL;AAAc;AACV,cAAe5S,IAAf,GAAwB4R,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,MAAjB,CAAxB,CAAQoC,KAAR;AACA,cAAe2oB,SAAf,GAA6BxK,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,OAAjB,CAA7B,CAAQoC,KAAR;AACA,iBAA+B;AAC3BkgB,sBAAU,EAAuB;AAC7BvhB,kBAAI,EAAE,gBADuB;AAE7BsN,uBAAS,EAAE,CACP9B,kBAAkB,CACdoC,IAAI,CAACod,QAAL,EADc,EAEdhB,SAAS,CAACgB,QAAV,EAFc,CADX,CAFkB;AAQ7B3d,oBAAM,EAAE9B,YAAY,CAAC,YAAD;AARS,aADN;AAW3BvD,iBAAK,EAAE;AACH4F,kBAAI,EAAEA,IAAI,CAACod,QAAL,EADH;AAEHhjB,mBAAK,EAAEgiB,SAAS,CAACgB,QAAV;AAFJ;AAXoB,WAA/B;AAgBH;;AACD,WAAK,uBAAL;AAA8B;AAC1B,cAAepd,KAAf,GAAwB4R,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,MAAjB,CAAxB,CAAQoC,KAAR;AACA,uBAAqB2e,UAArB;AAAA,cAAQ1Q,QAAR,UAAQA,QAAR;;AACA,mCAAyB+P,iBAAiB,CACtC/e,SADsC,EAEtCkf,MAAM,CAAC,CAAD,CAAN,CAAUG,KAF4B,CAA1C;AAAA,cAAQpS,IAAR,sBAAQA,IAAR;AAAA,cAAcT,MAAd,sBAAcA,MAAd;;AAIA,iBAA+B;AAC3ByU,sBAAU,EAAuB;AAC7BvhB,kBAAI,EAAE,gBADuB;AAE7BsN,uBAAS,EAAE,CACP9B,kBAAkB,CAACoC,KAAI,CAACod,QAAL,EAAD,EAAkB1b,QAAQ,CAAChQ,IAA3B,CADX,EAEPiO,IAFO,CAFkB;AAM7BF,oBAAM,EAAE9B,YAAY,CAAC,aAAD;AANS,aADN;AAS3BuB,kBAAM,EAANA;AAT2B,WAA/B;AAWH;AAvCL;;AA0CA,WAAOxM,SAAP;AACH,GAt3BL;;AAAA,SAw3BIigB,qBAx3BJ,GAw3BI,+BACI/b,OADJ,EAEwB;AACpB,QAAQwD,KAAR,GAAqCxD,OAArC,CAAQwD,KAAR;AAAA,QAAegY,UAAf,GAAqCxb,OAArC,CAAewb,UAAf;AAAA,QAA2BnB,KAA3B,GAAqCra,OAArC,CAA2Bqa,KAA3B;AACA,QAAQW,MAAR,GAAuBX,KAAvB,CAAQW,MAAR;AAAA,QAAgB3b,EAAhB,GAAuBgb,KAAvB,CAAgBhb,EAAhB;AACA,QAAQ2c,QAAR,GAAqBR,UAArB,CAAQQ,QAAR;;AACA,YAAQA,QAAR;AACI,WAAK,cAAL;AAAqB;AACjB,uBAAqBR,UAArB;AAAA,cAAQ1Q,QAAR,UAAQA,QAAR;AACA,cAAe1B,IAAf,GAAwB4R,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,MAAjB,CAAxB,CAAQoC,KAAR;AACA,cAAMoK,KAAK,GAAG+T,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,OAAjB,CAAd;AACA,iBAAO;AACHsO,gBAAI,EAAE/B,kBAAkB,CACpBoC,IADoB,EAEpBnC,KAAK,GACCD,kBAAkB,CACd8D,QAAQ,CAAChQ,IADK,EAEdmM,KAAK,CAACpK,KAFQ,CADnB,GAKCiO,QAAQ,CAAChQ,IAPK,CADrB;AAUHwN,kBAAM,EAAE;AAVL,WAAP;AAYH;;AACD,WAAK,aAAL;AAAoB;AAChB,uBAA6BkT,UAA7B;AAAA,cAAeiL,SAAf,UAAQjjB,KAAR;AACA,cAAM8E,MAAiB,GAAG,EAA1B;;AACA,cAAI9E,KAAK,CAACA,KAAN,KAAgBijB,SAAS,CAAC3rB,IAA9B,EAAoC;AAChCwN,kBAAM,CAACxL,IAAP,CAAY;AACRmN,sBAAQ,EAAE5K,EADF;AAER6K,qBAAO,aAAWuc,SAAS,CAAC3rB,IAArB;AAFC,aAAZ;AAIH;;AACD,cAAMmM,MAAK,GAAG+T,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB,OAAjB,CAAd;AACA,iBAAO;AACHsO,gBAAI,EAAE/B,kBAAkB,CACpBxD,KAAK,CAAC4F,IADc,EAEpBpC,kBAAkB,CAACxD,KAAK,CAACA,KAAP,EAAcyD,MAAK,CAACpK,KAApB,CAFE,CADrB;AAKHyL,kBAAM,EAANA;AALG,WAAP;AAOH;;AACD;AACI,eAAOxM,SAAP;AArCR;AAuCH,GAr6BL;;AAAA,SAu6BI0gB,kBAv6BJ,GAu6BI,4BAAmBxc,OAAnB,EAAuD;AACnD,QAAQwD,KAAR,GAAwDxD,OAAxD,CAAQwD,KAAR;AAAA,QAAe6W,KAAf,GAAwDra,OAAxD,CAAeqa,KAAf;AAAA,QAAsBmB,UAAtB,GAAwDxb,OAAxD,CAAsBwb,UAAtB;AAAA,QAAkCX,iBAAlC,GAAwD7a,OAAxD,CAAkC6a,iBAAlC;AACA,QAAQmB,QAAR,GAAqBR,UAArB,CAAQQ,QAAR;AACA,QAAQhB,MAAR,GAAmBX,KAAnB,CAAQW,MAAR;;AACA,YAAQgB,QAAR;AACI,WAAK,cAAL;AAAqB;AACjB,uBAAqBR,UAArB;AAAA,cAAQ1Q,QAAR,UAAQA,QAAR;;AACA,oCAAyB+P,iBAAiB,CACtCrX,KADsC,EAEtCwX,MAAM,CAAC,CAAD,CAAN,CAAUG,KAF4B,CAA1C;AAAA,cAAQpS,IAAR,uBAAQA,IAAR;AAAA,cAAcT,MAAd,uBAAcA,MAAd;;AAIA,cAAec,IAAf,GAAwB4R,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB2O,IAAzC,CAAQvM,KAAR;AACA,iBAAO;AACHqM,eAAG,EAAEkR,UAAU,CAACC,KAAD,EAAQ;AACnB7e,kBAAI,EAAE,gBADa;AAEnBsN,uBAAS,EAAE,CACP9B,kBAAkB,CAACoC,IAAD,EAAiB0B,QAAQ,CAAChQ,IAA1B,CADX,EAEPiO,IAFO,CAFQ;AAMnBF,oBAAM,EAAE9B,YAAY,CAAC,eAAD;AAND,aAAR,CADZ;AASHuB,kBAAM,EAANA;AATG,WAAP;AAWH;;AACD,WAAK,SAAL;AAAgB;AACZ,uBACIkT,UADJ;AAAA,cAAiBkL,cAAjB,UAAQ9d,OAAR;AAEA,cAAeQ,MAAf,GAAwB4R,MAAM,CAAC,CAAD,CAAN,CAAUvgB,MAAV,CAAiB2O,IAAzC,CAAQvM,KAAR;AACA,cAAM8pB,WAAW,GAAG3L,MAAM,CAACvd,GAAP,CAAW,UAAAiP,CAAC;AAAA,mBAC5BmO,iBAAiB,CAACrX,KAAD,EAAQkJ,CAAC,CAACyO,KAAV,CADW;AAAA,WAAZ,CAApB;AAGA,iBAAO;AACHjS,eAAG,EAAEkR,UAAU,CAACC,KAAD,EAAQ;AACnB7e,kBAAI,EAAE,gBADa;AAEnBsN,uBAAS,EAAE6d,WAAW,CAAClpB,GAAZ,CAAgB,UAAAuU,CAAC;AAAA,uBAAIA,CAAC,CAACjJ,IAAN;AAAA,eAAjB,CAFQ;AAGnBF,oBAAM,EAAE7B,kBAAkB,CACtBoC,MADsB,EAEtBsd,cAAc,CAAC5rB,IAFO;AAHP,aAAR,CADZ;AASHwN,kBAAM,EAAEqe,WAAW,CAACC,OAAZ,CAAoB,UAAA5U,CAAC;AAAA,qBAAIA,CAAC,CAAC1J,MAAN;AAAA,aAArB;AATL,WAAP;AAWH;AAtCL;;AAyCA,WAAOxM,SAAP;AACH,GAr9BL;;AAAA;AAAA;AAu9BA,IAAM+qB,WAAW,GAAG,IAAItI,mCAAJ,EAApB;AACA,gDAAesI,WAAf,E;;;ACxlCA;AAYA,IAAMpE,MAAM,GAAG,SAAf;;IACMqE,sC;;SAGFznB,E,GAAK,a;;;;;SAEL4f,Y,GAAA,wBAAe;AACX,WAAQ,KAAK8H,OAAL,GAAe,CACnB;AACI1H,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,+BAFV;AAGI8mB,cAAQ,EAAE,oCAHd;AAIIC,WAAK,EAAE,EAJX;AAKIM,mBAAa,EAAED,mCALnB;AAMIH,YAAM,EAANA;AANJ,KADmB,EASnB;AACIpD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,sCAFV;AAGI8mB,cAAQ,EAAE,oBAHd;AAIIC,WAAK,EAAE,CACkB;AACjB/mB,YAAI,EAAE,aADW;AAEjBV,YAAI,EAAE,MAFW;AAGjB0K,YAAI,EAAE;AAHW,OADlB,CAJX;AAWIye,YAAM,EAAE,QAXZ;AAYIxB,YAAM,EAANA;AAZJ,KATmB,EAuBnB;AACIpD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,sCAFV;AAGI8mB,cAAQ,EAAE,oBAHd;AAIIC,WAAK,EAAE,CACkB;AACjB/mB,YAAI,EAAE,aADW;AAEjBV,YAAI,EAAE,MAFW;AAGjB0K,YAAI,EAAE;AAHW,OADlB,CAJX;AAWIye,YAAM,EAAE,QAXZ;AAYIxB,YAAM,EAANA;AAZJ,KAvBmB,EAqCnB;AACIpD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,4BAFV;AAGI8mB,cAAQ,EAAE,oCAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE;AADY,OADnB,EAIuB;AACtBA,YAAI,EAAE,iBADgB;AAEtBV,YAAI,EAAE;AAFgB,OAJvB,CAJX;AAaI6nB,uBAAiB,EAAEC,mCAbvB;AAcIC,mBAAa,EAAED,mCAdnB;AAeIH,YAAM,EAANA;AAfJ,KArCmB,EAsDnB;AACIpD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,kCAFV;AAGI8mB,cAAQ,EAAE,cAHd;AAIIC,WAAK,EAAE,CACkB;AACjB/mB,YAAI,EAAE,aADW;AAEjBV,YAAI,EAAE,MAFW;AAGjB0K,YAAI,EAAE;AAHW,OADlB,EAMmB;AAClBhK,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE6F,+BAAeA;AAHJ,OANnB,CAJX;AAgBIrE,uBAAiB,EAAEC,mCAhBvB;AAiBIC,mBAAa,EAAED,mCAjBnB;AAkBIH,YAAM,EAANA;AAlBJ,KAtDmB,CAAvB;AA2EH,G;;SACD0C,c,GAAA,0BAAuC;AACnC,WAAO,CACH;AACI9F,UAAI,EAAE,UADV;AAEIvkB,UAAI,EAAE,eAFV;AAGI2nB,YAAM,EAANA,MAHJ;AAIIyD,cAAQ,EAAE,qCACH,KAAKa,OAAL,CAAatpB,GAAb,CACC;AAAA,YAAGjC,IAAH,QAAGA,IAAH;AAAA,eACqB;AACb6jB,cAAI,EAAE,OADO;AAEb7jB,cAAI,EAAJA;AAFa,SADrB;AAAA,OADD,CADC;AAJZ,KADG,CAAP;AAgBH,G;;;;;AAGL,IAAMyrB,cAA2C,GAC7C,IAAIH,sCAAJ,EADJ;AAGA,mDAAeG,cAAf,E;;;;;ACtHA;AACA;AAUO,IAAMC,0BAA0B,GAAG,4BAAnC;AACA,IAAMC,4BAA4B,GAAG,wBAArC;AACA,IAAMC,0BAA0B,GAAG,sBAAnC;AAEA,IAAMC,yBAAyB,GAAG,oBAAlC;AACA,IAAMC,sBAAsB,GAAG,iBAA/B;AAEP,IAAM7E,oBAAM,GAAG,SAAf;AACA,IAAM8E,qBAAqB,GAAG,mBAA9B;AACA,IAAMC,0BAA0B,GAAG,wBAAnC;AACA,IAAMC,4BAA4B,GAAG,0BAArC;AACA,IAAMC,uBAAuB,GAAG,CAACH,qBAAD,CAAhC;AACA,IAAMI,mCAAmC,GAAG,CAACH,0BAAD,CAA5C;AACA,IAAMI,qCAAqC,IACvCH,4BADuC,SAEpCE,mCAFoC,CAA3C;;IAKME,qC;;SAGFxoB,E,GAAK,Y;;;;;SAEL4f,Y,GAAA,wBAAe;AACX,WAAQ,KAAK8H,OAAL,GAAe,CACnB;AACI1H,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE2rB,4BAFV;AAGI7E,cAAQ,EAAE,aAHd;AAIIC,WAAK,EAAE,EAJX;AAKIG,kBAAY,EAAE,IALlB;AAMIG,mBAAa,EAAE6E,uBANnB;AAOIjF,YAAM,EAANA,oBAAMA;AAPV,KADmB,EAUnB;AACIpD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE4rB,0BAFV;AAGI9E,cAAQ,EAAE,mBAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,YAHW;AAIrB6K,qBAAa,EAAE,CAACqG,yBAAD,CAJM;AAKrBpG,mBAAW,EAAEoG;AALQ,OADtB,EAQH;AACI7rB,YAAI,EAAE;AADV,OARG,EAWuB;AACtBA,YAAI,EAAE,iBADgB;AAEtBV,YAAI,EAAE,SAFgB;AAGtBqmB,aAAK,EAAEyG;AAHe,OAXvB,CAJX;AAqBIjF,uBAAiB,EAAE+E,uBArBvB;AAsBI7E,mBAAa,EAAE6E,uBAtBnB;AAuBIjF,YAAM,EAANA,oBAvBJ;AAwBIC,kBAAY,EAAE;AAxBlB,KAVmB,EAoCnB;AACA;AACIrD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,mCAFV;AAGI8mB,cAAQ,EAAE,gBAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,UAFe;AAGrBqb,gBAAQ,EAAE,SAHW;AAIrB6K,qBAAa,EAAE,CAACsG,sBAAD,CAJM;AAKrBrG,mBAAW,EAAEqG;AALQ,OADtB,EAQqB;AACpB9rB,YAAI,EAAE,gBADc;AAEpBV,YAAI,EAAE,MAFc;AAGpBkF,eAAO,EAAE3E,0BAAS,GAAGoC,GAAZ,CAAgB,UAAA2iB,IAAI;AAAA,iBAAI,CAACA,IAAD,EAAOA,IAAP,CAAJ;AAAA,SAApB;AAHW,OARrB,EAaH;AACI5kB,YAAI,EAAE,aADV;AAEIV,YAAI,EAAE;AAFV,OAbG,CAJX;AAsBI6nB,uBAAiB,EAAEgF,mCAtBvB;AAuBI9E,mBAAa,EAAE8E,mCAvBnB;AAwBIlF,YAAM,EAANA,oBAxBJ;AAyBIC,kBAAY,EAAE;AAzBlB,KArCmB,EAgEnB;AACA;AACIrD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,6BAFV;AAGI8mB,cAAQ,EAAE,uBAHd;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,YAHW;AAIrB6K,qBAAa,EAAE,CAACqG,yBAAD,CAJM;AAKrBpG,mBAAW,EAAEoG;AALQ,OADtB,CAJX;AAaIxE,mBAAa,EAAED,mCAbnB;AAcIH,YAAM,EAANA,oBAAMA;AAdV,KAjEmB,CAAvB;AAkFH,G;;SACD0C,c,GAAA,0BAAuC;AACnC,WAAO,CACH;AACI9F,UAAI,EAAE,UADV;AAEIvkB,UAAI,EAAE,aAFV;AAGI2nB,YAAM,EAANA,oBAHJ;AAIIyD,cAAQ,EAAE,qCACH,KAAKa,OAAL,CAAatpB,GAAb,CACC;AAAA,YAAGjC,IAAH,QAAGA,IAAH;AAAA,eACqB;AACb6jB,cAAI,EAAE,OADO;AAEb7jB,cAAI,EAAJA;AAFa,SADrB;AAAA,OADD,CADC;AAJZ,KADG,CAAP;AAgBH,G;;;;;AAGL,IAAMssB,aAA0C,GAC5C,IAAID,qCAAJ,EADJ;AAGA,kDAAeC,aAAf,E;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AASA;AAEA,IAAMrF,eAAM,GAAG,MAAf;AAEA,IAAMsF,QAAqC,GAAG;AAC1C1oB,IAAE,EAAE,OADsC;AAE1C4f,cAAY,EAAE;AAAA,WAAM,CAChB;AACII,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAEsa,0BAFV;AAGIwM,cAAQ,iBAHZ;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,MAHW;AAIrB6K,qBAAa,GACT,QADS,8CAEN6F,iCAAA,CACC,UAAAld,OAAO;AAAA,iBAAIA,OAAO,CAACN,OAAZ;AAAA,SADR,CAFM,EAJQ;AAUrB4X,mBAAW,EAAE;AAVQ,OADtB,EAaH;AACIzlB,YAAI,EAAE;AADV,OAbG,EAgBc;AACbA,YAAI,EAAEwsB,gCADO;AAEbltB,YAAI,EAAE;AAFO,OAhBd,CAJX;AAyBI2nB,YAAM,EAANA,eAzBJ;AA0BIC,kBAAY,EAAE,KA1BlB;AA2BII,aAAO,gCA3BX;AA4BIC,aAAO,EAAE,EA5Bb;AA6BI/G,cAAQ,EAAE;AA7Bd,KADgB,EAgChB;AACIqD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAEysB,6BAFV;AAGI3F,cAAQ,oBAHZ;AAIIC,WAAK,EAAE,CACsB;AACrB/mB,YAAI,EAAE,gBADe;AAErBV,YAAI,EAAE,MAFe;AAGrBqb,gBAAQ,EAAE,MAHW;AAIrB6K,qBAAa,GACT,QADS,8CAEN6F,iCAAA,CACC,UAAAld,OAAO;AAAA,iBAAIA,OAAO,CAACN,OAAZ;AAAA,SADR,CAFM,EAJQ;AAUrB4X,mBAAW,EAAE;AAVQ,OADtB,EAaH;AACIzlB,YAAI,EAAE;AADV,OAbG,EAgBc;AACbA,YAAI,EAAE0sB,oCADO;AAEbptB,YAAI,EAAE;AAFO,OAhBd,CAJX;AAyBI2nB,YAAM,EAANA,eAzBJ;AA0BIC,kBAAY,EAAE,KA1BlB;AA2BII,aAAO,qBA3BX;AA4BIC,aAAO,EAAE,EA5Bb;AA6BI/G,cAAQ,EAAE;AA7Bd,KAhCgB,EA+DhB;AACIqD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE2sB,2BAFV;AAGI7F,cAAQ,eAHZ;AAIIC,WAAK,EAAE,CACc;AACb/mB,YAAI,EAAE,aADO;AAEbV,YAAI,EAAE,OAFO;AAGbqmB,aAAK,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AAHM,OADd,EAMc;AACb3lB,YAAI,EAAE4sB,sCADO;AAEbttB,YAAI,EAAE;AAFO,OANd,CAJX;AAeI2nB,YAAM,EAANA,eAfJ;AAgBIC,kBAAY,EAAE,IAhBlB;AAiBII,aAAO,+BAjBX;AAkBIC,aAAO,EAAE;AAlBb,KA/DgB,CAAN;AAAA,GAF4B;AAsF1CoC,gBAAc,EAAE;AAAA,WAAM,CAClB;AACI9F,UAAI,EAAE,UADV;AAEIvkB,UAAI,EAAE,OAFV;AAGI2nB,YAAM,EAAEA,eAHZ;AAIIyD,cAAQ,EAAE,CACW;AACb7G,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAE2sB,2BAAWA;AAFJ,OADX,EAKW;AACb9I,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAEsa,0BAAUA;AAFH,OALX,EASW;AACbuJ,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAEysB,6BAAaA;AAFN,OATX;AAJd,KADkB,CAAN;AAAA,GAtF0B;AA4G1CnL,kBAAgB,EAAE,gCAAkC;AAAA,QAA/BzC,KAA+B,QAA/BA,KAA+B;AAAA,QAAxBQ,iBAAwB,QAAxBA,iBAAwB;AAChD,QAAQrf,IAAR,GAAiB6e,KAAjB,CAAQ7e,IAAR;;AACA,QAAIA,IAAI,KAAK2sB,2BAAb,EAA0B;AACtB,UAAQnN,MAAR,GAAmBX,KAAnB,CAAQW,MAAR;;AACA,+BAAyBH,iBAAiB,CACtC/e,SADsC,EAEtCkf,MAAM,CAAC,CAAD,CAAN,CAAUG,KAF4B,CAA1C;AAAA,UAAQpS,IAAR,sBAAQA,IAAR;AAAA,UAAcT,MAAd,sBAAcA,MAAd;;AAIA,aAAO;AACHyU,kBAAU,EAAuB;AAC7BvhB,cAAI,EAAE,gBADuB;AAE7BsN,mBAAS,EAAE,CAACC,IAAD,CAFkB;AAG7BF,gBAAM,EAAE9B,YAAY,CAAC,OAAD;AAHS,SAD9B;AAMHuB,cAAM,EAANA,MANG;AAOHhM,YAAI,EAAE;AAPH,OAAP;AASH;;AAED,WAAOR,SAAP;AACH;AAhIyC,CAA9C;AAmIA,6CAAeisB,QAAf,E;;ACpJA;AAEA;AAUA;AAGA,IAAMtF,eAAM,GAAG,SAAf;AACA,IAAM4F,QAAqC,GAAG;AAC1ChpB,IAAE,EAAE,OADsC;AAE1C4f,cAAY,EAAE;AAAA,WAAM,CAChB;AACII,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE8sB,0BAFV;AAGIhG,cAAQ,EAAE,WAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,MAFY;AAGlBqmB,aAAK,EAAE;AAHW,OADnB,CAJX;AAWIuB,kBAAY,EAAE,IAXlB;AAYIC,uBAAiB,EAAEC,mCAZvB;AAaIC,mBAAa,EAAED,mCAbnB;AAcIH,YAAM,EAANA,eAdJ;AAeIK,aAAO,EAAE,uBAfb;AAgBIC,aAAO,EAAE;AAhBb,KADgB,EAmBhB;AACI1D,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE+sB,kCAFV;AAGIjG,cAAQ,oBAHZ;AAIIC,WAAK,EAAE,CACc;AACb/mB,YAAI,EAAE,aADO;AAEbV,YAAI,EAAE,UAFO;AAGbqmB,aAAK,EAAE;AAHM,OADd,CAJX;AAWIsB,YAAM,EAANA,eAXJ;AAYIC,kBAAY,EAAE,IAZlB;AAaII,aAAO,+CAbX;AAcIC,aAAO,EAAE,EAdb;AAeIF,mBAAa,EAAED,mCAAmBA;AAftC,KAnBgB,CAAN;AAAA,GAF4B;AAwC1CuC,gBAAc,EAAE;AAAA,WAAM,CACG;AACjB9F,UAAI,EAAE;AADW,KADH,EAIE;AAChBA,UAAI,EAAE,UADU;AAEhBvkB,UAAI,EAAE,UAFU;AAGhB0tB,WAAK,EAAE,CAHS;AAIhB/F,YAAM,EAANA,eAJgB;AAKhByD,cAAQ,EAAE,CACW;AACb7G,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAE+sB,kCAFO;AAGb9b,cAAM,EAAE;AACJgc,kBAAQ,EAAE;AAAEpJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AADN;AAHK,OADX,EAQW;AACb6jB,YAAI,EAAE,OADO;AAEb7jB,YAAI,EAAE8sB,0BAFO;AAGb7b,cAAM,EAAE;AACJ/D,cAAI,EAAE;AAAE2W,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AADF;AAHK,OARX,EAeR0B,MAfQ,CAeD,UAAAwU,CAAC;AAAA,eAAI,CAAC,CAACA,CAAN;AAAA,OAfA;AALM,KAJF,CAAN;AAAA,GAxC0B;AAmE1CoL,kBAAgB,EAAE,gCAAkC;AAAA,QAA/BzC,KAA+B,QAA/BA,KAA+B;AAAA,QAAxBQ,iBAAwB,QAAxBA,iBAAwB;AAChD,QAAQrf,IAAR,GAAiB6e,KAAjB,CAAQ7e,IAAR;;AACA,QAAIA,IAAI,KAAK+sB,kCAAb,EAAiC;AAC7B,UAAQvN,MAAR,GAAmBX,KAAnB,CAAQW,MAAR;;AACA,+BAA+BH,iBAAiB,CAC5C/e,SAD4C,EAE5Ckf,MAAM,CAAC,CAAD,CAAN,CAAUG,KAFkC,CAAhD;AAAA,UAAczS,IAAd,sBAAQK,IAAR;AAAA,UAAoBT,MAApB,sBAAoBA,MAApB;;AAIA,aAAO;AACHyU,kBAAU,EACN3C,UAAU,CAACC,KAAD,EAAQ;AACd7e,cAAI,EAAE,gBADQ;AAEdsN,mBAAS,EAAE,CAACJ,IAAD,CAFG;AAGdG,gBAAM,EAAE9B,YAAY,CAAC,MAAD;AAHN,SAAR,CADF,CAMV6B,OAPC;AAQHN,cAAM,EAAEgS,aAAa,CAACD,KAAD,EAAQ/R,MAAR;AARlB,OAAP;AAUH;;AACD,WAAOxM,SAAP;AACH,GAvFyC;AAwF1C0gB,oBAAkB,EAAE,mCAAyC;AAAA,QAAtChZ,KAAsC,SAAtCA,KAAsC;AAAA,QAA/B6W,KAA+B,SAA/BA,KAA+B;AAAA,QAAxBQ,iBAAwB,SAAxBA,iBAAwB;AACzD,QAAQrf,IAAR,GAAiB6e,KAAjB,CAAQ7e,IAAR;;AACA,QAAIA,IAAI,KAAK8sB,0BAAb,EAAyB;AACrB,UAAQtN,MAAR,GAAmBX,KAAnB,CAAQW,MAAR;AACA;AACI,kCAA+BH,iBAAiB,CAC5CrX,KAD4C,EAE5CwX,MAAM,CAAC,CAAD,CAAN,CAAUG,KAFkC,CAAhD;AAAA,YAAczS,IAAd,uBAAQK,IAAR;AAAA,YAAoBT,MAApB,uBAAoBA,MAApB;;AAIA,eAAO;AACHY,aAAG,EAAEkR,UAAU,CAACC,KAAD,EAAQ;AACnB7e,gBAAI,EAAE,gBADa;AAEnBsN,qBAAS,EAAE,CAACJ,IAAD,CAFQ;AAGnBG,kBAAM,EAAE9B,YAAY,CAAC,MAAD;AAHD,WAAR,CADZ;AAMHuB,gBAAM,EAAEgS,aAAa,CAACD,KAAD,EAAQ/R,MAAR;AANlB,SAAP;AAQH;AACJ;;AACD,WAAOxM,SAAP;AACH;AA5GyC,CAA9C;AA8GA,6CAAeusB,QAAf,E;;AC5HA,IAAMK,QAAqC,GAAG;AAC1CrpB,IAAE,EAAE,OADsC;AAE1C8lB,gBAAc,EAAE;AAAA,WAAM,CAClB;AACI9F,UAAI,EAAE,UADV;AAEIvkB,UAAI,EAAE,OAFV;AAGI2nB,YAAM,EAAE,kBAHZ;AAIIyD,cAAQ,EAAE,CACN;AACI7G,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE;AAFV,OADM,EAKN;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,eAFV;AAGIiR,cAAM,EAAE;AACJkc,WAAC,EAAE;AAAEtJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB,WADC;AAEJotB,WAAC,EAAE;AAAEvJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AAFC;AAHZ,OALM,EAaN;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,iBAFV;AAGIiR,cAAM,EAAE;AACJkc,WAAC,EAAE;AAAEtJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB,WADC;AAEJotB,WAAC,EAAE;AAAEvJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AAFC;AAHZ,OAbM,EAqBN;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,cAFV;AAGIiR,cAAM,EAAE;AACJoc,cAAI,EAAE;AAAExJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AADF;AAHZ,OArBM,EA4BN;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE;AAFV,OA5BM;AAJd,KADkB,CAAN;AAAA;AAF0B,CAA9C;AA2CA,6CAAektB,QAAf,E;;ACtCA,IAAMI,OAAoC,GAAG;AACzCzpB,IAAE,EAAE,YADqC;AAEzC4f,cAAY,EAAE;AAAA,WAAM,CAChB;AACII,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,wBAFV;AAGI8mB,cAAQ,EAAE,UAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,GAFY;AAGlBqmB,aAAK,EAAE;AAHW,OADnB,EAMqB;AACpB3lB,YAAI,EAAE,gBADc;AAEpBV,YAAI,EAAE,IAFc;AAGpBkF,eAAO,EAAE,CACL,CAAC,6BAAD,EAAgC,KAAhC,CADK,EAEL,CAAC,gCAAD,EAAmC,OAAnC,CAFK,EAGL,CAAC,mCAAD,EAAsC,UAAtC,CAHK,EAIL,CAAC,6BAAD,EAAgC,QAAhC,CAJK;AAHW,OANrB,EAgBmB;AAClBxE,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,GAFY;AAGlBqmB,aAAK,EAAE;AAHW,OAhBnB,CAJX;AA0BIuB,kBAAY,EAAE,IA1BlB;AA2BIuB,YAAM,EAAE,QA3BZ;AA4BI3kB,WAAK,EAAE,aA5BX;AA6BIyjB,aAAO,EAAE,gCA7Bb;AA8BIgG,gBAAU,EAAE,CAAC,iBAAD;AA9BhB,KADgB,EAiChB;AACI1J,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,oBAFV;AAGI8mB,cAAQ,EAAE,OAHd;AAIIC,WAAK,EAAE,CACqB;AACpB/mB,YAAI,EAAE,gBADc;AAEpBV,YAAI,EAAE,IAFc;AAGpBkF,eAAO,EAAE,CACL,CAAC,GAAD,EAAM,KAAN,CADK,EAEL,CAAC,gCAAD,EAAmC,KAAnC,CAFK;AAHW,OADrB,EASmB;AAClBxE,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,KAFY;AAGlBqmB,aAAK,EAAE;AAHW,OATnB,CAJX;AAmBI8C,YAAM,EAAE,QAnBZ;AAoBI3kB,WAAK,EAAE,aApBX;AAqBIyjB,aAAO,EAAE,4BArBb;AAsBIgG,gBAAU,EAAE,CAAC,iBAAD;AAtBhB,KAjCgB,EAyDhB;AACI1J,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,oBAFV;AAGI8mB,cAAQ,EAAE,QAHd;AAIIC,WAAK,EAAE,EAJX;AAKI0B,YAAM,EAAE,QALZ;AAMI3kB,WAAK,EAAE;AANX,KAzDgB,EAiEhB;AACI+f,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,0BAFV;AAGI8mB,cAAQ,EAAE,sBAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,KAFY;AAGlBqmB,aAAK,EAAE;AAHW,OADnB,EAMmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,KAFY;AAGlBqmB,aAAK,EAAE;AAHW,OANnB,CAJX;AAgBI8C,YAAM,EAAE,QAhBZ;AAiBI3kB,WAAK,EAAE,aAjBX;AAkBIojB,kBAAY,EAAE;AAlBlB,KAjEgB,EAqFhB;AACIrD,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,mBAFV;AAGI8mB,cAAQ,EAAE,sBAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE;AAHW,OADnB,EAMmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,cAFY;AAGlBqmB,aAAK,EAAE;AAHW,OANnB,EAWmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,cAFY;AAGlBqmB,aAAK,EAAE;AAHW,OAXnB,CAJX;AAqBI8C,YAAM,EAAE,QArBZ;AAsBI3kB,WAAK,EAAE;AAtBX,KArFgB,EA6GhB;AACI+f,UAAI,EAAE,OADV;AAEI7jB,UAAI,EAAE,iBAFV;AAGI8mB,cAAQ,EAAE,kCAHd;AAIIC,WAAK,EAAE,CACmB;AAClB/mB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE;AAHW,OADnB,EAMmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,SAFY;AAGlBqmB,aAAK,EAAE;AAHW,OANnB,EAWmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,SAFY;AAGlBqmB,aAAK,EAAE;AAHW,OAXnB,EAgBmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE;AAHW,OAhBnB,EAqBmB;AAClB3lB,YAAI,EAAE,aADY;AAElBV,YAAI,EAAE,OAFY;AAGlBqmB,aAAK,EAAE;AAHW,OArBnB,CAJX;AA+BI8C,YAAM,EAAE,QA/BZ;AAgCI3kB,WAAK,EAAE;AAhCX,KA7GgB,CAAN;AAAA,GAF2B;AAkJzC6lB,gBAAc,EAAE;AAAA,WAAM,CACE;AAChB9F,UAAI,EAAE,UADU;AAEhBvkB,UAAI,EAAE,MAFU;AAGhB2nB,YAAM,EAAE,iBAHQ;AAIhByD,cAAQ,EAAE,CACN;AACI7G,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,wBAFV;AAGIiR,cAAM,EAAE;AACJkc,WAAC,EAAE;AAAEtJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB,WADC;AAEJotB,WAAC,EAAE;AAAEvJ,gBAAI,EAAE,OAAR;AAAiB7jB,gBAAI,EAAE;AAAvB;AAFC;AAHZ,OADM,EASN;AACI6jB,YAAI,EAAE,OADV;AAEI7jB,YAAI,EAAE,oBAFV;AAGIiR,cAAM,EAAE;AACJuc,aAAG,EAAE;AACD3J,gBAAI,EAAE,OADL;AAED7jB,gBAAI,EAAE;AAFL;AADD;AAHZ,OATM,EAmBN;AAAE6jB,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OAnBM,EAoBN;AAAE6jB,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OApBM,EAqBN;AAAE6jB,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OArBM,EAsBN;AAAE6jB,YAAI,EAAE,OAAR;AAAiB7jB,YAAI,EAAE;AAAvB,OAtBM;AAJM,KADF,CAAN;AAAA;AAlJyB,CAA7C;AAmLA,4CAAestB,OAAf,E;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMG,qBAAqB,GAAG,gBAA9B;;AACA,SAASC,mBAAT,GAA+B;AAC3B,oBACInrB,oBAAU,CAACoX,2BAAD,CADd;AAAA,MAAQqF,IAAR,eAAQA,IAAR;AAAA,MAAcpF,SAAd,eAAcA,SAAd;AAAA,MAAyBiE,aAAzB,eAAyBA,aAAzB;AAAA,MAAwC1J,WAAxC,eAAwCA,WAAxC;;AAEA,kBAA8BvM,kBAAQ,EAAtC;AAAA,MAAOwM,OAAP;AAAA,MAAgBuZ,UAAhB;;AACA,MAAMC,SAAS,GAAG,IAAlB;;AACA,qBAAgClV,WAAW,CAACvE,WAAD,EAAcC,OAAd,EAAuBwZ,SAAvB,CAA3C;AAAA,MAAQ9U,MAAR,gBAAQA,MAAR;AAAA,MAAgBI,GAAhB,gBAAgBA,GAAhB;AAAA,MAAqBnG,MAArB,gBAAqBA,MAArB;;AAEA3S,qBAAS,CAAC,YAAM;AACZ,QAAI;AACA,UAAMqM,UAAU,GAAGsS,wBAAwB,CAAClB,aAAD,EAAgBmB,IAAhB,CAA3C;AACA,UAAI1X,IAAI,CAACmS,SAAL,CAAehN,UAAf,MAA+BnF,IAAI,CAACmS,SAAL,CAAerF,OAAf,CAAnC,EACIuZ,UAAU,CAAClhB,UAAD,CAAV;AACP,KAJD,CAIE,OAAO+B,CAAP,EAAU;AACR/K,aAAO,CAACoqB,KAAR,CAAcrf,CAAd;AACAmf,gBAAU,CAACrtB,SAAD,CAAV;AACH;AACJ,GATQ,EASN,CAAC0e,IAAD,EAAOnB,aAAP,CATM,CAAT;AAUAzd,qBAAS,CACL;AAAA,WAAMgU,OAAO,KAAID,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAE0C,QAAb,CAAsBzC,OAAO,CAAC1H,KAA9B,CAAJ,CAAb;AAAA,GADK,EAEL,CAACyH,WAAD,EAAcC,OAAd,CAFK,CAAT;AAKAhU,qBAAS,CAAC,YAAM;AACZ;AACA,QAAM0tB,EAAE,GAAGlU,SAAX;AACA,QAAMsQ,QAAQ,GAAG4D,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,cAArB;;AACA,QAAI7D,QAAJ,EAAc;AACVA,cAAQ,CAACpR,MAAT,GAAkBA,MAAlB;AACH;AACJ,GAPQ,EAON,CAACc,SAAD,EAAYd,MAAZ,CAPM,CAAT;AASA,sBACI,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,aAAS,EAAC,QAA1B;AAAmC,WAAO,EAAE;AAA5C,kBACI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,SAAD;AAAW,UAAM,EAAEA,MAAnB;AAA2B,OAAG,EAAEI,GAAhC;AAAqC,UAAM,EAAEnG;AAA7C,IADJ,CADJ,eAII,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,0BAAD,OADJ,CAJJ,EAOKwG,4CAAA,iBACG,uDACI,oBAAC,aAAD;AAAe,WAAO,EAAEnF;AAAxB,IADJ,eAEI,oBAAC,gBAAD,OAFJ,CARR,CADJ;AAgBH;;AAEc,SAAS4Z,QAAT,GAAoB;AAC/B,MAAMhP,IAAI,GAAGlc,iBAAO,CAAC,YAAM;AACvB,WAAO,CACHuoB,WADG,EAEHI,cAFG,EAGHa,aAHG,EAIHC,QAJG,EAKHM,QALG,EAMHK,QANG,EAOHI,OAPG,EAQHW,2BARG,EASHC,wBATG,CAAP;AAWH,GAZmB,EAYjB,EAZiB,CAApB;AAcA,sBACI,oBAAC,oBAAD,qBACI,oBAAC,iCAAD;AAAe,cAAU,EAAET,qBAA3B;AAAkD,QAAI,EAAEzO;AAAxD,kBACI,oBAAC,mBAAD,OADJ,CADJ,CADJ;AAOH,C;;AC9FD;AACA;AAEe,SAASmP,IAAT,GAAgB;AAC3B,sBAAO,oBAAC,QAAD,OAAP;AACH,C","file":"component---src-pages-tools-vm-editor-tsx-181679c7224bddc16b39.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","/***\n *  DTDL specification: https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md.\n */\nexport const DTDL_REFERENCE_URL =\n    \"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\"\nexport const DTDL_NAME = \"Digital Twins Definition Language\"\nexport const DTDL_CONTEXT = \"dtmi:dtdl:context;2\"\n\n// warps fields into an object\nexport function objectSchema(schemas: DTDLSchema[]): DTDLSchema {\n    return {\n        \"@type\": \"Object\",\n        fields: schemas,\n    }\n}\n\n// wraps a schema into an array\nexport function arraySchema(schema: string | DTDLSchema): DTDLSchema {\n    return {\n        \"@type\": \"Array\",\n        elementSchema: schema,\n    }\n}\n\nexport interface DTDLNode {\n    \"@type\"?: string\n    \"@id\"?: string\n    // 1-64 characters\n    // ^[a-zA-Z](?:[a-zA-Z0-9_]*[a-zA-Z0-9])?$\n    name?: string\n    displayName?: string\n    description?: string\n}\n\nexport interface DTDLSchema extends DTDLNode {\n    fields?: DTDLSchema[]\n    schema?: string | DTDLSchema\n    elementSchema?: string | DTDLSchema\n}\n\nexport interface DTDLContent extends DTDLNode {\n    \"@type\": \"Property\" | \"Command\" | \"Component\" | \"Interface\"\n    unit?: string\n    schema?: string | DTDLSchema\n}\n\nexport interface DTDLInterface extends DTDLContent {\n    contents: DTDLContent[]\n    extends?: string | string[]\n    schemas?: (DTDLSchema | DTDLInterface)[]\n    \"@context\"?: string\n}\n\nexport function escapeName(name: string) {\n    name = name.trim().replace(/[^a-zA-Z0-9_]/g, \"_\")\n    if (!/^[a-zA-Z]/.test(name)) name = \"a\" + name\n    name = name[0].toLowerCase() + name.slice(1)\n    return name.slice(0, 64)\n}\n\nexport function escapeDisplayName(name: string) {\n    return name.slice(0, 64)\n}\n\nexport function DTDLUnits() {\n    return [\n        \"metrePerSecondSquared\",\n        \"centimetrePerSecondSquared\",\n        \"gForce\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radianPerSecondSquared\",\n        \"radianPerSecond\",\n        \"degreePerSecond\",\n        \"revolutionPerSecond\",\n        \"revolutionPerMinute\",\n        \"squareMetre\",\n        \"squareCentimetre\",\n        \"squareMillimetre\",\n        \"squareKilometre\",\n        \"hectare\",\n        \"squareFoot\",\n        \"squareInch\",\n        \"acre\",\n        \"farad\",\n        \"millifarad\",\n        \"microfarad\",\n        \"nanofarad\",\n        \"picofarad\",\n        \"ampere\",\n        \"microampere\",\n        \"milliampere\",\n        \"bitPerSecond\",\n        \"kibibitPerSecond\",\n        \"mebibitPerSecond\",\n        \"gibibitPerSecond\",\n        \"tebibitPerSecond\",\n        \"exbibitPerSecond\",\n        \"zebibitPerSecond\",\n        \"yobibitPerSecond\",\n        \"bytePerSecond\",\n        \"kibibytePerSecond\",\n        \"mebibytePerSecond\",\n        \"gibibytePerSecond\",\n        \"tebibytePerSecond\",\n        \"exbibytePerSecond\",\n        \"zebibytePerSecond\",\n        \"yobibytePerSecond\",\n        \"bit\",\n        \"kibibit\",\n        \"mebibit\",\n        \"gibibit\",\n        \"tebibit\",\n        \"exbibit\",\n        \"zebibit\",\n        \"yobibit\",\n        \"byte\",\n        \"kibibyte\",\n        \"mebibyte\",\n        \"gibibyte\",\n        \"tebibyte\",\n        \"exbibyte\",\n        \"zebibyte\",\n        \"yobibyte\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"coulomb\",\n        \"joule\",\n        \"kilojoule\",\n        \"megajoule\",\n        \"gigajoule\",\n        \"electronvolt\",\n        \"megaelectronvolt\",\n        \"kilowattHour\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"hertz\",\n        \"kilohertz\",\n        \"megahertz\",\n        \"gigahertz\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"lux\",\n        \"footcandle\",\n        \"henry\",\n        \"millihenry\",\n        \"microhenry\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"candelaPerSquareMetre\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"lumen\",\n        \"candela\",\n        \"weber\",\n        \"maxwell\",\n        \"tesla\",\n        \"kilogram\",\n        \"gram\",\n        \"milligram\",\n        \"microgram\",\n        \"tonne\",\n        \"slug\",\n        \"gramPerSecond\",\n        \"kilogramPerSecond\",\n        \"gramPerHour\",\n        \"kilogramPerHour\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"pascal\",\n        \"kilopascal\",\n        \"bar\",\n        \"millibar\",\n        \"millimetresOfMercury\",\n        \"poundPerSquareInch\",\n        \"inchesOfMercury\",\n        \"inchesOfWater\",\n        \"unity percent\",\n        \"ohm\",\n        \"milliohm\",\n        \"kiloohm\",\n        \"megaohm\",\n        \"decibel\",\n        \"bel\",\n        \"kelvin\",\n        \"degreeCelsius\",\n        \"degreeFahrenheit\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"second\",\n        \"millisecond\",\n        \"microsecond\",\n        \"nanosecond\",\n        \"minute\",\n        \"hour\",\n        \"day\",\n        \"year\",\n        \"newtonMetre\",\n        \"metrePerSecond\",\n        \"centimetrePerSecond\",\n        \"kilometrePerSecond\",\n        \"metrePerHour\",\n        \"kilometrePerHour\",\n        \"milePerHour\",\n        \"milePerSecond\",\n        \"knot\",\n        \"volt\",\n        \"millivolt\",\n        \"microvolt\",\n        \"kilovolt\",\n        \"megavolt\",\n        \"cubicMetre\",\n        \"cubicCentimetre\",\n        \"litre\",\n        \"millilitre\",\n        \"cubicFoot\",\n        \"cubicInch\",\n        \"fluidOunce\",\n        \"gallon\",\n        \"litrePerSecond\",\n        \"millilitrePerSecond\",\n        \"litrePerHour\",\n        \"millilitrePerHour\",\n    ].sort()\n}\n","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","export interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    roles?: string[]\n    errors?: VMError[]\n    // this handler support the editing experience but\n    // should not be compiled down or debugged\n    meta?: boolean\n}\n\nexport interface VMRole {\n    role: string\n    serviceShortId: string\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport type VMFunctionNames =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"watch\"\n\nexport const VMFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleConnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is connected`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleDisconnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is disconnected`,\n        context: \"command\",\n    },\n]\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    VMBase,\n    VMCommand,\n    VMError,\n    VMHandler,\n    VMIfThenElse,\n    VMProgram,\n    VMFunctions\n} from \"./ir\"\nimport {\n    VMChecker,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram(prog: VMProgram) {\n    const newProgram: VMProgram = { roles: prog.roles.slice(0), handlers: [] }\n    newProgram.handlers = prog.handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[]\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        symbolResolver.roles = []\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            h.roles = symbolResolver.roles\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors,\n    }\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./ir\"\nimport RoleManager from \"../servers/rolemanager\"\nimport { VMEnvironment, VMRoleNoServiceException } from \"./environment\"\nimport { VMExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ROLE_BOUND, ROLE_UNBOUND, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./compile\"\nimport { VM_EVENT, VMCode } from \"./events\"\nimport { VMError, Mutex } from \"./utils\"\nimport { assert, SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nenum VMInternalStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nconst VM_WAKE_SLEEPER = \"vmWakeSleeper\"\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException extends Error {\n    constructor(public label: string) {\n        super()\n    }\n}\n\nclass VMTimerException extends Error {\n    constructor(public ms: number) {\n        super()\n    }\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMInternalStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMInternalStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMInternalStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMInternalStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMInternalStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMInternalStatus.Completed\n                        : VMInternalStatus.Running\n                }\n                return VMInternalStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMInternalStatus.Completed\n                    : VMInternalStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMInternalStatus.Completed\n                }\n                return VMInternalStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"halt\": {\n                return VMInternalStatus.Stopped\n            }\n            case \"nop\": {\n                return VMInternalStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            case \"onRoleConnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            case \"onRoleDisonnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            default:\n                throw new VMError(\n                    VMCode.InternalError,\n                    `Unknown instruction ${this.inst}`\n                )\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMInternalStatus = VMInternalStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMInternalStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMInternalStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMInternalStatus.Stopped\n            : this._commandIndex === undefined\n            ? VMInternalStatus.Ready\n            : this._currentCommand.status\n    }\n\n    get command() {\n        return this._currentCommand\n    }\n\n    get atTop() {\n        return (\n            this.status === VMInternalStatus.Running && this._commandIndex === 0\n        )\n    }\n\n    gotoTop() {\n        if (\n            this.status === VMInternalStatus.Ready &&\n            this.handler.commands.length\n        )\n            this.commandIndex = 0\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMInternalStatus.Completed\n            this.next()\n        }\n    }\n\n    // run-to-completion semantics (true if breakpoint)\n    async runToCompletionAsync(singleStep = false) {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync(singleStep)) && !singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if (singleStep || (await this.singleStepCheckBreakAsync()))\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMInternalStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(VMCode.InternalError, \"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync(singleStep = false) {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (!singleStep && (await this.parent.breakpointOnAsync(sid))) {\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.parent.emit(VM_EVENT, VMCode.CommandStarted, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMInternalStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                const vmt = e as VMTimerException\n                this._currentCommand.status = VMInternalStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.CommandFailed,\n                    this._currentCommand.gc.sourceId\n                )\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMInternalStatus.Completed)\n            this.parent.emit(\n                VM_EVENT,\n                VMCode.CommandCompleted,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMInternalStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    ms: number\n    handlerRunner: VMHandlerRunner\n    handler?: VMHandler\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandler) {\n    assert(!!h)\n    if (h.commands.length) {\n        const cmd = (h.commands[0] as VMCommand).command\n            .callee as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport enum VMStatus {\n    Stopped = \"stopped\",\n    Running = \"running\",\n    Paused = \"paused\",\n}\n\nexport class VMProgramRunner extends JDClient {\n    // program, environment\n    private _handlerRunners: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _roles: VMRole[] = []\n    // running\n    private _status: VMStatus\n    private _waitQueue: VMHandlerRunner[] = []\n    private _everyQueue: VMHandlerRunner[] = []\n    private _runQueue: VMHandlerRunner[] = []\n    private _waitRunMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n    // debugging\n    private _watch: SMap<any> = {}\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors.length) {\n            console.warn(\"ERRORS\", errors)\n        }\n        // data structures for running program\n        this._status = VMStatus.Stopped\n        this._env = new VMEnvironment(registers, events)\n        this._handlerRunners = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        // TODO: can't add multiple handlers until we have deduplicate CHANGE on Event\n        /*\n        const len = this._handlerRunners.length\n        compiled.handlers.forEach((h, index) =>\n            this._handlerRunners.push(\n                new VMHandlerRunner(this, len + index, this._env, h)\n            )\n        )*/\n\n        this._waitRunMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex = new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.waitingToRunning()\n            })\n        )\n        this.mount(\n            this.subscribe(\n                VM_WAKE_SLEEPER,\n                async (h: VMHandlerRunner | VMHandler) => {\n                    await this.wakeSleeper(h)\n                }\n            )\n        )\n        this.initializeRoleManagement()\n    }\n\n    // control of VM\n    get status() {\n        return this._status\n    }\n\n    private setStatus(s: VMStatus) {\n        if (s !== this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    // watch statement - watch an expression\n    watch(sourceId: string, value: WatchValueType) {\n        const oldValue = this._watch[sourceId]\n        if (oldValue !== value) {\n            this._watch[sourceId] = value\n            this.emit(VM_EVENT, VMCode.WatchChange, sourceId)\n        }\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    // breakpoints\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n\n    // timers\n    async sleepAsync(\n        handlerRunner: VMHandlerRunner,\n        ms: number,\n        handler: VMHandler = undefined\n    ) {\n        await this._sleepMutex.acquire(async () => {\n            const id = setTimeout(() => {\n                this.emit(\n                    VM_WAKE_SLEEPER,\n                    handlerRunner ? handlerRunner : handler\n                )\n            }, ms)\n            this._sleepQueue.push({ ms, handlerRunner, id, handler })\n        })\n    }\n\n    private async wakeSleeper(h: VMHandlerRunner | VMHandler) {\n        try {\n            // let handlerMs: number = undefined\n            let handlerRunner: VMHandlerRunner = undefined\n            // let handler: VMHandler = undefined\n            await this._sleepMutex.acquire(async () => {\n                const index = this._sleepQueue.findIndex(\n                    p => p?.handlerRunner === h // || p?.handler === h\n                )\n                assert(index>=0)\n                if (index >= 0) {\n                    const p = this._sleepQueue[index]\n                    //  handlerMs = p.ms\n                    handlerRunner = p.handlerRunner\n                    // handler = p?.handler\n                    this._sleepQueue.splice(index, 1)\n                    // clearTimeout(p.id)\n                }\n            })\n            if (this.status === VMStatus.Stopped) return\n            // this logic is to deal with starting a handler rather than a runner\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                if (!handlerRunner && isEveryHandler(handler)) {\n                    const index = this._everyQueue.findIndex(\n                        h => h.handler === handler\n                    )\n                    if (index >= 0) {\n                        handlerRunner = this._everyQueue[index]\n                        this._everyQueue.splice(index, 1)\n                        handlerRunner.gotoTop()\n                    }\n                }*/\n                if (handlerRunner) {\n                    // transition to the run queue\n                    handlerRunner.wake()\n                    this._runQueue.push(handlerRunner)\n                }\n            })\n            /*\n            const theHandler = handlerRunner?.handler || handler\n            if (isEveryHandler(theHandler)) {\n                // setup next\n                this.sleepAsync(undefined, handlerMs, theHandler)\n            }*/\n            if (handlerRunner) this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    async startAsync() {\n        if (this.status !== VMStatus.Stopped) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            await this._waitRunMutex.acquire(async () => {\n                this._waitQueue = this._handlerRunners.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n                this._runQueue = []\n                this._everyQueue = []\n                // make sure to have another handler for every\n                /*\n                for (const h of this._waitQueue) {\n                    if (isEveryHandler(h.handler)) {\n                        const dup = new VMHandlerRunner(\n                            this,\n                            undefined,\n                            this._env,\n                            h.handler\n                        )\n                        dup.reset()\n                        this._everyQueue.push(dup)\n                    }\n                }*/\n            })\n            this.clearBreakpointsAsync()\n            this.setStatus(VMStatus.Running)\n            this.waitingToRunning()\n            this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    cancel() {\n        if (this.status === VMStatus.Stopped) return // nothing to cancel\n        this.setStatus(VMStatus.Stopped)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"resume\")\n        this.setStatus(VMStatus.Running)\n        await this.runAsync()\n    }\n\n    async stepAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"step\")\n        const h = await this.getCurrentRunner()\n        if (h) {\n            await this.runHandlerAsync(h, true)\n            await this.postProcessHandler(h)\n            const newHead = await this.getCurrentRunner()\n            if (newHead && newHead !== h) {\n                this.emitBreakpoint(newHead)\n            }\n        }\n    }\n\n    private emitBreakpoint(h: VMHandlerRunner) {\n        this.emit(\n            VM_EVENT,\n            VMCode.Breakpoint,\n            h,\n            h.status === VMInternalStatus.Completed\n                ? \"\"\n                : h.command.gc?.sourceId\n        )\n    }\n\n    private async runHandlerAsync(h: VMHandlerRunner, oneStep = false) {\n        try {\n            const brkCommand = await h.runToCompletionAsync(oneStep)\n            if ((brkCommand && !oneStep) || this.status === VMStatus.Paused) {\n                this.setStatus(VMStatus.Paused)\n                this.emitBreakpoint(h)\n            }\n            if (h.status === VMInternalStatus.Completed) {\n                h.reset()\n            }\n        } catch (e) {\n            if (e instanceof VMRoleNoServiceException) {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.RoleMissing,\n                    (e as VMRoleNoServiceException).role\n                )\n            } else {\n                console.debug(e)\n                this.emit(VM_EVENT, VMCode.InternalError, e)\n            }\n            // on handler error, reset the handler\n            h.reset()\n        }\n    }\n\n    private async postProcessHandler(h: VMHandlerRunner) {\n        if (\n            h.status === VMInternalStatus.Ready ||\n            h.status === VMInternalStatus.Sleeping\n        ) {\n            const moveToWait = h.status === VMInternalStatus.Ready\n            let done: VMHandlerRunner = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this._runQueue.length) {\n                    assert(h === this._runQueue[0])\n                    done = this._runQueue.shift()\n                    if (moveToWait && !isEveryHandler(h.handler)) {\n                        this._waitQueue.push(done)\n                        done = undefined\n                    }\n                }\n            })\n            if (done && h.status === VMInternalStatus.Ready && isEveryHandler(h.handler)) {\n                await this.runHandlerAsync(h)\n            }\n        }\n    }\n\n    private _in_run = false\n    private async runAsync() {\n        if (this.status === VMStatus.Stopped) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            let h: VMHandlerRunner = undefined\n            while (\n                this.status === VMStatus.Running &&\n                (h = await this.getCurrentRunner())\n            ) {\n                assert(!h.atTop)\n                await this.runHandlerAsync(h)\n                await this.postProcessHandler(h)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    // call this whenever some event/change arises\n    private async waitingToRunning() {\n        if (this.status !== VMStatus.Stopped) {\n            let waitCopy: VMHandlerRunner[] = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this.status === VMStatus.Paused && this._runQueue.length)\n                    return\n                waitCopy = this._waitQueue.slice(0)\n            })\n            if (!waitCopy)\n                return\n            const handlersStarted: VMHandler[] = []\n            const newRunners: VMHandlerRunner[] = []\n            const sleepingRunners: VMHandlerRunner[] = []\n            for (const h of waitCopy) {\n                await this.runHandlerAsync(h, true)\n                if (h.status === VMInternalStatus.Sleeping) {\n                    sleepingRunners.push(h)\n                } else if (\n                    !h.atTop &&\n                    handlersStarted.findIndex(hs => hs === h.handler) === -1\n                ) {\n                    newRunners.push(h)\n                    handlersStarted.push(h.handler)\n                }\n            }\n            await this._waitRunMutex.acquire(async () => {\n                newRunners.forEach(h => {\n                    this._runQueue.push(h)\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0)\n                        this._waitQueue.splice(index, 1)\n                })\n                sleepingRunners.forEach(h => {\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0)\n                        this._waitQueue.splice(index, 1)\n                })\n            })\n            this._env.consumeEvent()\n            this.runAsync()\n        }\n    }\n\n    private async getCurrentRunner() {\n        return await this._waitRunMutex.acquire(async () => {\n            if (this._runQueue.length) return this._runQueue[0]\n            return undefined\n        })\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, async (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/runner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoRun: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoRun)\n\n    const run = async () => {\n        _setAutoStart(!!autoRun)\n        await runner.startAsync()\n    }\n    const cancel = async () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: { program: VMProgram }) {\n    const { program } = props\n    return (\n        <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">VM</Typography>\n            <CodeBlock\n                className=\"json\"\n                downloadName={\"test.json.vm\"}\n                downloadText={JSON.stringify(program, null, 2)}\n            >\n                {JSON.stringify(program, null, 2)}\n            </CodeBlock>\n        </Grid>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable } from \"blockly\"\nimport { TWIN_BLOCK } from \"./toolbox\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport BlockContext from \"./BlockContext\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    handleRoleClick: () => void\n}) {\n    const { workspace } = useContext(BlockContext)\n    const { role, service, serviceShortId } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function BlockRoles() {\n    const { roleManager } = useContext(BlockContext)\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport useChange from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/runner\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Chip, Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_EVENT, VMCode } from \"../../../jacdac-ts/src/vm/events\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport useMounted from \"../hooks/useMounted\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport BugReportIcon from \"@material-ui/icons/BugReport\"\nimport BlockContext from \"../blockly/BlockContext\"\n\nfunction useWorkspaceBreakpoints(program: VMProgram) {\n    const { workspace } = useContext(BlockContext)\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers\n                    ?.filter(h => !h.meta) // don't debug watch statements\n                    .map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpointHighlight = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpointHighlight,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    const status = useChange(runner, t => t?.status)\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [indeterminate, setIndeterminate] = useState(false)\n    const [breakpoint, setBreakpoint] = useState<string>(undefined)\n    const pausing = breakpoint === \"\"\n    const paused = !!breakpoint?.length\n    const mounted = useMounted()\n    const disabled = indeterminate || !runner\n    const { breakpoints, setBreakpointHighlight } =\n        useWorkspaceBreakpoints(program)\n\n    //console.log(\"runner status\", status)\n\n    const handleRun = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await run()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleCancel = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.clearBreakpointsAsync()\n            setBreakpoint(undefined)\n            await cancel()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleResume = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await runner.clearBreakpointsAsync()\n            await runner.resumeAsync()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handlePause = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.setBreakpointsAsync(breakpoints)\n            await runner.resumeAsync()\n            setBreakpoint(\"\")\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleStep = () => runner.stepAsync()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_EVENT,\n                (code: VMCode, _?: VMHandler, sourceId?: string) => {\n                    if (code === VMCode.Breakpoint) {\n                        if (mounted()) setBreakpoint(sourceId)\n                    }\n                }\n            ),\n        [runner]\n    )\n\n    // setting blockly breakpoint\n    useEffect(() => {\n        setBreakpointHighlight(breakpoint)\n        return () => setBreakpointHighlight(undefined)\n    }, [breakpoint])\n\n    // reset breakpoint in ui when runner, paused mode changes\n    useEffect(() => setBreakpoint(undefined), [runner])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    color={stopped ? \"primary\" : \"default\"}\n                    onClick={\n                        paused\n                            ? handleResume\n                            : stopped\n                            ? handleRun\n                            : handleCancel\n                    }\n                >\n                    {paused || stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithProgress\n                    title={pausing ? \"cancel pause\" : paused ? \"step\" : \"pause\"}\n                    disabled={disabled}\n                    indeterminate={pausing}\n                    onClick={\n                        pausing\n                            ? handleResume\n                            : paused\n                            ? handleStep\n                            : handlePause\n                    }\n                >\n                    {paused ? <PlayForWorkIcon /> : <PauseIcon />}\n                </IconButtonWithProgress>\n            </Grid>\n            {(pausing || paused) && (\n                <Grid item>\n                    <Chip\n                        icon={<BugReportIcon />}\n                        label={pausing ? \"pausing\" : \"paused\"}\n                        color={\"secondary\"}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/file\"\nimport BlockContext from \"./BlockContext\"\n\nfunction LoadButton() {\n    const { workspace } = useContext(BlockContext)\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction SaveButton() {\n    const { workspaceXml } = useContext(BlockContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json = {\n        xml: workspaceXml,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function BlockFileButtons() {\n    return (\n        <>\n            <Grid item>\n                <SaveButton />\n            </Grid>\n            <Grid item>\n                <LoadButton />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport BlockRoles from \"../blockly/BlockRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport BlockFileButtons from \"../blockly/BlockFileButtons\"\n\nexport default function VMToolbar(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <BlockFileButtons />\n            <VMRunnerButtons runner={runner} run={run} cancel={cancel} />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <BlockRoles />\n        </Grid>\n    )\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\nimport BlockContext from \"./BlockContext\"\n\nexport default function BlockDiagnostics() {\n    const { workspaceXml, workspaceJSON } = useContext(BlockContext)\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(workspaceJSON, null, 2)}\n                >\n                    {JSON.stringify(workspaceJSON, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{workspaceXml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","import { BlockJSON, WorkspaceJSON } from \"../blockly/jsongenerator\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    VMIfThenElse,\n    VMError,\n} from \"../../../jacdac-ts/src/vm/ir\"\nimport { toIdentifier, RoleEvent } from \"../../../jacdac-ts/src/vm/compile\"\n\nimport { assert } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    BUILTIN_TYPES,\n    resolveServiceBlockDefinition,\n} from \"../blockly/toolbox\"\nimport Blockly from \"blockly\"\nimport BlockDomainSpecificLanguage from \"../blockly/dsl/dsl\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nexport interface ExpressionWithErrors {\n    expr: jsep.Expression\n    errors: VMError[]\n}\n\nexport interface CmdWithErrors {\n    cmd: VMBase\n    errors: VMError[]\n}\n\nexport const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n    return {\n        sourceId: block.id,\n        type: \"cmd\",\n        command,\n    } as VMBase\n}\n\nexport const processErrors = (block: BlockJSON, errors: VMError[]) => {\n    return errors.map((e: VMError) => {\n        return {\n            sourceId: e.sourceId ? e.sourceId : block.id,\n            message: e.message,\n        }\n    })\n}\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON,\n    dsls: BlockDomainSpecificLanguage[]\n): VMProgram {\n    console.debug(`compile vm`, { workspace, dsls })\n\n    if (!workspace) return undefined\n\n    const roles: VMRole[] = workspace.variables\n        .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n        .map(v => ({ role: v.name, serviceShortId: v.type }))\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            switch (type) {\n                case \"math_single\": // built-in blockly\n                case \"jacdac_math_single\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    const op = inputs[0].fields[\"op\"].value as string\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"math_arithmetic\": // built-in blockly\n                case \"jacdac_math_arithmetic\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_operation\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_negate\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"logic_compare\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                default: {\n                    const definition = resolveServiceBlockDefinition(type)\n                    if (!definition) {\n                        console.warn(`unknown block ${type}`, {\n                            type,\n                            ev,\n                            block,\n                            d: Blockly.Blocks[type],\n                        })\n                    } else {\n                        // try any DSL\n                        const { dsl: dslName } = definition\n                        const dsl = dsls.find(d => d.id === dslName)\n                        const res = dsl?.compileExpressionToVM?.({\n                            event: ev,\n                            definition,\n                            block,\n                            blockToExpressionInner,\n                        })\n                        if (res) {\n                            if (res.errors)\n                                res.errors.forEach(e => errors.push(e))\n                            return res.expr\n                        }\n\n                        const { template } = definition\n                        switch (template) {\n                            case \"shadow\": {\n                                const field = inputs[0].fields[\"value\"]\n                                const v = field.value\n                                return <jsep.Literal>{\n                                    type: \"Literal\",\n                                    value: v,\n                                    raw: v + \"\",\n                                }\n                            }\n                            default: {\n                                console.warn(\n                                    `unsupported block template ${template} for ${type}`,\n                                    { ev, block }\n                                )\n                                break\n                            }\n                        }\n                        break\n                    }\n                }\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        console.debug(`block2c`, { event, type, block, inputs })\n        switch (type) {\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const definition = resolveServiceBlockDefinition(type)\n                if (definition) {\n                    const { dsl: dslName } = definition\n                    const dsl = dsls.find(dsl => dsl.id === dslName)\n                    const dslRes = dsl?.compileCommandToVM?.({\n                        event,\n                        block,\n                        definition,\n                        blockToExpression,\n                    })\n                    if (dslRes) {\n                        dslRes.errors = processErrors(block, dslRes.errors)\n                        return dslRes\n                    }\n\n                    console.warn(`unsupported block ${type}`, { block })\n                    return {\n                        cmd: undefined,\n                        errors: [],\n                    }\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks?.forEach(child => {\n            if (child) {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child)\n                    if (cmd) handler.commands.push(cmd)\n                    errors.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    } else {\n                        console.debug(e)\n                    }\n                }\n            }\n        })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks\n        .map(top => {\n            const { type } = top\n            let command: jsep.CallExpression\n            let topEvent: RoleEvent\n            let topErrors: VMError[]\n            let topMeta = false\n            const definition = resolveServiceBlockDefinition(type)\n            assert(!!definition)\n            const { template, dsl: dslName } = definition\n            const dsl = dslName && dsls?.find(d => d.id === dslName)\n\n            try {\n                const { expression, errors, event, meta } =\n                    dsl?.compileEventToVM?.({\n                        block: top,\n                        definition,\n                        blockToExpression,\n                    }) || {}\n                command = expression as jsep.CallExpression\n                topErrors = errors\n                topEvent = event\n                topMeta = meta\n\n                // if dsl didn't compile anything try again\n                if (!command && !topErrors?.length) {\n                    switch (template) {\n                        case \"meta\": {\n                            break\n                        }\n                        default: {\n                            console.warn(\n                                `unsupported handler template ${template} for ${type}`,\n                                { top }\n                            )\n                            break\n                        }\n                    }\n                }\n            } catch (e) {\n                console.debug(e)\n                if (e instanceof EmptyExpression) {\n                    return undefined\n                } else {\n                    throw e\n                }\n            }\n\n            // nothing to compile here\n            if (!command && !topErrors?.length) return undefined\n\n            const handler: VMHandler = {\n                commands: [\n                    {\n                        sourceId: top.id,\n                        type: \"cmd\",\n                        command,\n                    } as VMBase,\n                ],\n                errors: topErrors || [],\n                meta: !!topMeta,\n            }\n\n            addCommands(topEvent, top.children, handler)\n            return handler\n        })\n        .filter(handler => !!handler)\n\n    return {\n        roles,\n        handlers,\n    }\n}\n","import { Theme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../../jacdac-ts/src/jdom/flags\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecificationFromName,\n    serviceSpecifications,\n} from \"../../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../../jacdac-ts/src/jdom/utils\"\nimport {\n    toIdentifier,\n    toMemberExpression,\n} from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport KeyboardKeyField from \"../fields/KeyboardKeyField\"\nimport LEDColorField from \"../fields/LEDColorField\"\nimport LEDMatrixField from \"../fields/LEDMatrixField\"\nimport NoteField from \"../fields/NoteField\"\nimport ServoAngleField from \"../fields/ServoAngleField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    CommandBlockDefinition,\n    CONNECTED_BLOCK,\n    CONNECTION_BLOCK,\n    CustomBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    SeparatorDefinition,\n    ServiceBlockDefinition,\n    SET_STATUS_LIGHT_BLOCK,\n    ValueInputDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport { ExpressionWithErrors, makeVMBase } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage, {\n    CompileCommandToVMOptions,\n    CompileEventToVMOptions,\n    CompileEventToVMResult,\n    CompileExpressionToVMOptions,\n    CreateBlocksOptions,\n    CreateCategoryOptions,\n} from \"./dsl\"\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return isBooleanField(field)\n        ? \"Boolean\"\n        : isStringField(field)\n        ? \"String\"\n        : isNumericType(field)\n        ? \"Number\"\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nconst commandColor = \"#8c6a1d\"\n\nexport class ServicesBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"jacdacServices\"\n    supportedServices: jdspec.ServiceSpec[] = []\n    private _serviceBlocks: ServiceBlockDefinition[]\n    private _eventFieldBlocks: EventFieldDefinition[]\n    private _runtimeBlocks: BlockDefinition[]\n\n    private createServiceColor(theme: Theme) {\n        const sensorColor = theme.palette.success.main\n        const otherColor = theme.palette.info.main\n        const serviceColor = (srv: jdspec.ServiceSpec) =>\n            isSensor(srv) ? sensorColor : otherColor\n        return serviceColor\n    }\n\n    createBlocks(options: CreateBlocksOptions) {\n        const { theme } = options\n        const serviceColor = this.createServiceColor(theme)\n        // blocks\n        const customShadows = [\n            {\n                serviceClass: SRV_SERVO,\n                kind: \"rw\",\n                identifier: ServoReg.Angle,\n                field: \"_\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: ServoAngleField.SHADOW.type,\n                },\n            },\n            {\n                serviceClass: SRV_BUZZER,\n                kind: \"command\",\n                identifier: BuzzerCmd.PlayNote,\n                field: \"frequency\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: NoteField.SHADOW.type,\n                },\n            },\n        ]\n        const lookupCustomShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customShadows.find(\n                cs =>\n                    cs.serviceClass === service.classIdentifier &&\n                    cs.kind == info.kind &&\n                    cs.identifier === info.identifier &&\n                    cs.field == field.name\n            )?.shadow\n\n        const serviceHelp = (service: jdspec.ServiceSpec) =>\n            withPrefix(`/services/${service.shortId}`)\n        const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n            pkt.fields.every(toBlocklyType)\n        const fieldName = (\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) => (field.name === \"_\" ? reg.name : field.name)\n        const fieldToShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ): BlockReference =>\n            lookupCustomShadow(service, info, field) ||\n            (isBooleanField(field)\n                ? { kind: \"block\", type: \"jacdac_on_off\" }\n                : isStringField(field)\n                ? { kind: \"block\", type: \"text\" }\n                : field.unit === \"°\"\n                ? {\n                      kind: \"block\",\n                      type: \"jacdac_angle\",\n                  }\n                : field.unit === \"/\"\n                ? { kind: \"block\", type: \"jacdac_ratio\" }\n                : /^%/.test(field.unit)\n                ? { kind: \"block\", type: \"jacdac_percent\" }\n                : field.type === \"u8\"\n                ? { kind: \"block\", type: \"jacdac_byte\" }\n                : {\n                      kind: \"block\",\n                      type: \"math_number\",\n                      value: field.defaultValue || 0,\n                      min: field.typicalMin || field.absoluteMin,\n                      max: field.typicalMax || field.absoluteMax,\n                  })\n        const variableName = (srv: jdspec.ServiceSpec) =>\n            `${humanify(srv.camelName).toLowerCase()} 1`\n        const fieldVariable = (\n            service: jdspec.ServiceSpec\n        ): VariableInputDefinition => ({\n            type: \"field_variable\",\n            name: \"role\",\n            variable: variableName(service),\n            variableTypes: [service.shortId],\n            defaultType: service.shortId,\n        })\n        const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n            info.fields.map(field => ({\n                type: \"input_value\",\n                name: fieldName(info, field),\n                check: toBlocklyType(field),\n            }))\n        const fieldsToValues = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo\n        ) =>\n            toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n                info.fields,\n                field => fieldName(info, field),\n                field => fieldToShadow(service, info, field)\n            )\n        const fieldsToMessage = (info: jdspec.PacketInfo) =>\n            info.fields\n                .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n                .join(\" \")\n        const isEnabledRegister = (info: jdspec.PacketInfo) =>\n            info.fields.length === 1 &&\n            info.fields[0].type === \"bool\" &&\n            info.name === \"enabled\"\n        const customMessage = (\n            srv: jdspec.ServiceSpec,\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customMessages.find(\n                m =>\n                    m.service === srv.classIdentifier &&\n                    m.register === reg.identifier &&\n                    m.field === field.name\n            )\n\n        const allServices = serviceSpecifications()\n        this.supportedServices = allServices\n            .filter(\n                service =>\n                    !/^_/.test(service.shortId) &&\n                    service.status !== \"deprecated\"\n            )\n            .filter(\n                service => ignoredServices.indexOf(service.classIdentifier) < 0\n            )\n        const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n            allServices.filter(srv => srv.classIdentifier === cls)\n        const registers = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isRegister(pkt) &&\n                            !pkt.lowLevel &&\n                            includedRegisters.indexOf(pkt.identifier) > -1\n                    )\n                    .map(register => ({\n                        service,\n                        register,\n                    }))\n            )\n        )\n        const events = this.supportedServices\n            .map(service => ({\n                service,\n                events: service.packets.filter(\n                    pkt =>\n                        isEvent(pkt) &&\n                        !pkt.lowLevel &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                ),\n            }))\n            .filter(kv => !!kv.events.length)\n        const commands = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isCommand(pkt) &&\n                            !pkt.lowLevel &&\n                            fieldsSupported(pkt)\n                    )\n                    .map(pkt => ({\n                        service,\n                        command: pkt,\n                    }))\n            )\n        )\n\n        const customBlockDefinitions: CustomBlockDefinition[] = [\n            ...resolveService(SRV_HID_KEYBOARD).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `key`,\n                        message0: `send %1 key %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: KeyboardKeyField.KEY,\n                                name: \"combo\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Send a keyboard key combo`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.key(combo.selectors, combo.modifiers)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `fade`,\n                        message0: `fade %1 to %2 at speed %3`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"color\",\n                                check: \"Number\",\n                            },\n                            {\n                                type: \"input_value\",\n                                name: \"speed\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            color: {\n                                kind: \"block\",\n                                type: LEDColorField.SHADOW.type,\n                            },\n                            speed: {\n                                kind: \"block\",\n                                type: \"jacdac_ratio\",\n                                shadow: true,\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Fade LED color`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `set_digits`,\n                        message0: `set %1 digits to %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"digits\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            digits: {\n                                kind: \"block\",\n                                type: \"math_number\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display a number of the screen`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED_MATRIX).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `show_leds`,\n                        message0: `show %1 leds %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: LEDMatrixField.KEY,\n                                name: \"leds\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display LEDs on the LED matrix`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n        ].map(def => {\n            def.type = `jacdac_custom_${def.service.shortId.toLowerCase()}_${\n                def.type\n            }`\n            return def\n        })\n\n        const eventBlocks = events.map<EventBlockDefinition>(\n            ({ service, events }) => ({\n                kind: \"block\",\n                type: `jacdac_events_${service.shortId}`,\n                message0: `on %1 %2`,\n                args0: [\n                    fieldVariable(service),\n                    <InputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: events.map(event => [\n                            humanify(event.name),\n                            event.name,\n                        ]),\n                    },\n                ],\n                colour: serviceColor(service),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                tooltip: `Events for the ${service.name} service`,\n                helpUrl: serviceHelp(service),\n                service,\n                events,\n                template: \"event\",\n            })\n        )\n\n        const registerChangeByEventBlocks = registers\n            .filter(\n                ({ service }) =>\n                    !service.packets.some(\n                        pkt =>\n                            isEvent(pkt) &&\n                            ignoredEvents.indexOf(pkt.identifier) < 0\n                    )\n            )\n            .filter(\n                ({ register }) =>\n                    register.fields.length === 1 &&\n                    isNumericType(register.fields[0]) &&\n                    register.identifier !== SystemReg.Intensity\n            )\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n                message0: `on %1 ${humanify(register.name)} change by %2`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ].filter(v => !!v),\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: serviceColor(service),\n                tooltip: `Event raised when ${register.name} changes`,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_change_event\",\n            }))\n\n        const [registerSimples, registerComposites] = splitFilter(\n            registers,\n            reg => reg.register.fields.length == 1\n        )\n        const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n            registerSimples,\n            ({ register }) => !!toBlocklyType(register.fields[0])\n        )\n        const registerSimplesGetBlocks =\n            registerSimpleTypes.map<RegisterBlockDefinition>(\n                ({ service, register }) => ({\n                    kind: \"block\",\n                    type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                    message0:\n                        customMessage(service, register, register.fields[0])\n                            ?.get || `%1 ${humanify(register.name)}`,\n                    args0: [fieldVariable(service)],\n                    inputsInline: true,\n                    output: toBlocklyType(register.fields[0]),\n                    colour: serviceColor(service),\n                    tooltip: register.description,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    register,\n                    field: register.fields[0],\n\n                    template: \"register_get\",\n                })\n            )\n        const registerSimpleEnumTypes = registerSimpleOthers\n            .filter(\n                ({ service, register }) =>\n                    !!enumInfo(service, register.fields[0])\n            )\n            .map(({ service, register }) => ({\n                service,\n                register,\n                field: register.fields[0],\n                einfo: enumInfo(service, register.fields[0]),\n            }))\n        const registerCompositeEnumTypes = arrayConcatMany(\n            registerComposites.map(({ service, register }) =>\n                register.fields\n                    .map(field => ({\n                        service,\n                        register,\n                        field,\n                        einfo: enumInfo(service, field),\n                    }))\n                    .filter(({ einfo }) => !!einfo)\n            )\n        )\n        const registerEnumGetBlocks = [\n            ...registerSimpleEnumTypes,\n            ...registerCompositeEnumTypes,\n        ].map<RegisterBlockDefinition>(\n            ({ service, register, field, einfo }) => ({\n                kind: \"block\",\n                type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n                message0:\n                    customMessage(service, register, field)?.get ||\n                    `%1 ${humanify(register.name)}${\n                        field.name === \"_\" ? \"\" : ` ${field.name}`\n                    } %2`,\n                args0: [\n                    fieldVariable(service),\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: field.name,\n                        options: Object.keys(einfo.members).map(member => [\n                            humanify(member),\n                            member,\n                        ]),\n                    },\n                ],\n                inputsInline: true,\n                output: \"Boolean\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field,\n\n                template: \"register_get\",\n            })\n        )\n\n        const registerNumericsGetBlocks = registerComposites\n            .filter(re => re.register.fields.some(isNumericType))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n                message0: `%1 ${humanify(register.name)}${\n                    register.fields.length > 1 ? ` %2` : \"\"\n                }`,\n                args0: [\n                    fieldVariable(service),\n                    register.fields.length > 1\n                        ? <OptionsInputDefinition>{\n                              type: \"field_dropdown\",\n                              name: \"field\",\n                              options: register.fields\n                                  .filter(f => isNumericType(f))\n                                  .map(field => [\n                                      humanify(field.name),\n                                      fieldName(register, field),\n                                  ]),\n                          }\n                        : undefined,\n                ].filter(v => !!v),\n                inputsInline: true,\n                output: \"Number\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_get\",\n            }))\n\n        const registerSetBlocks = registers\n            .filter(({ register }) => register.kind === \"rw\")\n            .filter(({ register }) => fieldsSupported(register))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_set_${service.shortId}_${register.name}`,\n                message0: isEnabledRegister(register)\n                    ? `set %1 %2`\n                    : `set %1 ${register.name} to ${\n                          register.fields.length === 1\n                              ? \"%2\"\n                              : fieldsToMessage(register)\n                      }`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ],\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"register_set\",\n            }))\n\n        const commandBlocks = commands.map<CommandBlockDefinition>(\n            ({ service, command }) => ({\n                kind: \"block\",\n                type: `jacdac_command_${service.shortId}_${command.name}`,\n                message0: !command.fields.length\n                    ? `${humanify(command.name)} %1`\n                    : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                          command\n                      )}`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(command),\n                ],\n                values: fieldsToValues(service, command),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: command.description,\n                helpUrl: serviceHelp(service),\n                service,\n                command,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"command\",\n            })\n        )\n\n        this._serviceBlocks = [\n            ...eventBlocks,\n            ...registerChangeByEventBlocks,\n            ...registerSimplesGetBlocks,\n            ...registerEnumGetBlocks,\n            ...registerNumericsGetBlocks,\n            ...registerSetBlocks,\n            ...customBlockDefinitions,\n            ...commandBlocks,\n        ]\n\n        // generate accessor blocks for event data with numbers\n        this._eventFieldBlocks = arrayConcatMany(\n            events.map(({ service, events }) =>\n                events\n                    .filter(\n                        event => event.fields.filter(isNumericType).length > 0\n                    )\n                    .map(event => ({ service, event }))\n                    .map(\n                        ({ service, event }) =>\n                            <EventFieldDefinition>{\n                                kind: \"block\",\n                                type: `jacdac_event_field_${service.shortId}_${event.name}`,\n                                message0: `${event.name} %1`,\n                                args0: [\n                                    <InputDefinition>{\n                                        type: \"field_dropdown\",\n                                        name: \"field\",\n                                        options: event.fields.map(field => [\n                                            humanify(field.name),\n                                            field.name,\n                                        ]),\n                                    },\n                                ],\n                                colour: serviceColor(service),\n                                inputsInline: true,\n                                tooltip: `Data fields of the ${event.name} event`,\n                                helpUrl: serviceHelp(service),\n                                service,\n                                event,\n                                output: \"Number\",\n                                template: \"event_field\",\n                            }\n                    )\n            )\n        )\n\n        this._runtimeBlocks = [\n            {\n                kind: \"block\",\n                type: CONNECTION_BLOCK,\n                message0: \"on %1 %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: [\n                            [\"connected\", \"connected\"],\n                            [\"disconnected\", \"disconnected\"],\n                        ],\n                    },\n                ],\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"connection\",\n            },\n            {\n                kind: \"block\",\n                type: CONNECTED_BLOCK,\n                message0: \"%1 connected\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                ],\n                output: \"Boolean\",\n                inputsInline: true,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"connected\",\n            },\n            {\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                message0: \"set %1 status light to %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"all\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"color\",\n                        check: \"Number\",\n                    },\n                ],\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n                inputsInline: true,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Sets the color on the status light\",\n                helpUrl: \"\",\n            },\n        ]\n\n        return [\n            ...this._serviceBlocks,\n            ...this._eventFieldBlocks,\n            ...this._runtimeBlocks,\n        ]\n    }\n\n    createCategory(options: CreateCategoryOptions) {\n        const { theme, source, liveServices } = options\n        const serviceColor = this.createServiceColor(theme)\n\n        const blockServices =\n            source?.variables\n                .map(v => v.type)\n                .filter(type => !!serviceSpecificationFromName(type)) || []\n        const usedEvents: Set<jdspec.PacketInfo> = new Set(\n            source?.blocks\n                ?.map(block => ({\n                    block,\n                    definition: resolveServiceBlockDefinition(block.type),\n                }))\n                .filter(({ definition }) => definition.template === \"event\")\n                .map(({ block, definition }) => {\n                    const eventName = block.inputs[0].fields[\"event\"]\n                        .value as string\n                    return (definition as EventBlockDefinition).events.find(\n                        ev => ev.name === eventName\n                    )\n                })\n                .filter(ev => !!ev)\n        )\n        const jdBlocks = this._serviceBlocks.filter(block => !!block.service)\n        const services = uniqueMap(\n            jdBlocks,\n            block => block.service.shortId,\n            block => block.service\n        )\n\n        const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n            Flags.diagnostics\n                ? services\n                : [\n                      ...blockServices\n                          .map(srvid =>\n                              services.find(\n                                  service => service.shortId === srvid\n                              )\n                          )\n                          .filter(srv => !!srv),\n                      ...liveServices.map(srv => srv.specification),\n                  ],\n            srv => srv.shortId,\n            srv => srv\n        )\n            .filter(\n                srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0\n            )\n            .sort((l, r) => l.name.localeCompare(r.name))\n\n        const servicesCategories: CategoryDefinition[] = toolboxServices\n            .map(service => ({\n                service,\n                serviceBlocks: this._serviceBlocks.filter(\n                    block => block.service === service\n                ),\n            }))\n            .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n                kind: \"category\",\n                name: service.name,\n                colour: serviceColor(service),\n                contents: [\n                    ...serviceBlocks.map<BlockDefinition>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n                    ...this._eventFieldBlocks\n                        .filter(\n                            ev =>\n                                ev.service === service &&\n                                usedEvents.has(ev.event)\n                        )\n                        .map<BlockDefinition>(block => ({\n                            kind: \"block\",\n                            type: block.type,\n                            values: block.values,\n                        })),\n                ],\n                button: {\n                    kind: \"button\",\n                    text: `Add ${service.name} role`,\n                    callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                    service,\n                },\n            }))\n            .filter(cat => !!cat.contents?.length)\n\n        const commonCategory: CategoryDefinition = {\n            kind: \"category\",\n            name: \"Services\",\n            colour: commandColor,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: CONNECTION_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: CONNECTED_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: SET_STATUS_LIGHT_BLOCK,\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                    },\n                },\n            ],\n        }\n\n        return [\n            ...servicesCategories,\n            commonCategory,\n            <SeparatorDefinition>{\n                kind: \"sep\",\n            },\n        ]\n    }\n\n    compileEventToVM(options: CompileEventToVMOptions): CompileEventToVMResult {\n        const { block, definition, blockToExpression } = options\n        const { inputs } = block\n        const { template } = definition\n\n        switch (template) {\n            case \"event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { value: eventName } = inputs[0].fields[\"event\"]\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    },\n                    event: {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    },\n                }\n            }\n            case \"register_change_event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    undefined,\n                    inputs[0].child\n                )\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    },\n                    errors,\n                }\n            }\n        }\n\n        return undefined\n    }\n\n    compileExpressionToVM(\n        options: CompileExpressionToVMOptions\n    ): ExpressionWithErrors {\n        const { event, definition, block } = options\n        const { inputs, id } = block\n        const { template } = definition\n        switch (template) {\n            case \"register_get\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { value: role } = inputs[0].fields[\"role\"]\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        role as string,\n                        field\n                            ? toMemberExpression(\n                                  register.name,\n                                  field.value as string\n                              )\n                            : register.name\n                    ),\n                    errors: [],\n                }\n            }\n            case \"event_field\": {\n                const { event: eventInfo } = definition as EventFieldDefinition\n                const errors: VMError[] = []\n                if (event.event !== eventInfo.name) {\n                    errors.push({\n                        sourceId: id,\n                        message: `Event ${eventInfo.name} is not available in this handler.`,\n                    })\n                }\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        event.role,\n                        toMemberExpression(event.event, field.value as string)\n                    ),\n                    errors,\n                }\n            }\n            default:\n                return undefined\n        }\n    }\n\n    compileCommandToVM(options: CompileCommandToVMOptions) {\n        const { event, block, definition, blockToExpression } = options\n        const { template } = definition\n        const { inputs } = block\n        switch (template) {\n            case \"register_set\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                const { value: role } = inputs[0].fields.role\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role as string, register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"writeRegister\"),\n                    }),\n                    errors,\n                }\n            }\n            case \"command\": {\n                const { command: serviceCommand } =\n                    definition as CommandBlockDefinition\n                const { value: role } = inputs[0].fields.role\n                const exprsErrors = inputs.map(a =>\n                    blockToExpression(event, a.child)\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: exprsErrors.map(p => p.expr),\n                        callee: toMemberExpression(\n                            role as string,\n                            serviceCommand.name\n                        ),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n        }\n\n        return undefined\n    }\n}\nconst servicesDSL = new ServicesBlockDomainSpecificLanguage()\nexport default servicesDSL\n","import {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    DummyInputDefinition,\n    PRIMITIVE_TYPES,\n    StatementInputDefinition,\n    TextInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst colour = \"#8a57c2\"\nclass AzureIoTHubBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"azureiothub\"\n    private _blocks: BlockDefinition[]\n    createBlocks() {\n        return (this._blocks = [\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry\",\n                message0: \"on receive cloud-to-device message\",\n                args0: [],\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry_number\",\n                message0: \"received number %1\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                ],\n                output: \"Number\",\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_receive_telemetry_string\",\n                message0: \"received string %1\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                ],\n                output: \"String\",\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_send_telemetry\",\n                message0: \"send device-to-cloud message %1 %2\",\n                args0: [\n                    <DummyInputDefinition>{\n                        type: \"input_dummy\",\n                    },\n                    <StatementInputDefinition>{\n                        type: \"input_statement\",\n                        name: \"fields\",\n                    },\n                ],\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: \"azureiothub_send_telemetry_value\",\n                message0: \"with %1 = %2\",\n                args0: [\n                    <TextInputDefinition>{\n                        type: \"field_input\",\n                        name: \"name\",\n                        text: \"value\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"value\",\n                        check: PRIMITIVE_TYPES,\n                    },\n                ],\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n        ])\n    }\n    createCategory(): CategoryDefinition[] {\n        return [\n            {\n                kind: \"category\",\n                name: \"Azure IoT Hub\",\n                colour,\n                contents: [\n                    ...this._blocks.map(\n                        ({ type }) =>\n                            <BlockDefinition>{\n                                kind: \"block\",\n                                type,\n                            }\n                    ),\n                ],\n            },\n        ]\n    }\n}\n\nconst azureIoTHubDSL: BlockDomainSpecificLanguage =\n    new AzureIoTHubBlockDomainSpecificLanguage()\n\nexport default azureIoTHubDSL\n","import { DTDLUnits } from \"../../../../jacdac-ts/src/azure-iot/dtdl\"\nimport {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    OptionsInputDefinition,\n    StatementInputDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nexport const DEVICE_TWIN_SEND_TELEMETRY = \"device_twin_send_telemetry\"\nexport const DEVICE_TWIN_DEFINITION_BLOCK = \"device_twin_definition\"\nexport const DEVICE_TWIN_PROPERTY_BLOCK = \"device_twin_property\"\n\nexport const DEVICE_TWIN_PROPERTY_TYPE = \"DeviceTwinProperty\"\nexport const DEVICE_TWIN_VALUE_TYPE = \"DeviceTwinValue\"\n\nconst colour = \"#843ed0\"\nconst deviceTwinContentType = \"DeviceTwinContent\"\nconst deviceTwinCommonOptionType = \"DeviceTwinCommonOption\"\nconst deviceTwinPropertyOptionType = \"DeviceTwinPropertyOption\"\nconst deviceTwinStatementType = [deviceTwinContentType]\nconst deviceTwinCommonOptionStatementType = [deviceTwinCommonOptionType]\nconst deviceTwinPropertyOptionStatementType = [\n    deviceTwinPropertyOptionType,\n    ...deviceTwinCommonOptionStatementType,\n]\n\nclass DeviceTwinBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"devicetwin\"\n    private _blocks: BlockDefinition[]\n    createBlocks() {\n        return (this._blocks = [\n            {\n                kind: \"block\",\n                type: DEVICE_TWIN_DEFINITION_BLOCK,\n                message0: \"device twin\",\n                args0: [],\n                inputsInline: true,\n                nextStatement: deviceTwinStatementType,\n                colour,\n            },\n            {\n                kind: \"block\",\n                type: DEVICE_TWIN_PROPERTY_BLOCK,\n                message0: \"property %1 %2 %3\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"name\",\n                        variable: \"property 1\",\n                        variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                        defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                    },\n                    {\n                        type: \"input_dummy\",\n                    },\n                    <StatementInputDefinition>{\n                        type: \"input_statement\",\n                        name: \"options\",\n                        check: deviceTwinPropertyOptionStatementType,\n                    },\n                ],\n                previousStatement: deviceTwinStatementType,\n                nextStatement: deviceTwinStatementType,\n                colour,\n                inputsInline: false,\n            },\n            // options\n            {\n                kind: \"block\",\n                type: \"device_twin_option_property_field\",\n                message0: \"field %1 %2 %3\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"variable\",\n                        variable: \"value 1\",\n                        variableTypes: [DEVICE_TWIN_VALUE_TYPE],\n                        defaultType: DEVICE_TWIN_VALUE_TYPE,\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"unit\",\n                        options: DTDLUnits().map(unit => [unit, unit]),\n                    },\n                    {\n                        type: \"input_value\",\n                        name: \"value\",\n                    },\n                ],\n                previousStatement: deviceTwinCommonOptionStatementType,\n                nextStatement: deviceTwinCommonOptionStatementType,\n                colour,\n                inputsInline: false,\n            },\n            // events\n            {\n                kind: \"block\",\n                type: \"device_twin_property_change\",\n                message0: \"on property %1 change\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"name\",\n                        variable: \"property 1\",\n                        variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                        defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                    },\n                ],\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour,\n            },\n        ])\n    }\n    createCategory(): CategoryDefinition[] {\n        return [\n            {\n                kind: \"category\",\n                name: \"Device Twin\",\n                colour,\n                contents: [\n                    ...this._blocks.map(\n                        ({ type }) =>\n                            <BlockDefinition>{\n                                kind: \"block\",\n                                type,\n                            }\n                    ),\n                ],\n            },\n        ]\n    }\n}\n\nconst deviceTwinDSL: BlockDomainSpecificLanguage =\n    new DeviceTwinBlockDomainSpecificLanguage()\n\nexport default deviceTwinDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport JDomTreeField from \"../fields/JDomTreeField\"\nimport TwinField from \"../fields/TwinField\"\nimport WatchValueField from \"../fields/WatchValueField\"\nimport {\n    BlockDefinition,\n    InputDefinition,\n    INSPECT_BLOCK,\n    TWIN_BLOCK,\n    VariableInputDefinition,\n    WATCH_BLOCK,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport servicesDSL from \"./servicesdsl\"\n\nconst colour = \"#888\"\n\nconst toolsDSL: BlockDomainSpecificLanguage = {\n    id: \"tools\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"Number\", \"Boolean\", \"String\"],\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n        },\n    ],\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Tools\",\n            colour: colour,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: WATCH_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: TWIN_BLOCK,\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: INSPECT_BLOCK,\n                },\n            ],\n        },\n    ],\n\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === WATCH_BLOCK) {\n            const { inputs } = block\n            const { expr, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: <jsep.CallExpression>{\n                    type: \"CallExpression\",\n                    arguments: [expr],\n                    callee: toIdentifier(\"watch\"),\n                },\n                errors,\n                meta: true\n            }\n        }\n\n        return undefined\n    },\n}\n\nexport default toolsDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMCommand } from \"../../../../jacdac-ts/src/vm/ir\"\nimport {\n    BlockDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    InputDefinition,\n    REPEAT_EVERY_BLOCK,\n    SeparatorDefinition,\n    ValueInputDefinition,\n    WAIT_BLOCK,\n} from \"../toolbox\"\nimport { makeVMBase, processErrors } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst colour = \"#4fbac9\"\nconst loopsDsl: BlockDomainSpecificLanguage = {\n    id: \"loops\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: CODE_STATEMENT_TYPE,\n            nextStatement: CODE_STATEMENT_TYPE,\n            colour,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n    ],\n\n    createCategory: () => [\n        <SeparatorDefinition>{\n            kind: \"sep\",\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Commands\",\n            order: 4,\n            colour,\n            contents: [\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: REPEAT_EVERY_BLOCK,\n                    values: {\n                        interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: WAIT_BLOCK,\n                    values: {\n                        time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n            ].filter(b => !!b),\n        },\n    ],\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === REPEAT_EVERY_BLOCK) {\n            const { inputs } = block\n            const { expr: time, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: (\n                    makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }) as VMCommand\n                ).command,\n                errors: processErrors(block, errors),\n            }\n        }\n        return undefined\n    },\n    compileCommandToVM: ({ event, block, blockToExpression }) => {\n        const { type } = block\n        if (type === WAIT_BLOCK) {\n            const { inputs } = block\n            {\n                const { expr: time, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }),\n                    errors: processErrors(block, errors),\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default loopsDsl\n","import BlockDomainSpecificLanguage from \"./dsl\"\n\nconst logicDsl: BlockDomainSpecificLanguage = {\n    id: \"logic\",\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Logic\",\n            colour: \"%{BKY_LOGIC_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"dynamic_if\",\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_compare\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_operation\",\n                    values: {\n                        A: { kind: \"block\", type: \"logic_boolean\" },\n                        B: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_negate\",\n                    values: {\n                        BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_boolean\",\n                },\n            ],\n        },\n    ],\n}\nexport default logicDsl\n","import {\n    CategoryDefinition,\n    OptionsInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst mathDSL: BlockDomainSpecificLanguage = {\n    id: \"jacdacmath\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random_range\",\n            message0: \"random from %1 to %2\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"min\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"max\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            inputsInline: true,\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_clamp\",\n            message0: \"clamp %1 in [%2, %3]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"minInclusive\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"maxInclusive\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ],\n    createCategory: () => [\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Math\",\n            colour: \"%{BKY_MATH_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_arithmetic\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_single\",\n                    values: {\n                        NUM: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                { kind: \"block\", type: \"jacdac_math_random\" },\n                { kind: \"block\", type: \"jacdac_math_random_range\" },\n                { kind: \"block\", type: \"jacdac_math_map\" },\n                { kind: \"block\", type: \"math_number\" },\n            ],\n        },\n    ],\n}\n\nexport default mathDSL\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useVMRunner from \"./useVMRunner\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport BlockContext, { BlockProvider } from \"../blockly/BlockContext\"\nimport BlockDiagnostics from \"../blockly/BlockDiagnostics\"\nimport servicesDSL from \"../blockly/dsl/servicesdsl\"\nimport azureIoTHubDSL from \"../blockly/dsl/azureiothubdsl\"\nimport deviceTwinDSL from \"../blockly/dsl/devicetwindsl\"\nimport toolsDSL from \"../blockly/dsl/toolsdsl\"\nimport loopsDsl from \"../blockly/dsl/loopsdsl\"\nimport logicDsl from \"../blockly/dsl/logicdsl\"\nimport mathDSL from \"../blockly/dsl/mathdsl\"\nimport variablesDsl from \"../blockly/dsl/variablesdsl\"\nimport shadowDsl from \"../blockly/dsl/shadowdsl\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport { BlocklyWorkspaceWithServices } from \"../blockly/WorkspaceContext\"\nimport BlockEditor from \"../blockly/BlockEditor\"\n\nconst VM_SOURCE_STORAGE_KEY = \"tools:vmeditor\"\nfunction VMEditorWithContext() {\n    const { dsls, workspace, workspaceJSON, roleManager } =\n        useContext(BlockContext)\n    const [program, setProgram] = useState<VMProgram>()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    useEffect(() => {\n        try {\n            const newProgram = workspaceJSONToVMProgram(workspaceJSON, dsls)\n            if (JSON.stringify(newProgram) !== JSON.stringify(program))\n                setProgram(newProgram)\n        } catch (e) {\n            console.error(e)\n            setProgram(undefined)\n        }\n    }, [dsls, workspaceJSON])\n    useEffect(\n        () => program && roleManager?.setRoles(program.roles),\n        [roleManager, program]\n    )\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <VMToolbar runner={runner} run={run} cancel={cancel} />\n            </Grid>\n            <Grid item xs={12}>\n                <BlockEditor />\n            </Grid>\n            {Flags.diagnostics && (\n                <>\n                    <VMDiagnostics program={program} />\n                    <BlockDiagnostics />\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function VMEditor() {\n    const dsls = useMemo(() => {\n        return [\n            servicesDSL,\n            azureIoTHubDSL,\n            deviceTwinDSL,\n            toolsDSL,\n            loopsDsl,\n            logicDsl,\n            mathDSL,\n            variablesDsl,\n            shadowDsl,\n        ]\n    }, [])\n\n    return (\n        <NoSsr>\n            <BlockProvider storageKey={VM_SOURCE_STORAGE_KEY} dsls={dsls}>\n                <VMEditorWithContext />\n            </BlockProvider>\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}