{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","useId","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","specification","filter","rs","strcmp","deviceId","defaultDeviceFilter","d","Dashboard","showConnect","showStartSimulators","deviceSort","deviceFilter","AppContext","toggleShowDeviceHostsDialog","useDevices","announced","sort","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","splitFilter","findServiceProvider","hosted","physicals","roleManager","useRoleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","useServiceRole","service","role","setRole","useEffect","subscribe","ROLE_CHANGE","ServiceRole","showSelectRoleDialog","handleClick","hasRoleForService","_","DashboardServiceWidgetItem","useRegisterUnpackedValue","register","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","visible","registers","useMemo","ids","isRegister","identifier","indexOf","reg","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CTRL","SRV_LOGGER","SRV_SETTINGS","SRV_PROTO_TEST","DashboardDevice","variant","showAvatar","showHeader","useDeviceName","useDeviceSpecification","serviceGridRef","intersection","ServiceWidgets","useCallback","isMixin","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","DashboardDeviceItem","drawerType","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","DrawerType","xs","sm","md","lg","xl","mgr","setMgr","ROLE_MANAGER_CHANGE","hr","background","palette","text","disabled","marginBottom","start","width","GridHeader","count","clsx","undefined"],"mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;;;;;;;;;;;;;ACnBf;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAGC,mEAAU,CAAC,UAAAC,KAAK;AAAA,SAC9BC,mEAAY,CAAC;AACTC,UAAM,EAAE;AACJC,gBAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADR;AADC,GAAD,CADkB;AAAA,CAAN,CAA5B;;AAQA,SAASC,iBAAT,CAA2BC,KAA3B,EAA6D;AACzD,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AADyD,MAEjDU,YAFiD,GAEhCF,KAFgC,CAEjDE,YAFiD;;AAAA,oBAGzCC,iDAAU,CAAqBC,6DAArB,CAH+B;AAAA,MAGjDC,GAHiD,eAGjDA,GAHiD;;AAAA,MAIjDC,UAJiD,GAIlCD,GAJkC,CAIjDC,UAJiD;AAKzD,MAAMC,OAAO,GAAGC,mEAAS,CAACH,GAAD,EAAM,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACF,OAAF,CAAU;AAAEL,kBAAY,EAAZA,YAAF;AAAgBQ,gBAAU,EAAE;AAA5B,KAAV,CAAJ;AAAA,GAAP,CAAzB;AACA,MAAMC,IAAI,GAAGC,2GAAuC,CAACV,YAAD,CAApD,CANyD,CAQzD;;AACA,MAAI,CAACI,UAAU,CAACO,MAAZ,IAAsBN,OAAtB,aAAsBA,OAAtB,eAAsBA,OAAO,CAAEM,MAAnC,EAA2C,OAAO,IAAP;AAE3C,sBACI,iDAAC,+DAAD;AAAK,gBAAY,EAAC;AAAlB,kBACI,iDAAC,uDAAD;AAAO,YAAQ,EAAC,MAAhB;AAAuB,aAAS,EAAE;AAAlC,KACK,CAACF,IAAD,iBAAS,8FADd,EAEKA,IAAI,iBAAI,qFAAyBA,IAAI,CAACG,IAA9B,aAFb,EAGKR,UAAU,CAACS,GAAX,CAAe,UAAAC,SAAS;AAAA,wBACrB,iDAAC,mEAAD;AACI,SAAG,EAAEA,SAAS,CAACC,IADnB;AAEI,eAAS,EAAED,SAFf;AAGI,eAAS,EAAEf,OAAO,CAACL,MAHvB;AAII,UAAI,EAAE,IAJV;AAKI,iBAAW,EAAE;AALjB,MADqB;AAAA,GAAxB,CAHL,CADJ,CADJ;AAiBH;;AAEc,SAASsB,YAAT,CAAsBlB,KAAtB,EAAwD;AACnE,sBACI,iDAAC,+DAAD,qBACI,iDAAC,iBAAD,EAAuBA,KAAvB,CADJ,CADJ;AAKH,C;;;;;;;;;;;;;;;;;;;;;;;;;ACvDD;AAGe,SAASmB,gBAAT,CAAgDC,eAAhD,EAA2E;AACtF,MAAMC,KAAK,GAAGC,gBAAM,CAAc,IAAIC,GAAJ,EAAd,CAApB;;AADsF,kBAE1DC,kBAAQ,CAAC,CAAD,CAFkD;AAAA,MAE/EC,MAF+E;AAAA,MAEvEC,SAFuE;;AAItF,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAiBP,KAAK,CAACQ,OAAN,CAAcC,GAAd,CAAkBF,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEG,EAAxB,CAAjB;AAAA,GAAjB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACJ,IAAD,EAAcK,KAAd,EAAiC;AACjD,QAAI,CAACL,IAAL,EAAW;AACX,QAAMM,CAAC,GAAGP,QAAQ,CAACC,IAAD,CAAlB;;AACA,QAAI,CAAC,CAACK,KAAF,KAAYC,CAAhB,EAAmB;AACf,UAAI,CAACD,KAAL,EACIZ,KAAK,CAACQ,OAAN,CAAcM,MAAd,CAAqBP,IAAI,CAACG,EAA1B,EADJ,KAEK;AACD,YAAIX,eAAJ,EACIC,KAAK,CAACQ,OAAN,CAAcO,KAAd;AACJf,aAAK,CAACQ,OAAN,CAAcQ,GAAd,CAAkBT,IAAI,CAACG,EAAvB;AACH;AACDL,eAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACH;AACJ,GAbD;;AAcA,SAAO;AACHa,gBAAY,EAAEjB,KAAK,CAACQ,OAAN,CAAcU,IAAd,GAAqB,CADhC;AAEHZ,YAAQ,EAARA,QAFG;AAGHK,eAAW,EAAXA,WAHG;AAIHQ,kBAAc,EAAE,wBAACZ,IAAD,EAAiB;AAC7BI,iBAAW,CAACJ,IAAD,EAAO,CAACD,QAAQ,CAACC,IAAD,CAAhB,CAAX;AACH,KANE;AAOHQ,SAAK,EAAE,iBAAM;AACTf,WAAK,CAACQ,OAAN,CAAcO,KAAd;AACAV,eAAS,CAAC,CAAD,CAAT;AACH;AAVE,GAAP;AAYH,C;;;;;;;;;;;;;;;;;;;;;;;AClCD;AACA;AACA;AAEA;AAEA;AAEe,SAASe,WAAT,CAAqBzC,KAArB,EAOW;AAAA,MACd0C,KADc,GAC2D1C,KAD3D,CACd0C,KADc;AAAA,MACPC,MADO,GAC2D3C,KAD3D,CACP2C,MADO;AAAA,MACCpC,OADD,GAC2DP,KAD3D,CACCO,OADD;AAAA,MACUqC,QADV,GAC2D5C,KAD3D,CACU4C,QADV;AAAA,MACoBC,cADpB,GAC2D7C,KAD3D,CACoB6C,cADpB;AAAA,MACoCC,QADpC,GAC2D9C,KAD3D,CACoC8C,QADpC;AAAA,MACiDC,KADjD,mDAC2D/C,KAD3D;;AAEtB,MAAMgD,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,WAAsB;AAAA,aAAMJ,cAAc,CAACI,MAAD,CAApB;AAAA,KAAtB;AAAA,GAArB;;AACA,MAAMC,SAAS,GAAGC,uCAAK,EAAvB;AAEA,MAAI,CAACR,MAAD,IAAW,EAACpC,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEM,MAAV,CAAf,EACI,OAAO,IAAP;AAEJ,sBAAO;AAAS,MAAE,EAAEqC;AAAb,kBACH,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,kBACI,oBAAC,yBAAD;AAAY,SAAK,EAAER,KAAnB;AAA0B,UAAM,EAAEC;AAAlC,IADJ,EAEKpC,OAFL,aAEKA,OAFL,uBAEKA,OAAO,CAAEQ,GAAT,CAAa,UAAAkC,MAAM;AAAA,wBAAI,oBAAC,kCAAD;AACpB,SAAG,EAAEA,MAAM,CAAClB,EADQ;AAEpB,YAAM,EAAEkB,MAFY;AAGpB,cAAQ,EAAEL,QAAQ,CAACK,MAAD,CAHE;AAIpB,oBAAc,EAAED,YAAY,CAACC,MAAD;AAJR,OAKhBF,KALgB,EAAJ;AAAA,GAAnB,CAFL,EAQKD,QARL,CADG,CAAP;AAYH,C;;;;;;;;;;;;;;;ACnCD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CAEA;;CAEA;;AACA;AACA;AACA;AACA;;AAEA,SAASM,iBAAT,CAA2BC,CAA3B,EAAwCC,CAAxC,EAA6D;AACzD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WACbA,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CACI,UAACC,IAAD,EAAOC,GAAP;AAAA,aACID,IAAI,IAAIE,0BAAS,CAACD,GAAD,CAAT,GAAiB,EAAjB,GAAsBE,mCAAkB,CAACF,GAAD,CAAlB,GAA0B,CAA1B,GAA8B,CAAxD,CADR;AAAA,KADJ,EAGI,CAHJ,KAIK,CALQ;AAAA,GAAjB;;AAMA,MAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WACVA,IAAI,CAACN,MAAL,CAAY,UAACC,IAAD,EAAOH,GAAP;AAAA,aAAeD,QAAQ,CAACC,GAAD,CAAvB;AAAA,KAAZ,EAA0C,CAA1C,CADU;AAAA,GAAd;;AAGA,MAAMS,EAAE,GAAGF,KAAK,CACZV,CAAC,CACIa,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKpD,GAHL,CAGS,UAAAyC,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAA1D,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAM2D,EAAE,GAAGP,KAAK,CACZT,CAAC,CACIY,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKpD,GAHL,CAGS,UAAAyC,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAA1D,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAIsD,EAAE,KAAKK,EAAX,EAAe,OAAO,CAACL,EAAD,GAAMK,EAAb;AACf,SAAOC,wBAAM,CAAClB,CAAC,CAACmB,QAAH,EAAalB,CAAC,CAACkB,QAAf,CAAb;AACH,C,CAED;;;AACA,SAASC,mBAAT,CAA6BC,CAA7B,EAAmD;AAC/C,SAAO,IAAP;AACH;;AAcc,SAASC,SAAT,CAAmB3E,KAAnB,EAA0C;AAAA,MAEjD4E,WAFiD,GAOjD5E,KAPiD,CAEjD4E,WAFiD;AAAA,MAGjDC,mBAHiD,GAOjD7E,KAPiD,CAGjD6E,mBAHiD;AAAA,0BAOjD7E,KAPiD,CAIjD8E,UAJiD;AAAA,MAIjDA,UAJiD,kCAIpC1B,iBAJoC;AAAA,4BAOjDpD,KAPiD,CAKjD+E,YALiD;AAAA,MAKjDA,YALiD,oCAKlCN,mBALkC;AAAA,MAM9C1B,KAN8C,mDAOjD/C,KAPiD;;AAAA,oBAQrCG,oBAAU,CAAqBC,sBAArB,CAR2B;AAAA,MAQ7CC,GAR6C,eAQ7CA,GAR6C;;AAAA,qBASbF,oBAAU,CAAC6E,0BAAD,CATG;AAAA,MAS7CC,2BAT6C,gBAS7CA,2BAT6C;;AAUrD,MAAM1E,OAAO,GAAG2E,6BAAU,CAAC;AAAEC,aAAS,EAAE,IAAb;AAAmBzE,cAAU,EAAE;AAA/B,GAAD,CAAV,CACX2D,MADW,CACJU,YADI,EAEXK,IAFW,CAENN,UAFM,CAAhB;AAGA,MAAMpF,KAAK,GAAG2F,2BAAQ,EAAtB;AACA,MAAMC,MAAM,GAAGC,gCAAa,CAAC7F,KAAK,CAAC8F,WAAN,CAAkBC,IAAlB,CAAuBC,gCAAvB,CAAD,CAA5B;;AAdqD,0BAehBvE,gBAAgB,CAACmE,MAAD,CAfA;AAAA,MAe7C3D,QAf6C,qBAe7CA,QAf6C;AAAA,MAenCa,cAfmC,qBAenCA,cAfmC;;AAAA,qBAgBzBmD,6BAAW,CACnCpF,OADmC,EAEnC,UAAAmE,CAAC;AAAA,WAAI,CAAC,CAACrE,GAAG,CAACuF,mBAAJ,CAAwBlB,CAAC,CAACF,QAA1B,CAAN;AAAA,GAFkC,CAhBc;AAAA,MAgB9CqB,MAhB8C;AAAA,MAgBtCC,SAhBsC;;AAoBrD,MAAMC,WAAW,GAAGC,iCAAc,EAAlC;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChC5F,OAAG,CAAC6F,gBAAJ,GAAuBC,OAAvB,CAA+B,UAAAC,GAAG;AAAA,aAAI/F,GAAG,CAACgG,qBAAJ,CAA0BD,GAA1B,CAAJ;AAAA,KAAlC;AACH,GAFD;;AAGA,MAAME,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,WAAMP,WAAN,aAAMA,WAAN,uBAAMA,WAAW,CAAEQ,eAAb,EAAN;AAAA,GAA9B;;AAEA,sBACI,uDACI,oBAAC,WAAD;AACI,SAAK,EAAC,YADV;AAEI,UAAM,eACF,0CACK1B,mBAAmB,IAAI,CAAC,CAACkB,WAAzB,iBACG,oBAAC,oCAAD;AACI,WAAK,EAAC,0BADV;AAEI,aAAO,EAAEO;AAFb,oBAII,oBAAC,sBAAD,OAJJ,CAFR,eASI,oBAAC,oCAAD;AACI,WAAK,EAAC,iBADV;AAEI,aAAO,EAAErB;AAFb,oBAII,oBAAC,kBAAD,OAJJ,CATJ,eAeI,oBAAC,oCAAD;AACI,WAAK,EAAC,kBADV;AAEI,aAAO,EAAEgB;AAFb,oBAII,oBAAC,oBAAD,OAJJ,CAfJ,EAoB6B,GApB7B,CAHR;AA0BI,WAAO,EAAEJ,MA1Bb;AA2BI,YAAQ,EAAElE,QA3Bd;AA4BI,kBAAc,EAAEa;AA5BpB,KA6BQO,KA7BR,EADJ,eAgCI,oBAAC,WAAD;AACI,SAAK,EAAC,SADV;AAEI,UAAM,EACF6B,WAAW,iBACP,oBAAC,6BAAD;AAAgB,UAAI,EAAE,KAAtB;AAA6B,iBAAW,EAAE;AAA1C,MAJZ;AAOI,WAAO,EAAEkB,SAPb;AAQI,YAAQ,EAAEnE,QARd;AASI,kBAAc,EAAEa;AATpB,KAUQO,KAVR,GAYK6B,WAAW,IAAI,CAACkB,SAAS,CAACjF,MAA1B,iBACG,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,2BAAD,OADJ,CAbR,CAhCJ,CADJ;AAqDH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJD;AACA;AAGe,SAAS2F,cAAT,CAAwBC,OAAxB,EAA4C;AAAA,kBAC/BjF,kBAAQ,CAASiF,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEC,IAAlB,CADuB;AAAA,MAChDA,IADgD;AAAA,MAC1CC,OAD0C;;AAEvDC,qBAAS,CAAC;AAAA,WAAMH,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEI,SAAT,CAAmBC,8BAAnB,EAAgC,YAAM;AAClDH,aAAO,CAACF,OAAO,CAACC,IAAT,CAAP;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAACD,OAAD,CAFK,CAAT;AAGA,SAAOC,IAAP;AACH,C;;ACVD;AACA;AAEA;AACA;AACA;AACA;AAEe,SAASK,WAAT,CAAqB/G,KAArB,EAAoD;AAAA,MACvDyG,OADuD,GAC3CzG,KAD2C,CACvDyG,OADuD;;AAAA,oBAE9BtG,oBAAU,CAAC6E,0BAAD,CAFoB;AAAA,MAEvDgC,oBAFuD,eAEvDA,oBAFuD;;AAG/D,MAAMjB,WAAW,GAAGC,iCAAc,EAAlC;AACA,MAAMU,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;AACA,MAAMQ,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,oBAAoB,CAACP,OAAD,CAA1B;AAAA,GAApB;;AAEA,MAAMS,iBAAiB,GAAG1G,4BAAS,CAACuF,WAAD,EAAc,UAAAoB,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAED,iBAAH,CAAqBT,OAArB,CAAJ;AAAA,GAAf,CAAnC,CAP+D,CAQ/D;;AACA,MAAI,CAACS,iBAAL,EACI,OAAO,IAAP;AAEJ,sBAAO,oBAAC,qBAAD;AAAQ,QAAI,EAAC,OAAb;AAAqB,WAAO,EAAED;AAA9B,KAA4CP,IAAI,IAAI,KAApD,CAAP;AACH,C;;;;ACrBD;AACA;AACA;AAGA;AACA;AACA;AAEe,SAASU,0BAAT,CACXpH,KADW,EAEA;AAAA,MACHyG,OADG,GACSzG,KADT,CACHyG,OADG;;AAAA,8BAEYY,qDAAwB,CAC3CZ,OAAO,CAACa,QAAR,CAAiBC,sDAAjB,CAD2C,EAE3CvH,KAF2C,CAFpC;AAAA,MAEJwH,YAFI;;AAOX,sBACI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,cAAU,EAAC;AAAvC,kBACI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE;AAAb,kBACI,oBAAC,WAAD;AAAa,WAAO,EAAEf;AAAtB,IADJ,CADJ,EAIKe,YAAY,iBACT,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,yBAAD;AACI,aAAS,EAAC,mBADd;AAEI,WAAO,EAAC,SAFZ;AAGI,aAAS,EAAC,MAHd;AAII,SAAK,EAAE;AAAEC,WAAK,EAAE;AAAT;AAJX,KAMKD,YANL,CADJ,CALR,CADJ,eAkBI,oBAAC,sCAAD,EAA4BxH,KAA5B,CAlBJ,CADJ;AAsBH,C;;;;;;;;ACxCD;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA,IAAM0H,eAAe,GAAG,CACpBH,kDADoB,EAEpBA,kFAFoB,EAGpBA,8DAHoB,EAIpBA,gEAJoB,CAAxB;AAMA,IAAMI,kBAAkB,GAAG,CACvBJ,4CADuB,EAEvBA,wCAFuB,EAGvBA,gDAHuB,CAA3B;AAMe,SAASK,uBAAT,CAAiC5H,KAAjC,EAA+D;AAAA,MAClEyG,OADkE,GACnCzG,KADmC,CAClEyG,OADkE;AAAA,MACzD7D,QADyD,GACnC5C,KADmC,CACzD4C,QADyD;AAAA,MAC/CiF,OAD+C,GACnC7H,KADmC,CAC/C6H,OAD+C;AAE1E,MAAMzD,aAAa,GAAG5D,4BAAS,CAACiG,OAAD,EAAU,UAAA9F,IAAI;AAAA,WAAIA,IAAI,CAACyD,aAAT;AAAA,GAAd,CAA/B;AACA,MAAM0D,SAAuB,GAAGC,iBAAO,CAAC,YAAM;AAAA;;AAC1C,QAAMtE,OAAO,GAAGW,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEX,OAA/B;AACA,QAAIuE,GAAG,GACH,CAAAvE,OAAO,SAAP,IAAAA,OAAO,WAAP,+BAAAA,OAAO,CACDY,MADN,CACa,UAAAT,GAAG;AAAA,aAAIqE,2BAAU,CAACrE,GAAD,CAAd;AAAA,KADhB,qEAEM7C,GAFN,CAEU,UAAA6C,GAAG;AAAA,aAAIA,GAAG,CAACsE,UAAR;AAAA,KAFb,MAEoC,EAHxC;AAIAF,OAAG,GAAGA,GAAG,CAAC3D,MAAJ,CAAW,UAAAtC,EAAE;AAAA,aAAI2F,eAAe,CAACS,OAAhB,CAAwBpG,EAAxB,IAA8B,CAAlC;AAAA,KAAb,CAAN;AACA,QAAI,CAACa,QAAL,EACI;AACAoF,SAAG,GAAGA,GAAG,CACJ3D,MADC,CACM,UAAAtC,EAAE;AAAA,eAAI4F,kBAAkB,CAACQ,OAAnB,CAA2BpG,EAA3B,IAAiC,CAAC,CAAtC;AAAA,OADR,EAEDoC,KAFC,CAEK,CAFL,EAEQ,CAFR,CAAN;AAGJ,WACI6D,GAAG,CACEjH,GADL,CACS,UAAAgB,EAAE;AAAA,aAAI0E,OAAO,CAACa,QAAR,CAAiBvF,EAAjB,CAAJ;AAAA,KADX,EAEKsC,MAFL,CAEY,UAAA+D,GAAG;AAAA,aAAI,CAAC,CAACA,GAAN;AAAA,KAFf,EAGI;AAHJ,KAIK/D,MAJL,CAKQ,UAAA+D,GAAG;AAAA;;AAAA,aACC,wBAACA,GAAG,CAAChE,aAAL,+CAAC,mBAAmBiE,QAApB,KACC,wBAAAD,GAAG,CAAChE,aAAJ,4EAAmBkE,IAAnB,MAA4B,OAA5B,IACGF,GAAG,CAACG,eAAJ,GAAsBC,+CAH3B;AAAA,KALX,CADJ;AAYH,GAxBsC,EAwBpC,CAACpE,aAAD,EAAgBxB,QAAhB,CAxBoC,CAAvC;AA0BA,MAAI,EAACkF,SAAD,aAACA,SAAD,eAACA,SAAS,CAAEjH,MAAZ,CAAJ,EACI;AACA,WAAO,IAAP;AAEJ,sBACI,0CACKiH,SAAS,CAAC/G,GAAV,CAAc,UAAAuG,QAAQ,EAAI;AACvB,wBACI,oBAAC,mBAAD;AAAM,SAAG,EAAEA,QAAQ,CAACvF,EAApB;AAAwB,UAAI,MAA5B;AAA6B,QAAE,EAAE;AAAjC,oBACI,oBAAC,4BAAD;AACI,cAAQ,EAAEuF,QADd;AAEI,qBAAe,EAAE,IAFrB;AAGI,sBAAgB,EAAE,IAHtB;AAII,uBAAiB,EAAE,KAJvB;AAKI,eAAS,EAAE,KALf;AAMI,aAAO,EAAEO;AANb,MADJ,CADJ;AAYH,GAbA,CADL,CADJ;AAkBH,C;;;;;;AC5ED;AAMe,SAASY,uBAAT,CACbC,UADa,EAEbC,OAFa,EAG0B;AAAA,kBACbnH,kBAAQ,EADK;AAAA,MAChCoH,KADgC;AAAA,MACzBC,QADyB;;AAAA,aAEsCF,OAAO,IAAI,EAFjD;AAAA,4BAE/BG,SAF+B;AAAA,MAE/BA,SAF+B,+BAEnB,CAFmB;AAAA,uBAEhBC,IAFgB;AAAA,MAEhBA,IAFgB,0BAET,IAFS;AAAA,6BAEHC,UAFG;AAAA,MAEHA,UAFG,gCAEU,IAFV;AAAA,MAEgBC,iBAFhB,QAEgBA,iBAFhB;;AAIvC,MAAMC,MAAM,GAAG,CAAAN,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEO,cAAP,KAAyBF,iBAAxC;;AAEA,MAAMG,WAAW,GAAG,SAAdA,WAAc,QAAgD;AAAA,QAA9CR,KAA8C;AAClEC,YAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIAhC,qBAAS,CAAC,YAAM;AACd,QAAMhF,IAAI,GAAG8G,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAE7G,OAAzB,CADc,CACmB;;AACjC,QAAMwH,YAAY,GAAG,CAAC,CAACC,MAAM,CAACC,oBAA9B;AAEA,QAAI,CAACF,YAAD,IAAiBH,MAAjB,IAA2B,CAACtH,IAAhC,EAAsC;AAEtC,QAAM4H,cAAc,GAAG;AAAEV,eAAS,EAATA,SAAF;AAAaC,UAAI,EAAJA,IAAb;AAAmBC,gBAAU,EAAVA;AAAnB,KAAvB;AACA,QAAMS,QAAQ,GAAG,IAAIF,oBAAJ,CAAyBH,WAAzB,EAAsCI,cAAtC,CAAjB,CAPc,CASd;;AACAC,YAAQ,CAACC,OAAT,CAAiB9H,IAAjB;AAEA,WAAO;AAAA,aAAM6H,QAAQ,CAACE,UAAT,EAAN;AAAA,KAAP;AAED,GAdQ,EAcN,CAACjB,UAAD,EAAaI,SAAb,EAAwBC,IAAxB,EAA8BC,UAA9B,EAA0CE,MAA1C,CAdM,CAAT;AAgBA,SAAON,KAAP;AACD,C;;;;ACpCD;AAUA;AACA;AAOA;AACA;CAEA;;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,IAAMgB,eAAe,GAAG,CAACC,2BAAD,EAAWC,6BAAX,EAAuBC,+BAAvB,EAAqCC,iCAArC,CAAxB;AAEe,SAASC,eAAT,CACXjK,KADW,EAOb;AAAA,MAEMiD,MAFN,GAQMjD,KARN,CAEMiD,MAFN;AAAA,MAGML,QAHN,GAQM5C,KARN,CAGM4C,QAHN;AAAA,MAIMC,cAJN,GAQM7C,KARN,CAIM6C,cAJN;AAAA,MAKMqH,OALN,GAQMlK,KARN,CAKMkK,OALN;AAAA,MAMMC,UANN,GAQMnK,KARN,CAMMmK,UANN;AAAA,MAOMC,UAPN,GAQMpK,KARN,CAOMoK,UAPN;AASE,MAAMtJ,IAAI,GAAGuJ,gCAAa,CAACpH,MAAD,CAA1B;AACA,MAAMiB,QAAQ,GAAG1D,4BAAS,CAACyC,MAAD,EAAS;AAAA,WAC/BA,MAAM,CACDiB,QADL,CACc;AAAEE,mBAAa,EAAE;AAAjB,KADd,EAEKC,MAFL,CAGQ,UAAAoC,OAAO;AAAA,aAAImD,eAAe,CAACzB,OAAhB,CAAwB1B,OAAO,CAACvG,YAAhC,IAAgD,CAApD;AAAA,KAHf,CAD+B;AAAA,GAAT,CAA1B;AAOA,MAAMkE,aAAa,GAAGkG,yCAAsB,CAACrH,MAAD,CAA5C;AACA,MAAMvD,KAAK,GAAG2F,2BAAQ,EAAtB;AACA,MAAMC,MAAM,GAAGC,gCAAa,CAAC7F,KAAK,CAAC8F,WAAN,CAAkBC,IAAlB,CAAuBC,gCAAvB,CAAD,CAA5B;AACA,MAAM6E,cAAc,GAAGjJ,gBAAM,EAA7B;AACA,MAAMkJ,YAAY,GAAG/B,uBAAuB,CAAC8B,cAAD,CAA5C;AACA,MAAM1C,OAAO,GAAG,CAAC,EAAC2C,YAAD,aAACA,YAAD,eAACA,YAAY,CAAErB,cAAf,CAAjB;AAEA,MAAMsB,cAAc,GAAGC,qBAAW,CAC9B;AAAA;;AAAA,wBACI,oBAAC,mBAAD;AACI,SAAG,EAAEH,cADT;AAEI,eAAS,EAAC,KAFd;AAGI,eAAS,MAHb;AAII,aAAO,EAAE,CAJb;AAKI,aAAO,EAAC,QALZ;AAMI,gBAAU,EAAC,UANf;AAOI,kBAAY,EAAC;AAPjB,OASKrG,QATL,aASKA,QATL,2CASKA,QAAQ,CACHG,MADL,CACY,UAAAb,GAAG;AAAA,aAAIZ,QAAQ,IAAI,CAACY,GAAG,CAACmH,OAArB;AAAA,KADf,CATL,qDASK,iBAEK5J,GAFL,CAES,UAAA0F,OAAO;AAAA,0BACT,oBAAC,0BAAD;AACI,WAAG,EAAEA,OAAO,CAAC1E,EADjB;AAEI,eAAO,EAAE0E,OAFb;AAGI,gBAAQ,EAAE7D,QAHd;AAII,gBAAQ,EAAEsB,QAJd;AAKI,eAAO,EAAEgG,OALb;AAMI,eAAO,EAAErC;AANb,QADS;AAAA,KAFhB,CATL,CADJ;AAAA,GAD8B,EAyB9B,CAAC+C,6BAAY,CAAC1G,QAAD,CAAb,EAAyBtB,QAAzB,EAAmCsH,OAAnC,EAA4CrC,OAA5C,CAzB8B,CAAlC;AA4BA,MAAI,CAACuC,UAAL,EACI,oBACI,oBAAC,oBAAD;AAAO,SAAK,EAAE;AAAES,aAAO,EAAE;AAAX,KAAd;AAAqC,WAAO,EAAC;AAA7C,kBACI,oBAAC,cAAD,OADJ,CADJ;AAMJ,sBACI,oBAAC,mBAAD;AAAM,iBAAU,QAAhB;AAAyB,8BAAsB/J,IAAtB;AAAzB,kBACI,oBAAC,yBAAD;AACI,SAAK,EAAE;AAAEgK,mBAAa,EAAE;AAAjB,KADX;AAEI,UAAM,EAAEX,UAAU,iBAAI,oBAAC,2BAAD;AAAc,YAAM,EAAElH;AAAtB,MAF1B;AAGI,UAAM,eACF,oBAAC,4BAAD;AACI,YAAM,EAAEA,MADZ;AAEI,cAAQ,EAAEL,QAFd;AAGI,kBAAY,EAAE,CAACA,QAHnB;AAII,eAAS,EAAEA,QAAQ,IAAI,CAAC0C,MAJ5B;AAKI,kBAAY,EAAE1C,QAAQ,IAAI,CAAC0C;AAL/B,OAOKzC,cAAc,iBACX,oBAAC,oCAAD;AACI,aAAO,EAAEA,cADb;AAEI,WAAK,EAAED,QAAQ,GAAG,UAAH,GAAgB;AAFnC,OAIKA,QAAQ,gBACL,oBAAC,yBAAD,OADK,gBAGL,oBAAC,yBAAD,OAPR,CARR,CAJR;AAyBI,SAAK,eAAE,oBAAC,yBAAD;AAAY,iBAAW,EAAE,KAAzB;AAAgC,YAAM,EAAEK;AAAxC,MAzBX;AA0BI,aAAS,eACL,0CACK,CAACqC,MAAD,IAAWlB,aAAX,iBACG,oBAAC,yBAAD;AAAY,aAAO,EAAC,SAApB;AAA8B,kBAAY;AAA1C,OACKA,aAAa,CAACtD,IADnB,CAFR;AA3BR,IADJ,eAqCI,oBAAC,0BAAD;AAAa,SAAK,EAAE;AAAEiK,gBAAU,EAAE;AAAd;AAApB,kBACI,oBAAC,cAAD,OADJ,EAEKnI,QAAQ,iBACL,oBAAC,mBAAD;AACI,aAAS,MADb;AAEI,aAAS,EAAC,QAFd;AAGI,WAAO,EAAE,CAHb;AAII,gBAAY,EAAC;AAJjB,KAMKsB,QANL,aAMKA,QANL,uBAMKA,QAAQ,CAAEnD,GAAV,CAAc,UAAA0F,OAAO;AAAA,wBAClB,oBAAC,uBAAD;AACI,SAAG,EAAE,YAAYA,OAAO,CAACuE,YAD7B;AAEI,aAAO,EAAEvE,OAFb;AAGI,cAAQ,EAAEvC,QAHd;AAII,cAAQ,EAAEtB,QAJd;AAKI,aAAO,EAAEsH,OALb;AAMI,aAAO,EAAErC;AANb,MADkB;AAAA,GAArB,CANL,CAHR,CArCJ,CADJ;AA8DH,C;;;;;;;;;;;;;;;;;;;ACtKD;AACA;AAEA;AAGA;AACA;AACA;AAEe,SAASoD,mBAAT,CAA6BjL,KAA7B,EAKW;AAAA,MACdiD,MADc,GAC0CjD,KAD1C,CACdiD,MADc;AAAA,MACNL,QADM,GAC0C5C,KAD1C,CACN4C,QADM;AAAA,MACIC,cADJ,GAC0C7C,KAD1C,CACI6C,cADJ;AAAA,MACoBqH,OADpB,GAC0ClK,KAD1C,CACoBkK,OADpB;AAAA,MACgCnH,KADhC,6GAC0C/C,KAD1C;;AAAA,oBAECG,iDAAU,CAAC6E,0DAAD,CAFX;AAAA,MAEdkG,UAFc,eAEdA,UAFc;;AAGtB,MAAM1F,WAA4B,GAAGhF,mEAAS,CAACyC,MAAD,EAAS,YAAM;AACzD,QAAMkI,gBAAgB,GAAGlI,MAAM,CAACiB,QAAP,GACpBnD,GADoB,CAChB,UAAAyC,GAAG,EAAI;AACR,aAAO4H,yFAAsB,CAAC5H,GAAD,CAAtB,KACCA,GAAG,CAAC6H,eAAJ,IAAuB7H,GAAG,CAAC8H,aAA3B,IAA4C9H,GAAG,CAAC+H,iBAAhD,GAAoE,CAApE,GAAwE,CADzE,CAAP;AAEH,KAJoB,EAKpB7H,MALoB,CAKb,UAAC8H,CAAD,EAAYC,CAAZ;AAAA,aAAkBD,CAAC,GAAGC,CAAtB;AAAA,KALa,EAKY,CALZ,CAAzB;AAOA,QAAIN,gBAAgB,GAAG,CAAnB,IAAwBD,UAAU,KAAKQ,uEAA3C,EACI,OAAO;AAAEC,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,EAAtB;AAA0BC,QAAE,EAAE,CAA9B;AAAiCC,QAAE,EAAE;AAArC,KAAP,CADJ,KAEK,IAAIZ,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEQ,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,CAAtB;AAAyBC,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE;AAApC,KAAP,CADC,KAEA,IAAIZ,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEQ,QAAE,EAAE,EAAN;AAAUC,QAAE,EAAE,CAAd;AAAiBC,QAAE,EAAE,CAArB;AAAwBC,QAAE,EAAE,CAA5B;AAA+BC,QAAE,EAAE;AAAnC,KAAP,CADC,KAGD,OAAO;AAAEJ,QAAE,EAAE/I,QAAQ,GAAG,EAAH,GAAQ,CAAtB;AAAyBgJ,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE,CAApC;AAAuCC,QAAE,EAAE,CAA3C;AAA8CC,QAAE,EAAE;AAAlD,KAAP;AACP,GAhB6C,EAgB3C,CAACnJ,QAAD,EAAWsI,UAAX,CAhB2C,CAA9C,CAHsB,CAqBtB;;AACA,sBAAO,iDAAC,+DAAD;AAAM,QAAI;AAAV,KAAe1F,WAAf,gBACH,iDAAC,8DAAD;AACI,UAAM,EAAEvC,MADZ;AAEI,YAAQ,EAAEL,QAFd;AAGI,kBAAc,EAAEC,cAHpB;AAII,WAAO,EAAEqH;AAJb,KAKQnH,KALR,EADG,CAAP;AASH,C;;;;;;;;;;;;;;AC9CD;AACA;AAEA;AAEe,SAASiD,cAAT,GAA6C;AAAA,oBACxC7F,iDAAU,CAAqBC,6DAArB,CAD8B;AAAA,MAChDC,GADgD,eAChDA,GADgD;;AAAA,kBAElCmB,+CAAQ,CAAoBnB,GAAG,CAAC0F,WAAxB,CAF0B;AAAA,MAEjDiG,GAFiD;AAAA,MAE5CC,MAF4C;;AAGxDrF,kDAAS,CAAC;AAAA,WACNvG,GAAG,CAACwG,SAAJ,CAAcqF,yFAAd,EAAmC;AAAA,aAAMD,MAAM,CAAC5L,GAAG,CAAC0F,WAAL,CAAZ;AAAA,KAAnC,CADM;AAAA,GAAD,CAAT;AAGA,SAAOiG,GAAP;AACH,C;;;;;;;;;;;;;;;;;;;ACZD;AACA;AACA;AAEA,IAAMxM,SAAS,GAAGC,mEAAU,CAAC,UAACC,KAAD;AAAA,SAAWC,mEAAY,CAAC;AACjDwM,MAAE,EAAE;AACAC,gBAAU,EAAE1M,KAAK,CAAC2M,OAAN,CAAcC,IAAd,CAAmBC,QAD/B;AAEAC,kBAAY,EAAE;AAFd,KAD6C;AAKjDC,SAAK,EAAE;AACHC,WAAK,EAAEhN,KAAK,CAACI,OAAN,CAAc,CAAd;AADJ;AAL0C,GAAD,CAAvB;AAAA,CAAD,CAA5B;AAUe,SAAS6M,UAAT,CAAoB3M,KAApB,EAKZ;AAAA,MACS0C,KADT,GAC2C1C,KAD3C,CACS0C,KADT;AAAA,MACgBkK,KADhB,GAC2C5M,KAD3C,CACgB4M,KADhB;AAAA,MACuB1C,OADvB,GAC2ClK,KAD3C,CACuBkK,OADvB;AAAA,MACgCvH,MADhC,GAC2C3C,KAD3C,CACgC2C,MADhC;AAEC,MAAM1C,OAAO,GAAGT,SAAS,EAAzB;AACA,sBAAO,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACH,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,aAAS,EAAC,KAA1B;AAAgC,WAAO,EAAE,CAAzC;AAA4C,WAAO,EAAC,QAApD;AAA6D,cAAU,EAAC;AAAxE,kBACI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI;AAAI,aAAS,EAAEqN,sDAAI,CAAC5M,OAAO,CAACkM,EAAT,EAAalM,OAAO,CAACwM,KAArB;AAAnB,IADJ,CADJ,eAII,iDAAC,+DAAD;AAAM,QAAI;AAAV,KACK9J,MAAM,iBAAI,iDAAC,+DAAD;AAAK,aAAS,EAAC,MAAf;AAAsB,MAAE,EAAE;AAA1B,KAA8BA,MAA9B,CADf,eAEI,iDAAC,+DAAD;AAAY,aAAS,EAAC,MAAtB;AAA6B,WAAO,EAAEuH,OAAO,IAAI;AAAjD,KAA+DxH,KAA/D,CAFJ,EAGKkK,KAAK,KAAKE,SAAV,iBAAuB,iDAAC,+DAAD;AAAK,aAAS,EAAC,MAAf;AAAsB,MAAE,EAAE;AAA1B,kBAA+B,iDAAC,+DAAD;AAAM,SAAK,EAAEF;AAAb,IAA/B,CAH5B,CAJJ,eASI,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE;AAAb,kBACI;AAAI,aAAS,EAAE3M,OAAO,CAACkM;AAAvB,IADJ,CATJ,CADG,CAAP;AAeH,C","file":"7a6ddfc67c61f6ab4d0fd9135a6802daa2a5a396-b50457b5ed5b903060e8.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import { Grid, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../../jacdac/ConnectButtons\"\nimport useRoleManager from \"../services/useRoleManager\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [hosted, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManager()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            <DashboardDeviceGroup\n                title=\"Simulators\"\n                action={\n                    <>\n                        {showStartSimulators && !!roleManager && (\n                            <IconButtonWithTooltip\n                                title=\"start missing simulators\"\n                                onClick={handleStartSimulators}\n                            >\n                                <DevicesIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        <IconButtonWithTooltip\n                            title=\"clear simulators\"\n                            onClick={handleClearSimulators}\n                        >\n                            <ClearIcon />\n                        </IconButtonWithTooltip>{\" \"}\n                    </>\n                }\n                devices={hosted}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            />\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React, { useCallback, useRef } from \"react\"\nimport {\n    SRV_CTRL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER, SRV_SETTINGS, SRV_PROTO_TEST]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n","import { Box, Chip, createStyles, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n"],"sourceRoot":""}