{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardPower.tsx"],"names":["DashboardPower","props","service","enabledRegister","register","PowerReg","enabled","useRegisterBoolValue","overload","useRegisterUnpackedValue","batteryCharge","server","useServiceServer","color","useWidgetTheme","background","active","textProps","w","h","r","ro","ri","label","mw","bw","hw","rw","toggleEnabled","sendSetBoolAsync","widgetSize","undefined","Math","floor"],"mappings":"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","file":"1576-8f67a2d8c25e200b75ca.js","sourcesContent":["import React from \"react\"\nimport { PowerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterBoolValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport ReflectedLightServer from \"../../../jacdac-ts/src/servers/reflectedlightserver\"\nimport PowerButton from \"../widgets/PowerButton\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\n\nexport default function DashboardPower(props: DashboardServiceProps) {\n    const { service } = props\n\n    const enabledRegister = service.register(PowerReg.Enabled)\n    const enabled = useRegisterBoolValue(\n        enabledRegister,\n        props\n    )\n    const overload = useRegisterBoolValue(\n        service.register(PowerReg.Overload),\n        props\n    )\n    const [batteryCharge] = useRegisterUnpackedValue<[number]>(\n        service.register(PowerReg.BatteryCharge),\n        props\n    )\n\n    const server = useServiceServer<ReflectedLightServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, active, textProps } = useWidgetTheme(color)\n\n    const w = 64\n    const h = w\n    const r = (h - 4) >> 1\n    const ro = r - 4\n    const ri = ro - 8\n    const label = overload ? \"overload\" : enabled ? \"on\" : \"off\"\n\n    const mw = 2\n    const bw = 12\n    const hw = 4\n    const rw = mw / 2\n\n    const toggleEnabled = () => enabledRegister.sendSetBoolAsync(!enabled, true)\n    const widgetSize = `clamp(3rem, 10vw, 16vw)`\n\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <g>\n                <PowerButton\n                    cx={w / 2}\n                    cy={h / 2}\n                    r={ro}\n                    ri={ri}\n                    off={!enabled}\n                    color={color}\n                    aria-label={label}\n                    borderStroke={!!overload && \"red\"}\n                    onClick={toggleEnabled}\n                />\n                {batteryCharge !== undefined && (\n                    <g>\n                        <title>{`battery charge ${Math.floor(\n                            batteryCharge * 100\n                        )}%`}</title>\n                        <rect\n                            x={w - bw - mw}\n                            y={mw}\n                            width={bw * batteryCharge}\n                            height={hw}\n                            rx={rw}\n                            ry={rw}\n                            fill={active}\n                        />\n                        <rect\n                            x={w - bw - mw}\n                            y={mw}\n                            width={bw}\n                            height={hw}\n                            rx={rw}\n                            ry={rw}\n                            fill={\"none\"}\n                            stroke={background}\n                            strokeWidth={1}\n                        />\n                        <text\n                            x={w - 2 * mw}\n                            y={mw + hw / 2}\n                            {...textProps}\n                            textAnchor=\"end\"\n                            fontSize={hw * 0.6}\n                        >\n                            {Math.floor(batteryCharge * 100)}%\n                        </text>\n                    </g>\n                )}\n            </g>\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}