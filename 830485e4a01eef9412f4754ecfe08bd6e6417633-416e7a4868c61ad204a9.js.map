{"version":3,"file":"830485e4a01eef9412f4754ecfe08bd6e6417633-416e7a4868c61ad204a9.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/alert/SimulateDeviceAlert.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeAddBlocksButton.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const classes = useStyles()\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreSelf: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useRef, useState } from \"react\"\nimport JDNode from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(\n    singleSelection?: boolean\n) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value) nodes.current.delete(node.id)\n            else {\n                if (singleSelection) nodes.current.clear()\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        },\n    }\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import React, { useContext } from \"react\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { startServiceProviderFromServiceClass } from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Alert from \"../ui/Alert\"\n\nexport function SimulateDeviceHint() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const handleStartSimulator = (serviceClass: number) => () =>\n        startServiceProviderFromServiceClass(bus, serviceClass)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <>\n            Simulate devices (\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUTTON)}\n                title=\"button\"\n                aria-label=\"start button simulator\"\n            >\n                <span aria-label=\"button emoji\" role=\"img\">\n                    🔘\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUZZER)}\n                title=\"buzzer\"\n                aria-label=\"start buzzer simulator\"\n            >\n                <span aria-label=\"piano emoji\" role=\"img\">\n                    🎹\n                </span>\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                title=\"joystick\"\n                aria-label=\"start joystick simulator\"\n            >\n                <span aria-label=\"joystick emoji\" role=\"img\">\n                    🕹️\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_LED)}\n                title=\"LED\"\n                aria-label=\"start LED simulator\"\n            >\n                <span aria-label=\"lightbulb emoji\" role=\"img\">\n                    💡\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_TRAFFIC_LIGHT)}\n                title=\"traffic light\"\n                aria-label=\"start traffic light simulator\"\n            >\n                <span aria-label=\"traffic light emoji\" role=\"img\">\n                    🚦\n                </span>\n            </IconButtonWithTooltip>\n            , ...) by clicking &nbsp;\n            <IconButtonWithTooltip\n                title=\"start simulator\"\n                onClick={toggleShowDeviceHostsDialog}\n            >\n                <AddIcon />\n            </IconButtonWithTooltip>\n            .\n        </>\n    )\n}\n\nexport default function SimulateDeviceAlert() {\n    return (\n        <Alert severity=\"info\">\n            <SimulateDeviceHint />\n        </Alert>\n    )\n}\n","import { Box } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { useContext } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport IFrameBridgeClient from \"./iframebridgeclient\"\nimport MakeCodeIcon from \"../../components/icons/MakeCodeIcon\"\n\nexport default function MakeCodeAddBlocksButton() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const iframeBridge = bus.nodeData[\n        IFrameBridgeClient.DATA_ID\n    ] as IFrameBridgeClient\n    const extensions = useChange(iframeBridge, _ => _?.candidateExtensions)\n    const handleAdd = () => iframeBridge?.postAddExtensions()\n\n    if (!extensions?.length) return null\n    return (\n        <Box m={1}>\n            <Button\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<MakeCodeIcon />}\n                onClick={handleAdd}\n                aria-label={\"Add blocks\"}\n            >\n                Add blocks\n            </Button>\n        </Box>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useRoleManagerClient from \"../services/useRoleManagerClient\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport SimulateDeviceAlert from \"../alert/SimulateDeviceAlert\"\nimport MakeCodeAddBlocksButton from \"../makecode/MakeCodeAddBlocksButton\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    hideSimulators?: boolean\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        hideSimulators,\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const { mobile } = useMediaQueries()\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManagerClient()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            {!hideSimulators && (\n                <DashboardDeviceGroup\n                    title=\"Simulators\"\n                    action={\n                        <>\n                            {showStartSimulators && !!roleManager && (\n                                <IconButtonWithTooltip\n                                    title=\"start missing simulators\"\n                                    onClick={handleStartSimulators}\n                                >\n                                    <DevicesIcon />\n                                </IconButtonWithTooltip>\n                            )}\n                            <IconButtonWithTooltip\n                                title=\"start simulator\"\n                                onClick={toggleShowDeviceHostsDialog}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                title=\"clear simulators\"\n                                onClick={handleClearSimulators}\n                            >\n                                <ClearIcon />\n                            </IconButtonWithTooltip>{\" \"}\n                        </>\n                    }\n                    devices={simulators}\n                    expanded={selected}\n                    toggleExpanded={toggleSelected}\n                    {...other}\n                >\n                    {showStartSimulators && !simulators?.length && (\n                        <Grid item xs={12}>\n                            <SimulateDeviceAlert />\n                        </Grid>\n                    )}\n                </DashboardDeviceGroup>\n            )}\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert closeable={true} />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n            <MakeCodeAddBlocksButton />\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default (props: SvgIconProps) =>\n    <SvgIcon {...props}>\n        <path d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\" strokeWidth=\".75\" />\n    </SvgIcon>\n","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["Box","createStyles","makeStyles","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","ConnectButton","NoSsr","useChange","useStyles","theme","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","closeable","bus","transports","devices","b","ignoreSelf","spec","length","name","map","transport","type","ConnectAlert","useRef","useState","useSelectedNodes","singleSelection","nodes","Set","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","Grid","useId","GridHeader","DashboardDeviceItem","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","SRV_BUTTON","SRV_BUZZER","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","startServiceProviderFromServiceClass","AppContext","IconButtonWithTooltip","AddIcon","SimulateDeviceHint","handleStartSimulator","toggleShowDeviceHostsDialog","SimulateDeviceAlert","Button","IFrameBridgeClient","MakeCodeIcon","MakeCodeAddBlocksButton","iframeBridge","nodeData","DATA_ID","extensions","_","candidateExtensions","handleAdd","postAddExtensions","isReading","isValueOrIntensity","splitFilter","strcmp","useDevices","DashboardDeviceGroup","ClearIcon","DevicesIcon","ConnectButtons","useRoleManagerClient","useMediaQueries","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","score","srvs","ls","services","slice","specification","filter","rs","deviceId","defaultDeviceFilter","d","Dashboard","hideSimulators","showConnect","showStartSimulators","deviceSort","deviceFilter","announced","sort","mobile","simulators","physicals","findServiceProvider","roleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","DashboardDevice","dashboardServiceWeight","DrawerType","variant","drawerType","breakpoints","breakpointWeight","readingRegister","valueRegister","intensityRegister","c","v","None","xs","sm","md","lg","xl","SvgIcon","Chip","Typography","clsx","hr","background","palette","text","disabled","marginBottom","start","width","count","undefined"],"sourceRoot":""}