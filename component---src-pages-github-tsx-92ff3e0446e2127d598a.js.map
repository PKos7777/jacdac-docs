{"version":3,"sources":["webpack://jacdac-docs/./src/components/GithubRepositoryCardHeader.tsx","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/GithubRepositoryCard.tsx","webpack://jacdac-docs/./src/components/GithubRespositoryList.tsx","webpack://jacdac-docs/./src/pages/github.tsx"],"names":["MakeCodeFolderLink","props","slug","folder","repo","useFetchJSON","default_branch","pxtJson","response","html_url","name","GithubRepositoryCardHeader","showRelease","useRepository","repoLoading","loading","status","useLatestRelease","release","normalizeSlug","title","organization","login","version","cmp","a","b","d","major","minor","patch","pre","length","i","aa","bb","test","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","slice","m","exec","split","semverCmp","useFetch","url","options","useState","undefined","setResponse","error","setError","setStatus","setLoading","useEffectAsync","mounted","fetch","res","json","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","sha","size","download_url","contentsToFirmwareReleases","contents","map","filter","r","sort","l","cleaned","replace","parts","repoPath","join","parseRepoUrl","owner","fetchLatestRelease","uri","resp","releases","ignoreThrottled","Error","fetchReleaseBinary","downloadUrl","headers","Accept","req","blob","firmware","fetchText","tag","path","mimeType","text","src","useFetchApi","console","log","useLatestReleases","GithubRepositoryCard","showDescription","description","GithubRepositoryList","repos","others","Page"],"mappings":"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","file":"component---src-pages-github-tsx-92ff3e0446e2127d598a.js","sourcesContent":["import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Box, CardHeader, Typography } from \"@material-ui/core\"\nimport {\n    GithubRepository,\n    normalizeSlug,\n    useFetchJSON,\n    useLatestRelease,\n    useRepository,\n} from \"./github\"\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport LoadingProgress from \"./ui/LoadingProgress\"\n\nfunction MakeCodeFolderLink(props: {\n    slug: string\n    folder: string\n    repo: GithubRepository\n}) {\n    const { slug, folder, repo } = props\n    const { response: pxtJson } = useFetchJSON<{\n        name: string\n        description: string\n    }>(slug, repo.default_branch, \"pxt.json\", \"application/json\")\n    return (\n        <Link\n            href={`${repo.html_url}/tree/${repo.default_branch}/${folder}`}\n            target=\"blank\"\n        >\n            <Typography component=\"span\" variant=\"h5\">\n                {`${repo.name}/ ${pxtJson?.name || folder}`}\n            </Typography>\n        </Link>\n    )\n}\n\nexport default function GithubRepositoryCardHeader(props: {\n    slug: string\n    showRelease?: boolean\n}) {\n    const { slug, showRelease } = props\n    const { response: repo, loading: repoLoading, status } = useRepository(slug)\n    const { response: release } = useLatestRelease(showRelease && slug)\n    const { folder } = normalizeSlug(slug)\n\n    const title = repo ? (\n        <>\n            <Typography component=\"span\" variant=\"h6\">\n                {repo.organization?.login}\n            </Typography>\n            <Box component=\"span\" ml={0.5} mr={0.5}>\n                /\n            </Box>\n            {folder ? (\n                <MakeCodeFolderLink slug={slug} folder={folder} repo={repo} />\n            ) : (\n                <Link href={repo.html_url} target=\"_blank\">\n                    <Typography component=\"span\" variant=\"h5\">\n                        {repo.name}\n                    </Typography>\n                </Link>\n            )}\n        </>\n    ) : (\n        <>\n            <Link href={`https://github.com/${slug}`} target=\"_blank\">\n                <Typography component=\"span\" variant=\"h6\">\n                    {slug}\n                </Typography>\n            </Link>\n            {repoLoading && <LoadingProgress />}\n            {status !== 403 && !repoLoading && !repo && (\n                <Typography component=\"p\" variant=\"caption\">\n                    Unable to find repository.\n                </Typography>\n            )}\n        </>\n    )\n\n    return (\n        <CardHeader\n            title={title}\n            subheader={\n                release && (\n                    <Link\n                        color=\"textSecondary\"\n                        target=\"_blank\"\n                        to={release.html_url}\n                    >\n                        {release.version}\n                    </Link>\n                )\n            }\n            avatar={<GitHubIcon />}\n        />\n    )\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                const res = await fetch(url, options)\n                if (!mounted()) return\n                const status = res.status\n                setStatus(status)\n                if (status >= 200 && status <= 204) {\n                    const json = await res.json()\n                    if (!mounted()) return\n                    setResponse(json)\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<GithubFirmwareRelease> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    switch (resp.status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return releases[0]\n        }\n        case 404:\n            // unknow repo or no access\n            return undefined\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return undefined\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import React, { } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport { useRepository } from './github';\nimport GithubRepositoryCardHeader from './GithubRepositoryCardHeader';\n\nexport default function GithubRepositoryCard(props: {\n    slug: string,\n    showRelease?: boolean,\n    showDescription?: boolean\n}) {\n    const { slug, showRelease, showDescription } = props;\n    const { response: repo } = useRepository(slug);\n    const description = showDescription && repo?.description;\n\n    return <Card>\n        <GithubRepositoryCardHeader slug={slug} showRelease={showRelease} />\n        {description && <CardContent>\n            {description && <Typography>{description}</Typography>}\n        </CardContent>}\n    </Card>\n}","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport GithubRepositoryCard from \"./GithubRepositoryCard\";\n\nexport default function GithubRepositoryList(props: { repos: string[], showDescription?: boolean, showRelease?: boolean }) {\n    const { repos, ...others } = props;\n    return <Grid container spacing={2}>\n        {repos.map(repo => <Grid item xs={12} key={repo}>\n            <GithubRepositoryCard slug={repo} {...others} />\n        </Grid>)}\n    </Grid>\n}","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport GithubRepositoryList from \"../components/GithubRespositoryList\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>GitHub Repositories</h1>\n            <p>\n                Jacdac is Open Source on GitHub. Here is a map to help you find\n                the part you want:\n            </p>\n            <h2>Discussions</h2>\n            <p>\n                Post your questions, bugs, suggestions on the centralized\n                discussions at{\" \"}\n                <a href=\"https://github.com/microsoft/jacdac/discussions\">\n                    https://github.com/microsoft/jacdac/discussions\n                </a>\n                .\n            </p>\n            <h2>Specification</h2>\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac\"]}\n                showDescription={true}\n            />\n            <h2>Module Development</h2>\n\n            <h3>Schematics and C SDK</h3>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac-ddk\", \"microsoft/jacdac-c\"]}\n                showDescription={true}\n            />\n\n            <h3> Platforms</h3>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/jacdac-stm32x0\",\n                    \"microsoft/jacdac-esp32\",\n                    \"microsoft/jacdac-padauk\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2>Embedded clients</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/pxt-jacdac\",\n                    \"microsoft/jacdac-circuitpython\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2>Web libraries</h2>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac-ts\"]}\n                showDescription={true}\n            />\n\n            <h2>Integrations</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/node-red-contrib-jacdac\",\n                    \"microsoft/jupyter-jacdac\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2>Embedded Tools</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/pxt-jacdac/tools/multitool\",\n                    \"microsoft/pxt-jacdac/tools/hid-events\",\n                    \"microsoft/pxt-jacdac/devices/microbit\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2> Documentation</h2>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac-docs\"]}\n                showDescription={true}\n            />\n\n            <h2> Microsoft Open Source Code of Conduct</h2>\n\n            <p>\n                This project is hosted at{\" \"}\n                <Link href=\"https://github.com/microsoft/jacdac-docs\">\n                    https://github.com/microsoft/jacdac-docs\n                </Link>\n                . This project has adopted the{\" \"}\n                <Link href=\"https://opensource.microsoft.com/codeofconduct/\">\n                    Microsoft Open Source Code of Conduct\n                </Link>\n                .\n            </p>\n\n            <h3>Resources</h3>\n            <ul>\n                <li>\n                    <Link href=\"https://opensource.microsoft.com/codeofconduct/\">\n                        Microsoft Open Source Code of Conduct\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"https://opensource.microsoft.com/codeofconduct/faq/\">\n                        Microsoft Code of Conduct FAQ\n                    </Link>\n                </li>\n                <li>\n                    Contact{\" \"}\n                    <Link href=\"mailto:opencode@microsoft.com\">\n                        opencode@microsoft.com\n                    </Link>{\" \"}\n                    with questions or concerns\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"sourceRoot":""}