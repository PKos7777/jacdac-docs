{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardServiceDetails.tsx","webpack:///./src/components/dashboard/DashboardDevice.tsx","webpack:///./node_modules/@material-ui/icons/ExpandLess.js","webpack:///./src/components/dashboard/DashboardButton.tsx","webpack:///./src/components/dashboard/DashboardServo.tsx","webpack:///./src/components/dashboard/DashboardRotaryEncoder.tsx","webpack:///./src/components/dashboard/DashboardSwitch.tsx","webpack:///./src/components/dashboard/DashboardServiceWidget.tsx"],"names":["ignoreRegisters","SystemReg","StatusCode","StreamingPreferredInterval","StreamingSamples","StreamingInterval","collapsedRegisters","Reading","Value","Intensity","DashboardServiceDetails","props","service","expanded","specification","useChange","spec","registers","useMemo","packets","ids","filter","pkt","isRegister","map","identifier","id","indexOf","slice","register","reg","length","ignoredServices","SRV_CTRL","SRV_LOGGER","DashboardDevice","device","toggleExpanded","variant","showAvatar","showHeader","name","useDeviceName","services","serviceClass","useDeviceSpecification","theme","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","ServiceWidgets","serviceIndex","padding","DashboardButton","useState","pressed","setPressed","pressedRegister","ButtonReg","Pressed","useEffect","subscribe","REPORT_UPDATE","unpackedValue","b","undefined","downEvent","event","ButtonEvent","Down","EVENT","upEvent","Up","host","useServiceHost","color","label","handleDown","handleUp","up","widgetSize","useActualAngle","useRegisterUnpackedValue","ServoReg","Angle","angle","ResponseSpeed","responseSpeed","rotationalSpeed","SG90_RESPONSE_SPEED","actualAngle","useThrottledValue","DashboardServo","enabledRegister","Enabled","enabled","off","angleRegister","Offset","offset","useWidgetTheme","background","controlBackground","active","textPrimary","cx","cy","a","transform","h","w","pr","pri","text","Math","round","toggleOff","sendSetBoolAsync","refresh","DashboardRotaryEncoder","positionRegister","RotaryEncoderReg","Position","position","clicksPerTurnRegister","ClicksPerTurn","clicksPerTurn","textProps","r","fs","max","handleChange","ev","newValue","reading","setValues","throttled","min","floor","ceil","DashboardSwitch","labelId","useId","on","useRegisterBoolValue","SwitchReg","Active","Variant","switchVariant","handleToggle","toggle","SwitchVariant","PushButton","DashboardAccelerometer","lazy","DashboardBuzzer","DashboardLEDPixel","DashboardRoleManager","DashboardTrafficLight","DashboardCharacterScreen","DashboardRainGauge","DashboardLEDMatrix","DashboardArcadeGamepad","DashboardWindDirection","DashboardMatrixKeypad","DashboardReflectedLight","DashboardPower","DashboardSpeechSynthesis","DashboardSoilMoisture","DashboardRealTimeClock","DashboardLED","DashboardJoystick","DashboardSevenSegmentDisplay","DashboardMotion","DashboardWaterLevel","DashboardColor","DashboardSoundPlayer","DashboardAnalogButton","DashboardSoundLevel","DashboardSoundSpectrum","DashboardRandomNumberGenerator","DashboardCompass","DashboardGyroscope","DashboardSolenoid","serviceViews","SRV_ROLE_MANAGER","component","SRV_BUZZER","weight","SRV_LED_PIXEL","SRV_ACCELEROMETER","SRV_ROTARY_ENCODER","bundled","SRV_BUTTON","SRV_SERVO","SRV_SWITCH","SRV_TRAFFIC_LIGHT","SRV_CHARACTER_SCREEN","SRV_RAIN_GAUGE","SRV_LED_MATRIX","SRV_ARCADE_GAMEPAD","SRV_WIND_DIRECTION","SRV_MATRIX_KEYPAD","SRV_REFLECTED_LIGHT","SRV_POWER","SRV_SPEECH_SYNTHESIS","SRV_SOIL_MOISTURE","SRV_REAL_TIME_CLOCK","SRV_LED","SRV_JOYSTICK","SRV_SEVEN_SEGMENT_DISPLAY","SRV_MOTION","SRV_WATER_LEVEL","SRV_COLOR","SRV_SOUND_PLAYER","SRV_ANALOG_BUTTON","SRV_SOUND_LEVEL","SRV_RNG","SRV_COMPASS","SRV_GYROSCOPE","SRV_SOUND_SPECTRUM","SRV_SOLENOID","ValueWidget","valueRegister","intensityRegister","intensity","hasIntensity","IntensityWidget","DefaultWidget","rspec","find","DashboardServiceWidget","classIdentifier","createElement","dashboardServiceWeight","view"],"mappings":"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","file":"7ba4bbf4aefea763e49128eb41f842ebacf43e24-c8870d915fbca3831339.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport { BaseReg, SystemReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useChange from \"../../jacdac/useChange\";\nimport RegisterInput from \"../RegisterInput\";\nimport { isIntegerType, isRegister } from \"../../../jacdac-ts/src/jdom/spec\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { Grid } from \"@material-ui/core\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded } = props;\n    const specification = useChange(service, spec => spec.specification);\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets;\n        let ids = packets\n            ?.filter(pkt => isRegister(pkt))\n            ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded) // grab the first interresting register\n            ids = ids.filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1);\n        return ids.map(id => service.register(id))\n            .filter(reg => !!reg);\n    }, [specification, expanded])\n\n    if (!registers?.length)  // nothing to see here\n        return null;\n\n    return <>\n        {registers.map(register => {\n            return <Grid key={register.id} item xs={true}><RegisterInput\n                register={register}\n                showServiceName={true}\n                showRegisterName={true}\n                hideMissingValues={false}\n                showTrend={false}\n            /></Grid>\n        })}\n    </>\n}\n","import { Box, Card, CardContent, CardHeader, Collapse, Grid, Paper, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { SRV_CTRL, SRV_LOGGER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport useChange from \"../../jacdac/useChange\";\nimport DeviceName from \"../DeviceName\";\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\";\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidget from \"./DashboardServiceWidget\";\nimport DeviceActions from \"../DeviceActions\";\nimport DashboardServiceDetails from \"./DashboardServiceDetails\";\nimport { MOBILE_BREAKPOINT } from \"../layout\";\nimport useDeviceName from \"../useDeviceName\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useDeviceHost from \"../hooks/useDeviceHost\"\n\nconst ignoredServices = [\n    SRV_CTRL,\n    SRV_LOGGER\n]\n\nexport default function DashboardDevice(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, showAvatar, showHeader } = props;\n    const name = useDeviceName(device)\n    const services = useChange(device, () => device.services()\n        .filter(service => ignoredServices.indexOf(service.serviceClass) < 0\n            && !!service.specification));\n    const specification = useDeviceSpecification(device);\n    const theme = useTheme();\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT));\n\n    const ServiceWidgets = () =>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"flex-end\" alignContent=\"space-between\">\n            {services?.map(service => <Grid key={\"widget\" + service.serviceIndex} item>\n                <DashboardServiceWidget service={service} expanded={expanded} services={services} variant={variant} />\n            </Grid>)}\n        </Grid>\n\n    if (!showHeader)\n        return <Paper style={({ padding: \"0.25em\" })} variant=\"outlined\">\n            <ServiceWidgets />\n        </Paper>\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions device={device} showStopHost={expanded && !mobile} hideIdentity={true} showReset={expanded && !mobile}>\n                        {toggleExpanded && <IconButtonWithTooltip onClick={toggleExpanded} title={expanded ? \"Collapse\" : \"Expand\"}>\n                            {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                        </IconButtonWithTooltip>}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={<>\n                    {!mobile && specification && <Typography variant=\"caption\" gutterBottom>\n                        {specification.name}\n                    </Typography>}\n                </>}\n            />\n            <CardContent>\n                <ServiceWidgets />\n                {expanded && <Grid container direction=\"column\" spacing={1} alignContent=\"stretch\">\n                    {services?.map(service => <DashboardServiceDetails key={\"details\" + service.serviceIndex} service={service} expanded={expanded} />)}\n                </Grid>}\n            </CardContent>\n        </Card>\n    );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","import React, { useEffect, useState } from \"react\";\nimport { ButtonEvent, ButtonReg, EVENT, REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\";\nimport ButtonServiceHost from \"../../../jacdac-ts/src/hosts/buttonservicehost\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nexport default function DashboardButton(props: DashboardServiceProps) {\n    const { service } = props;\n    const [pressed, setPressed] = useState<boolean>(false)\n    const pressedRegister = service.register(ButtonReg.Pressed);\n    // track register\n    useEffect(() => pressedRegister?.subscribe(REPORT_UPDATE, () => {\n        const [b] = pressedRegister?.unpackedValue || [];\n        if (b !== undefined)\n            setPressed(b)\n    }), [pressedRegister])\n    // track event up/down events\n    const downEvent = service.event(ButtonEvent.Down);\n    useEffect(() => downEvent.subscribe(EVENT, () => setPressed(true)), [downEvent])\n    const upEvent = service.event(ButtonEvent.Up);\n    useEffect(() => upEvent.subscribe(EVENT, () => setPressed(false)), [upEvent])\n\n    const host = useServiceHost<ButtonServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const label = `button ${pressed ? `down` : `up`}`\n    const handleDown = () => host?.down();\n    const handleUp = () => host?.up();\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    if (pressed === undefined)\n        return <LoadingProgress />;\n    \n    return <ButtonWidget\n        checked={!!pressed}\n        color={color}\n        onDown={host && handleDown}\n        onUp={host && handleUp}\n        label={label}\n        size={widgetSize}\n    />\n}","\nimport React, { } from \"react\";\nimport { ServoReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\nimport { SG90_RESPONSE_SPEED } from \"../../../jacdac-ts/src/hosts/hosts\";\nimport { Grid } from \"@material-ui/core\";\nimport ServoServiceHost from \"../../../jacdac-ts/src/hosts/servoservicehost\";\nimport RegisterInput from \"../RegisterInput\";\nimport PowerButton from \"../widgets/PowerButton\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\n\nfunction useActualAngle(service: JDService) {\n    const [angle] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.Angle));\n    // sec/60deg\n    const [responseSpeed] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.ResponseSpeed));\n    const rotationalSpeed = 60 / (responseSpeed || SG90_RESPONSE_SPEED);\n    const actualAngle = useThrottledValue(angle || 0, rotationalSpeed)\n\n    return actualAngle;\n}\n\nexport default function DashboardServo(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const enabledRegister = service.register(ServoReg.Enabled);\n    const [enabled] = useRegisterUnpackedValue<[boolean]>(enabledRegister)\n    const off = !enabled;\n    const angleRegister = service.register(ServoReg.Angle);\n    const angle = useActualAngle(service)\n    const [offset] = useRegisterUnpackedValue<[number]>(service.register(ServoReg.Offset));\n\n    const host = useServiceHost<ServoServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textPrimary } = useWidgetTheme(color)\n\n    const cx = 78;\n    const cy = 55;\n\n    const a = enabled ? (angle + (offset || 0)) : 0;\n    const transform = `rotate(${- a}, ${cx}, ${cy})`;\n    const h = 111.406;\n    const w = 158.50195;\n    const pr = 14;\n    const pri = 6;\n    const text = enabled ? `${Math.round(a)}°` : 'off';\n\n    const toggleOff = async () => {\n        await enabledRegister.sendSetBoolAsync(!enabled);\n        enabledRegister.refresh();\n    }\n\n    return <Grid container alignContent=\"center\">\n        <Grid item xs={12}>\n            <SvgWidget tabIndex={0} title={`servo at angle ${angle}`} width={w} height={h}>\n                <path fill={background} d=\"M158.502 10.687H0v89.75h158.502z\" />\n                <path fill={controlBackground} d=\"M125.545 55.641c0-24.994-20.26-45.256-45.254-45.256-17.882.016-34.077 9.446-41.328 25.79-2.655.024-4.192.076-6.35.07-11.158 0-20.204 9.046-20.204 20.204 0 11.158 9.046 20.203 20.203 20.203 2.389-.005 4.354-.332 6.997-.256 7.56 15.59 23.356 24.485 40.682 24.5 24.992 0 45.254-20.264 45.254-45.256z\" />\n                <path fill={enabled ? active : background} stroke={active} transform={transform} d=\"M93.782 55.623c-.032-3.809-.19-6.403-.352-7.023h-.002c-.93-3.558-6.621-6.73-14.793-6.73-8.17 0-14.649 3.016-14.795 6.73-.25 6.419-4.049 62.795 13.561 62.806 14.308.008 16.52-39.277 16.38-55.783zm-8.05.08a7.178 7.178 0 010 .012 7.178 7.178 0 01-7.179 7.176 7.178 7.178 0 01-7.177-7.176 7.178 7.178 0 017.177-7.178 7.178 7.178 0 017.178 7.166z\" />\n                <text x={w / 2} y={30} textAnchor=\"middle\" fill={textPrimary}>{text}</text>\n                <PowerButton r={pr} ri={pri} cx={w - pr - 4} cy={pr + 14}\n                    color={color}\n                    strokeWidth={1.5}\n                    off={off} onClick={toggleOff} />\n            </SvgWidget>\n        </Grid>\n        <Grid item xs={12}>\n            <RegisterInput register={angleRegister} />\n        </Grid>\n    </Grid>\n}","import React from \"react\";\nimport { RotaryEncoderReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterIntValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport RotaryEncoderServiceHost from \"../../../jacdac-ts/src/hosts/rotaryencoderservicehost\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport useAnimationFrame from \"../hooks/useAnimationFrame\";\nimport useThrottledValue from \"../hooks/useThrottledValue\";\n\nexport default function DashboardRotaryEncoder(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n    const positionRegister = service.register(RotaryEncoderReg.Position);\n    const [position = 0] = useRegisterUnpackedValue<[number]>(positionRegister);\n    const clicksPerTurnRegister = service.register(RotaryEncoderReg.ClicksPerTurn);\n    const [clicksPerTurn = 12] = useRegisterUnpackedValue<[number]>(clicksPerTurnRegister);\n    const host = useServiceHost<RotaryEncoderServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textProps } = useWidgetTheme(color);\n    const label = \"\" + position;\n\n    const w = 37.794\n    const r = 0.06;\n    const fs = Math.max(0.2, 0.5 - label.length * 0.1)\n\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        host?.reading.setValues([newValue as number]);\n        positionRegister.refresh();\n        clicksPerTurnRegister.refresh();\n    }\n\n    const throttled = useThrottledValue(position, clicksPerTurn)\n    const angle = throttled / clicksPerTurn * 360;\n\n    const min = Math.floor((position / clicksPerTurn - 1)) * clicksPerTurn;\n    const max = Math.ceil((position / clicksPerTurn + 1)) * clicksPerTurn;\n\n    return <Grid container direction=\"column\">\n        <Grid item>\n            <SvgWidget title={`rotary encoder at position ${position}`}\n                width={w} height={w} viewBox={\"0 0 1 1\"}>\n                <g transform={`rotate(${angle}, 0.5, 0.5)`}>\n                    <path fill={background} d=\"M.67.029a.037.037 0 01-.072-.02A.5.5 0 00.538 0a.037.037 0 01-.075 0 .5.5 0 00-.061.008.038.038 0 01-.073.02.5.5 0 00-.056.025.037.037 0 01-.064.04A.5.5 0 00.16.13.037.037 0 01.11.186a.5.5 0 00-.035.05.037.037 0 01-.035.066.5.5 0 00-.02.058.037.037 0 01-.016.074A.5.5 0 000 .495.037.037 0 01.005.57a.5.5 0 00.013.06.038.038 0 01.025.07.5.5 0 00.028.056.037.037 0 01.043.06.5.5 0 00.042.046.037.037 0 01.058.047.5.5 0 00.053.032.037.037 0 01.069.03.5.5 0 00.059.016.037.037 0 01.074.01.5.5 0 00.062 0 .037.037 0 01.074-.01.5.5 0 00.06-.016.037.037 0 01.068-.03.5.5 0 00.053-.032.037.037 0 01.058-.047.5.5 0 00.042-.045.037.037 0 01.043-.061A.5.5 0 00.957.7.037.037 0 01.982.63.5.5 0 00.995.57.037.037 0 011 .495.5.5 0 00.996.434.038.038 0 01.98.36.5.5 0 00.96.302.037.037 0 01.925.236.5.5 0 00.89.186.037.037 0 01.839.13.5.5 0 00.79.092.037.037 0 01.727.053.5.5 0 00.671.03z\"\n                    />\n                    <path fill={controlBackground} d=\"M.1.499a.4.4 0 10.8 0 .4.4 0 10-.8 0z\" />\n                    <circle\n                        cx={0.5} cy={0.19} r={r}\n                        fill={active} />\n                </g>\n                <text x={0.5} y={0.5} fontSize={fs} {...textProps}>{label}</text>\n            </SvgWidget>\n        </Grid>\n        {host && <Grid item>\n            <Slider\n                color={color}\n                min={min} max={max} step={1}\n                value={position} valueLabelDisplay=\"off\"\n                onChange={handleChange}\n            />\n        </Grid>}\n    </Grid>\n\n}","import { SwitchReg, SwitchVariant } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { useRegisterBoolValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport SwitchServiceHost from \"../../../jacdac-ts/src/hosts/switchservicehost\"\nimport React from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport { useId } from \"react-use-id-hook\"\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardSwitch(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const labelId = useId();\n    const on = useRegisterBoolValue(service.register(SwitchReg.Active))\n    const [switchVariant] = useRegisterUnpackedValue<[SwitchVariant]>(service.register(SwitchReg.Variant));\n    const host = useServiceHost<SwitchServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    const handleToggle = () => host?.toggle();\n\n    if (on === undefined)\n        return <LoadingProgress />;\n\n    switch (switchVariant) {\n        case SwitchVariant.PushButton:\n            return <ButtonWidget\n                checked={on}\n                color={color}\n                label={on ? \"on\" : \"off\"}\n                onDown={host && handleToggle}\n                size={widgetSize} />\n        default:\n            return <>\n                <Switch aria-labelledby={labelId} color={color} checked={on} onChange={host && handleToggle} />\n                <label id={labelId}>{on ? \"on\" : \"off\"}</label>\n            </>\n    }\n}","import React, { createElement, FunctionComponent, lazy, useMemo, Suspense } from \"react\";\nimport {\n    SRV_ACCELEROMETER, SRV_ANALOG_BUTTON, SRV_ARCADE_GAMEPAD, SRV_BUTTON, SRV_BUZZER, SRV_CHARACTER_SCREEN,\n    SRV_COLOR,\n    SRV_COMPASS,\n    SRV_GYROSCOPE,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LED_PIXEL, SRV_MATRIX_KEYPAD, SRV_MOTION, SRV_POWER, SRV_RAIN_GAUGE,\n    SRV_REAL_TIME_CLOCK, SRV_REFLECTED_LIGHT, SRV_RNG, SRV_ROLE_MANAGER,\n    SRV_ROTARY_ENCODER, SRV_SERVO, SRV_SEVEN_SEGMENT_DISPLAY, SRV_SOIL_MOISTURE,\n    SRV_SOLENOID,\n    SRV_SOUND_LEVEL,\n    SRV_SOUND_PLAYER, SRV_SOUND_SPECTRUM, SRV_SPEECH_SYNTHESIS, SRV_SWITCH, SRV_TRAFFIC_LIGHT, SRV_WATER_LEVEL,\n    SRV_WIND_DIRECTION, SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\";\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\";\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\";\nimport RegisterInput from \"../RegisterInput\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport { CircularProgress, NoSsr } from '@material-ui/core';\nimport useServiceHost from \"../hooks/useServiceHost\";\n\n// bundled\nimport DashboardButton from \"./DashboardButton\";\nimport DashboardServo from \"./DashboardServo\";\nimport DashboardRotaryEncoder from \"./DashboardRotaryEncoder\";\nimport DashboardSwitch from \"./DashboardSwitch\";\n\n// lazy devices\nconst DashboardAccelerometer = lazy(() => import(\"./DashboardAccelerometer\"));\nconst DashboardBuzzer = lazy(() => import(\"./DashboardBuzzer\"));\nconst DashboardLEDPixel = lazy(() => import(\"./DashboardLEDPixel\"));\nconst DashboardRoleManager = lazy(() => import(\"./DashboardRoleManager\"));\nconst DashboardTrafficLight = lazy(() => import(\"./DashboardTrafficLight\"));\nconst DashboardCharacterScreen = lazy(() => import(\"./DashboardCharacterScreen\"));\nconst DashboardRainGauge = lazy(() => import(\"./DashboardRainGauge\"));\nconst DashboardLEDMatrix = lazy(() => import(\"./DashboardLEDMatrix\"));\nconst DashboardArcadeGamepad = lazy(() => import(\"./DashboardArcadeGamepad\"));\nconst DashboardWindDirection = lazy(() => import(\"./DashboardWindDirection\"));\nconst DashboardMatrixKeypad = lazy(() => import(\"./DashboardMatrixKeypad\"));\nconst DashboardReflectedLight = lazy(() => import(\"./DashboardReflectedLight\"));\nconst DashboardPower = lazy(() => import(\"./DashboardPower\"));\nconst DashboardSpeechSynthesis = lazy(() => import(\"./DashboardSpeechSynthesis\"));\nconst DashboardSoilMoisture = lazy(() => import(\"./DashboardSoilMoisture\"));\nconst DashboardRealTimeClock = lazy(() => import(\"./DashboardRealTimeClock\"));\nconst DashboardLED = lazy(() => import(\"./DashboardLED\"));\nconst DashboardJoystick = lazy(() => import(\"./DashboardJoystick\"));\nconst DashboardSevenSegmentDisplay = lazy(() => import(\"./DashboardSevenSegmentDisplay\"));\nconst DashboardMotion = lazy(() => import(\"./DashboardMotion\"));\nconst DashboardWaterLevel = lazy(() => import(\"./DashboardWaterLevel\"));\nconst DashboardColor = lazy(() => import(\"./DashboardColor\"));\nconst DashboardSoundPlayer = lazy(() => import(\"./DashboardSoundPlayer\"));\nconst DashboardAnalogButton = lazy(() => import(\"./DashboardAnalogButton\"));\nconst DashboardSoundLevel = lazy(() => import(\"./DashboardSoundLevel\"));\nconst DashboardSoundSpectrum = lazy(() => import(\"./DashboardSoundSpectrum\"));\nconst DashboardRandomNumberGenerator = lazy(() => import(\"./DashboardRandomNumberGenerator\"));\nconst DashboardCompass = lazy(() => import(\"./DashboardCompass\"));\nconst DashboardGyroscope = lazy(() => import(\"./DashboardGyroscope\"));\nconst DashboardSolenoid = lazy(() => import(\"./DashboardSolenoid\"));\n\nexport interface DashboardServiceProps {\n    service: JDService,\n    expanded?: boolean,\n    // all widget services\n    services?: JDService[],\n    variant?: \"icon\" | \"\"\n}\nexport type DashboardServiceComponent = FunctionComponent<DashboardServiceProps>;\n\nconst serviceViews: {\n    [serviceClass: number]: {\n        component: DashboardServiceComponent;\n        bundled?: boolean\n        weight?: (service: JDService) => number;\n    }\n} = {\n    [SRV_ROLE_MANAGER]: {\n        component: DashboardRoleManager,\n    },\n    [SRV_BUZZER]: {\n        component: DashboardBuzzer,\n        weight: () => 2\n    },\n    [SRV_LED_PIXEL]: {\n        component: DashboardLEDPixel,\n        weight: () => 2\n    },\n    [SRV_ACCELEROMETER]: {\n        component: DashboardAccelerometer,\n        weight: () => 2,\n    },\n    [SRV_ROTARY_ENCODER]: {\n        component: DashboardRotaryEncoder,\n        bundled: true,\n    },\n    [SRV_BUTTON]: {\n        component: DashboardButton,\n        bundled: true,\n    },\n    [SRV_SERVO]: {\n        component: DashboardServo,\n        bundled: true,\n    },\n    [SRV_SWITCH]: {\n        component: DashboardSwitch,\n        bundled: true,\n    },\n    [SRV_TRAFFIC_LIGHT]: {\n        component: DashboardTrafficLight,\n    },\n    [SRV_CHARACTER_SCREEN]: {\n        component: DashboardCharacterScreen,\n        weight: () => 3\n    },\n    [SRV_RAIN_GAUGE]: {\n        component: DashboardRainGauge,\n    },\n    [SRV_LED_MATRIX]: {\n        component: DashboardLEDMatrix,\n        weight: () => 3\n    },\n    [SRV_ARCADE_GAMEPAD]: {\n        component: DashboardArcadeGamepad,\n        weight: () => 3\n    },\n    [SRV_WIND_DIRECTION]: {\n        component: DashboardWindDirection,\n    },\n    [SRV_MATRIX_KEYPAD]: {\n        component: DashboardMatrixKeypad,\n    },\n    [SRV_REFLECTED_LIGHT]: {\n        component: DashboardReflectedLight,\n    },\n    [SRV_POWER]: {\n        component: DashboardPower,\n    },\n    [SRV_SPEECH_SYNTHESIS]: {\n        component: DashboardSpeechSynthesis,\n    },\n    [SRV_SOIL_MOISTURE]: {\n        component: DashboardSoilMoisture,\n    },\n    [SRV_REAL_TIME_CLOCK]: {\n        component: DashboardRealTimeClock,\n    },\n    [SRV_LED]: {\n        component: DashboardLED,\n    },\n    [SRV_JOYSTICK]: {\n        component: DashboardJoystick,\n    },\n    [SRV_SEVEN_SEGMENT_DISPLAY]: {\n        component: DashboardSevenSegmentDisplay,\n    },\n    [SRV_MOTION]: {\n        component: DashboardMotion,\n    },\n    [SRV_WATER_LEVEL]: {\n        component: DashboardWaterLevel,\n    },\n    [SRV_COLOR]: {\n        component: DashboardColor,\n        weight: () => 2,\n    },\n    [SRV_SOUND_PLAYER]: {\n        component: DashboardSoundPlayer,\n        weight: () => 2\n    },\n    [SRV_ANALOG_BUTTON]: {\n        component: DashboardAnalogButton,\n    },\n    [SRV_SOUND_LEVEL]: {\n        component: DashboardSoundLevel,\n        weight: () => 2,\n    },\n    [SRV_RNG]: {\n        component: DashboardRandomNumberGenerator,\n    },\n    [SRV_COMPASS]: {\n        component: DashboardCompass,\n    },\n    [SRV_GYROSCOPE]: {\n        component: DashboardGyroscope,\n        weight: () => 2,\n    },\n    [SRV_SOUND_SPECTRUM]: {\n        component: DashboardSoundSpectrum,\n        weight: () => 2,\n    },\n    [SRV_SOLENOID]: {\n        component: DashboardSolenoid\n    },\n}\n\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity\n]\n\nfunction ValueWidget(props: { valueRegister: JDRegister, intensityRegister: JDRegister }) {\n    const { valueRegister, intensityRegister } = props;\n    const [intensity] = useRegisterUnpackedValue<[boolean]>(intensityRegister);\n    const hasIntensity = intensity !== undefined;\n    const off = hasIntensity ? !intensity : undefined;\n    const toggleOff = async () => {\n        await intensityRegister.sendSetBoolAsync(off, true);\n    }\n\n    return <RegisterInput\n        register={valueRegister}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n        off={off}\n        toggleOff={hasIntensity ? toggleOff : undefined}\n    />;\n}\n\nfunction IntensityWidget(props: { intensityRegister: JDRegister }) {\n    const { intensityRegister } = props;\n    const [intensity] = useRegisterUnpackedValue<[number | boolean]>(intensityRegister);\n    const off = intensity !== undefined && !intensity;\n\n    return <RegisterInput\n        register={intensityRegister}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n        off={off}\n    />;\n}\n\nfunction DefaultWidget(props: DashboardServiceProps) {\n    const { service } = props;\n    const { specification } = service;\n    const register = useMemo(() => {\n        const rspec = specification?.packets\n            .find(pkt => isRegister(pkt) && collapsedRegisters.indexOf(pkt.identifier) > -1);\n        return service.register(rspec?.identifier);\n    }, [service])\n\n    if (!register) // nothing to see here\n        return null;\n\n    // if register is value, disable if enabled is 0.\n    if (register.specification.identifier == SystemReg.Value) {\n        const intensityRegister = register.service.register(SystemReg.Intensity);\n        return <ValueWidget valueRegister={register} intensityRegister={intensityRegister} />;\n    }\n\n    // case of no streaming,value just intensity, like a relay\n    if (register.specification.identifier === SystemReg.Intensity)\n        return <IntensityWidget intensityRegister={register} />\n\n    return <RegisterInput\n        register={register}\n        variant={\"widget\"}\n        showServiceName={false}\n        showRegisterName={false}\n        hideMissingValues={true}\n    />;\n}\n\nexport default function DashboardServiceWidget(props: React.Attributes & DashboardServiceProps): JSX.Element {\n    const { service } = props;\n    const { specification } = service;\n    const { component, bundled } = serviceViews[specification.classIdentifier] || {};\n    const host = useServiceHost(service);\n    const color = host ? \"secondary\" : \"primary\";\n    // no special support\n    if (!component)\n        return createElement(DefaultWidget, props);\n\n    // precompiled\n    if (bundled)\n        return createElement(component, props);\n\n    // lazy loading\n    return <NoSsr>\n        <Suspense fallback={<CircularProgress color={color} disableShrink={true} variant={\"indeterminate\"} size={\"3em\"} />}>\n            {createElement(component, props)}\n        </Suspense>\n    </NoSsr>\n}\n\n\nexport function dashboardServiceWeight(service: JDService) {\n    const view = serviceViews[service.serviceClass];\n    return view?.weight?.(service);\n}"],"sourceRoot":""}