{"version":3,"file":"component---src-templates-service-tsx-cb35f64437549c07b91a.js","mappings":";;;;;;;;;AAAA;AACA;AAEO,SAASE,WAAT,CAAqBC,KAArB,EAAmE;AACtE,MAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;;AAEA,UAAQC,aAAR,aAAQA,aAAR,uBAAQA,aAAa,CAAEC,MAAvB;AACI,SAAK,YAAL;AAAmB,0BAAO,iDAAC,uDAAD;AAAO,gBAAQ,EAAC;AAAhB,sBAAP;;AACnB,SAAK,cAAL;AAAqB,0BAAO,iDAAC,uDAAD;AAAO,gBAAQ,EAAC;AAAhB,wBAAP;;AACrB;AAAS,aAAO,IAAP;AAHb;AAKH;AAED,IAAMC,+BAA+B,gBAAGN,uCAAA,CAAWE,WAAX,CAAxC;AAEA,yDAAeI,+BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASS,eAAT,CAAyBZ,KAAzB,EAGZ;AACC,MAAM;AAAEa,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA8Bd,KAApC;AACA,MAAMe,OAAO,GAAGN,wDAAuC,CAACI,eAAD,CAAvD;AACA,MAAMG,IAAI,GAAGN,+CAA2B,CAACG,eAAD,CAAxC;AACA,MAAM;AAAEI,IAAAA;AAAF,MAAcF,OAApB;AAEA,sBACI,uDACI,oBAAC,8CAAD;AAAiC,iBAAa,EAAEA;AAAhD,IADJ,eAEI,oBAAC,uBAAD;AAAU,UAAM,EAAED;AAAlB,IAFJ,eAII,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,kBACI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,+BAAD;AACI,WAAO,EAAC,WADZ;AAEI,MAAE,iBAAeG,OAAf;AAFN,kBADJ,CADJ,EASKD,IAAI,iBACD,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,+BAAD;AACI,WAAO,EAAC,WADZ;AAEI,MAAE,iBAAeC,OAAf;AAFN,YADJ,CAVR,CAJJ,eAyBI,qDAzBJ,eA0BI,oBAAC,sCAAD;AACI,0BAAsB,EAAE,CAACJ,eAAD;AAD5B,IA1BJ,eA8BI,4CA9BJ,eA+BI,6CACI,6CACI;AACI,QAAI,8DAA4DI,OAA5D;AADR,iCADJ,MADJ,eASI,wCACS,GADT,eAEI,oBAAC,6BAAD;AAAM,MAAE,EAAC;AAAT,sCAFJ,EAIY,GAJZ,cATJ,eAgBI,gFACiD,GADjD,eAEI,oBAAC,6BAAD;AAAM,MAAE,EAAC;AAAT,sBAFJ,CAhBJ,eAoBI,yEAC0C,GAD1C,eAEI,oBAAC,6BAAD;AAAM,MAAE;AAAR,kCAFJ,CApBJ,CA/BJ,CADJ;AA6DH;;AC/ED;CAGA;;AACe,SAASC,IAAT,CAAclB,KAAd,EAA2C;AACtD,sBAAO,oBAAC,eAAD,EAAqBA,KAAK,CAACmB,WAA3B,CAAP;AACH","sources":["webpack://jacdac-docs/./src/components/ServiceSpecificationStatusAlert.tsx","webpack://jacdac-docs/./src/components/ServiceMarkdown.tsx","webpack://jacdac-docs/./src/templates/service.tsx"],"sourcesContent":["import React from \"react\";\nimport Alert from \"./ui/Alert\";\n\nexport function StatusAlert(props: { specification: jdspec.ServiceSpec }) {\n    const { specification } = props;\n\n    switch (specification?.status) {\n        case \"deprecated\": return <Alert severity=\"error\">Deprecated</Alert>\n        case \"experimental\": return <Alert severity=\"info\">Experimental</Alert>\n        default: return null;\n    }\n}\n\nconst ServiceSpecificationStatusAlert = React.memo(StatusAlert);\n\nexport default ServiceSpecificationStatusAlert;","import React from \"react\"\nimport Markdown from \"./ui/Markdown\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport { Button, Link } from \"gatsby-theme-material-ui\"\nimport DeviceSpecificationList from \"./DeviceSpecificationList\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { serviceTestFromServiceClass } from \"../../jacdac-ts/src/test/testspec\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function ServiceMarkdown(props: {\n    classIdentifier: number\n    source: string\n}) {\n    const { classIdentifier, source } = props\n    const service = serviceSpecificationFromClassIdentifier(classIdentifier)\n    const test = serviceTestFromServiceClass(classIdentifier)\n    const { shortId } = service\n\n    return (\n        <>\n            <ServiceSpecificationStatusAlert specification={service} />\n            <Markdown source={source} />\n\n            <Grid container spacing={1}>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        to={`/services/${shortId}/playground/`}\n                    >\n                        Playground\n                    </Button>\n                </Grid>\n                {test && (\n                    <Grid item>\n                        <Button\n                            variant=\"contained\"\n                            to={`/services/${shortId}/test/`}\n                        >\n                            Test\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n\n            <h2>Registered Devices</h2>\n            <DeviceSpecificationList\n                requiredServiceClasses={[classIdentifier]}\n            />\n\n            <h2> See Also</h2>\n            <ul>\n                <li>\n                    <a\n                        href={`https://github.com/microsoft/jacdac/edit/main/services/${shortId}.md`}\n                    >\n                        Edit specification source\n                    </a>\n                    .\n                </li>\n                <li>\n                    Read{\" \"}\n                    <Link to=\"/reference/service-specification/\">\n                        Service Specification Language\n                    </Link>{\" \"}\n                    reference\n                </li>\n                <li>\n                    Create a new service specification using the{\" \"}\n                    <Link to=\"/tools/service-editor/\">Service Editor</Link>\n                </li>\n                <li>\n                    Using services in JavaScript with the{\" \"}\n                    <Link to={`/clients/javascript/jdom/`}>\n                        Jacdac Object Model (JDOM)\n                    </Link>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import React from \"react\"\nimport ServiceMarkdown from \"../components/ServiceMarkdown\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function Page(props: { pageContext: any }) {\n    return <ServiceMarkdown {...props.pageContext} />\n}\n"],"names":["React","Alert","StatusAlert","props","specification","status","ServiceSpecificationStatusAlert","memo","Markdown","Button","Link","DeviceSpecificationList","serviceSpecificationFromClassIdentifier","serviceTestFromServiceClass","Grid","ServiceMarkdown","classIdentifier","source","service","test","shortId","Page","pageContext"],"sourceRoot":""}