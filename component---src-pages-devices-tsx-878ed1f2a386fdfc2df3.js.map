{"version":3,"file":"component---src-pages-devices-tsx-878ed1f2a386fdfc2df3.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/ServiceSpecificationSelect.tsx","webpack://jacdac-docs/./src/components/FilteredDeviceSpecificationList.tsx","webpack://jacdac-docs/./src/pages/devices.tsx"],"sourcesContent":["import { createStyles, makeStyles, MenuItem, TextField, Theme } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { serviceSpecifications } from \"../../jacdac-ts/src/jdom/spec\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            minWidth: \"18rem\",\n        }\n    }),\n);\n\nexport default function ServiceSpecificationSelect(props: {\n    label: string,\n    serviceClass: number;\n    setServiceClass: (serviceClass: number) => void;\n    variant?: \"outlined\" | \"filled\" | \"standard\";\n    fullWidth?: boolean;\n    error?: string;\n}) {\n    const { label, serviceClass, setServiceClass, variant, fullWidth, error } = props;\n    const [labelId] = useState('select-' + Math.random());\n    const classes = useStyles();\n    const specs = serviceSpecifications().filter(spec => !/^_/.test(spec.shortId))\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>\n        setServiceClass(parseInt(event.target.value));\n\n    return <TextField\n        id={labelId}\n        className={classes.root}\n        label={label}\n        error={!!error}\n        helperText={error}\n        value={serviceClass}\n        select\n        variant={variant}\n        fullWidth={fullWidth}\n        onChange={handleChange}>\n        <MenuItem key=\"none\" value=\"NaN\">No service selected</MenuItem>\n        {specs.map(spec => <MenuItem\n            key={spec.classIdentifier}\n            value={spec.classIdentifier}>{spec.name}</MenuItem>)}\n    </TextField>\n}","import { Box } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport DeviceSpecificationList from \"./DeviceSpecificationList\";\nimport ServiceSpecificationSelect from \"./ServiceSpecificationSelect\";\n\n\nexport default function FilteredDeviceSpecificationList(props: {\n    count?: number,\n    shuffle?: boolean,\n}) {\n    const { ...others } = props;\n\n    const [serviceClass, setServiceClass] = useState<number>(NaN)\n    const handleServiceChanged = (value) => setServiceClass(value)\n    const requiredServiceClasses = !isNaN(serviceClass) && [serviceClass]\n\n    return <>\n        <Box mb={1}>\n            <ServiceSpecificationSelect\n                label=\"Filter by Service\"\n                serviceClass={serviceClass}\n                setServiceClass={handleServiceChanged} />\n        </Box>\n        <DeviceSpecificationList\n            {...others}\n            requiredServiceClasses={requiredServiceClasses} />\n    </>\n}","import { Box } from \"@material-ui/core\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport FilteredDeviceSpecificationList from \"../components/FilteredDeviceSpecificationList\"\nimport Alert from \"../components/ui/Alert\"\n\nexport default function Page() {\n    return (\n        <>\n            <FilteredDeviceSpecificationList count={20} shuffle={true} />\n            <Box mt={2}>\n                <Alert severity=\"info\">\n                    <AlertTitle>Register your device</AlertTitle>\n                    Known devices are specified in the{\" \"}\n                    <Link to=\"/reference/device-definition/\">\n                        device catalog repository\n                    </Link>\n                    . New devices can be submitted with the{\" \"}\n                    <Link to=\"/tools/device-registration/\">\n                        device registration\n                    </Link>\n                    .\n                </Alert>\n            </Box>\n        </>\n    )\n}\n"],"names":["createStyles","makeStyles","MenuItem","TextField","React","useState","serviceSpecifications","useStyles","root","minWidth","ServiceSpecificationSelect","props","label","serviceClass","setServiceClass","variant","fullWidth","error","labelId","Math","random","classes","specs","filter","spec","test","shortId","handleChange","event","parseInt","target","value","map","classIdentifier","name","Box","DeviceSpecificationList","FilteredDeviceSpecificationList","others","NaN","handleServiceChanged","requiredServiceClasses","isNaN","AlertTitle","Link","Alert","Page"],"sourceRoot":""}