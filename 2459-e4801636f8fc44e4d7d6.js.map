{"version":3,"sources":["webpack://jacdac-docs/./src/components/widgets/SoilMoistureWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardSoilMoisture.tsx"],"names":["SoilMoistureWidget","props","value","color","size","useWidgetTheme","active","background","controlBackground","textProps","clipId","useId","hasValue","isNaN","tvalue","Math","round","w","h","cm","ch","DashboardSoilMoisture","service","services","variant","moistureReg","useRegister","SoilMoistureReg","useRegisterUnpackedValue","widgetSize","useWidgetSize","length","server","useServiceServer","onChange","event","newValue","svalue","reading","setValues","refresh"],"mappings":"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","file":"2459-e4801636f8fc44e4d7d6.js","sourcesContent":["import React from \"react\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SoilMoistureWidget(props: {\n    value: number\n    color: \"primary\" | \"secondary\"\n    size?: string\n}) {\n    const { value, color, size } = props\n    const { active, background, controlBackground, textProps } =\n        useWidgetTheme(color)\n    const clipId = useId()\n\n    const hasValue = !isNaN(value)\n    const tvalue = hasValue ? `${Math.round(value * 100)}%` : `--`\n\n    const w = 5\n    const h = 9.488\n    const cm = 3.3\n    const ch = (h - cm) * ((0.12 + value) / 1.12)\n\n    return (\n        <SvgWidget width={w} height={h} size={size}>\n            {hasValue && (\n                <defs>\n                    <clipPath id={clipId}>\n                        <rect x={0} y={h - ch} width={w} height={ch} />\n                    </clipPath>\n                </defs>\n            )}\n            <path\n                fill={background}\n                d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n            />\n            <path\n                fill={active}\n                d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n                clipPath={`url(#${clipId})`}\n            />\n            <path\n                fill={controlBackground}\n                d=\"M4.075 8.548a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 4.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 3.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 6.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 4.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 3.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 6.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.948a.075.075 0 100-.15.075.075 0 100 .15zM.925 8.548a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 4.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 3.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 6.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 4.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 3.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 6.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.948a.075.075 0 100-.15.075.075 0 100 .15z\"\n            />\n            <text\n                x={w / 2}\n                y=\"1.4\"\n                fontSize=\"1.058\"\n                strokeWidth=\".026\"\n                {...textProps}\n            >\n                {tvalue}\n            </text>\n        </SvgWidget>\n    )\n}\n","import React from \"react\"\nimport { SoilMoistureReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SensorServer from \"../../../jacdac-ts/src/servers/sensorserver\"\nimport { Grid, Slider } from \"@material-ui/core\"\nimport SoilMoistureWidget from \"../widgets/SoilMoistureWidget\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardSoilMoisture(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n    const moistureReg = useRegister(service, SoilMoistureReg.Moisture)\n    const [value] = useRegisterUnpackedValue<[number]>(moistureReg, props)\n    const widgetSize = useWidgetSize(variant, services?.length)\n    const server = useServiceServer<SensorServer<[number]>>(service)\n    const color = server ? \"secondary\" : \"primary\"\n\n    const hasValue = !isNaN(value)\n\n    const onChange = (event: unknown, newValue: number | number[]): void => {\n        const svalue = newValue as number\n        server?.reading.setValues([svalue])\n        moistureReg.refresh()\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SoilMoistureWidget\n                    value={value}\n                    color={color}\n                    size={widgetSize}\n                />\n            </Grid>\n            {server && hasValue && (\n                <Grid item xs>\n                    <Slider\n                        valueLabelDisplay=\"off\"\n                        min={0}\n                        max={1}\n                        step={0.05}\n                        value={value}\n                        onChange={onChange}\n                        color={color}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"sourceRoot":""}