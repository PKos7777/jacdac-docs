{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Check.js","webpack://jacdac-docs/./src/components/RandomGenerator.tsx"],"names":["looksRandom","n","s","toString","h","i","length","hh","indexOf","test","genServId","cryptoRandomUint32","undefined","genFirmwareId","uniqueServiceId","id","serviceSpecificationFromClassIdentifier","toFullHex","uniqueDeviceId","uniqueFirmwareId","deviceSpecificationFromFirmwareIdentifier","useStyles","makeStyles","createStyles","root","minWidth","marginBottom","title","fontSize","RandomGenerator","props","device","firmware","labelId","useId","fieldId","classes","useState","value","setValue","copySuccess","setCopySuccess","handleRegenerate","v","handleCopy","navigator","clipboard","writeText"],"mappings":";;;;;;;;;;;;AAA0D;AACgC;AAC3D;AACP;AACsB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAgB;AAC/C;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC,sBAAsB,gDAAmB,QAAQ,oFAAQ;AACzD,eAAe,sDAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,cAAc,E;;;;;;;;;ACnCF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBf;AACA;CAaA;;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAT,CAAqBC,CAArB,EAAgC;AAC5B,MAAMC,CAAC,GAAGD,CAAC,CAACE,QAAF,CAAW,EAAX,CAAV;AACA,MAAMC,CAAC,GAAG,kBAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;AAC/B,QAAME,EAAE,GAAGH,CAAC,CAACC,CAAD,CAAZ;AACA,QAAIH,CAAC,CAACM,OAAF,CAAUD,EAAE,GAAGA,EAAL,GAAUA,EAApB,KAA2B,CAA/B,EAAkC,OAAO,KAAP;AACrC;;AACD,MAAI,sBAAsBE,IAAtB,CAA2BP,CAA3B,CAAJ,EAAmC,OAAO,KAAP;AACnC,SAAO,IAAP;AACH;;AAED,SAASQ,SAAT,GAAqB;AACjB,MAAMT,CAAC,GAAGU,wFAAkB,CAAC,CAAD,CAA5B;AACA,MAAIV,CAAC,KAAKW,SAAV,EAAqB,OAAOA,SAAP;AACrB,SAAQX,CAAC,CAAC,CAAD,CAAD,GAAO,SAAR,GAAsB,UAA7B;AACH;;AAED,SAASY,aAAT,GAAyB;AACrB,MAAMZ,CAAC,GAAGU,wFAAkB,CAAC,CAAD,CAA5B;AACA,MAAIV,CAAC,KAAKW,SAAV,EAAqB,OAAOA,SAAP;AACrB,SAAQX,CAAC,CAAC,CAAD,CAAD,GAAO,SAAR,GAAsB,UAA7B;AACH;;AAEM,SAASa,eAAT,GAA2B;AAC9B,MAAIC,EAAE,GAAGL,SAAS,EAAlB;;AACA,SACIK,EAAE,KAAKH,SAAP,KACC,CAACZ,WAAW,CAACe,EAAD,CAAZ,IAAoBC,2GAAuC,CAACD,EAAD,CAD5D,CADJ,EAGE;AACEA,MAAE,GAAGL,SAAS,EAAd;AACH;;AACD,SAAOK,EAAE,KAAKH,SAAP,IAAoBK,8EAAS,CAAC,CAACF,EAAD,CAAD,CAApC;AACH;AAEM,SAASG,cAAT,GAA0B;AAC7B,MAAMjB,CAAC,GAAGU,wFAAkB,CAAC,CAAD,CAA5B;AACA,SAAOV,CAAC,KAAKW,SAAN,IAAmBK,8EAAS,CAAC,CAAChB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAD,CAAnC;AACH;AAEM,SAASkB,gBAAT,GAA4B;AAC/B,MAAIJ,EAAE,GAAGF,aAAa,EAAtB;;AACA,SACIE,EAAE,KAAKH,SAAP,KACC,CAACZ,WAAW,CAACe,EAAD,CAAZ,IAAoBK,6GAAyC,CAACL,EAAD,CAD9D,CADJ,EAGE;AACEA,MAAE,GAAGF,aAAa,EAAlB;AACH;;AACD,SAAOE,EAAE,KAAKH,SAAP,IAAoBK,8EAAS,CAAC,CAACF,EAAD,CAAD,CAApC;AACH;AAED,IAAMM,SAAS,GAAGC,mEAAU,CACxBC,mEAAY,CAAC;AACTC,MAAI,EAAE;AACFC,YAAQ,EAAE,GADR;AAEFC,gBAAY,EAAE;AAFZ,GADG;AAKTC,OAAK,EAAE;AACHC,YAAQ,EAAE;AADP;AALE,CAAD,CADY,CAA5B;AAYe,SAASC,eAAT,CAAyBC,KAAzB,EAGZ;AAAA,MACSC,MADT,GAC8BD,KAD9B,CACSC,MADT;AAAA,MACiBC,QADjB,GAC8BF,KAD9B,CACiBE,QADjB;AAEC,MAAMC,OAAO,GAAGC,kEAAK,EAArB;AACA,MAAMC,OAAO,GAAGD,kEAAK,EAArB;AACA,MAAME,OAAO,GAAGf,SAAS,EAAzB;;AAJD,kBAK2BgB,+CAAQ,CAC9BN,MAAM,GAAGb,cAAc,EAAjB,GAAsBJ,eAAe,EADb,CALnC;AAAA,MAKQwB,KALR;AAAA,MAKeC,QALf;;AAAA,mBAQuCF,+CAAQ,CAAC,KAAD,CAR/C;AAAA,MAQQG,WARR;AAAA,MAQqBC,cARrB;;AAUC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAMC,CAAC,GAAGZ,MAAM,GACVb,cAAc,EADJ,GAEVc,QAAQ,GACRb,gBAAgB,EADR,GAERL,eAAe,EAJrB;AAKAyB,YAAQ,CAACI,CAAD,CAAR;AACAF,kBAAc,CAAC,KAAD,CAAd;AACH,GARD;;AASA,MAAMG,UAAU;AAAA,mMAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAELC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BT,KAA9B,CAFK;;AAAA;AAGXG,4BAAc,CAAC,IAAD,CAAd;AAHW;AAAA;;AAAA;AAAA;AAAA;AAKXA,4BAAc,CAAC,KAAD,CAAd;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVG,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAQA,MAAMjB,KAAK,GAAGI,MAAM,GACd,0BADc,GAEdC,QAAQ,GACR,4BADQ,GAER,2BAJN;AAKA,sBACI,iDAAC,gEAAD,qBACI,iDAAC,gEAAD;AAAM,aAAS,EAAEI,OAAO,CAACZ;AAAzB,kBACI,iDAAC,gEAAD,qBACI,iDAAC,gEAAD;AACI,MAAE,EAAES,OADR;AAEI,aAAS,EAAEG,OAAO,CAACT,KAFvB;AAGI,SAAK,EAAC,eAHV;AAII,gBAAY;AAJhB,KAMKA,KANL,CADJ,EASKW,KAAK,KAAK1B,SAAV,iBACG,iDAAC,gEAAD;AAAY,WAAO,EAAC,IAApB;AAAyB,aAAS,EAAC;AAAnC,kBACI,iDAAC,gEAAD;AACI,MAAE,EAAEuB,OADR;AAEI,SAAK,EAAEG,KAFX;AAGI,YAAQ,EAAE,IAHd;AAII,cAAU,EAAE;AACR,yBAAmBL;AADX;AAJhB,IADJ,EASKO,WAAW,iBAAI,iDAAC,uEAAD,OATpB,CAVR,EAsBKF,KAAK,KAAK1B,SAAV,iBACG,iDAAC,uDAAD;AAAO,YAAQ,EAAC;AAAhB,wDAvBR,CADJ,eA6BI,iDAAC,gEAAD,qBACI,iDAAC,4DAAD;AACI,kBAAW,iCADf;AAEI,QAAI,EAAC,OAFT;AAGI,WAAO,EAAC,WAHZ;AAII,WAAO,EAAEgC;AAJb,YADJ,eASI,iDAAC,4DAAD;AACI,kBAAW,0BADf;AAEI,QAAI,EAAC,OAFT;AAGI,WAAO,EAAC,WAHZ;AAII,SAAK,EAAC,SAJV;AAKI,WAAO,EAAEF;AALb,kBATJ,CA7BJ,CADJ,CADJ;AAqDH,C","file":"2833-56fc27debdadcea01637.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import React, { useState } from \"react\"\nimport {\n    deviceSpecificationFromFirmwareIdentifier,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport {\n    Card,\n    makeStyles,\n    CardContent,\n    CardActions,\n    Typography,\n    createStyles,\n    Input,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CheckIcon from \"@material-ui/icons/Check\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"./ui/Alert\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { NoSsr } from \"@material-ui/core\"\nimport { useId } from \"react-use-id-hook\"\nimport { cryptoRandomUint32 } from \"../../jacdac-ts/src/jdom/random\"\nimport { toFullHex } from \"../../jacdac-ts/src/jdom/utils\"\n\nfunction looksRandom(n: number) {\n    const s = n.toString(16)\n    const h = \"0123456789abcdef\"\n    for (let i = 0; i < h.length; ++i) {\n        const hh = h[i]\n        if (s.indexOf(hh + hh + hh) >= 0) return false\n    }\n    if (/f00d|dead|deaf|beef/.test(s)) return false\n    return true\n}\n\nfunction genServId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x1000_0000\n}\n\nfunction genFirmwareId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x3000_0000\n}\n\nexport function uniqueServiceId() {\n    let id = genServId()\n    while (\n        id !== undefined &&\n        (!looksRandom(id) || serviceSpecificationFromClassIdentifier(id))\n    ) {\n        id = genServId()\n    }\n    return id !== undefined && toFullHex([id])\n}\n\nexport function uniqueDeviceId() {\n    const n = cryptoRandomUint32(2)\n    return n !== undefined && toFullHex([n[0], n[1]])\n}\n\nexport function uniqueFirmwareId() {\n    let id = genFirmwareId()\n    while (\n        id !== undefined &&\n        (!looksRandom(id) || deviceSpecificationFromFirmwareIdentifier(id))\n    ) {\n        id = genFirmwareId()\n    }\n    return id !== undefined && toFullHex([id])\n}\n\nconst useStyles = makeStyles(\n    createStyles({\n        root: {\n            minWidth: 275,\n            marginBottom: \"1rem\",\n        },\n        title: {\n            fontSize: 14,\n        },\n    })\n)\n\nexport default function RandomGenerator(props: {\n    device?: boolean\n    firmware?: boolean\n}) {\n    const { device, firmware } = props\n    const labelId = useId()\n    const fieldId = useId()\n    const classes = useStyles()\n    const [value, setValue] = useState(\n        device ? uniqueDeviceId() : uniqueServiceId()\n    )\n    const [copySuccess, setCopySuccess] = useState(false)\n\n    const handleRegenerate = () => {\n        const v = device\n            ? uniqueDeviceId()\n            : firmware\n            ? uniqueFirmwareId()\n            : uniqueServiceId()\n        setValue(v)\n        setCopySuccess(false)\n    }\n    const handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(value)\n            setCopySuccess(true)\n        } catch (err) {\n            setCopySuccess(false)\n        }\n    }\n    const title = device\n        ? \"Random Device Identifier\"\n        : firmware\n        ? \"Random Firmware Identifier\"\n        : \"Random Service Identifier\"\n    return (\n        <NoSsr>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography\n                        id={labelId}\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {title}\n                    </Typography>\n                    {value !== undefined && (\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <Input\n                                id={fieldId}\n                                value={value}\n                                readOnly={true}\n                                inputProps={{\n                                    \"aria-labelledby\": labelId,\n                                }}\n                            />\n                            {copySuccess && <CheckIcon />}\n                        </Typography>\n                    )}\n                    {value === undefined && (\n                        <Alert severity=\"error\">\n                            Oops, unable to generate a strong random number.\n                        </Alert>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button\n                        aria-label=\"copy random number to clipboard\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        onClick={handleCopy}\n                    >\n                        Copy\n                    </Button>\n                    <Button\n                        aria-label=\"regenerate random number\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleRegenerate}\n                    >\n                        Regenerate\n                    </Button>\n                </CardActions>\n            </Card>\n        </NoSsr>\n    )\n}\n"],"sourceRoot":""}