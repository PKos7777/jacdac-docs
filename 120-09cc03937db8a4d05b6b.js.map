{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardSoilMoisture.tsx"],"names":["DashboardSoilMoisture","props","service","services","variant","moistureReg","register","SoilMoistureReg","Moisture","useRegisterUnpackedValue","value","widgetSize","useWidgetSize","length","host","useServiceHost","color","useWidgetTheme","active","background","controlBackground","textProps","clipId","useId","hasValue","isNaN","tvalue","Math","round","w","h","cm","ch","onChange","event","newValue","svalue","reading","setValues","refresh"],"mappings":"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","file":"120-09cc03937db8a4d05b6b.js","sourcesContent":["import React from \"react\"\nimport { SoilMoistureReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useServiceHost from \"../hooks/useServiceHost\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport SensorServiceHost from \"../../../jacdac-ts/src/hosts/sensorservicehost\"\nimport { useId } from \"react-use-id-hook\"\nimport { Grid, Slider } from \"@material-ui/core\"\n\nexport default function DashboardSoilMoisture(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n    const moistureReg = service.register(SoilMoistureReg.Moisture)\n    const [value] = useRegisterUnpackedValue<[number]>(moistureReg, props)\n    const widgetSize = useWidgetSize(variant, services.length)\n    const host = useServiceHost<SensorServiceHost<[number]>>(service)\n    const color = host ? \"secondary\" : \"primary\"\n    const { active, background, controlBackground, textProps } = useWidgetTheme(\n        color\n    )\n    const clipId = useId()\n\n    const hasValue = !isNaN(value)\n    const tvalue = hasValue ? `${Math.round(value * 100)}%` : `--`\n\n    const w = 5\n    const h = 9.488\n    const cm = 3.3\n    const ch = (h - cm) * ((0.12 + value) / 1.12)\n    const onChange = (event: unknown, newValue: number | number[]): void => {\n        const svalue = newValue as number\n        host?.reading.setValues([svalue])\n        moistureReg.refresh()\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SvgWidget width={w} height={h} size={widgetSize}>\n                    {hasValue && (\n                        <defs>\n                            <clipPath id={clipId}>\n                                <rect x={0} y={h - ch} width={w} height={ch} />\n                            </clipPath>\n                        </defs>\n                    )}\n                    <path\n                        fill={background}\n                        d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n                    />\n                    <path\n                        fill={active}\n                        d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n                        clipPath={`url(#${clipId})`}\n                    />\n                    <path\n                        fill={controlBackground}\n                        d=\"M4.075 8.548a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 4.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 3.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 6.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 4.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 3.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 6.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.948a.075.075 0 100-.15.075.075 0 100 .15zM.925 8.548a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 4.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 3.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 6.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 4.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 3.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 6.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.948a.075.075 0 100-.15.075.075 0 100 .15z\"\n                    />\n                    <text\n                        x={w / 2}\n                        y=\"1.4\"\n                        fontSize=\"1.058\"\n                        strokeWidth=\".026\"\n                        {...textProps}\n                    >\n                        {tvalue}\n                    </text>\n                </SvgWidget>\n            </Grid>\n            {host && hasValue && (\n                <Grid item xs>\n                    <Slider\n                        valueLabelDisplay=\"off\"\n                        min={0}\n                        max={1}\n                        step={0.05}\n                        value={value}\n                        onChange={onChange}\n                        color={color}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"sourceRoot":""}