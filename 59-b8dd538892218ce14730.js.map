{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/NotificationImportant.js","webpack:///./node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","webpack:///./node_modules/@material-ui/lab/esm/TreeView/TreeView.js","webpack:///./node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js","webpack:///./src/components/ui/StyledTreeView.tsx","webpack:///./src/components/JDomTreeView.tsx","webpack:///./node_modules/@material-ui/icons/ArrowDropDown.js"],"names":["useTreeItemStyles","makeStyles","theme","createStyles","root","color","palette","text","secondary","backgroundColor","action","hover","grey","content","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","marginLeft","paddingLeft","spacing","expanded","selected","background","default","label","labelRoot","display","alignItems","padding","labelIcon","marginRight","labelText","flexGrow","StyledTreeItem","props","classes","kind","icon","labelInfo","bgColor","checked","setChecked","actions","nodeId","alert","other","useState","checkedState","setCheckedState","handleChecked","ev","c","stopPropagation","DeviceTreeItem","device","checkboxes","serviceFilter","id","name","useDeviceName","physical","useChange","d","lost","useEventRaised","LOST","FOUND","dev","services","filter","srv","useTheme","showActions","useMediaQuery","breakpoints","up","dropped","qos","serviceNames","ellipseJoin","service","serviceClass","SRV_CTRL","SRV_LOGGER","map","readingRegister","find","reading","useRegisterHumanValue","undefined","r","join","indexOf","ServiceTreeItem","registerFilter","eventFilter","specification","showSpecificationAction","open","packets","registers","isRegister","info","register","identifier","reg","sort","l","localeCompare","events","isEvent","event","instanceName","useRegisterStringValue","BaseReg","InstanceName","mobile","down","MOBILE_BREAKPOINT","useContext","AppContext","setDrawerType","handleSpecClick","console","log","DrawerType","None","shortId","RegisterTreeItem","lastGetAttempts","attempts","setAttempts","optional","failedGet","humanValue","useEffect","subscribe","GET_ATTEMPT","EventTreeItem","count","useEventCount","useStyles","margins","JDomTreeView","defaultExpanded","defaultSelected","defaultChecked","onChecked","onToggle","onSelect","dashboard","deviceFilter","setExpanded","setSelected","JacdacContext","bus","devices","handleToggle","nodeIds","handleSelect","v","i","splice","push","clsx","width"],"mappings":";;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,MAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,MAA+C;;AAErF;AACA;AACA,CAAC;AACD;;AAEA,oCAAoC,mBAAO,CAAC,MAAO;;AAEnD,4CAA4C,mBAAO,CAAC,MAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB+B;AAC/B;AACA;AACA;;AAEA,sBAAsB,sBAAmB,GAAG;;AAE5C,IAAI,KAAqC,EAAE,EAE1C;;AAEc,4EAAe,E;;ACX4B;AACY;AACoB;AAC3D;AACP;AAC8B;AACE;AACR;AACzC,IAAI,eAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI,iBAAQ,gBAAgB,mBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kDAAwB;;AAEtC,wBAAwB,iBAAc;AACtC;AACA;;AAEA,yBAAyB,iBAAc;AACvC;AACA;;AAEA,gBAAgB,eAAY,GAAG;AAC/B,qBAAqB,eAAY,GAAG;AACpC,qBAAqB,eAAY;;AAEjC,uBAAuB,wCAAa;AACpC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,wCAAc;AACtC;AACA;;AAEA,wBAAwB,wCAAa;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,wCAAc;AACtC;AACA;AACA;AACA;AACA;;;AAGA,mBAAmB,oBAAiB;AACpC;AACA,GAAG;AACH,mBAAmB,oBAAiB;AACpC;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;AACA,KAAK;;;AAGL,gEAAgE;;AAEhE;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yBAAyB,eAAY;AACrC,8BAA8B,eAAY;AAC1C,8BAA8B,eAAY;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B,sCAAQ,GAAG;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,sCAAQ,GAAG;AAC5C;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,yBAAyB,oBAAiB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;AACH,4BAA4B,oBAAiB;AAC7C,iBAAiB,sCAAQ,GAAG;;AAE5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,8BAA8B,oBAAiB;AAC/C;AACA;;AAEA,iBAAiB,sCAAQ,GAAG;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,iCAAiC,sCAAQ,GAAG;AAC5C;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA,qBAAqB,eAAY;;AAEjC,yBAAyB,iBAAc;AACvC;AACA;;AAEA,EAAE,kBAAe;AACjB;AACA,IAAI,iBAAc;AAClB,wBAAwB,uBAAoB;AAC5C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,kBAAe;AACjB;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,sBAAsB,sBAAmB,CAAC,wBAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,sBAAmB,OAAO,sCAAQ;AACpD;AACA;AACA,eAAe,iCAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,SAAM;AAC/B,+FAAU,CAAC,eAAM;AAChC;AACA,CAAC,EAAE,iBAAQ,CAAC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1oB8C;AACgC;AAC1F;;AAE+B;AACP;AAC8B;AACJ;AACoB;AACjB;AACK;AACnD,IAAI,eAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yBAAyB,wCAAI;AAC7B,OAAO;AACP;AACA,yBAAyB,wCAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB;;AAEhB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,iBAAQ,gBAAgB,mBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,2BAAQ;AACvE;AACA,cAAc,kDAAwB;;AAEtC,0BAA0B,mBAAgB,CAAC,wBAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,eAAY;AAC5B,mBAAmB,eAAY;AAC/B,kBAAkB,qCAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mCAAQ;;AAEtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qFAAqF;;AAErF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,kBAAe;AACjB;AACA;AA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","file":"59-b8dd538892218ce14730.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 16v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-5 0h-2v-2h2v2zm0-4h-2V8h2v4zm-1 10c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2z\"\n}), 'NotificationImportant');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","import React, { useState, ChangeEvent } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n// tslint:disable-next-line: no-submodule-imports\n// tslint:disable-next-line: no-submodule-imports\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\n// tslint:disable-next-line: no-submodule-imports\nimport Typography from '@material-ui/core/Typography';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport KindIcon from \"../KindIcon\"\nimport { Switch } from '@material-ui/core';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\n\ndeclare module 'csstype' {\n    interface Properties {\n        '--tree-view-color'?: string;\n        '--tree-view-bg-color'?: string;\n    }\n}\n\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            color: theme.palette.text.secondary,\n            '&:hover > $content': {\n                backgroundColor: theme.palette.action.hover,\n            },\n            '&:focus > $content, &$selected > $content': {\n                backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n                color: 'var(--tree-view-color)',\n            },\n            '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n                backgroundColor: 'transparent',\n            },\n        },\n        content: {\n            color: theme.palette.text.secondary,\n            fontWeight: theme.typography.fontWeightMedium,\n            '$expanded > &': {\n                fontWeight: theme.typography.fontWeightRegular,\n            },\n        },\n        group: {\n            marginLeft: 0,\n            '& $content': {\n                paddingLeft: theme.spacing(1),\n            },\n        },\n        expanded: {},\n        selected: {\n            color: theme.palette.background.default\n        },\n        label: {\n            fontWeight: 'inherit',\n            color: 'inherit',\n        },\n        labelRoot: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0.5, 0),\n        },\n        labelIcon: {\n            marginRight: theme.spacing(0.5),\n        },\n        labelText: {\n            fontWeight: 'inherit',\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport function StyledTreeItem(props: TreeItemProps & {\n    nodeId: string;\n    bgColor?: string;\n    color?: string;\n    kind?: string;\n    icon?: JSX.Element;\n    alert?: string;\n    labelInfo?: string;\n    labelText: string;\n    checked?: boolean;\n    setChecked?: (state: boolean) => void;\n    actions?: JSX.Element | JSX.Element[]\n}) {\n    const classes = useTreeItemStyles();\n    const { labelText, kind, icon, labelInfo, color, bgColor, checked, setChecked, actions, nodeId, alert, ...other } = props;\n    const [checkedState, setCheckedState] = useState(checked)\n\n    const handleChecked = (ev: ChangeEvent<HTMLInputElement>, c: boolean) => {\n        ev.stopPropagation()\n        setChecked(c)\n        setCheckedState(c)\n    }\n    return (\n        <TreeItem\n            nodeId={nodeId}\n            label={\n                <div className={classes.labelRoot}>\n                    {setChecked && <Switch\n                        checked={checkedState}\n                        color=\"primary\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={handleChecked}\n                    />}\n                    {kind && <KindIcon kind={kind} className={classes.labelIcon} />}\n                    {icon}\n                    <Typography variant=\"body2\" className={classes.labelText}>\n                        {labelText}\n                    </Typography>\n                    {alert && <NotificationImportantIcon />}\n                    <Typography variant=\"caption\" color=\"inherit\">\n                        {alert && <Typography component=\"span\">\n                            {alert}\n                        </Typography>}\n                        {labelInfo}\n                        {actions}\n                    </Typography>\n                </div>\n            }\n            style={{\n                '--tree-view-color': color,\n                '--tree-view-bg-color': bgColor,\n            }}\n            classes={{\n                root: classes.root,\n                content: classes.content,\n                expanded: classes.expanded,\n                selected: classes.selected,\n                group: classes.group,\n                label: classes.label,\n            }}\n            {...other}\n        />\n    );\n}\n\nexport interface StyledTreeViewItemProps {\n    key: string;\n    expanded: string[];\n    selected: string[];\n    checked?: string[];\n    setChecked?: (id: string, value: boolean) => void;\n}\n\nexport interface StyledTreeViewProps {\n    defaultChecked?: string[];\n    defaultExpanded?: string[];\n    defaultSelected?: string[];\n    onToggle?: (expanded: string[]) => void;\n    onSelect?: (selected: string[]) => void;\n    onChecked?: (checked: string[]) => void;\n}","import React, { useContext, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n// tslint:disable-next-line: no-submodule-imports\nimport TreeView from '@material-ui/lab/TreeView';\n// tslint:disable-next-line: no-submodule-imports\n// tslint:disable-next-line: no-submodule-imports\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { JDDevice } from '../../jacdac-ts/src/jdom/device';\nimport { JDEvent } from '../../jacdac-ts/src/jdom/event';\nimport { JDService } from '../../jacdac-ts/src/jdom/service';\nimport { JDRegister } from '../../jacdac-ts/src/jdom/register';\nimport useChange from \"../jacdac/useChange\";\nimport { isRegister, isEvent } from '../../jacdac-ts/src/jdom/spec';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\nimport { useRegisterHumanValue, useRegisterStringValue } from '../jacdac/useRegisterValue';\nimport useEventCount from '../jacdac/useEventCount';\nimport DeviceActions from './DeviceActions';\nimport { LOST, FOUND, SRV_CTRL, SRV_LOGGER, GET_ATTEMPT, BaseReg } from '../../jacdac-ts/src/jdom/constants';\nimport useEventRaised from '../jacdac/useEventRaised';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport { ellipseJoin } from '../../jacdac-ts/src/jdom/utils';\nimport { Link } from 'gatsby-theme-material-ui';\nimport useDeviceName from './useDeviceName';\nimport ConnectAlert from \"./alert/ConnectAlert\"\nimport { StyledTreeItem, StyledTreeViewItemProps, StyledTreeViewProps } from './ui/StyledTreeView';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport AppContext, { DrawerType } from './AppContext'\nimport { MOBILE_BREAKPOINT } from './layout';\n\nfunction DeviceTreeItem(props: { device: JDDevice } & StyledTreeViewItemProps & JDomTreeViewProps) {\n    const { device, checked, setChecked, checkboxes, serviceFilter, ...other } = props\n    const id = device.id\n    const name = useDeviceName(device, true)\n    const physical = useChange(device, d => d.physical)\n    const kind = physical ? \"device\" : \"virtualdevice\"\n    const lost = useEventRaised([LOST, FOUND], device, dev => !!dev?.lost)\n    const services = useChange(device, () => device.services().filter(srv => !serviceFilter || serviceFilter(srv)))\n    const theme = useTheme()\n    const showActions = useMediaQuery(theme.breakpoints.up('sm'))\n    const dropped = useChange(device.qos, qos => qos.dropped);\n\n    const serviceNames = ellipseJoin(services\n        .filter(service => service.serviceClass !== SRV_CTRL && service.serviceClass !== SRV_LOGGER)\n        .map(service => service.name), 18)\n    const readingRegister = services.find(srv => srv.readingRegister)?.readingRegister;\n    const reading = useRegisterHumanValue(readingRegister);\n\n    const alert = lost ? `Lost device...`\n        : dropped > 2 ? `${dropped} lost`\n            : undefined;\n    const labelInfo = [\n        !!dropped && `${dropped} lost`\n        , reading\n        , serviceNames\n    ].filter(r => !!r).join(', ');\n\n    const handleChecked = c => setChecked(id, c)\n    return <StyledTreeItem\n        nodeId={id}\n        labelText={name}\n        labelInfo={labelInfo}\n        alert={alert}\n        kind={kind}\n        checked={checked?.indexOf(id) > -1}\n        setChecked={checkboxes && checkboxes.indexOf(\"device\") > -1 && setChecked && handleChecked}\n        actions={showActions && <DeviceActions device={device} showReset={true} />}\n    >\n        {services?.map(service => <ServiceTreeItem\n            key={service.id}\n            service={service}\n            checked={checked}\n            setChecked={setChecked}\n            checkboxes={checkboxes}\n            {...other}\n        />)}\n    </StyledTreeItem>\n}\n\nfunction ServiceTreeItem(props: { service: JDService } & StyledTreeViewItemProps & JDomTreeViewProps) {\n    const { service, checked, setChecked, checkboxes, registerFilter, eventFilter, ...other } = props;\n    const specification = service.specification;\n    const showSpecificationAction = false;\n    const id = service.id\n    const open = checked?.indexOf(id) > -1;\n    const packets = specification?.packets;\n    const registers = packets?.filter(isRegister)\n        .map(info => service.register(info.identifier))\n        .filter(reg => !registerFilter || registerFilter(reg))\n        .sort((l, r) => l.name.localeCompare(r.name))\n    const events = packets?.filter(isEvent)\n        .map(info => service.event(info.identifier))\n        .filter(ev => !eventFilter || eventFilter(ev))\n    const readingRegister = service.readingRegister;\n    const reading = useRegisterHumanValue(readingRegister)\n    const instanceName = useRegisterStringValue(service.register(BaseReg.InstanceName));\n    const name = service.name + (instanceName ? ` ${instanceName}` : '');\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT));\n    const { setDrawerType } = useContext(AppContext);\n\n    const handleSpecClick = () => {\n        console.log(`spec click`, { mobile })\n        if (mobile)\n            setDrawerType(DrawerType.None)\n    }\n    const handleChecked = c => setChecked(id, c)\n    return <StyledTreeItem\n        nodeId={id}\n        labelText={name}\n        labelInfo={reading}\n        kind={\"service\"}\n        checked={open}\n        setChecked={checkboxes?.indexOf(\"service\") > -1 && setChecked && handleChecked}\n        actions={showSpecificationAction ? <Link color=\"inherit\" to={`/services/${specification.shortId}/`} aria-label={\"Open specification\"} onClick={handleSpecClick}>\n            <LaunchIcon fontSize={\"small\"} />\n        </Link> : undefined}\n    >\n        {registers?.map(register => <RegisterTreeItem\n            key={register.id}\n            register={register}\n            checked={checked}\n            setChecked={setChecked}\n            checkboxes={checkboxes}\n            {...other}\n        />)}\n        {events?.map(event => <EventTreeItem\n            key={event.id}\n            event={event}\n            checked={checked}\n            setChecked={setChecked}\n            checkboxes={checkboxes}\n            {...other}\n        />)}\n    </StyledTreeItem>\n}\n\nfunction RegisterTreeItem(props: { register: JDRegister } & StyledTreeViewItemProps & JDomTreeViewProps) {\n    const { register, checked, setChecked, checkboxes } = props;\n    const { specification, id } = register\n    const [attempts, setAttempts] = useState(register.lastGetAttempts);\n    const optional = !!specification?.optional;\n    const failedGet = attempts > 2;\n    const labelText = `${specification?.name || register.id}${optional ? \"?\" : \"\"}`;\n    const humanValue = useRegisterHumanValue(register)\n\n    useEffect(() => register?.subscribe(GET_ATTEMPT, () => {\n        setAttempts(register.lastGetAttempts)\n    }), [register]);\n\n    const handleChecked = c => {\n        setChecked(id, c)\n    }\n\n    // if register is optional and no data, hide\n    if (optional && failedGet && humanValue === undefined)\n        return <></>;\n\n    return <StyledTreeItem\n        nodeId={id}\n        labelText={labelText}\n        labelInfo={humanValue || (attempts > 0 && `#${attempts}`) || \"\"}\n        kind={specification?.kind || \"register\"}\n        alert={failedGet && !optional && humanValue === undefined && `???`}\n        checked={checked?.indexOf(id) > -1}\n        setChecked={checkboxes?.indexOf(\"register\") > -1 && setChecked && handleChecked}\n    />\n}\n\nfunction EventTreeItem(props: { event: JDEvent } & StyledTreeViewItemProps & JDomTreeViewProps) {\n    const { event, checked, setChecked, checkboxes } = props;\n    const { specification, id } = event\n    const count = useEventCount(event)\n\n    const handleChecked = c => {\n        setChecked(id, c)\n    }\n    return <StyledTreeItem\n        nodeId={id}\n        labelText={specification?.name || event.id}\n        labelInfo={(count || \"\") + \"\"}\n        kind=\"event\"\n        checked={checked?.indexOf(id) > -1}\n        setChecked={checkboxes?.indexOf(\"event\") > -1 && setChecked && handleChecked}\n    />\n}\n\nexport type CheckedMap = { [id: string]: boolean };\n\nexport interface JDomTreeViewProps extends StyledTreeViewProps {\n    // don't render links to specification\n    dashboard?: boolean;\n    checkboxes?: (\"device\" | \"service\" | \"register\" | \"event\")[];\n    deviceFilter?: (devices: JDDevice) => boolean;\n    serviceFilter?: (services: JDService) => boolean;\n    registerFilter?: (register: JDRegister) => boolean;\n    eventFilter?: (event: JDEvent) => boolean;\n}\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        margins: {\n            marginLeft: theme.spacing(0.5),\n            marginRight: theme.spacing(0.5)\n        }\n    }),\n);\n\nexport default function JDomTreeView(props: JDomTreeViewProps) {\n    const {\n        defaultExpanded, defaultSelected, defaultChecked,\n        onChecked, onToggle, onSelect, checkboxes, dashboard, deviceFilter, ...other } = props;\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState<string[]>(defaultExpanded || []);\n    const [selected, setSelected] = useState<string[]>(defaultSelected || []);\n    const [checked, setChecked] = useState<string[]>(defaultChecked || [])\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, () => bus.devices().filter(dev => !deviceFilter || deviceFilter(dev)))\n\n    const handleToggle = (event: React.ChangeEvent<unknown>, nodeIds: string[]) => {\n        setExpanded(nodeIds);\n        if (onToggle) onToggle(nodeIds)\n    };\n\n    const handleSelect = (event: React.ChangeEvent<unknown>, nodeIds: string[]) => {\n        setSelected(nodeIds);\n        if (onSelect) onSelect(nodeIds)\n    };\n    const handleChecked = (id: string, v: boolean) => {\n        const i = checked.indexOf(id)\n        if (!v && i > -1)\n            checked.splice(i, 1)\n        else if (v && i < 0)\n            checked.push(id)\n        setChecked(checked)\n        if (onChecked)\n            onChecked(checked)\n    };\n\n    return (<>\n        <ConnectAlert />\n        <TreeView\n            className={clsx(classes.root, classes.margins)}\n            defaultCollapseIcon={<ArrowDropDownIcon />}\n            defaultExpandIcon={<ArrowRightIcon />}\n            defaultEndIcon={<div style={{ width: 12 }} />}\n            expanded={expanded}\n            selected={selected}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n        >\n            {devices?.map(device => <DeviceTreeItem\n                key={device.id}\n                device={device}\n                checked={checked}\n                setChecked={handleChecked}\n                checkboxes={checkboxes}\n                expanded={expanded}\n                selected={selected}\n                dashboard={dashboard}\n                {...other}\n            />)}\n        </TreeView>\n    </>);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;"],"sourceRoot":""}