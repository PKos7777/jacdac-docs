{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/BugReport.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./src/components/ImportButton.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/utils.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/runner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/blockly/dsl/servicesdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/toolsdsl.ts","webpack://jacdac-docs/./src/components/blockly/BlockRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/blockly/BlockFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/blockly/dsl/loopsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/logicdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/mathdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/jsondsl.ts","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["DropzoneDialog","lazy","ImportButton","props","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","className","useState","open","setOpen","handleOpen","handleSave","files","length","handleClose","VMError","name","message","jacdacName","Error","errorPath","e","Mutex","promises","shift","acquire","f","Promise","resolve","reject","push","then","v","VMInternalStatus","VM_WAKE_SLEEPER","VMJumpException","label","VMTimerException","ms","VMCommandEvaluator","parent","env","gc","_regSaved","undefined","_changeSaved","_started","trace","msg","context","command","type","evalExpression","expr","VMExprEvaluator","lookup","eval","checkExpression","start","callee","inst","args","arguments","evaluate","neededStart","Running","values","map","a","sendCommandAsync","Completed","event","hasEvent","regValue","ev","unparse","reg","writeRegisterAsync","writeLocal","watch","sourceId","evString","writeLog","console","log","Stopped","VMCode","VMCommandRunner","handlerId","_status","_eval","handler","id","val","stepAsync","status","s","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","commands","forEach","c","index","cmd","reset","gotoTop","Ready","commandIndex","cancel","unsubscribe","wake","next","runToCompletionAsync","singleStep","singleStepCheckBreakAsync","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","VM_EVENT","vmt","Sleeping","sleepAsync","JDEventSource","isEveryHandler","h","assert","VMStatus","MAX_LOG","VMProgramRunner","bus","roleManager","program","_handlerRunners","_roles","_waitQueue","_everyQueue","_runQueue","_sleepQueue","_watch","_log","_breaks","_in_run","compiled","compileProgram","checkProgram","registers","events","errors","roles","debug","_env","VMEnvironment","handlers","_waitRunMutex","_breaksMutex","_sleepMutex","mount","subscribe","CHANGE","waitingToRunning","GLOBAL_CHANGE","wakeSleeper","initializeRoleManagement","globals","ignoreRoles","value","setStatus","TRACE","last","count","lookupWatch","setBreakpointsAsync","breaks","b","clearBreakpointsAsync","ret","setTimeout","handlerRunner","startAsync","setRoles","slice","stopSleepers","runAsync","resumeAsync","Paused","getCurrentRunner","runHandlerAsync","postProcessHandler","newHead","emitBreakpoint","refreshRegistersAsync","atTop","oneStep","brkCommand","VMEnvironmentException","ex","code","VMEnvironmentCode","data","done","moveToWait","unshift","waitCopy","handlersStarted","newRunners","sleepingRunners","findIndex","hs","indexOf","splice","consumeEvent","clearTimeout","p","addRoleService","role","service","getService","serviceChanged","r","find","rv","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoRun","useContext","JacdacContext","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","run","useEffect","newTestRunner","unmount","ERROR","handleTrace","Flags","VMDiagnostics","JSON","stringify","SET_STATUS_LIGHT_BLOCK","ROLE_BOUND_EVENT_BLOCK","ROLE_BOUND_BLOCK","isBooleanField","field","isStringField","toBlocklyType","encoding","JSON_TYPE","BOOLEAN_TYPE","STRING_TYPE","isNumericType","NUMBER_TYPE","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","register","JoystickReg","get","commandColor","ServicesBlockDomainSpecificLanguage","supportedServices","createServiceColor","theme","sensorColor","palette","success","main","otherColor","info","serviceColor","isSensor","createBlocks","options","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","ServoAngleField","SRV_BUZZER","BuzzerCmd","NoteField","lookupCustomShadow","cs","classIdentifier","serviceHelp","withPrefix","shortId","fieldsSupported","pkt","fields","every","fieldName","fieldToShadow","unit","test","defaultValue","min","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","humanify","camelName","toLowerCase","fieldVariable","variable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","join","isEnabledRegister","customMessage","m","allServices","serviceSpecifications","filter","resolveService","cls","arrayConcatMany","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","SRV_HID_KEYBOARD","message0","args0","KeyboardKeyField","colour","inputsInline","previousStatement","CODE_STATEMENT_TYPE","nextStatement","tooltip","helpUrl","expression","template","SRV_LED","color","LEDColorField","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","LEDMatrixField","def","eventBlocks","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","output","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","Object","keys","members","member","registerNumericsGetBlocks","re","registerSetBlocks","commandBlocks","_serviceBlocks","eventFieldGroups","_eventFieldBlocks","_runtimeBlocks","createCategory","source","liveServices","blockServices","variables","serviceSpecificationFromName","usedEvents","Set","blocks","block","definition","resolveServiceBlockDefinition","eventName","inputs","jdBlocks","services","uniqueMap","toolboxServices","srvid","specification","sort","l","localeCompare","servicesCategories","serviceBlocks","contents","has","button","callbackKey","cat","commonCategory","compileEventToVM","blockToExpression","toMemberExpression","toString","toIdentifier","child","compileExpressionToVM","eventInfo","compileCommandToVM","makeVMBase","serviceCommand","exprsErrors","flatMap","servicesDSL","INSPECT_BLOCK","WATCH_BLOCK","LOG_BLOCK","VIEW_LOG_BLOCK","VARIABLES_BLOCK","TWIN_BLOCK","toolsDSL","TwinField","JDomTreeField","VariablesField","WatchValueField","LogViewField","meta","RoleChip","BlockContext","workspace","serviceShortId","server","useServiceServer","handleRoleClick","addServiceProvider","serviceProviderDefinitionFromServiceClass","twinBlock","getTopBlocks","inputList","fieldRow","getVariable","newBlock","setValue","getId","getMetrics","moveBy","viewWidth","viewHeight","initSvg","render","centerOnBlock","handleDelete","removeServiceProvider","device","BlockRoles","useChange","_","useWorkspaceBreakpoints","breakpoints","useMemo","setBreakpointHighlight","highlightBlock","VMRunnerButtons","t","indeterminate","setIndeterminate","breakpoint","setBreakpoint","pausing","paused","mounted","useMounted","handleRun","handleCancel","handleResume","handlePause","handleStep","VMStartSimulatorButton","toggleShowDeviceHostsDialog","LoadButton","handleFiles","file","jsfile","parse","xml","dom","Xml","clear","SaveButton","workspaceXml","json","url","encodeURIComponent","BlockFileButtons","VMToolbar","WAIT_BLOCK","ON_START_BLOCK","REPEAT_EVERY_BLOCK","loopsDsl","interval","time","processErrors","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","logicDsl","A","B","BOOL","blockToExpressionInner","left","right","op","operator","argument","prefix","ADD","MULTIPLY","DIVIDE","MINUS","mathDSL","style","extensions","vm","Math","random","minInclusive","maxInclusive","NUM","JSON_FIELD_TYPE","JSON_OBJECT_BLOCK","JSON_FIELD_SET_BLOCK","JSON_FIELD_GET_TEMPLATE","JSON_FIELD_VALUE_TYPE","PRIMITIVE_TYPES","JSON_FIELD_HAS_BLOCK","jsonDSL","VM_SOURCE_STORAGE_KEY","VMEditorWithContext","dsls","workspaceJSON","setWarnings","setProgram","autoStart","newProgram","workspaceJSONToVMProgram","error","ws","jacdacServices","VMEditor","variablesDsl","shadowDsl","fieldsDsl","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6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","file":"component---src-pages-tools-vm-editor-tsx-c726e0226b224bec99f5.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n","import { VMCode } from \"./events\"\n\nexport class VMError extends Error {\n    constructor(\n        name: VMCode,\n        readonly message: string,\n        readonly jacdacName?: string\n    ) {\n        super(message)\n        this.name = name\n    }\n}\n\nexport default function errorPath(e: VMError): string {\n    return (e as VMError)?.jacdacName\n}\n\nexport class Mutex {\n    private promises: (() => Promise<any>)[] = []\n    private shift() {\n        this.promises.shift()\n        if (this.promises[0]) this.promises[0]()\n    }\n    acquire<T>(f: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.promises.push(() =>\n                f().then(\n                    v => {\n                        this.shift()\n                        resolve(v)\n                    },\n                    e => {\n                        this.shift()\n                        reject(e)\n                    }\n                )\n            )\n            if (this.promises.length == 1) this.promises[0]()\n        })\n    }\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./ir\"\nimport RoleManager from \"../servers/rolemanager\"\nimport {\n    VMEnvironment,\n    VMEnvironmentException,\n    VMEnvironmentCode,\n    GLOBAL_CHANGE,\n} from \"./environment\"\nimport { VMExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ROLE_BOUND, ROLE_UNBOUND, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./compile\"\nimport { VM_EVENT, VMCode } from \"./events\"\nimport { VMError, Mutex } from \"./utils\"\nimport { assert, SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nenum VMInternalStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nconst VM_WAKE_SLEEPER = \"vmWakeSleeper\"\n\nexport type atomic = string | boolean | number\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: atomic\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: atomic[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => atomic\n    writeLocal: (e: jsep.MemberExpression | string, v: atomic) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException extends Error {\n    constructor(public label: string) {\n        super()\n    }\n}\n\nclass VMTimerException extends Error {\n    constructor(public ms: number) {\n        super()\n    }\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMInternalStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMInternalStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMInternalStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMInternalStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMInternalStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMInternalStatus.Completed\n                        : VMInternalStatus.Running\n                }\n                return VMInternalStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMInternalStatus.Completed\n                    : VMInternalStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMInternalStatus.Completed\n                }\n                return VMInternalStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"log\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                const evString = ev + \"\"\n                this.parent.writeLog(this.gc?.sourceId, evString)\n                console.log(evString)\n                return VMInternalStatus.Completed\n            }\n            case \"halt\": {\n                return VMInternalStatus.Stopped\n            }\n            case \"nop\": {\n                return VMInternalStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            case \"onRoleConnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            case \"onRoleDisonnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            default:\n                throw new VMError(\n                    VMCode.InternalError,\n                    `Unknown instruction ${this.inst}`\n                )\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMInternalStatus = VMInternalStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    writeLog(id: string, val: any) {\n        this.parent.writeLog(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMInternalStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMInternalStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    writeLog(id: string, val: any) {\n        this.parent.writeLog(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMInternalStatus.Stopped\n            : this._commandIndex === undefined\n            ? VMInternalStatus.Ready\n            : this._currentCommand.status === VMInternalStatus.Completed &&\n              this._commandIndex < this.handler.commands.length - 1\n            ? VMInternalStatus.Running\n            : this._currentCommand.status\n    }\n\n    get command() {\n        return this._currentCommand\n    }\n\n    get atTop() {\n        return (\n            this.status === VMInternalStatus.Running && this._commandIndex === 0\n        )\n    }\n\n    gotoTop() {\n        if (\n            this.status === VMInternalStatus.Ready &&\n            this.handler.commands.length\n        )\n            this.commandIndex = 0\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMInternalStatus.Completed\n            this.next()\n        }\n    }\n\n    // run-to-completion semantics\n    // returns command if breakpoint encountered when not single stepping\n    async runToCompletionAsync(singleStep = false) {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync(singleStep)) && !singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if (singleStep || (await this.singleStepCheckBreakAsync()))\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMInternalStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(VMCode.InternalError, \"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync(singleStep = false) {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (!singleStep && (await this.parent.breakpointOnAsync(sid))) {\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.parent.emit(VM_EVENT, VMCode.CommandStarted, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMInternalStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                const vmt = e as VMTimerException\n                this._currentCommand.status = VMInternalStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.CommandFailed,\n                    this._currentCommand.gc.sourceId\n                )\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMInternalStatus.Completed)\n            this.parent.emit(\n                VM_EVENT,\n                VMCode.CommandCompleted,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMInternalStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    ms: number\n    handlerRunner: VMHandlerRunner\n    handler?: VMHandler\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandler) {\n    assert(!!h)\n    if (h.commands.length) {\n        const cmd = (h.commands[0] as VMCommand).command\n            .callee as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport enum VMStatus {\n    Stopped = \"stopped\",\n    Running = \"running\",\n    Paused = \"paused\",\n}\nconst MAX_LOG = 100\nexport class VMProgramRunner extends JDClient {\n    // program, environment\n    private _handlerRunners: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _roles: VMRole[] = []\n    // running\n    private _status: VMStatus\n    private _waitQueue: VMHandlerRunner[] = []\n    private _everyQueue: VMHandlerRunner[] = []\n    private _runQueue: VMHandlerRunner[] = []\n    private _waitRunMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n    // debugging\n    private _watch: SMap<any> = {}\n    private _log: { text: string; count: number }[] = []\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors?.length) console.debug(\"ERRORS\", errors)\n        // data structures for running program\n        this._status = VMStatus.Stopped\n        this._env = new VMEnvironment(registers, events)\n        this._handlerRunners = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        // TODO: can't add multiple handlers until we have deduplicate CHANGE on Event\n        /*\n        const len = this._handlerRunners.length\n        compiled.handlers.forEach((h, index) =>\n            this._handlerRunners.push(\n                new VMHandlerRunner(this, len + index, this._env, h)\n            )\n        )*/\n\n        this._waitRunMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex = new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.waitingToRunning()\n            })\n        )\n        this.mount(\n            this._env.subscribe(GLOBAL_CHANGE, name =>\n                this.emit(GLOBAL_CHANGE, name)\n            )\n        )\n        this.mount(\n            this.subscribe(\n                VM_WAKE_SLEEPER,\n                async (h: VMHandlerRunner | VMHandler) => {\n                    await this.wakeSleeper(h)\n                }\n            )\n        )\n        this.initializeRoleManagement()\n    }\n\n    // control of VM\n    get status() {\n        return this._status\n    }\n\n    get logData() {\n        return this._log.slice(0)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    globals(ignoreRoles: boolean): { name: string; value: any }[] {\n        return [\n            {\n                name: \"dummy\",\n                value: 123,\n            },\n        ]\n    }\n\n    private setStatus(s: VMStatus) {\n        if (s !== this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    watch(sourceId: string, value: WatchValueType) {\n        this._watch[sourceId] = value\n        this.emit(VM_EVENT, VMCode.WatchChange, sourceId)\n    }\n\n    writeLog(sourceId: string, value: WatchValueType) {\n        const s = value + \"\"\n        const last = this._log[this._log.length - 1]\n        if (last?.text === s) last.count++\n        else this._log.push({ text: value + \"\", count: 1 })\n        while (this._log.length > MAX_LOG) this._log.shift()\n        this.emit(VM_EVENT, VMCode.LogEntry, sourceId)\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n\n    // utility called by handlerRunner\n    async sleepAsync(\n        h: VMHandlerRunner,\n        ms: number,\n        handler: VMHandler = undefined\n    ) {\n        assert(h.status === VMInternalStatus.Sleeping)\n        await this._sleepMutex.acquire(async () => {\n            const id = setTimeout(() => {\n                this.emit(VM_WAKE_SLEEPER, h ? h : handler)\n            }, ms)\n            this._sleepQueue.push({ ms, handlerRunner: h, id, handler })\n        })\n    }\n\n    async startAsync() {\n        if (this.status !== VMStatus.Stopped) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            await this._waitRunMutex.acquire(async () => {\n                this._waitQueue = this._handlerRunners.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n                this._runQueue = []\n                this._everyQueue = []\n                this.stopSleepers()\n                // make sure to have another handler for every\n                /*\n                for (const h of this._waitQueue) {\n                    if (isEveryHandler(h.handler)) {\n                        const dup = new VMHandlerRunner(\n                            this,\n                            undefined,\n                            this._env,\n                            h.handler\n                        )\n                        dup.reset()\n                        this._everyQueue.push(dup)\n                    }\n                }*/\n            })\n            this.clearBreakpointsAsync()\n            this.setStatus(VMStatus.Running)\n            this.waitingToRunning()\n            this.runAsync()\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    cancel() {\n        if (this.status === VMStatus.Stopped) return // nothing to cancel\n        this.setStatus(VMStatus.Stopped)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"resume\")\n        this.setStatus(VMStatus.Running)\n        await this.runAsync()\n    }\n\n    private async getCurrentRunner() {\n        return await this._waitRunMutex.acquire(async () => {\n            if (this._runQueue.length) return this._runQueue[0]\n            return undefined\n        })\n    }\n\n    async stepAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"step\")\n        const h = await this.getCurrentRunner()\n        if (h) {\n            await this.runHandlerAsync(h, true)\n            await this.postProcessHandler(h)\n            const newHead = await this.getCurrentRunner()\n            if (newHead && newHead !== h) {\n                this.emitBreakpoint(newHead)\n            }\n        }\n    }\n\n    private _in_run = false\n    private async runAsync() {\n        if (this.status === VMStatus.Stopped) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            let h: VMHandlerRunner = undefined\n            while (\n                this.status === VMStatus.Running &&\n                (h = await this.getCurrentRunner())\n            ) {\n                assert(!h.atTop)\n                await this.runHandlerAsync(h)\n                await this.postProcessHandler(h)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    private emitBreakpoint(h: VMHandlerRunner) {\n        this.emit(\n            VM_EVENT,\n            VMCode.Breakpoint,\n            h,\n            h.status === VMInternalStatus.Completed\n                ? \"\"\n                : h.command.gc?.sourceId\n        )\n    }\n\n    private async runHandlerAsync(h: VMHandlerRunner, oneStep = false) {\n        try {\n            const brkCommand = await h.runToCompletionAsync(oneStep)\n            if ((brkCommand && !oneStep) || this.status === VMStatus.Paused) {\n                this.setStatus(VMStatus.Paused)\n                this.emitBreakpoint(h)\n            }\n            if (h.status === VMInternalStatus.Completed) {\n                h.reset()\n            }\n        } catch (e) {\n            if (e instanceof VMEnvironmentException) {\n                const ex = e as VMEnvironmentException\n                if (ex.code === VMEnvironmentCode.RoleNoService)\n                    this.emit(\n                        VM_EVENT,\n                        VMCode.RoleMissing,\n                        (e as VMEnvironmentException).data\n                    )\n            } else {\n                console.debug(e)\n                this.emit(VM_EVENT, VMCode.InternalError, e)\n            }\n            // on handler error, reset the handler\n            h.reset()\n        }\n    }\n\n    private async postProcessHandler(h: VMHandlerRunner) {\n        if (\n            h.status === VMInternalStatus.Ready ||\n            h.status === VMInternalStatus.Sleeping ||\n            h.status === VMInternalStatus.Stopped\n        ) {\n            let done: VMHandlerRunner = undefined\n            await this._waitRunMutex.acquire(async () => {\n                assert(!!this._runQueue.length)\n                assert(h === this._runQueue[0])\n                done = this._runQueue.shift()\n                const moveToWait = h.status === VMInternalStatus.Ready\n                if (moveToWait && !isEveryHandler(h.handler)) {\n                    this._waitQueue.push(done)\n                    done = undefined\n                }\n            })\n            if (\n                done &&\n                h.status === VMInternalStatus.Ready &&\n                isEveryHandler(h.handler)\n            ) {\n                if (this.status === VMStatus.Running)\n                    await this.runHandlerAsync(h)\n                else if (this.status === VMStatus.Paused) {\n                    await this._waitRunMutex.acquire(async () => {\n                        this._runQueue.unshift(h)\n                        // this.emitBreakpoint(h)\n                    })\n                }\n            }\n        }\n    }\n\n    // call this whenever some event/change arises\n    private async waitingToRunning() {\n        if (this.status !== VMStatus.Stopped) {\n            let waitCopy: VMHandlerRunner[] = undefined\n            await this._waitRunMutex.acquire(async () => {\n                if (this.status === VMStatus.Paused && this._runQueue.length)\n                    return\n                waitCopy = this._waitQueue.slice(0)\n            })\n            if (!waitCopy) return\n            const handlersStarted: VMHandler[] = []\n            const newRunners: VMHandlerRunner[] = []\n            const sleepingRunners: VMHandlerRunner[] = []\n            for (const h of waitCopy) {\n                await this.runHandlerAsync(h, true)\n                if (h.status === VMInternalStatus.Sleeping) {\n                    sleepingRunners.push(h)\n                } else if (\n                    !h.atTop &&\n                    handlersStarted.findIndex(hs => hs === h.handler) === -1\n                ) {\n                    newRunners.push(h)\n                    handlersStarted.push(h.handler)\n                }\n            }\n            await this._waitRunMutex.acquire(async () => {\n                newRunners.forEach(h => {\n                    this._runQueue.push(h)\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0) this._waitQueue.splice(index, 1)\n                })\n                sleepingRunners.forEach(h => {\n                    const index = this._waitQueue.indexOf(h)\n                    if (index >= 0) this._waitQueue.splice(index, 1)\n                })\n            })\n            this._env.consumeEvent()\n            this.runAsync()\n        }\n    }\n\n    private async stopSleepers() {\n        await this._sleepMutex.acquire(async () => {\n            for (const s of this._sleepQueue) {\n                clearTimeout(s.id)\n            }\n            this._sleepQueue = []\n        })\n    }\n\n    private async wakeSleeper(h: VMHandlerRunner | VMHandler) {\n        try {\n            // let handlerMs: number = undefined\n            let handlerRunner: VMHandlerRunner = undefined\n            // let handler: VMHandler = undefined\n            await this._sleepMutex.acquire(async () => {\n                const index = this._sleepQueue.findIndex(\n                    p => p?.handlerRunner === h // || p?.handler === h\n                )\n                assert(index >= 0)\n                if (index >= 0) {\n                    const p = this._sleepQueue[index]\n                    //  handlerMs = p.ms\n                    handlerRunner = p.handlerRunner\n                    // handler = p?.handler\n                    this._sleepQueue.splice(index, 1)\n                    // clearTimeout(p.id)\n                }\n            })\n            if (this.status === VMStatus.Stopped) return\n            // this logic is to deal with starting a handler rather than a runner\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                if (!handlerRunner && isEveryHandler(handler)) {\n                    const index = this._everyQueue.findIndex(\n                        h => h.handler === handler\n                    )\n                    if (index >= 0) {\n                        handlerRunner = this._everyQueue[index]\n                        this._everyQueue.splice(index, 1)\n                        handlerRunner.gotoTop()\n                    }\n                }*/\n                if (handlerRunner) {\n                    // transition to the run queue\n                    handlerRunner.wake()\n                    this._runQueue.push(handlerRunner)\n                }\n            })\n            /*\n            const theHandler = handlerRunner?.handler || handler\n            if (isEveryHandler(theHandler)) {\n                // setup next\n                this.sleepAsync(undefined, handlerMs, theHandler)\n            }*/\n            if (handlerRunner) {\n                if (this.status === VMStatus.Running) this.runAsync()\n                else if (this.status === VMStatus.Paused) {\n                    this.emitBreakpoint(await this.getCurrentRunner())\n                }\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, async (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/runner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoRun: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoRun)\n\n    const run = async () => {\n        _setAutoStart(!!autoRun)\n        await runner.startAsync()\n    }\n    const cancel = async () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: { program: VMProgram }) {\n    const { program } = props\n    return (\n        <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">VM</Typography>\n            <CodeBlock\n                className=\"json\"\n                downloadName={\"test.json.vm\"}\n                downloadText={JSON.stringify(program, null, 2)}\n            >\n                {JSON.stringify(program, null, 2)}\n            </CodeBlock>\n        </Grid>\n    )\n}\n","import { Theme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../../jacdac-ts/src/jdom/flags\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecificationFromName,\n    serviceSpecifications,\n} from \"../../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../../jacdac-ts/src/jdom/utils\"\nimport {\n    toIdentifier,\n    toMemberExpression,\n} from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport KeyboardKeyField from \"../fields/KeyboardKeyField\"\nimport LEDColorField from \"../fields/LEDColorField\"\nimport LEDMatrixField from \"../fields/LEDMatrixField\"\nimport NoteField from \"../fields/NoteField\"\nimport ServoAngleField from \"../fields/ServoAngleField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    BOOLEAN_TYPE,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    CommandBlockDefinition,\n    CustomBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    JSON_TYPE,\n    NUMBER_TYPE,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    ServiceBlockDefinition,\n    STRING_TYPE,\n    ValueInputDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport { ExpressionWithErrors, makeVMBase } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage, {\n    CompileCommandToVMOptions,\n    CompileEventToVMOptions,\n    CompileEventToVMResult,\n    CompileExpressionToVMOptions,\n    CreateBlocksOptions,\n    CreateCategoryOptions,\n} from \"./dsl\"\n\nconst SET_STATUS_LIGHT_BLOCK = \"jacdac_set_status_light\"\nconst ROLE_BOUND_EVENT_BLOCK = \"jacdac_role_bound_event\"\nconst ROLE_BOUND_BLOCK = \"jacdac_role_bound\"\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return field.encoding === \"JSON\"\n        ? JSON_TYPE\n        : isBooleanField(field)\n        ? BOOLEAN_TYPE\n        : isStringField(field)\n        ? STRING_TYPE\n        : isNumericType(field)\n        ? NUMBER_TYPE\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nconst commandColor = \"#8c6a1d\"\n\nexport class ServicesBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"jacdacServices\"\n    supportedServices: jdspec.ServiceSpec[] = []\n    private _serviceBlocks: ServiceBlockDefinition[]\n    private _eventFieldBlocks: EventFieldDefinition[]\n    private _runtimeBlocks: BlockDefinition[]\n\n    private createServiceColor(theme: Theme) {\n        const sensorColor = theme.palette.success.main\n        const otherColor = theme.palette.info.main\n        const serviceColor = (srv: jdspec.ServiceSpec) =>\n            isSensor(srv) ? sensorColor : otherColor\n        return serviceColor\n    }\n\n    createBlocks(options: CreateBlocksOptions) {\n        const { theme } = options\n        const serviceColor = this.createServiceColor(theme)\n        // blocks\n        const customShadows = [\n            {\n                serviceClass: SRV_SERVO,\n                kind: \"rw\",\n                identifier: ServoReg.Angle,\n                field: \"_\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: ServoAngleField.SHADOW.type,\n                },\n            },\n            {\n                serviceClass: SRV_BUZZER,\n                kind: \"command\",\n                identifier: BuzzerCmd.PlayNote,\n                field: \"frequency\",\n                shadow: <BlockDefinition>{\n                    kind: \"block\",\n                    type: NoteField.SHADOW.type,\n                },\n            },\n        ]\n        const lookupCustomShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customShadows.find(\n                cs =>\n                    cs.serviceClass === service.classIdentifier &&\n                    cs.kind == info.kind &&\n                    cs.identifier === info.identifier &&\n                    cs.field == field.name\n            )?.shadow\n\n        const serviceHelp = (service: jdspec.ServiceSpec) =>\n            withPrefix(`/services/${service.shortId}`)\n        const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n            pkt.fields.every(toBlocklyType)\n        const fieldName = (\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) => (field.name === \"_\" ? reg.name : field.name)\n        const fieldToShadow = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ): BlockReference =>\n            lookupCustomShadow(service, info, field) ||\n            (isBooleanField(field)\n                ? { kind: \"block\", type: \"jacdac_on_off\" }\n                : isStringField(field)\n                ? { kind: \"block\", type: \"text\" }\n                : field.unit === \"°\"\n                ? {\n                      kind: \"block\",\n                      type: \"jacdac_angle\",\n                  }\n                : field.unit === \"/\"\n                ? { kind: \"block\", type: \"jacdac_ratio\" }\n                : /^%/.test(field.unit)\n                ? { kind: \"block\", type: \"jacdac_percent\" }\n                : field.type === \"u8\"\n                ? { kind: \"block\", type: \"jacdac_byte\" }\n                : {\n                      kind: \"block\",\n                      type: \"math_number\",\n                      value: field.defaultValue || 0,\n                      min: field.typicalMin || field.absoluteMin,\n                      max: field.typicalMax || field.absoluteMax,\n                  })\n        const variableName = (srv: jdspec.ServiceSpec) =>\n            `${humanify(srv.camelName).toLowerCase()} 1`\n        const fieldVariable = (\n            service: jdspec.ServiceSpec\n        ): VariableInputDefinition => ({\n            type: \"field_variable\",\n            name: \"role\",\n            variable: variableName(service),\n            variableTypes: [service.shortId],\n            defaultType: service.shortId,\n        })\n        const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n            info.fields.map(field => ({\n                type: \"input_value\",\n                name: fieldName(info, field),\n                check: toBlocklyType(field),\n            }))\n        const fieldsToValues = (\n            service: jdspec.ServiceSpec,\n            info: jdspec.PacketInfo\n        ) =>\n            toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n                info.fields,\n                field => fieldName(info, field),\n                field => fieldToShadow(service, info, field)\n            )\n        const fieldsToMessage = (info: jdspec.PacketInfo) =>\n            info.fields\n                .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n                .join(\" \")\n        const isEnabledRegister = (info: jdspec.PacketInfo) =>\n            info.fields.length === 1 &&\n            info.fields[0].type === \"bool\" &&\n            info.name === \"enabled\"\n        const customMessage = (\n            srv: jdspec.ServiceSpec,\n            reg: jdspec.PacketInfo,\n            field: jdspec.PacketMember\n        ) =>\n            customMessages.find(\n                m =>\n                    m.service === srv.classIdentifier &&\n                    m.register === reg.identifier &&\n                    m.field === field.name\n            )\n\n        const allServices = serviceSpecifications()\n        this.supportedServices = allServices\n            .filter(\n                service =>\n                    !/^_/.test(service.shortId) &&\n                    service.status !== \"deprecated\"\n            )\n            .filter(\n                service => ignoredServices.indexOf(service.classIdentifier) < 0\n            )\n        const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n            allServices.filter(srv => srv.classIdentifier === cls)\n        const registers = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isRegister(pkt) &&\n                            !pkt.lowLevel &&\n                            includedRegisters.indexOf(pkt.identifier) > -1\n                    )\n                    .map(register => ({\n                        service,\n                        register,\n                    }))\n            )\n        )\n        const events = this.supportedServices\n            .map(service => ({\n                service,\n                events: service.packets.filter(\n                    pkt =>\n                        isEvent(pkt) &&\n                        !pkt.lowLevel &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                ),\n            }))\n            .filter(kv => !!kv.events.length)\n        const commands = arrayConcatMany(\n            this.supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isCommand(pkt) &&\n                            !pkt.lowLevel &&\n                            fieldsSupported(pkt)\n                    )\n                    .map(pkt => ({\n                        service,\n                        command: pkt,\n                    }))\n            )\n        )\n\n        const customBlockDefinitions: CustomBlockDefinition[] = [\n            ...resolveService(SRV_HID_KEYBOARD).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `key`,\n                        message0: `%1 %2 key %3`,\n                        args0: [\n                            fieldVariable(service),\n                            <OptionsInputDefinition>{\n                                type: \"field_dropdown\",\n                                name: \"action\",\n                                options: [\n                                    [\"press\", \"press\"],\n                                    [\"down\", \"down\"],\n                                    [\"up\", \"up\"],\n                                ],\n                            },\n                            {\n                                type: KeyboardKeyField.KEY,\n                                name: \"combo\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Send a keyboard key combo`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.key(combo.selectors, combo.modifiers, action)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `fade`,\n                        message0: `fade %1 to %2 at speed %3`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"color\",\n                                check: \"Number\",\n                            },\n                            {\n                                type: \"input_value\",\n                                name: \"speed\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            color: {\n                                kind: \"block\",\n                                type: LEDColorField.SHADOW.type,\n                            },\n                            speed: {\n                                kind: \"block\",\n                                type: \"jacdac_ratio\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Fade LED color`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `set_digits`,\n                        message0: `set %1 digits to %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: \"input_value\",\n                                name: \"digits\",\n                                check: \"Number\",\n                            },\n                        ],\n                        values: {\n                            digits: {\n                                kind: \"block\",\n                                type: \"math_number\",\n                            },\n                        },\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display a number of the screen`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n            ...resolveService(SRV_LED_MATRIX).map(\n                service =>\n                    <CustomBlockDefinition>{\n                        kind: \"block\",\n                        type: `show_leds`,\n                        message0: `show %1 leds %2`,\n                        args0: [\n                            fieldVariable(service),\n                            {\n                                type: LEDMatrixField.KEY,\n                                name: \"leds\",\n                            },\n                        ],\n                        colour: serviceColor(service),\n                        inputsInline: true,\n                        previousStatement: CODE_STATEMENT_TYPE,\n                        nextStatement: CODE_STATEMENT_TYPE,\n                        tooltip: `Display LEDs on the LED matrix`,\n                        helpUrl: serviceHelp(service),\n                        service,\n                        // encode digits\n                        template: \"custom\",\n                    }\n            ),\n        ].map(def => {\n            def.type = `jacdac_custom_${def.service.shortId.toLowerCase()}_${\n                def.type\n            }`\n            return def\n        })\n\n        const eventBlocks = events.map<EventBlockDefinition>(\n            ({ service, events }) => ({\n                kind: \"block\",\n                type: `jacdac_events_${service.shortId}`,\n                message0: `on %1 %2`,\n                args0: [\n                    fieldVariable(service),\n                    <InputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: events.map(event => [\n                            humanify(event.name),\n                            event.name,\n                        ]),\n                    },\n                ],\n                colour: serviceColor(service),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                tooltip: `Events for the ${service.name} service`,\n                helpUrl: serviceHelp(service),\n                service,\n                events,\n                template: \"event\",\n            })\n        )\n\n        const registerChangeByEventBlocks = registers\n            .filter(\n                ({ service }) =>\n                    !service.packets.some(\n                        pkt =>\n                            isEvent(pkt) &&\n                            ignoredEvents.indexOf(pkt.identifier) < 0\n                    )\n            )\n            .filter(\n                ({ register }) =>\n                    register.fields.length === 1 &&\n                    isNumericType(register.fields[0]) &&\n                    register.identifier !== SystemReg.Intensity\n            )\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n                message0: `on %1 ${humanify(register.name)} change by %2`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ].filter(v => !!v),\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: serviceColor(service),\n                tooltip: `Event raised when ${register.name} changes`,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_change_event\",\n            }))\n\n        const [registerSimples, registerComposites] = splitFilter(\n            registers,\n            reg => reg.register.fields.length == 1\n        )\n        const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n            registerSimples,\n            ({ register }) => !!toBlocklyType(register.fields[0])\n        )\n        const registerSimplesGetBlocks =\n            registerSimpleTypes.map<RegisterBlockDefinition>(\n                ({ service, register }) => ({\n                    kind: \"block\",\n                    type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                    message0:\n                        customMessage(service, register, register.fields[0])\n                            ?.get || `%1 ${humanify(register.name)}`,\n                    args0: [fieldVariable(service)],\n                    inputsInline: true,\n                    output: toBlocklyType(register.fields[0]),\n                    colour: serviceColor(service),\n                    tooltip: register.description,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    register,\n                    field: register.fields[0],\n\n                    template: \"register_get\",\n                })\n            )\n        const registerSimpleEnumTypes = registerSimpleOthers\n            .filter(\n                ({ service, register }) =>\n                    !!enumInfo(service, register.fields[0])\n            )\n            .map(({ service, register }) => ({\n                service,\n                register,\n                field: register.fields[0],\n                einfo: enumInfo(service, register.fields[0]),\n            }))\n        const registerCompositeEnumTypes = arrayConcatMany(\n            registerComposites.map(({ service, register }) =>\n                register.fields\n                    .map(field => ({\n                        service,\n                        register,\n                        field,\n                        einfo: enumInfo(service, field),\n                    }))\n                    .filter(({ einfo }) => !!einfo)\n            )\n        )\n        const registerEnumGetBlocks = [\n            ...registerSimpleEnumTypes,\n            ...registerCompositeEnumTypes,\n        ].map<RegisterBlockDefinition>(\n            ({ service, register, field, einfo }) => ({\n                kind: \"block\",\n                type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n                message0:\n                    customMessage(service, register, field)?.get ||\n                    `%1 ${humanify(register.name)}${\n                        field.name === \"_\" ? \"\" : ` ${field.name}`\n                    } %2`,\n                args0: [\n                    fieldVariable(service),\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: field.name,\n                        options: Object.keys(einfo.members).map(member => [\n                            humanify(member),\n                            member,\n                        ]),\n                    },\n                ],\n                inputsInline: true,\n                output: \"Boolean\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field,\n\n                template: \"register_get\",\n            })\n        )\n\n        const registerNumericsGetBlocks = registerComposites\n            .filter(re => re.register.fields.some(isNumericType))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n                message0: `%1 ${humanify(register.name)}${\n                    register.fields.length > 1 ? ` %2` : \"\"\n                }`,\n                args0: [\n                    fieldVariable(service),\n                    register.fields.length > 1\n                        ? <OptionsInputDefinition>{\n                              type: \"field_dropdown\",\n                              name: \"field\",\n                              options: register.fields\n                                  .filter(f => isNumericType(f))\n                                  .map(field => [\n                                      humanify(field.name),\n                                      fieldName(register, field),\n                                  ]),\n                          }\n                        : undefined,\n                ].filter(v => !!v),\n                inputsInline: true,\n                output: \"Number\",\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_get\",\n            }))\n\n        const registerSetBlocks = registers\n            .filter(({ register }) => register.kind === \"rw\")\n            .filter(({ register }) => fieldsSupported(register))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_set_${service.shortId}_${register.name}`,\n                message0: isEnabledRegister(register)\n                    ? `set %1 %2`\n                    : `set %1 ${register.name} to ${\n                          register.fields.length === 1\n                              ? \"%2\"\n                              : fieldsToMessage(register)\n                      }`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(register),\n                ],\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"register_set\",\n            }))\n\n        const commandBlocks = commands.map<CommandBlockDefinition>(\n            ({ service, command }) => ({\n                kind: \"block\",\n                type: `jacdac_command_${service.shortId}_${command.name}`,\n                message0: !command.fields.length\n                    ? `${humanify(command.name)} %1`\n                    : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                          command\n                      )}`,\n                args0: [\n                    fieldVariable(service),\n                    ...fieldsToFieldInputs(command),\n                ],\n                values: fieldsToValues(service, command),\n                inputsInline: true,\n                colour: serviceColor(service),\n                tooltip: command.description,\n                helpUrl: serviceHelp(service),\n                service,\n                command,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"command\",\n            })\n        )\n\n        this._serviceBlocks = [\n            ...eventBlocks,\n            ...registerChangeByEventBlocks,\n            ...registerSimplesGetBlocks,\n            ...registerEnumGetBlocks,\n            ...registerNumericsGetBlocks,\n            ...registerSetBlocks,\n            ...customBlockDefinitions,\n            ...commandBlocks,\n        ]\n\n        const eventFieldGroups = [\n            {\n                output: NUMBER_TYPE,\n                filter: isNumericType,\n            },\n            {\n                output: BOOLEAN_TYPE,\n                filter: isBooleanField,\n            },\n            {\n                output: STRING_TYPE,\n                filter: (f: jdspec.PacketMember) =>\n                    isStringField(f) && f.encoding !== \"JSON\",\n            },\n            {\n                output: JSON_TYPE,\n                filter: (f: jdspec.PacketMember) =>\n                    isStringField(f) && f.encoding === \"JSON\",\n            },\n        ]\n        // generate accessor blocks for event data with numbers\n        this._eventFieldBlocks = arrayConcatMany(\n            arrayConcatMany(\n                eventFieldGroups.map(({ output, filter }) =>\n                    events.map(({ service, events }) =>\n                        events\n                            .filter(\n                                event => event.fields.filter(filter).length > 0\n                            )\n                            .map(event => ({ service, event }))\n                            .map(\n                                ({ service, event }) =>\n                                    <EventFieldDefinition>{\n                                        kind: \"block\",\n                                        type: `jacdac_event_field_${output.toLowerCase()}_${\n                                            service.shortId\n                                        }_${event.name}`,\n                                        message0: `${event.name} %1`,\n                                        args0: [\n                                            <InputDefinition>{\n                                                type: \"field_dropdown\",\n                                                name: \"field\",\n                                                options: event.fields.map(\n                                                    field => [\n                                                        humanify(field.name),\n                                                        field.name,\n                                                    ]\n                                                ),\n                                            },\n                                        ],\n                                        colour: serviceColor(service),\n                                        inputsInline: true,\n                                        tooltip: `Data fields of the ${event.name} event`,\n                                        helpUrl: serviceHelp(service),\n                                        service,\n                                        event,\n                                        output,\n                                        template: \"event_field\",\n                                    }\n                            )\n                    )\n                )\n            )\n        )\n\n        this._runtimeBlocks = [\n            {\n                kind: \"block\",\n                type: ROLE_BOUND_EVENT_BLOCK,\n                message0: \"on %1 %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: \"event\",\n                        options: [\n                            [\"bound\", \"bound\"],\n                            [\"unbound\", \"unbound\"],\n                        ],\n                    },\n                ],\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"role_binding_event\",\n            },\n            {\n                kind: \"block\",\n                type: ROLE_BOUND_BLOCK,\n                message0: \"%1 bound\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"any\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                ],\n                output: \"Boolean\",\n                inputsInline: true,\n                colour: commandColor,\n                tooltip: \"Runs code when a role is connected or disconnected\",\n                helpUrl: \"\",\n                template: \"role_bound\",\n            },\n            {\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                message0: \"set %1 status light to %2\",\n                args0: [\n                    <VariableInputDefinition>{\n                        type: \"field_variable\",\n                        name: \"role\",\n                        variable: \"all\",\n                        variableTypes: [\n                            \"client\",\n                            ...this.supportedServices.map(\n                                service => service.shortId\n                            ),\n                        ],\n                        defaultType: \"client\",\n                    },\n                    <ValueInputDefinition>{\n                        type: \"input_value\",\n                        name: \"color\",\n                        check: \"Number\",\n                    },\n                ],\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n                inputsInline: true,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: commandColor,\n                tooltip: \"Sets the color on the status light\",\n                helpUrl: \"\",\n            },\n        ]\n\n        return [\n            ...this._serviceBlocks,\n            ...this._eventFieldBlocks,\n            ...this._runtimeBlocks,\n        ]\n    }\n\n    createCategory(options: CreateCategoryOptions) {\n        const { theme, source, liveServices } = options\n        const serviceColor = this.createServiceColor(theme)\n\n        const blockServices =\n            source?.variables\n                .map(v => v.type)\n                .filter(type => !!serviceSpecificationFromName(type)) || []\n        const usedEvents: Set<jdspec.PacketInfo> = new Set(\n            source?.blocks\n                ?.map(block => ({\n                    block,\n                    definition: resolveServiceBlockDefinition(block.type),\n                }))\n                .filter(({ definition }) => definition?.template === \"event\")\n                .map(({ block, definition }) => {\n                    const eventName = block.inputs[0].fields[\"event\"]\n                        .value as string\n                    return (definition as EventBlockDefinition).events.find(\n                        ev => ev.name === eventName\n                    )\n                })\n                .filter(ev => !!ev)\n        )\n        const jdBlocks = this._serviceBlocks.filter(block => !!block.service)\n        const services = uniqueMap(\n            jdBlocks,\n            block => block.service.shortId,\n            block => block.service\n        )\n\n        const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n            Flags.diagnostics\n                ? services\n                : [\n                      ...blockServices\n                          .map(srvid =>\n                              services.find(\n                                  service => service.shortId === srvid\n                              )\n                          )\n                          .filter(srv => !!srv),\n                      ...liveServices.map(srv => srv.specification),\n                  ],\n            srv => srv.shortId,\n            srv => srv\n        )\n            .filter(\n                srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0\n            )\n            .sort((l, r) => l.name.localeCompare(r.name))\n\n        const servicesCategories: CategoryDefinition[] = toolboxServices\n            .map(service => ({\n                service,\n                serviceBlocks: this._serviceBlocks.filter(\n                    block => block.service === service\n                ),\n            }))\n            .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n                kind: \"category\",\n                name: service.name,\n                colour: serviceColor(service),\n                contents: [\n                    ...serviceBlocks.map<BlockReference>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n                    ...this._eventFieldBlocks\n                        .filter(\n                            ev =>\n                                ev.service === service &&\n                                usedEvents.has(ev.event)\n                        )\n                        .map<BlockReference>(block => ({\n                            kind: \"block\",\n                            type: block.type,\n                            values: block.values,\n                        })),\n                ],\n                button: {\n                    kind: \"button\",\n                    text: `Add ${service.name} role`,\n                    callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                    service,\n                },\n            }))\n            .filter(cat => !!cat.contents?.length)\n\n        const commonCategory: CategoryDefinition = {\n            kind: \"category\",\n            name: \"Roles\",\n            colour: commandColor,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ROLE_BOUND_EVENT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ROLE_BOUND_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: SET_STATUS_LIGHT_BLOCK,\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                    },\n                },\n            ],\n        }\n\n        return [...servicesCategories, commonCategory]\n    }\n\n    compileEventToVM(options: CompileEventToVMOptions): CompileEventToVMResult {\n        const { block, definition, blockToExpression } = options\n        const { inputs } = block\n        const { template } = definition\n\n        switch (template) {\n            case \"event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { value: eventName } = inputs[0].fields[\"event\"]\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    },\n                    event: {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    },\n                }\n            }\n            case \"register_change_event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    undefined,\n                    inputs[0].child\n                )\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    },\n                    errors,\n                }\n            }\n        }\n\n        return undefined\n    }\n\n    compileExpressionToVM(\n        options: CompileExpressionToVMOptions\n    ): ExpressionWithErrors {\n        const { event, definition, block } = options\n        const { inputs, id } = block\n        const { template } = definition\n        switch (template) {\n            case \"register_get\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { value: role } = inputs[0].fields[\"role\"]\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        role as string,\n                        field\n                            ? toMemberExpression(\n                                  register.name,\n                                  field.value as string\n                              )\n                            : register.name\n                    ),\n                    errors: [],\n                }\n            }\n            case \"event_field\": {\n                const { event: eventInfo } = definition as EventFieldDefinition\n                const errors: VMError[] = []\n                if (event.event !== eventInfo.name) {\n                    errors.push({\n                        sourceId: id,\n                        message: `Event ${eventInfo.name} is not available in this handler.`,\n                    })\n                }\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        event.role,\n                        toMemberExpression(event.event, field.value as string)\n                    ),\n                    errors,\n                }\n            }\n            default:\n                return undefined\n        }\n    }\n\n    compileCommandToVM(options: CompileCommandToVMOptions) {\n        const { event, block, definition, blockToExpression } = options\n        const { template } = definition\n        const { inputs } = block\n        switch (template) {\n            case \"register_set\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                const { value: role } = inputs[0].fields.role\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role as string, register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"writeRegister\"),\n                    }),\n                    errors,\n                }\n            }\n            case \"command\": {\n                const { command: serviceCommand } =\n                    definition as CommandBlockDefinition\n                const { value: role } = inputs[0].fields.role\n                const exprsErrors = inputs.map(a =>\n                    blockToExpression(event, a.child)\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: exprsErrors.map(p => p.expr),\n                        callee: toMemberExpression(\n                            role as string,\n                            serviceCommand.name\n                        ),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n        }\n\n        return undefined\n    }\n}\nconst servicesDSL = new ServicesBlockDomainSpecificLanguage()\nexport default servicesDSL\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { CmdWithErrors, makeVMBase } from \"../../vm/VMgenerator\"\nimport JDomTreeField from \"../fields/JDomTreeField\"\nimport LogViewField from \"../fields/LogViewField\"\nimport TwinField from \"../fields/TwinField\"\nimport VariablesField from \"../fields/VariablesFields\"\nimport WatchValueField from \"../fields/WatchValueField\"\nimport {\n    BlockReference,\n    InputDefinition,\n    LabelDefinition,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport servicesDSL from \"./servicesdsl\"\n\nconst colour = \"#888\"\nconst INSPECT_BLOCK = \"jacdac_tools_inspect\"\nconst WATCH_BLOCK = \"jacdac_tools_watch\"\nconst LOG_BLOCK = \"jacdac_tools_log\"\nconst VIEW_LOG_BLOCK = \"jacdac_tools_log_view\"\nconst VARIABLES_BLOCK = \"jacdac_variables_view\"\nexport const TWIN_BLOCK = \"jacdac_tools_twin\"\n\nconst toolsDSL: BlockDomainSpecificLanguage = {\n    id: \"tools\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...servicesDSL.supportedServices.map(\n                            service => service.shortId\n                        ),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"meta\",\n        },\n        {\n            kind: \"block\",\n            type: VARIABLES_BLOCK,\n            message0: `variables %1 %2`,\n            args0: [\n                {\n                    type: \"input_dummy\",\n                },\n                {\n                    type: VariablesField.KEY,\n                    name: \"variables\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `Watch variables values`,\n            helpUrl: \"\",\n            template: \"meta\"\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: LOG_BLOCK,\n            message0: `log %1`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            previousStatement: null,\n            nextStatement: null,\n            tooltip: `Log an entry to the console`,\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: VIEW_LOG_BLOCK,\n            message0: `console %1 %2`,\n            args0: [\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: LogViewField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour,\n            inputsInline: false,\n            tooltip: `View console content`,\n            template: \"meta\",\n        },\n    ],\n    createCategory: () => [\n        {\n            kind: \"sep\",\n        },\n        {\n            kind: \"category\",\n            name: \"Tools\",\n            colour: colour,\n            contents: [\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Variables\",\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: VARIABLES_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: WATCH_BLOCK,\n                },\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Dashboard\",\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: TWIN_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: INSPECT_BLOCK,\n                },\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Logging\",\n                },\n                {\n                    kind: \"block\",\n                    type: LOG_BLOCK,\n                    values: {\n                        value: { kind: \"block\", type: \"text\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: VIEW_LOG_BLOCK,\n                },\n            ],\n        },\n    ],\n\n    compileCommandToVM: ({ block, blockToExpression }): CmdWithErrors => {\n        const { type } = block\n        if (type === LOG_BLOCK) {\n            const { inputs } = block\n            const { expr, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                cmd: makeVMBase(block, {\n                    type: \"CallExpression\",\n                    arguments: [expr],\n                    callee: toIdentifier(\"log\"),\n                }),\n                errors,\n            }\n        }\n        return undefined\n    },\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === WATCH_BLOCK) {\n            const { inputs } = block\n            const { expr, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: <jsep.CallExpression>{\n                    type: \"CallExpression\",\n                    arguments: [expr],\n                    callee: toIdentifier(\"watch\"),\n                },\n                errors,\n                meta: true,\n            }\n        }\n        return undefined\n    },\n}\n\nexport default toolsDSL\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable } from \"blockly\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport BlockContext from \"./BlockContext\"\nimport { TWIN_BLOCK } from \"./dsl/toolsdsl\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    handleRoleClick: () => void\n}) {\n    const { workspace } = useContext(BlockContext)\n    const { role, service, serviceShortId } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                console.log(`new twin`, { twinBlock })\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function BlockRoles() {\n    const { roleManager } = useContext(BlockContext)\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport useChange from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/runner\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Chip, Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_EVENT, VMCode } from \"../../../jacdac-ts/src/vm/events\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport useMounted from \"../hooks/useMounted\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport BugReportIcon from \"@material-ui/icons/BugReport\"\nimport BlockContext from \"../blockly/BlockContext\"\n\nfunction useWorkspaceBreakpoints(program: VMProgram) {\n    const { workspace } = useContext(BlockContext)\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers\n                    ?.filter(h => !h.meta) // don't debug watch statements\n                    .map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpointHighlight = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpointHighlight,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    const status = useChange(runner, t => t?.status)\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [indeterminate, setIndeterminate] = useState(false)\n    const [breakpoint, setBreakpoint] = useState<string>(undefined)\n    const pausing = breakpoint === \"\"\n    const paused = !!breakpoint?.length\n    const mounted = useMounted()\n    const disabled = indeterminate || !runner\n    const { breakpoints, setBreakpointHighlight } =\n        useWorkspaceBreakpoints(program)\n\n    //console.log(\"runner status\", status)\n\n    const handleRun = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await run()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleCancel = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.clearBreakpointsAsync()\n            setBreakpoint(undefined)\n            await cancel()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleResume = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await runner.clearBreakpointsAsync()\n            await runner.resumeAsync()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handlePause = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.setBreakpointsAsync(breakpoints)\n            await runner.resumeAsync()\n            setBreakpoint(\"\")\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleStep = () => runner.stepAsync()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_EVENT,\n                (code: VMCode, _?: VMHandler, sourceId?: string) => {\n                    if (code === VMCode.Breakpoint) {\n                        if (mounted()) setBreakpoint(sourceId)\n                    }\n                }\n            ),\n        [runner]\n    )\n\n    // setting blockly breakpoint\n    useEffect(() => {\n        setBreakpointHighlight(breakpoint)\n        return () => setBreakpointHighlight(undefined)\n    }, [breakpoint])\n\n    // reset breakpoint in ui when runner, paused mode changes\n    useEffect(() => setBreakpoint(undefined), [runner])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    color={stopped ? \"primary\" : \"default\"}\n                    onClick={\n                        paused\n                            ? handleResume\n                            : stopped\n                            ? handleRun\n                            : handleCancel\n                    }\n                >\n                    {paused || stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithProgress\n                    title={pausing ? \"cancel pause\" : paused ? \"step\" : \"pause\"}\n                    disabled={disabled}\n                    indeterminate={pausing}\n                    onClick={\n                        pausing\n                            ? handleResume\n                            : paused\n                            ? handleStep\n                            : handlePause\n                    }\n                >\n                    {paused ? <PlayForWorkIcon /> : <PauseIcon />}\n                </IconButtonWithProgress>\n            </Grid>\n            {(pausing || paused) && (\n                <Grid item>\n                    <Chip\n                        icon={<BugReportIcon />}\n                        label={pausing ? \"pausing\" : \"paused\"}\n                        color={\"secondary\"}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/file\"\nimport BlockContext from \"./BlockContext\"\n\nfunction LoadButton() {\n    const { workspace } = useContext(BlockContext)\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction SaveButton() {\n    const { workspaceXml } = useContext(BlockContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json = {\n        xml: workspaceXml,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function BlockFileButtons() {\n    return (\n        <>\n            <Grid item>\n                <SaveButton />\n            </Grid>\n            <Grid item>\n                <LoadButton />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport BlockRoles from \"../blockly/BlockRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport BlockFileButtons from \"../blockly/BlockFileButtons\"\n\nexport default function VMToolbar(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n}) {\n    const { runner, run, cancel } = props\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <BlockFileButtons />\n            <VMRunnerButtons runner={runner} run={run} cancel={cancel} />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <BlockRoles />\n        </Grid>\n    )\n}\n","import { toIdentifier } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMCommand } from \"../../../../jacdac-ts/src/vm/ir\"\nimport {\n    BlockReference,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    InputDefinition,\n    SeparatorDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport { makeVMBase, processErrors } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst WAIT_BLOCK = \"jacdac_wait\"\nconst ON_START_BLOCK = \"jacdac_start\"\nconst REPEAT_EVERY_BLOCK = \"jacdac_repeat_every\"\n\nconst colour = \"#4fbac9\"\nconst loopsDsl: BlockDomainSpecificLanguage = {\n    id: \"loops\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: CODE_STATEMENT_TYPE,\n            nextStatement: CODE_STATEMENT_TYPE,\n            colour,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: ON_START_BLOCK,\n            message0: `on start`,\n            args0: [],\n            colour,\n            inputsInline: true,\n            tooltip: `Runs code when the device starts`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            nextStatement: CODE_STATEMENT_TYPE,\n        },\n    ],\n\n    createCategory: () => [\n        <SeparatorDefinition>{\n            kind: \"sep\",\n        },\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Events\",\n            colour,\n            contents: [\n                <BlockReference>{\n                    kind: \"block\",\n                    type: REPEAT_EVERY_BLOCK,\n                    values: {\n                        interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: ON_START_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: WAIT_BLOCK,\n                    values: {\n                        time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                    },\n                },\n            ].filter(b => !!b),\n        },\n    ],\n    compileEventToVM: ({ block, blockToExpression }) => {\n        const { type } = block\n        if (type === ON_START_BLOCK) {\n            return {\n                expression: (\n                    makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [],\n                        callee: toIdentifier(\"start\"),\n                    }) as VMCommand\n                ).command,\n                errors: processErrors(block, []),\n            }\n        } else if (type === REPEAT_EVERY_BLOCK) {\n            const { inputs } = block\n            const { expr: time, errors } = blockToExpression(\n                undefined,\n                inputs[0].child\n            )\n            return {\n                expression: (\n                    makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }) as VMCommand\n                ).command,\n                errors: processErrors(block, errors),\n            }\n        }\n        return undefined\n    },\n    compileCommandToVM: ({ event, block, blockToExpression }) => {\n        const { type } = block\n        if (type === WAIT_BLOCK) {\n            const { inputs } = block\n            {\n                const { expr: time, errors } = blockToExpression(\n                    event,\n                    inputs[0].child\n                )\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [time],\n                        callee: toIdentifier(\"wait\"),\n                    }),\n                    errors: processErrors(block, errors),\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default loopsDsl\n","import { ExpressionWithErrors } from \"../../vm/VMgenerator\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n}\n\nconst logicDsl: BlockDomainSpecificLanguage = {\n    id: \"logic\",\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"Logic\",\n            colour: \"%{BKY_LOGIC_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"dynamic_if\",\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_compare\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_operation\",\n                    values: {\n                        A: { kind: \"block\", type: \"logic_boolean\" },\n                        B: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_negate\",\n                    values: {\n                        BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"logic_boolean\",\n                },\n            ],\n        },\n    ],\n    compileExpressionToVM: ({\n        event,\n        block,\n        blockToExpressionInner,\n    }): ExpressionWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case \"logic_operation\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n            case \"logic_negate\": {\n                const argument = blockToExpressionInner(event, inputs[0].child)\n                return {\n                    expr: <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    },\n                    errors: [],\n                }\n            }\n            case \"logic_compare\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n        }\n        return undefined\n    },\n}\nexport default logicDsl\n","import { ExpressionWithErrors } from \"../../vm/VMgenerator\"\nimport {\n    BlockDefinition,\n    CategoryDefinition,\n    OptionsInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst ops = {\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nconst mathDSL: BlockDomainSpecificLanguage = {\n    id: \"jacdacmath\",\n    createBlocks: () => [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n            vm: function () {\n                return Math.random()\n            },\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: \"jacdac_math_clamp\",\n            message0: \"clamp %1 in [%2, %3]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"minInclusive\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"maxInclusive\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            vm: function (\n                value: number,\n                minInclusive: number,\n                maxInclusive: number\n            ) {\n                return value < minInclusive\n                    ? minInclusive\n                    : value > maxInclusive\n                    ? maxInclusive\n                    : value\n            },\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ],\n    createCategory: () => [\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Math\",\n            colour: \"%{BKY_MATH_HUE}\",\n            contents: [\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_arithmetic\",\n                    values: {\n                        A: { kind: \"block\", type: \"math_number\" },\n                        B: { kind: \"block\", type: \"math_number\" },\n                    },\n                },\n                {\n                    kind: \"block\",\n                    type: \"jacdac_math_single\",\n                    values: {\n                        NUM: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                { kind: \"block\", type: \"jacdac_math_random\" },\n                { kind: \"block\", type: \"jacdac_math_map\" },\n                { kind: \"block\", type: \"math_number\" },\n            ],\n        },\n    ],\n    compileExpressionToVM: ({\n        event,\n        block,\n        blockToExpressionInner,\n    }): ExpressionWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case \"math_single\": // built-in blockly\n            case \"jacdac_math_single\": {\n                const argument = blockToExpressionInner(event, inputs[0].child)\n                const op = inputs[0].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    },\n                    errors: [],\n                }\n            }\n            case \"math_arithmetic\": // built-in blockly\n            case \"jacdac_math_arithmetic\": {\n                const left = blockToExpressionInner(event, inputs[0].child)\n                const right = blockToExpressionInner(event, inputs[1].child)\n                const op = inputs[1].fields[\"op\"].value as string\n                return {\n                    expr: <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    },\n                    errors: [],\n                }\n            }\n        }\n        return undefined\n    },\n}\n\nexport default mathDSL\n","import {\n    BlockDefinition,\n    BlockReference,\n    BOOLEAN_TYPE,\n    DummyInputDefinition,\n    JSON_TYPE,\n    LabelDefinition,\n    PRIMITIVE_TYPES,\n    StatementInputDefinition,\n    TextInputDefinition,\n    ValueInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage, {\n    CompileExpressionToVMOptions,\n} from \"./dsl\"\n\nconst colour = \"#654321\"\nconst JSON_FIELD_TYPE = \"JSONField\"\nconst JSON_OBJECT_BLOCK = \"json_object\"\nconst JSON_FIELD_SET_BLOCK = \"json_field_set\"\nconst JSON_FIELD_GET_TEMPLATE = \"jsonFieldGet\"\nconst JSON_FIELD_VALUE_TYPE = [...PRIMITIVE_TYPES, JSON_TYPE]\nconst JSON_FIELD_HAS_BLOCK = \"json_field_has\"\n\nconst jsonDSL: BlockDomainSpecificLanguage = {\n    id: \"json\",\n    createBlocks: () => [\n        <BlockDefinition>{\n            kind: \"block\",\n            type: JSON_OBJECT_BLOCK,\n            message0: \"{ %1 %2 }\",\n            args0: [\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                <StatementInputDefinition>{\n                    type: \"input_statement\",\n                    name: \"fields\",\n                    check: JSON_FIELD_TYPE,\n                },\n            ],\n            output: JSON_TYPE,\n            colour,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: JSON_FIELD_SET_BLOCK,\n            message0: \"%1: %2\",\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: JSON_FIELD_VALUE_TYPE,\n                },\n            ],\n            previousStatement: JSON_FIELD_TYPE,\n            nextStatement: JSON_FIELD_TYPE,\n            colour,\n        },\n        ...PRIMITIVE_TYPES.map(\n            output =>\n                <BlockDefinition>{\n                    kind: \"block\",\n                    type: `json_field_get_as_${output.toLowerCase()}`,\n                    message0: `%1 [ %2 ] as ${output.toLowerCase()}`,\n                    args0: [\n                        <ValueInputDefinition>{\n                            type: \"input_value\",\n                            name: \"value\",\n                            check: JSON_TYPE,\n                        },\n                        <TextInputDefinition>{\n                            type: \"field_input\",\n                            name: \"name\",\n                        },\n                    ],\n                    output,\n                    colour,\n                    template: JSON_FIELD_GET_TEMPLATE,\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    vm: (value: any, name: string) => value?.[name],\n                }\n        ),\n        {\n            kind: \"block\",\n            type: JSON_FIELD_HAS_BLOCK,\n            message0: `has %1 [ %2 ]`,\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: JSON_TYPE,\n                },\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                },\n            ],\n            output: BOOLEAN_TYPE,\n            colour,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            vm: (value: any, name: string) => !!value?.[name],\n        },\n    ],\n    createCategory: () => [\n        {\n            kind: \"category\",\n            name: \"JSON\",\n            colour,\n            contents: [\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Create\",\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: JSON_OBJECT_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: JSON_FIELD_SET_BLOCK,\n                    values: {\n                        value: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                },\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Read\",\n                },\n                ...PRIMITIVE_TYPES.map(output => ({\n                    kind: \"block\",\n                    type: `json_field_get_as_${output.toLowerCase()}`,\n                    values: {\n                        value: <BlockReference>{\n                            kind: \"block\",\n                            type: \"variables_get\",\n                            check: JSON_TYPE,\n                        },\n                    },\n                })),\n                {\n                    kind: \"block\",\n                    type: JSON_FIELD_HAS_BLOCK,\n                },\n            ],\n        },\n    ],\n\n    compileExpressionToVM(options: CompileExpressionToVMOptions) {\n        const { event, block, definition, blockToExpressionInner } = options\n        const { type } = block\n        const { template } = definition\n        if (type === JSON_OBJECT_BLOCK) {\n            // TODO\n        } else if (type === JSON_FIELD_SET_BLOCK) {\n            // TODO\n        } else if (template === JSON_FIELD_GET_TEMPLATE) {\n            // TODO: genearte JSON\n            console.log(\"json expr\", {\n                event,\n                block,\n                definition,\n                blockToExpressionInner,\n            })\n            return undefined\n        }\n        // don't know\n        return undefined\n    },\n}\n\nexport default jsonDSL\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useVMRunner from \"./useVMRunner\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport BlockContext, { BlockProvider } from \"../blockly/BlockContext\"\nimport BlockDiagnostics from \"../blockly/BlockDiagnostics\"\nimport servicesDSL from \"../blockly/dsl/servicesdsl\"\nimport toolsDSL from \"../blockly/dsl/toolsdsl\"\nimport loopsDsl from \"../blockly/dsl/loopsdsl\"\nimport logicDsl from \"../blockly/dsl/logicdsl\"\nimport mathDSL from \"../blockly/dsl/mathdsl\"\nimport variablesDsl from \"../blockly/dsl/variablesdsl\"\nimport shadowDsl from \"../blockly/dsl/shadowdsl\"\nimport fieldsDsl from \"../blockly/dsl/fieldsdsl\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport { BlocklyWorkspaceWithServices } from \"../blockly/WorkspaceContext\"\nimport BlockEditor from \"../blockly/BlockEditor\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport jsonDSL from \"../blockly/dsl/jsondsl\"\n\nconst VM_SOURCE_STORAGE_KEY = \"tools:vmeditor\"\nfunction VMEditorWithContext() {\n    const { dsls, workspace, workspaceJSON, roleManager, setWarnings } =\n        useContext(BlockContext)\n    const [program, setProgram] = useState<VMProgram>()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    useEffect(() => {\n        try {\n            const newProgram = workspaceJSONToVMProgram(workspaceJSON, dsls)\n            if (JSON.stringify(newProgram) !== JSON.stringify(program))\n                setProgram(newProgram)\n        } catch (e) {\n            console.error(e)\n            setProgram(undefined)\n        }\n    }, [dsls, workspaceJSON])\n    useEffect(\n        () => program && roleManager?.setRoles(program.roles),\n        [roleManager, program]\n    )\n    useEffect(\n        () =>\n            setWarnings(arrayConcatMany(program?.handlers.map(h => h.errors))),\n        [program]\n    )\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <VMToolbar runner={runner} run={run} cancel={cancel} />\n            </Grid>\n            <Grid item xs={12}>\n                <BlockEditor />\n            </Grid>\n            {Flags.diagnostics && (\n                <>\n                    <VMDiagnostics program={program} />\n                    <BlockDiagnostics />\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function VMEditor() {\n    const dsls = useMemo(() => {\n        return [\n            servicesDSL,\n            loopsDsl,\n            logicDsl,\n            mathDSL,\n            jsonDSL,\n            variablesDsl,\n            toolsDSL,\n            shadowDsl,\n            fieldsDsl,\n        ]\n    }, [])\n\n    return (\n        <NoSsr>\n            <BlockProvider storageKey={VM_SOURCE_STORAGE_KEY} dsls={dsls}>\n                <VMEditorWithContext />\n            </BlockProvider>\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}