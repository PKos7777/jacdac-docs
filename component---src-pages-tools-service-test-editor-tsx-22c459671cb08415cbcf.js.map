{"version":3,"file":"component---src-pages-tools-service-test-editor-tsx-22c459671cb08415cbcf.js","mappings":";;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChiCAAiC;AACjC,GAAG;AACH;AACA,sLAAsL;AACtL,GAAG;AACH;AACA,8MAA8M;AAC9M,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,8EAA8E;AAC9E;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA,iBAAiB;AACjB,QAAQ;AACR;AACA;AACA,4BAA4B;AAC5B;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,GAAG;AAChB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;;;AAGL,MAAM,KAA8B,EAAE,iBAYnC,CAAC;AACJ;AACA,QAAQ,KAA6B;AACrC;AACA,MAAM;AACN,MAAM,aAAa;AACnB;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;ACl0BD;AACA;AACA;AAEA,IAAMO,SAAS,GAAGN,mEAA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;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd,UAAU,kBAAQ;AAClB,UAAU,kBAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,UAAU,iBAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,EAAE,yBAAe;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE,yBAAe;AACjB;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kBAAkB;AAC3C;;AAEA,gDAAgD,QAAQ;AACxD;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;A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","sources":["webpack://jacdac-docs/./jacdac-ts/node_modules/jsep/build/jsep.js","webpack://jacdac-docs/./src/components/ServiceSpecificationSelect.tsx","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/select/SelectServiceGrid.tsx","webpack://jacdac-docs/./src/components/test/ServiceTest.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./node_modules/use-editable/dist/use-editable.es.js","webpack://jacdac-docs/./src/components/ui/HighlightTextField.tsx","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./jacdac-ts/jacdac-spec/spectool/jdtest.ts","webpack://jacdac-docs/./src/components/tools/ServiceTestEditor.tsx","webpack://jacdac-docs/./src/pages/tools/service-test-editor.tsx"],"sourcesContent":["//     JavaScript Expression Parser (JSEP) 0.4.0\n//     JSEP may be freely distributed under the MIT License\n//     https://ericsmekens.github.io/jsep/\n\n/*global module: true, exports: true, console: true */\n(function (root) {\n  'use strict'; // Node Types\n  // ----------\n  // This is the full set of types that any JSEP node can be.\n  // Store them here to save space when minified\n\n  var COMPOUND = 'Compound',\n      IDENTIFIER = 'Identifier',\n      MEMBER_EXP = 'MemberExpression',\n      LITERAL = 'Literal',\n      THIS_EXP = 'ThisExpression',\n      CALL_EXP = 'CallExpression',\n      UNARY_EXP = 'UnaryExpression',\n      BINARY_EXP = 'BinaryExpression',\n      LOGICAL_EXP = 'LogicalExpression',\n      CONDITIONAL_EXP = 'ConditionalExpression',\n      ARRAY_EXP = 'ArrayExpression',\n      PERIOD_CODE = 46,\n      // '.'\n  COMMA_CODE = 44,\n      // ','\n  SQUOTE_CODE = 39,\n      // single quote\n  DQUOTE_CODE = 34,\n      // double quotes\n  OPAREN_CODE = 40,\n      // (\n  CPAREN_CODE = 41,\n      // )\n  OBRACK_CODE = 91,\n      // [\n  CBRACK_CODE = 93,\n      // ]\n  QUMARK_CODE = 63,\n      // ?\n  SEMCOL_CODE = 59,\n      // ;\n  COLON_CODE = 58,\n      // :\n  throwError = function throwError(message, index) {\n    var error = new Error(message + ' at character ' + index);\n    error.index = index;\n    error.description = message;\n    throw error;\n  },\n      // Operations\n  // ----------\n  // Set `t` to `true` to save space (when minified, not gzipped)\n  t = true,\n      // Use a quickly-accessible map to store all of the unary operators\n  // Values are set to `true` (it really doesn't matter)\n  unary_ops = {\n    '-': t,\n    '!': t,\n    '~': t,\n    '+': t\n  },\n      // Also use a map for the binary operations but set their values to their\n  // binary precedence for quick reference:\n  // see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\n  binary_ops = {\n    '||': 1,\n    '&&': 2,\n    '|': 3,\n    '^': 4,\n    '&': 5,\n    '==': 6,\n    '!=': 6,\n    '===': 6,\n    '!==': 6,\n    '<': 7,\n    '>': 7,\n    '<=': 7,\n    '>=': 7,\n    '<<': 8,\n    '>>': 8,\n    '>>>': 8,\n    '+': 9,\n    '-': 9,\n    '*': 10,\n    '/': 10,\n    '%': 10\n  },\n      // Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n  additional_identifier_chars = {\n    '$': t,\n    '_': t\n  },\n      // Get return the longest key length of any object\n  getMaxKeyLen = function getMaxKeyLen(obj) {\n    var max_len = 0,\n        len;\n\n    for (var key in obj) {\n      if ((len = key.length) > max_len && obj.hasOwnProperty(key)) {\n        max_len = len;\n      }\n    }\n\n    return max_len;\n  },\n      max_unop_len = getMaxKeyLen(unary_ops),\n      max_binop_len = getMaxKeyLen(binary_ops),\n      // Literals\n  // ----------\n  // Store the values to return for the various literals we may encounter\n  literals = {\n    'true': true,\n    'false': false,\n    'null': null\n  },\n      // Except for `this`, which is special. This could be changed to something like `'self'` as well\n  this_str = 'this',\n      // Returns the precedence of a binary operator or `0` if it isn't a binary operator\n  binaryPrecedence = function binaryPrecedence(op_val) {\n    return binary_ops[op_val] || 0;\n  },\n      // Utility function (gets called from multiple places)\n  // Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\n  createBinaryExpression = function createBinaryExpression(operator, left, right) {\n    var type = operator === '||' || operator === '&&' ? LOGICAL_EXP : BINARY_EXP;\n    return {\n      type: type,\n      operator: operator,\n      left: left,\n      right: right\n    };\n  },\n      // `ch` is a character code in the next three functions\n  isDecimalDigit = function isDecimalDigit(ch) {\n    return ch >= 48 && ch <= 57; // 0...9\n  },\n      isIdentifierStart = function isIdentifierStart(ch) {\n    return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 128 && !binary_ops[String.fromCharCode(ch)] || additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch)); // additional characters\n  },\n      isIdentifierPart = function isIdentifierPart(ch) {\n    return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 48 && ch <= 57 || ch >= 128 && !binary_ops[String.fromCharCode(ch)] || additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch)); // additional characters\n  },\n      // Parsing\n  // -------\n  // `expr` is a string with the passed in expression\n  jsep = function jsep(expr) {\n    // `index` stores the character number we are currently at while `length` is a constant\n    // All of the gobbles below will modify `index` as we move along\n    var index = 0,\n        charAtFunc = expr.charAt,\n        charCodeAtFunc = expr.charCodeAt,\n        exprI = function exprI(i) {\n      return charAtFunc.call(expr, i);\n    },\n        exprICode = function exprICode(i) {\n      return charCodeAtFunc.call(expr, i);\n    },\n        length = expr.length,\n        // Push `index` up to the next non-space character\n    gobbleSpaces = function gobbleSpaces() {\n      var ch = exprICode(index); // space or tab\n\n      while (ch === 32 || ch === 9 || ch === 10 || ch === 13) {\n        ch = exprICode(++index);\n      }\n    },\n        // The main parsing function. Much of this code is dedicated to ternary expressions\n    gobbleExpression = function gobbleExpression() {\n      var test = gobbleBinaryExpression(),\n          consequent,\n          alternate;\n      gobbleSpaces();\n\n      if (exprICode(index) === QUMARK_CODE) {\n        // Ternary expression: test ? consequent : alternate\n        index++;\n        consequent = gobbleExpression();\n\n        if (!consequent) {\n          throwError('Expected expression', index);\n        }\n\n        gobbleSpaces();\n\n        if (exprICode(index) === COLON_CODE) {\n          index++;\n          alternate = gobbleExpression();\n\n          if (!alternate) {\n            throwError('Expected expression', index);\n          }\n\n          return {\n            type: CONDITIONAL_EXP,\n            test: test,\n            consequent: consequent,\n            alternate: alternate\n          };\n        } else {\n          throwError('Expected :', index);\n        }\n      } else {\n        return test;\n      }\n    },\n        // Search for the operation portion of the string (e.g. `+`, `===`)\n    // Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n    // and move down from 3 to 2 to 1 character until a matching binary operation is found\n    // then, return that binary operation\n    gobbleBinaryOp = function gobbleBinaryOp() {\n      gobbleSpaces();\n      var biop,\n          to_check = expr.substr(index, max_binop_len),\n          tc_len = to_check.length;\n\n      while (tc_len > 0) {\n        // Don't accept a binary op when it is an identifier.\n        // Binary ops that start with a identifier-valid character must be followed\n        // by a non identifier-part valid character\n        if (binary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n          index += tc_len;\n          return to_check;\n        }\n\n        to_check = to_check.substr(0, --tc_len);\n      }\n\n      return false;\n    },\n        // This function is responsible for gobbling an individual expression,\n    // e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n    gobbleBinaryExpression = function gobbleBinaryExpression() {\n      var ch_i, node, biop, prec, stack, biop_info, left, right, i, cur_biop; // First, try to get the leftmost thing\n      // Then, check to see if there's a binary operator operating on that leftmost thing\n\n      left = gobbleToken();\n      biop = gobbleBinaryOp(); // If there wasn't a binary operator, just return the leftmost node\n\n      if (!biop) {\n        return left;\n      } // Otherwise, we need to start a stack to properly place the binary operations in their\n      // precedence structure\n\n\n      biop_info = {\n        value: biop,\n        prec: binaryPrecedence(biop)\n      };\n      right = gobbleToken();\n\n      if (!right) {\n        throwError(\"Expected expression after \" + biop, index);\n      }\n\n      stack = [left, biop_info, right]; // Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n\n      while (biop = gobbleBinaryOp()) {\n        prec = binaryPrecedence(biop);\n\n        if (prec === 0) {\n          break;\n        }\n\n        biop_info = {\n          value: biop,\n          prec: prec\n        };\n        cur_biop = biop; // Reduce: make a binary expression from the three topmost entries.\n\n        while (stack.length > 2 && prec <= stack[stack.length - 2].prec) {\n          right = stack.pop();\n          biop = stack.pop().value;\n          left = stack.pop();\n          node = createBinaryExpression(biop, left, right);\n          stack.push(node);\n        }\n\n        node = gobbleToken();\n\n        if (!node) {\n          throwError(\"Expected expression after \" + cur_biop, index);\n        }\n\n        stack.push(biop_info, node);\n      }\n\n      i = stack.length - 1;\n      node = stack[i];\n\n      while (i > 1) {\n        node = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\n        i -= 2;\n      }\n\n      return node;\n    },\n        // An individual part of a binary expression:\n    // e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n    gobbleToken = function gobbleToken() {\n      var ch, to_check, tc_len, node;\n      gobbleSpaces();\n      ch = exprICode(index);\n\n      if (isDecimalDigit(ch) || ch === PERIOD_CODE) {\n        // Char code 46 is a dot `.` which can start off a numeric literal\n        return gobbleNumericLiteral();\n      }\n\n      if (ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\n        // Single or double quotes\n        node = gobbleStringLiteral();\n      } else if (ch === OBRACK_CODE) {\n        node = gobbleArray();\n      } else {\n        to_check = expr.substr(index, max_unop_len);\n        tc_len = to_check.length;\n\n        while (tc_len > 0) {\n          // Don't accept an unary op when it is an identifier.\n          // Unary ops that start with a identifier-valid character must be followed\n          // by a non identifier-part valid character\n          if (unary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n            index += tc_len;\n            return {\n              type: UNARY_EXP,\n              operator: to_check,\n              argument: gobbleToken(),\n              prefix: true\n            };\n          }\n\n          to_check = to_check.substr(0, --tc_len);\n        }\n\n        if (isIdentifierStart(ch)) {\n          node = gobbleIdentifier();\n        } else if (ch === OPAREN_CODE) {\n          // open parenthesis\n          node = gobbleGroup();\n        }\n      }\n\n      if (!node) {\n        return false;\n      }\n\n      gobbleSpaces();\n      ch = exprICode(index); // Gobble properties of of identifiers/strings/arrays/groups.\n      // e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n      // It also gobbles function calls:\n      // e.g. `Math.acos(obj.angle)`\n\n      while (ch === PERIOD_CODE || ch === OBRACK_CODE || ch === OPAREN_CODE) {\n        index++;\n\n        if (ch === PERIOD_CODE) {\n          gobbleSpaces();\n          node = {\n            type: MEMBER_EXP,\n            computed: false,\n            object: node,\n            property: gobbleIdentifier()\n          };\n        } else if (ch === OBRACK_CODE) {\n          node = {\n            type: MEMBER_EXP,\n            computed: true,\n            object: node,\n            property: gobbleExpression()\n          };\n          gobbleSpaces();\n          ch = exprICode(index);\n\n          if (ch !== CBRACK_CODE) {\n            throwError('Unclosed [', index);\n          }\n\n          index++;\n        } else if (ch === OPAREN_CODE) {\n          // A function call is being made; gobble all the arguments\n          node = {\n            type: CALL_EXP,\n            'arguments': gobbleArguments(CPAREN_CODE),\n            callee: node\n          };\n        }\n\n        gobbleSpaces();\n        ch = exprICode(index);\n      }\n\n      return node;\n    },\n        // Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n    // keep track of everything in the numeric literal and then calling `parseFloat` on that string\n    gobbleNumericLiteral = function gobbleNumericLiteral() {\n      var number = '',\n          ch,\n          chCode;\n\n      while (isDecimalDigit(exprICode(index))) {\n        number += exprI(index++);\n      }\n\n      if (exprICode(index) === PERIOD_CODE) {\n        // can start with a decimal marker\n        number += exprI(index++);\n\n        while (isDecimalDigit(exprICode(index))) {\n          number += exprI(index++);\n        }\n      }\n\n      ch = exprI(index);\n\n      if (ch === 'e' || ch === 'E') {\n        // exponent marker\n        number += exprI(index++);\n        ch = exprI(index);\n\n        if (ch === '+' || ch === '-') {\n          // exponent sign\n          number += exprI(index++);\n        }\n\n        while (isDecimalDigit(exprICode(index))) {\n          //exponent itself\n          number += exprI(index++);\n        }\n\n        if (!isDecimalDigit(exprICode(index - 1))) {\n          throwError('Expected exponent (' + number + exprI(index) + ')', index);\n        }\n      }\n\n      chCode = exprICode(index); // Check to make sure this isn't a variable name that start with a number (123abc)\n\n      if (isIdentifierStart(chCode)) {\n        throwError('Variable names cannot start with a number (' + number + exprI(index) + ')', index);\n      } else if (chCode === PERIOD_CODE) {\n        throwError('Unexpected period', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: parseFloat(number),\n        raw: number\n      };\n    },\n        // Parses a string literal, staring with single or double quotes with basic support for escape codes\n    // e.g. `\"hello world\"`, `'this is\\nJSEP'`\n    gobbleStringLiteral = function gobbleStringLiteral() {\n      var str = '',\n          quote = exprI(index++),\n          closed = false,\n          ch;\n\n      while (index < length) {\n        ch = exprI(index++);\n\n        if (ch === quote) {\n          closed = true;\n          break;\n        } else if (ch === '\\\\') {\n          // Check for all of the common escape codes\n          ch = exprI(index++);\n\n          switch (ch) {\n            case 'n':\n              str += '\\n';\n              break;\n\n            case 'r':\n              str += '\\r';\n              break;\n\n            case 't':\n              str += '\\t';\n              break;\n\n            case 'b':\n              str += '\\b';\n              break;\n\n            case 'f':\n              str += '\\f';\n              break;\n\n            case 'v':\n              str += '\\x0B';\n              break;\n\n            default:\n              str += ch;\n          }\n        } else {\n          str += ch;\n        }\n      }\n\n      if (!closed) {\n        throwError('Unclosed quote after \"' + str + '\"', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: str,\n        raw: quote + str + quote\n      };\n    },\n        // Gobbles only identifiers\n    // e.g.: `foo`, `_value`, `$x1`\n    // Also, this function checks if that identifier is a literal:\n    // (e.g. `true`, `false`, `null`) or `this`\n    gobbleIdentifier = function gobbleIdentifier() {\n      var ch = exprICode(index),\n          start = index,\n          identifier;\n\n      if (isIdentifierStart(ch)) {\n        index++;\n      } else {\n        throwError('Unexpected ' + exprI(index), index);\n      }\n\n      while (index < length) {\n        ch = exprICode(index);\n\n        if (isIdentifierPart(ch)) {\n          index++;\n        } else {\n          break;\n        }\n      }\n\n      identifier = expr.slice(start, index);\n\n      if (literals.hasOwnProperty(identifier)) {\n        return {\n          type: LITERAL,\n          value: literals[identifier],\n          raw: identifier\n        };\n      } else if (identifier === this_str) {\n        return {\n          type: THIS_EXP\n        };\n      } else {\n        return {\n          type: IDENTIFIER,\n          name: identifier\n        };\n      }\n    },\n        // Gobbles a list of arguments within the context of a function call\n    // or array literal. This function also assumes that the opening character\n    // `(` or `[` has already been gobbled, and gobbles expressions and commas\n    // until the terminator character `)` or `]` is encountered.\n    // e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n    gobbleArguments = function gobbleArguments(termination) {\n      var ch_i,\n          args = [],\n          node,\n          closed = false;\n      var separator_count = 0;\n\n      while (index < length) {\n        gobbleSpaces();\n        ch_i = exprICode(index);\n\n        if (ch_i === termination) {\n          // done parsing\n          closed = true;\n          index++;\n\n          if (termination === CPAREN_CODE && separator_count && separator_count >= args.length) {\n            throwError('Unexpected token ' + String.fromCharCode(termination), index);\n          }\n\n          break;\n        } else if (ch_i === COMMA_CODE) {\n          // between expressions\n          index++;\n          separator_count++;\n\n          if (separator_count !== args.length) {\n            // missing argument\n            if (termination === CPAREN_CODE) {\n              throwError('Unexpected token ,', index);\n            } else if (termination === CBRACK_CODE) {\n              for (var arg = args.length; arg < separator_count; arg++) {\n                args.push(null);\n              }\n            }\n          }\n        } else {\n          node = gobbleExpression();\n\n          if (!node || node.type === COMPOUND) {\n            throwError('Expected comma', index);\n          }\n\n          args.push(node);\n        }\n      }\n\n      if (!closed) {\n        throwError('Expected ' + String.fromCharCode(termination), index);\n      }\n\n      return args;\n    },\n        // Responsible for parsing a group of things within parentheses `()`\n    // This function assumes that it needs to gobble the opening parenthesis\n    // and then tries to gobble everything within that parenthesis, assuming\n    // that the next thing it should see is the close parenthesis. If not,\n    // then the expression probably doesn't have a `)`\n    gobbleGroup = function gobbleGroup() {\n      index++;\n      var node = gobbleExpression();\n      gobbleSpaces();\n\n      if (exprICode(index) === CPAREN_CODE) {\n        index++;\n        return node;\n      } else {\n        throwError('Unclosed (', index);\n      }\n    },\n        // Responsible for parsing Array literals `[1, 2, 3]`\n    // This function assumes that it needs to gobble the opening bracket\n    // and then tries to gobble the expressions as arguments.\n    gobbleArray = function gobbleArray() {\n      index++;\n      return {\n        type: ARRAY_EXP,\n        elements: gobbleArguments(CBRACK_CODE)\n      };\n    },\n        nodes = [],\n        ch_i,\n        node;\n\n    while (index < length) {\n      ch_i = exprICode(index); // Expressions can be separated by semicolons, commas, or just inferred without any\n      // separators\n\n      if (ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\n        index++; // ignore separators\n      } else {\n        // Try to gobble each expression individually\n        if (node = gobbleExpression()) {\n          nodes.push(node); // If we weren't able to find a binary expression and are out of room, then\n          // the expression passed in probably has too much\n        } else if (index < length) {\n          throwError('Unexpected \"' + exprI(index) + '\"', index);\n        }\n      }\n    } // If there's only one expression just try returning the expression\n\n\n    if (nodes.length === 1) {\n      return nodes[0];\n    } else {\n      return {\n        type: COMPOUND,\n        body: nodes\n      };\n    }\n  }; // To be filled in by the template\n\n\n  jsep.version = '0.4.0';\n\n  jsep.toString = function () {\n    return 'JavaScript Expression Parser (JSEP) v' + jsep.version;\n  };\n  /**\n   * @method jsep.addUnaryOp\n   * @param {string} op_name The name of the unary op to add\n   * @return jsep\n   */\n\n\n  jsep.addUnaryOp = function (op_name) {\n    max_unop_len = Math.max(op_name.length, max_unop_len);\n    unary_ops[op_name] = t;\n    return this;\n  };\n  /**\n   * @method jsep.addBinaryOp\n   * @param {string} op_name The name of the binary op to add\n   * @param {number} precedence The precedence of the binary op (can be a float)\n   * @return jsep\n   */\n\n\n  jsep.addBinaryOp = function (op_name, precedence) {\n    max_binop_len = Math.max(op_name.length, max_binop_len);\n    binary_ops[op_name] = precedence;\n    return this;\n  };\n  /**\n   * @method jsep.addIdentifierChar\n   * @param {string} char The additional character to treat as a valid part of an identifier\n   * @return jsep\n   */\n\n\n  jsep.addIdentifierChar = function (char) {\n    additional_identifier_chars[char] = t;\n    return this;\n  };\n  /**\n   * @method jsep.addLiteral\n   * @param {string} literal_name The name of the literal to add\n   * @param {*} literal_value The value of the literal\n   * @return jsep\n   */\n\n\n  jsep.addLiteral = function (literal_name, literal_value) {\n    literals[literal_name] = literal_value;\n    return this;\n  };\n  /**\n   * @method jsep.removeUnaryOp\n   * @param {string} op_name The name of the unary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeUnaryOp = function (op_name) {\n    delete unary_ops[op_name];\n\n    if (op_name.length === max_unop_len) {\n      max_unop_len = getMaxKeyLen(unary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllUnaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllUnaryOps = function () {\n    unary_ops = {};\n    max_unop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeIdentifierChar\n   * @param {string} char The additional character to stop treating as a valid part of an identifier\n   * @return jsep\n   */\n\n\n  jsep.removeIdentifierChar = function (char) {\n    delete additional_identifier_chars[char];\n    return this;\n  };\n  /**\n   * @method jsep.removeBinaryOp\n   * @param {string} op_name The name of the binary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeBinaryOp = function (op_name) {\n    delete binary_ops[op_name];\n\n    if (op_name.length === max_binop_len) {\n      max_binop_len = getMaxKeyLen(binary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllBinaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllBinaryOps = function () {\n    binary_ops = {};\n    max_binop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeLiteral\n   * @param {string} literal_name The name of the literal to remove\n   * @return jsep\n   */\n\n\n  jsep.removeLiteral = function (literal_name) {\n    delete literals[literal_name];\n    return this;\n  };\n  /**\n   * @method jsep.removeAllLiterals\n   * @return jsep\n   */\n\n\n  jsep.removeAllLiterals = function () {\n    literals = {};\n    return this;\n  }; // In desktop environments, have a way to restore the old value for `jsep`\n\n\n  if (typeof exports === 'undefined') {\n    var old_jsep = root.jsep; // The star of the show! It's a function!\n\n    root.jsep = jsep; // And a courteous function willing to move out of the way for other similarly-named objects!\n\n    jsep.noConflict = function () {\n      if (root.jsep === jsep) {\n        root.jsep = old_jsep;\n      }\n\n      return jsep;\n    };\n  } else {\n    // In Node.JS environments\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = jsep;\n    } else {\n      exports.parse = jsep;\n    }\n  }\n})(this);","import { createStyles, makeStyles, MenuItem, TextField, Theme } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { serviceSpecifications } from \"../../jacdac-ts/src/jdom/spec\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            minWidth: \"18rem\",\n        }\n    }),\n);\n\nexport default function ServiceSpecificationSelect(props: {\n    label: string,\n    serviceClass: number;\n    setServiceClass: (serviceClass: number) => void;\n    variant?: \"outlined\" | \"filled\" | \"standard\";\n    fullWidth?: boolean;\n    error?: string;\n}) {\n    const { label, serviceClass, setServiceClass, variant, fullWidth, error } = props;\n    const [labelId] = useState('select-' + Math.random());\n    const classes = useStyles();\n    const specs = serviceSpecifications().filter(spec => !/^_/.test(spec.shortId))\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>\n        setServiceClass(parseInt(event.target.value));\n\n    return <TextField\n        id={labelId}\n        className={classes.root}\n        label={label}\n        error={!!error}\n        helperText={error}\n        value={serviceClass}\n        select\n        variant={variant}\n        fullWidth={fullWidth}\n        onChange={handleChange}>\n        <MenuItem key=\"none\" value=\"NaN\">No service selected</MenuItem>\n        {specs.map(spec => <MenuItem\n            key={spec.classIdentifier}\n            value={spec.classIdentifier}>{spec.name}</MenuItem>)}\n    </TextField>\n}","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<GithubFirmwareRelease> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    switch (resp.status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return releases[0]\n        }\n        case 404:\n            // unknow repo or no access\n            return undefined\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return undefined\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport { Grid, Card, CardActions, Button } from \"@material-ui/core\"\nimport DeviceCardHeader from \"../DeviceCardHeader\"\nimport Alert from \"../ui/Alert\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function SelectServiceGrid(props: {\n    serviceClass: number\n    buttonText?: string\n    disabled?: boolean\n    onSelect: (service: JDService) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { serviceClass, buttonText, onSelect, disabled } = props\n    const services = useChange(bus, n => n.services({ serviceClass }), [])\n    const gridBreakpoints = useGridBreakpoints()\n\n    const handleSelect = (service: JDService) => () => onSelect(service)\n\n    return (\n        <>\n            {!!services.length && (\n                <Grid container spacing={2}>\n                    {services.map(service => (\n                        <Grid key={service.id} item {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={service.device}\n                                    showAvatar={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleSelect(service)}\n                                        disabled={disabled}\n                                    >\n                                        {buttonText || \"Select\"}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            )}\n            {!services?.length && (\n                <Alert severity=\"info\">\n                    Not seeing your device? Try some of the following.\n                    <ul>\n                        <li>Check that your device is connected</li>\n                        <li>\n                            Use the <strong>packet console</strong> to monitor\n                            packets on the bus\n                        </li>\n                        <li>\n                            Check the class identifier in your annoucement\n                            packets\n                        </li>\n                    </ul>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { AlertTitle } from \"@material-ui/lab\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport Alert from \"../ui/Alert\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\nimport SelectServiceGrid from \"../select/SelectServiceGrid\"\nimport ServiceTestRunner from \"./ServiceTestRunner\"\nimport { DISCONNECT } from \"../../../jacdac-ts/src/jdom/constants\"\n\nfunction Diagnostics(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    const hostDefinition = serviceProviderDefinitionFromServiceClass(serviceClass)\n    const handleStartSimulator = () => addServiceProvider(bus, hostDefinition)\n\n    if (!hostDefinition) return null\n\n    return (\n        <Alert severity=\"info\">\n            <AlertTitle>Developer zone</AlertTitle>\n            <Button variant=\"outlined\" onClick={handleStartSimulator}>\n                start simulator\n            </Button>\n        </Alert>\n    )\n}\n\nfunction ServiceTestRunnerSelect(props: {\n    serviceClass: number\n    onSelect: (service: JDService) => void\n}) {\n    const { serviceClass, onSelect } = props\n    return (\n        <>\n            <h3>Select a device to test</h3>\n            <SelectServiceGrid serviceClass={serviceClass} onSelect={onSelect} />\n        </>\n    )\n}\n\nexport default function ServiceTest(props: {\n    serviceSpec: jdspec.ServiceSpec\n    serviceTest?: jdtest.ServiceTestSpec\n    showStartSimulator?: boolean\n}) {\n    const {\n        serviceSpec,\n        showStartSimulator,\n        serviceTest = serviceTestFromServiceClass(serviceSpec?.classIdentifier),\n    } = props\n    const { classIdentifier: serviceClass } = serviceSpec\n    const [service, setService] = useState<JDService>(undefined)\n    const handleSelect = (service: JDService) => setService(service)\n    // clear selected service when json changes\n    useEffect(() => {\n        setService(undefined)\n    }, [serviceTest])\n    // clear service if device disconnects\n    useEffect(() => service?.device?.subscribe(DISCONNECT, () => {\n        setService(undefined)\n    }), [service])\n\n    return (\n        <>\n            <h1>\n                {`${serviceSpec.name} tests`}\n                <IconButtonWithTooltip\n                    title=\"go to specification\"\n                    to={`/services/${serviceSpec.shortId}/`}\n                >\n                    <InfoIcon />\n                </IconButtonWithTooltip>\n            </h1>\n            {(Flags.diagnostics || showStartSimulator) && (\n                <Diagnostics serviceClass={serviceClass} />\n            )}\n            {!service && (\n                <ServiceTestRunnerSelect\n                    serviceClass={serviceClass}\n                    onSelect={handleSelect}\n                />\n            )}\n            {service && (\n                <ServiceTestRunner\n                    service={service}\n                    serviceTest={serviceTest}\n                />\n            )}\n        </>\n    )\n}\n","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","import { useState, useMemo, useLayoutEffect } from \"react\";\nvar m = {\n  characterData: !0,\n  characterDataOldValue: !0,\n  childList: !0,\n  subtree: !0\n};\n\nfunction p(c) {\n  var a = window.getSelection();\n  a.empty();\n  a.addRange(c);\n}\n\nfunction q(c) {\n  return (c.metaKey || c.ctrlKey) && !c.altKey && \"KeyZ\" === c.code;\n}\n\nfunction r(c) {\n  c = [c.firstChild];\n\n  for (var b, a = \"\"; b = c.pop();) {\n    b.nodeType === Node.TEXT_NODE ? a += b.textContent : b.nodeType === Node.ELEMENT_NODE && \"BR\" === b.nodeName && (a += \"\\n\"), b.nextSibling && c.push(b.nextSibling), b.firstChild && c.push(b.firstChild);\n  }\n\n  \"\\n\" !== a[a.length - 1] && (a += \"\\n\");\n  return a;\n}\n\nfunction w(c) {\n  var a = window.getSelection().getRangeAt(0),\n      b = a.collapsed ? 0 : a.toString().length,\n      f = document.createRange();\n  f.setStart(c, 0);\n  f.setEnd(a.startContainer, a.startOffset);\n  return {\n    position: c = (f = f.toString()).length,\n    extent: b,\n    content: f = (f = f.split(\"\\n\"))[a = f.length - 1],\n    line: a\n  };\n}\n\nfunction C(c, a, b) {\n  0 >= a && (a = 0);\n\n  if (!b || 0 > b) {\n    b = a;\n  }\n\n  var f = document.createRange();\n  c = [c.firstChild];\n\n  for (var d, l = 0, g = a; d = c[c.length - 1];) {\n    if (d.nodeType === Node.TEXT_NODE) {\n      if (l + d.textContent.length >= g) {\n        var h = g - l;\n\n        if (g === a) {\n          if (g = f, h < d.textContent.length ? g.setStart(d, h) : g.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          h < (b = d).textContent.length ? a.setEnd(b, h) : a.setEndAfter(b);\n          break;\n        }\n      }\n\n      l += d.textContent.length;\n    } else if (d.nodeType === Node.ELEMENT_NODE && \"BR\" === d.nodeName) {\n      if (l + 1 >= g) {\n        if (g === a) {\n          if (h = f, 0 < d.textContent.length ? h.setStart(d, 0) : h.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          0 < (b = d).textContent.length ? a.setEnd(b, 0) : a.setEndAfter(b);\n          break;\n        }\n      }\n\n      l++;\n    }\n\n    c.pop();\n    d.nextSibling && c.push(d.nextSibling);\n    d.firstChild && c.push(d.firstChild);\n  }\n\n  return f;\n}\n\nexport function useEditable(c, a, b) {\n  function f(k) {\n    var b = c.current;\n\n    if (b) {\n      var a = w(b);\n      b = r(b);\n      a.position += k.length - b.length;\n      e.position = a;\n      e.onChange(k, a);\n    }\n  }\n\n  function l(k, b) {\n    var e = c.current;\n\n    if (e) {\n      var a = window.getSelection().getRangeAt(0);\n      a.deleteContents();\n      a.collapse();\n      var d = b || 0;\n      (a = C(e, b = (a = w(e)).position + (0 > d ? d : 0), a.position + (0 < d ? d : 0))).deleteContents();\n      k && a.insertNode(document.createTextNode(k));\n      p(C(e, b + k.length));\n    }\n  }\n\n  function d(b) {\n    var a = c.current;\n\n    if (a) {\n      a.focus();\n      var e = 0;\n\n      if (\"number\" == typeof b) {\n        e = b;\n      } else {\n        var k = r(a).split(\"\\n\").slice(0, b.row);\n        b.row && (e += k.join(\"\\n\").length + 1);\n        e += b.column;\n      }\n\n      p(C(a, e));\n    }\n  }\n\n  function g() {\n    var b = c.current;\n    return {\n      text: r(b),\n      position: b = w(b)\n    };\n  }\n\n  function h() {\n    e.observer.disconnect();\n  }\n\n  b || (b = {});\n  var D = useState([])[1],\n      e = useState(function () {\n    var e = {\n      observer: null,\n      disconnected: !1,\n      onChange: a,\n      queue: [],\n      history: [],\n      historyAt: -1,\n      position: null\n    };\n    \"undefined\" != typeof MutationObserver && (e.observer = new MutationObserver(function b(b) {\n      var a;\n      (a = e.queue).push.apply(a, b);\n    }));\n    return e;\n  })[0],\n      n = useMemo(function () {\n    return {\n      update: f,\n      insert: l,\n      move: d,\n      getState: g\n    };\n  }, []);\n\n  if (\"object\" != typeof navigator) {\n    return n;\n  }\n\n  useLayoutEffect(function () {\n    e.onChange = a;\n\n    if (c.current && !b.disabled) {\n      e.disconnected = !1;\n      e.observer.observe(c.current, m);\n\n      if (e.position) {\n        var k = e.position,\n            d = k.position;\n        p(C(c.current, d, d + k.extent));\n      }\n\n      return h;\n    }\n  });\n  useLayoutEffect(function () {\n    if (!c.current || b.disabled) {\n      e.history.length = 0, e.historyAt = -1;\n    } else {\n      var a = c.current;\n\n      if (e.position) {\n        a.focus();\n        var d = e.position,\n            f = d.position;\n        p(C(a, f, f + d.extent));\n      }\n\n      var g = a.style.whiteSpace,\n          h = a.contentEditable,\n          l = !0;\n\n      try {\n        a.contentEditable = \"plaintext-only\";\n      } catch (u) {\n        a.contentEditable = \"true\", l = !1;\n      }\n\n      \"pre\" !== g && (a.style.whiteSpace = \"pre-wrap\");\n      b.indentation && (a.style.tabSize = a.style.MozTabSize = \"\" + b.indentation);\n      d = \"\" + \" \".repeat(b.indentation || 0);\n\n      var x,\n          E = new RegExp(\"^(?:\" + d + \")\"),\n          F = new RegExp(\"^(?:\" + d + \")*(\" + d + \")$\"),\n          t = function t(b) {\n        if (c.current && e.position) {\n          var u = r(a),\n              d = w(a),\n              f = new Date().valueOf(),\n              g = e.history[e.historyAt];\n          !b && 500 > f - x || g && g[1] === u ? x = f : (b = ++e.historyAt, e.history[b] = [d, u], e.history.splice(b + 1), 500 < b && (e.historyAt--, e.history.shift()));\n        }\n      },\n          v = function v() {\n        var b;\n        (b = e.queue).push.apply(b, e.observer.takeRecords());\n        b = w(a);\n\n        if (e.queue.length) {\n          e.observer.disconnect();\n          e.disconnected = !0;\n          var d = r(a);\n          e.position = b;\n\n          for (var c, f; c = e.queue.pop();) {\n            null !== c.oldValue && (c.target.textContent = c.oldValue);\n\n            for (f = c.removedNodes.length - 1; 0 <= f; f--) {\n              c.target.insertBefore(c.removedNodes[f], c.nextSibling);\n            }\n\n            for (f = c.addedNodes.length - 1; 0 <= f; f--) {\n              c.addedNodes[f].parentNode && c.target.removeChild(c.addedNodes[f]);\n            }\n          }\n\n          e.onChange(d, b);\n        }\n      },\n          y = function y(c) {\n        if (!c.defaultPrevented && c.target === a) {\n          if (e.disconnected) {\n            return c.preventDefault(), D([]);\n          }\n\n          if (q(c)) {\n            c.preventDefault(), c.shiftKey ? (c = ++e.historyAt, (c = e.history[c]) || (e.historyAt = e.history.length - 1)) : (c = --e.historyAt, (c = e.history[c]) || (e.historyAt = 0)), c && (e.observer.disconnect(), e.disconnected = !0, e.position = c[0], e.onChange(c[1], c[0]));\n          } else {\n            t();\n\n            if (\"Enter\" === c.key) {\n              c.preventDefault();\n              var d = w(a),\n                  f = /\\S/g.exec(d.content);\n              d = \"\\n\" + d.content.slice(0, f ? f.index : d.content.length);\n              n.insert(d);\n            } else if ((!l || b.indentation) && \"Backspace\" === c.key) {\n              c.preventDefault(), window.getSelection().getRangeAt(0).collapsed ? (d = w(a), d = F.exec(d.content), n.insert(\"\", d ? -d[1].length : -1)) : n.insert(\"\", 0);\n            } else if (b.indentation && \"Tab\" === c.key) {\n              c.preventDefault();\n              f = (d = w(a)).position - d.content.length;\n              var g = r(a);\n              d = c.shiftKey ? g.slice(0, f) + d.content.replace(E, \"\") + g.slice(f + d.content.length) : g.slice(0, f) + (b.indentation ? \" \".repeat(b.indentation) : \"\\t\") + g.slice(f);\n              n.update(d);\n            }\n\n            c.repeat && v();\n          }\n        }\n      },\n          z = function z(b) {\n        b.defaultPrevented || b.isComposing || (q(b) || t(), v(), a.focus());\n      },\n          A = function A(b) {\n        e.position = window.getSelection().rangeCount && b.target === a ? w(a) : null;\n      },\n          B = function B(a) {\n        a.preventDefault();\n        t(!0);\n        n.insert(a.clipboardData.getData(\"text/plain\"));\n        t(!0);\n        v();\n      };\n\n      document.addEventListener(\"selectstart\", A);\n      window.addEventListener(\"keydown\", y);\n      a.addEventListener(\"paste\", B);\n      a.addEventListener(\"keyup\", z);\n      return function () {\n        document.removeEventListener(\"selectstart\", A);\n        window.removeEventListener(\"keydown\", y);\n        a.removeEventListener(\"paste\", B);\n        a.removeEventListener(\"keyup\", z);\n        a.style.whiteSpace = g;\n        a.contentEditable = h;\n      };\n    }\n  }, [c.current, b.disabled, b.indentation]);\n  return n;\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-key */\nimport React, { useContext, useRef, lazy } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useEditable } from \"use-editable\"\nimport { Alert } from \"@material-ui/lab\"\nimport { Grid, Tooltip, withStyles } from \"@material-ui/core\"\nimport Suspense from \"../ui/Suspense\";\nconst GithubPullRequestButton = lazy(() => import('../buttons/GithubPullRequestButton'));\n\nconst AnnotationTooltip = withStyles(theme => ({\n    arrow: {\n        color: theme.palette.error.main,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.error.main,\n        color: theme.palette.common.white,\n        boxShadow: theme.shadows[1],\n        fontSize: theme.typography.body2.fontSize,\n    },\n}))(Tooltip)\n\nexport default function HighlightTextField(props: {\n    language: string\n    code: string\n    onChange: (newValue: string) => void\n    annotations?: jdspec.Diagnostic[]\n    pullRequestTitle?: string\n    pullRequestPath?: string\n    pullRequestDescription?: string\n}) {\n    const {\n        code,\n        onChange,\n        language,\n        annotations,\n        pullRequestTitle,\n        pullRequestPath,\n        pullRequestDescription,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const editorRef = useRef(null)\n\n    useEditable(editorRef, onChange, {\n        disabled: false,\n        indentation: 4,\n    })\n    return (\n        <Grid container spacing={1} direction=\"row\">\n            <Grid item xs={12}>\n                <Highlight\n                    {...defaultProps}\n                    code={code}\n                    language={language as Language}\n                    theme={theme}\n                >\n                    {({ className, style, tokens, getTokenProps }) => (\n                        <pre\n                            ref={editorRef}\n                            className={className}\n                            spellCheck={false}\n                            style={{\n                                ...style,\n                                ...{\n                                    minHeight: \"12rem\",\n                                    whiteSpace: \"pre-wrap\",\n                                },\n                            }}\n                        >\n                            {tokens.map((line, i) => {\n                                const annotation = annotations?.find(\n                                    a => a.line === i + 1\n                                )\n                                const title = annotation?.message\n                                const el = (\n                                    <span\n                                        key={i}\n                                        style={\n                                            annotation && {\n                                                borderBottom: \"dashed 1px red\",\n                                            }\n                                        }\n                                    >\n                                        {line\n                                            .filter(token => !token.empty)\n                                            .map((token, key) => (\n                                                <span\n                                                    {...getTokenProps({\n                                                        token,\n                                                        key,\n                                                    })}\n                                                />\n                                            ))}\n                                        {i < tokens.length - 1 ? \"\\n\" : null}\n                                    </span>\n                                )\n                                return title ? (\n                                    <AnnotationTooltip\n                                        title={title}\n                                        arrow\n                                        key={i}\n                                    >\n                                        {el}\n                                    </AnnotationTooltip>\n                                ) : (\n                                    el\n                                )\n                            })}\n                        </pre>\n                    )}\n                </Highlight>\n            </Grid>\n            {!!annotations?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"error\">\n                        <ul>\n                            {annotations.map((a, i) => (\n                                <li key={i}>\n                                    line {a.line}: {a.message}\n                                </li>\n                            ))}\n                        </ul>\n                    </Alert>\n                </Grid>\n            )}\n            {pullRequestTitle && pullRequestPath && (\n                <Grid item>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            title={pullRequestTitle}\n                            head={pullRequestPath}\n                            description={pullRequestDescription}\n                            files={{\n                                [pullRequestPath + \".md\"]: code,\n                            }}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { \n    exprVisitor,\n    SpecSymbolResolver,\n    VMChecker\n} from \"./jdutils\"\nimport { getTestCommandFunctions, getTestExpressionFunctions } from \"./jdtestfuns\"\nimport jsep from \"jsep\"\n\nconst supportedExpressions: jsep.ExpressionType[] = [\n    \"MemberExpression\",\n    \"ArrayExpression\",\n    \"BinaryExpression\",\n    \"CallExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\n// we parse a test with respect to an existing ServiceSpec\nexport function parseSpecificationTestMarkdownToJSON(\n    filecontent: string,\n    spec: jdspec.ServiceSpec,\n    filename = \"\"\n): jdtest.ServiceTestSpec {\n    if (!spec)\n        return undefined;\n\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: jdtest.ServiceTestSpec = {\n        description: \"\",\n        serviceClassIdentifier: spec.classIdentifier,\n        tests: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentTest: jdtest.TestSpec = null\n    let testHeading = \"\"\n    let testPrompt = \"\"\n    const symbolResolver = new SpecSymbolResolver(spec, undefined, (e) => error(e))\n    const checkExpression = new VMChecker(symbolResolver, (t) => supportedExpressions.indexOf(t) >= 0, (e) => error(e))\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentTest) finishTest(symbolResolver)\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" || \n            line.slice(0, 4) == \"    \" ||\n            /^\\t/.exec(line)\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                testHeading = \"\"\n                testPrompt = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\") {\n                    if (!info.description)\n                        info.description = cont.trim()\n                    else \n                        error(\"use ## to start a test, not #\")\n                } else if (hd == \"##\") {\n                    if (currentTest) finishTest(symbolResolver)\n                    testHeading = cont.trim()\n                }\n            } else {\n                testPrompt += line\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function processCommand(expanded: string) {\n        // TODO: if there is a prompt, the test has no commands, and\n        // TODO: the first command is not ask/say\n        // TODO: then add a say command\n\n        if (!currentTest) {\n            if (!testHeading)\n                error(`every test must have a description (via ##)`)\n            currentTest = {\n                description: testHeading,\n                prompt: testPrompt,\n                registers: [],\n                events: [],\n                testCommands: [],\n            }\n            testHeading = \"\"\n            testPrompt = \"\"\n        }\n \n        const root = <jsep.CallExpression>jsep(expanded)\n        const ret = checkExpression.checkCommand(root, getTestCommandFunctions())\n\n        if (ret) {\n            const [command, root] = ret\n            // check all calls in subexpressions\n            processCalls(command, root)\n            currentTest.testCommands.push({ prompt: testPrompt, call: root })\n            testPrompt = \"\"\n        }\n\n        // this checking is specific to test functions (for now)\n        function processCalls(command: jdtest.TestFunctionDescription, root: jsep.CallExpression) {\n            const args = root.arguments\n            const testExpressionFunctions = getTestExpressionFunctions()\n            args.forEach((arg, a) => {\n                const argType = command.args[a]\n                exprVisitor(root, arg, (parent, callExpr: jsep.CallExpression) => {\n                    if (callExpr.type !== 'CallExpression')\n                        return;\n                    if (callExpr.callee.type !== \"Identifier\")\n                        error(`all calls must be direct calls`)\n                    const id = (<jsep.Identifier>callExpr.callee).name\n                    const tef = testExpressionFunctions.find(r => id == r.id)\n                    if (!tef)\n                        error(\n                            `${id} is not a registered test expression function.`\n                        )\n                    if (tef.context === \"expression\" || tef.context === \"either\") {\n                        if (argType != \"boolean\")\n                            error(`${id} expression function can only be used inside a boolean expression`)\n                        // no nested calls\n                        if (command.context === \"expression\" || command.context === \"either\") \n                            error(`cannot nest ${tef.id} underneath ${command.id}`)\n                        // look under tef\n                        exprVisitor(null, callExpr, (parent, ce: jsep.CallExpression) => {\n                            if (ce.type !== 'CallExpression')\n                                return;\n                            if (ce.callee.type === \"Identifier\" && (<jsep.Identifier>ce.callee).name)\n                                error(`cannot nest ${(<jsep.Identifier>ce.callee).name} underneath ${id}`)\n                        })\n                    }\n                    const expected = tef.args.length\n                    if (expected !== callExpr.arguments.length)\n                        error(\n                            `Expected ${expected} arguments; got ${callExpr.arguments.length}`\n                        )\n                })\n            })\n        }\n    }\n\n    function finishTest(s: SpecSymbolResolver) {\n        currentTest.registers = s.registers\n        currentTest.events = s.events\n        s.reset()\n        info.tests.push(currentTest)\n        currentTest = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import React, { useContext, useMemo } from \"react\"\nimport { Button, Grid } from \"@material-ui/core\"\nimport { parseSpecificationTestMarkdownToJSON } from \"../../../jacdac-ts/jacdac-spec/spectool/jdtest\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport ServiceSpecificationSelect from \"../ServiceSpecificationSelect\"\nimport { SRV_BUTTON } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceTest from \"../test/ServiceTest\"\nimport { fetchText } from \"../github\"\nimport AppContext from \"../AppContext\"\nimport Markdown from \"../ui/Markdown\"\nimport GridHeader from \"../ui/GridHeader\"\n\nconst SERVICE_TEST_SERVICE_STORAGE_KEY = \"jacdac:servicetesteditor:service\"\nconst SERVICE_TEST_SOURCE_STORAGE_KEY = \"jacdac:servicetesteditorsource\"\nconst SERVICE_MARKDOWN_SOURCE_STORAGE_KEY =\n    \"jacdac:servicetesteditorsource:markdown\"\n\nexport default function ServiceTestEditor() {\n    const { setError } = useContext(AppContext)\n    const [serviceClass, setServiceClass] = useLocalStorage<number>(\n        SERVICE_TEST_SERVICE_STORAGE_KEY,\n        SRV_BUTTON\n    )\n    const [source, setSource] = useLocalStorage(\n        SERVICE_TEST_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [markdownSource, setMarkdownSource] = useLocalStorage(\n        SERVICE_MARKDOWN_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const serviceSpec = useMemo(\n        () => serviceSpecificationFromClassIdentifier(serviceClass),\n        [serviceClass]\n    )\n    const json = useMemo(\n        () => parseSpecificationTestMarkdownToJSON(source, serviceSpec),\n        [source, serviceSpec]\n    )\n    const servicePath =\n        json &&\n        `services/tests/${(\n            serviceSpec.camelName ||\n            serviceSpec.shortId ||\n            `0x${serviceSpec.classIdentifier.toString(16)}`\n        ).toLowerCase()}`\n    const handleLoadFromGithub = async () => {\n        try {\n            const ghSource = await fetchText(\n                \"microsoft/jacdac\",\n                \"main\",\n                `services/tests/${serviceSpec.shortId}.md`,\n                \"text/plain\"\n            )\n            setSource(ghSource || \"\")\n        } catch (e) {\n            setError(e)\n        }\n        try {\n            const ghSource = await fetchText(\n                \"microsoft/jacdac\",\n                \"main\",\n                `services/${serviceSpec.shortId}.md`,\n                \"text/plain\"\n            )\n            if (ghSource) setMarkdownSource(ghSource)\n            else setError(\"Specification source not found\")\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <Grid spacing={2} container>\n            <Grid item xs={12}>\n                <Grid container spacing={2} direction=\"row\">\n                    <Grid item>\n                        <ServiceSpecificationSelect\n                            label={\"Select a service to test\"}\n                            serviceClass={serviceClass}\n                            setServiceClass={setServiceClass}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            disabled={!serviceSpec}\n                            onClick={handleLoadFromGithub}\n                        >\n                            Load from GitHub\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid spacing={2} container>\n                <Grid item xs={12} sm={7}>\n                    <HighlightTextField\n                        code={source}\n                        language={\"markdown\"}\n                        onChange={setSource}\n                        annotations={json?.errors}\n                        pullRequestTitle={\n                            json && `Service test: ${serviceSpec.name}`\n                        }\n                        pullRequestPath={servicePath}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                    <Markdown source={markdownSource} />\n                </Grid>\n            </Grid>\n            <GridHeader title=\"Preview\" />\n            {json && (\n                <Grid item xs={12} xl={7}>\n                    <ServiceTest\n                        showStartSimulator={true}\n                        serviceSpec={serviceSpec}\n                        serviceTest={json}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport ServiceTestEditor from \"../../components/tools/ServiceTestEditor\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Service Test Editor</h1>\n            <p>\n                Read the{\" \"}\n                <Link to=\"/reference/service-tests\">\n                    service test\n                </Link>{\" \"}\n                documentation.\n            </p>\n            <ServiceTestEditor />\n        </>\n    )\n}\n"],"names":["createStyles","makeStyles","MenuItem","TextField","React","useState","serviceSpecifications","useStyles","root","minWidth","ServiceSpecificationSelect","props","label","serviceClass","setServiceClass","variant","fullWidth","error","labelId","Math","random","classes","specs","filter","spec","test","shortId","handleChange","event","parseInt","target","value","map","classIdentifier","name","cmp","a","b","d","major","minor","patch","pre","length","i","aa","bb","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","slice","m","exec","split","semverCmp","useFetch","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","version","type","undefined","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","slug","cleaned","replace","parts","repoPath","folder","join","parseRepoUrl","url","owner","fetchLatestRelease","options","uri","resp","fetch","status","json","releases","ignoreThrottled","Error","fetchReleaseBinary","downloadUrl","req","headers","Accept","firmware","blob","fetchText","tag","path","mimeType","src","text","useFetchApi","res","response","console","log","useFetchJSON","useRepository","useLatestRelease","useLatestReleases","loading","useContext","useGridBreakpoints","JacdacContext","useChange","Grid","Card","CardActions","Button","DeviceCardHeader","Alert","SelectServiceGrid","bus","buttonText","onSelect","disabled","services","n","gridBreakpoints","handleSelect","service","id","device","useEffect","AlertTitle","InfoIcon","IconButtonWithTooltip","addServiceProvider","serviceProviderDefinitionFromServiceClass","Flags","serviceTestFromServiceClass","ServiceTestRunner","DISCONNECT","Diagnostics","hostDefinition","handleStartSimulator","ServiceTestRunnerSelect","ServiceTest","serviceSpec","showStartSimulator","serviceTest","setService","subscribe","diagnostics","Box","Chip","Typography","clsx","theme","hr","background","palette","marginBottom","start","width","spacing","GridHeader","title","count","action","useRef","lazy","Highlight","defaultProps","LIGHT_THEME","DARK_THEME","DarkModeContext","useEditable","Tooltip","withStyles","Suspense","GithubPullRequestButton","AnnotationTooltip","arrow","color","main","tooltip","backgroundColor","common","white","boxShadow","shadows","fontSize","typography","body2","HighlightTextField","code","onChange","language","annotations","pullRequestTitle","pullRequestPath","pullRequestDescription","darkMode","editorRef","indentation","className","style","tokens","getTokenProps","minHeight","whiteSpace","line","annotation","find","message","el","borderBottom","token","empty","key","useEffectAsync","setResponse","setError","setStatus","setLoading","mounted","exprVisitor","SpecSymbolResolver","VMChecker","getTestCommandFunctions","getTestExpressionFunctions","jsep","supportedExpressions","parseSpecificationTestMarkdownToJSON","filecontent","filename","info","description","serviceClassIdentifier","tests","backticksType","errors","lineNo","currentTest","testHeading","testPrompt","symbolResolver","e","checkExpression","t","indexOf","processLine","finishTest","trim","interpret","hd","cont","expanded","processCommand","prompt","registers","events","testCommands","ret","checkCommand","command","processCalls","push","call","args","arguments","testExpressionFunctions","forEach","arg","argType","parent","callExpr","callee","tef","context","ce","expected","s","reset","msg","some","file","useMemo","serviceSpecificationFromClassIdentifier","useLocalStorage","SRV_BUTTON","AppContext","Markdown","SERVICE_TEST_SERVICE_STORAGE_KEY","SERVICE_TEST_SOURCE_STORAGE_KEY","SERVICE_MARKDOWN_SOURCE_STORAGE_KEY","ServiceTestEditor","source","setSource","markdownSource","setMarkdownSource","servicePath","camelName","toString","toLowerCase","handleLoadFromGithub","ghSource","Link","Page"],"sourceRoot":""}