{"version":3,"file":"component---src-pages-tools-model-editor-tsx-1e5f6d90ddf900de8603.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACE;AACsB;AACtB;AACpC;AACf,SAAS,iCAAc,SAAS,kCAAe,SAAS,6CAA0B,SAAS,kCAAe;AAC1G;;;;;;;;;;;;;;;;;;;;;;ACN0D;AACA;AACY;AACoB;AAC3D;AACO;AACd;AAC4B;AACjB;AACN;AACiB;AACI;AACC;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,wDAAwD,KAAK;AAC7D,gBAAgB;;AAEhB,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,uBAAQ;AACvE;AACA,cAAc,0CAAwB;;AAEtC,uBAAuB,gCAAa;AACpC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,gCAAc;AACtC;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,8BAA8B,sBAAsB;AACpD,+BAA+B,QAAQ;AACvC;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,mBAAmB,CAAC,oBAAK,EAAE,8BAAQ;AACzD,eAAe,yBAAI;AACnB;AACA;AACA,GAAG,uBAAuB,mBAAmB,CAAC,iDAAyB;AACvE;AACA,GAAG,yBAAyB,mBAAmB,sBAAsB,8BAAQ;AAC7E;AACA;AACA,GAAG,iCAAiC,mBAAmB;AACvD;AACA;AACA;AA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","sources":["webpack://jacdac-docs/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/Accordion.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteSweep.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./src/workers/csv/workerloader.js","webpack://jacdac-docs/./src/workers/data/workerloader.js","webpack://jacdac-docs/./src/workers/tf/workerloader.js","webpack://jacdac-docs/./src/workers/vm/workerloader.js","webpack://jacdac-docs/./src/components/blockly/dsl/workers/proxy.ts","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/model-editor/ModelDataSet.ts","webpack://jacdac-docs/./src/components/model-editor/CollectData.tsx","webpack://jacdac-docs/./src/components/blockly/dsl/workers/tf.proxy.ts","webpack://jacdac-docs/./src/components/model-editor/MBModel.ts","webpack://jacdac-docs/./src/components/model-editor/TrainModel.tsx","webpack://jacdac-docs/./src/components/model-editor/ModelOutput.tsx","webpack://jacdac-docs/./src/components/model-editor/ModelEditor.tsx","webpack://jacdac-docs/./src/pages/tools/model-editor.tsx"],"sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\"\n}), 'DeleteSweep');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","export default function createCsvWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/csv-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}","export default function createDataWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/data-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createTFWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/tf-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createVMWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/vm-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { MESSAGE } from \"../../../../../jacdac-ts/src/jdom/constants\"\nimport JDEventSource from \"../../../../../jacdac-ts/src/jdom/eventsource\"\nimport { assert, SMap } from \"../../../../../jacdac-ts/src/jdom/utils\"\nimport createCsvWorker from \"../../../../workers/csv/workerloader\"\nimport createDataWorker from \"../../../../workers/data/workerloader\"\nimport createTFWorker from \"../../../../workers/tf/workerloader\"\nimport createVMWorker from \"../../../../workers/vm/workerloader\"\n\nexport type VMType = \"data\" | \"csv\" | \"tf\" | \"vm\"\n\nexport interface WorkerMessage {\n    worker: VMType\n    id?: string\n}\n\nexport interface WorkerResponse {\n    error?: string\n}\n\nexport class WorkerProxy extends JDEventSource {\n    readonly pendings: SMap<{\n        resolve: (res: any) => void\n        reject: (err: any) => void\n    }> = {}\n    constructor(readonly worker: Worker, readonly workerid: VMType) {\n        super()\n        this.worker.addEventListener(\"message\", this.handleMessage.bind(this))\n    }\n\n    private handleMessage(event: MessageEvent) {\n        const { data: message } = event\n        const { id, worker } = message\n        const pending = this.pendings[id]\n        if (pending) {\n            assert(worker === message.worker)\n            pending.resolve(message)\n        } else {\n            this.emit(MESSAGE, event.data)\n        }\n    }\n\n    postMessage<T, R>(message: WorkerMessage & T): Promise<WorkerResponse & R> {\n        message.id = message.id || Math.random() + \"\"\n        message.worker = this.workerid\n        return new Promise<R>((resolve, reject) => {\n            this.pendings[message.id] = { resolve, reject }\n            this.worker.postMessage(message)\n        })\n    }\n}\n\nconst _workers: SMap<WorkerProxy> = {}\nconst loaders = {\n    data: createDataWorker,\n    csv: createCsvWorker,\n    tf: createTFWorker,\n    vm: createVMWorker,\n}\nexport default function workerProxy(workerid: VMType) {\n    const worker =\n        _workers[workerid] ||\n        (_workers[workerid] = new WorkerProxy(loaders[workerid](), workerid))\n    return worker\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n","import { CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEventSource from \"../../../jacdac-ts/src/jdom/eventsource\"\n\nimport FieldDataSet, { Recording } from \"../FieldDataSet\"\n\nexport class DataSet {\n    constructor(\n        public readonly inputTypes: string[],\n        public readonly recordings: { [label: string]: Recording[] },\n        public readonly registerIds: string[],\n        public readonly totalRecordings: number\n    ) {}\n}\n\nexport function arraysEqual(a: string[], b: string[]): boolean {\n    if (a === b) return true\n    if (a == null || b == null) return false\n    if (a.length !== b.length) return false\n\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false\n    }\n    return true\n}\n\nexport default class ModelDataSet extends JDEventSource {\n    static createFromFile(datasetJSONObj: DataSet): ModelDataSet {\n        const set = new ModelDataSet()\n        const { recordings, registerIds } = datasetJSONObj\n        set.addRecordingsFromFile(recordings, registerIds) // add recordings and update total recordings\n        return set\n    }\n\n    // maintain computed number of recordings and input data types to avoid recomputation\n    totalRecordings: number\n\n    // maintain data in tensors\n    xs: number[]\n    ys: number[]\n    length: number\n    width: number\n\n    constructor(\n        public readonly labels?: string[],\n        public readonly recordings?: { [label: string]: FieldDataSet[] },\n        public inputTypes?: string[],\n        public registerIds?: string[]\n    ) {\n        super()\n\n        this.labels = []\n        this.recordings = {}\n        this.totalRecordings = 0\n    }\n\n    get labelOptions() {\n        if (this.labels.length == 0) return [\"class1\"]\n        return this.labels\n    }\n\n    get numRecordings() {\n        return this.totalRecordings\n    }\n\n    getRecordingsWithLabel(label: string) {\n        return this.recordings[label]\n    }\n\n    addRecording(\n        recording: FieldDataSet,\n        label: string,\n        registerIds: string[]\n    ) {\n        if (this.totalRecordings == 0) {\n            this.labels.push(label)\n            this.recordings[label] = [recording]\n            this.inputTypes = recording.headerList\n            this.registerIds = registerIds\n\n            this.totalRecordings += 1\n            this.emit(CHANGE)\n        } else if (arraysEqual(recording.headerList, this.inputTypes)) {\n            // Check if label is already in dataset\n            if (this.labels.indexOf(label) < 0) {\n                // If not, add the new label to the dataset\n                this.labels.push(label)\n                this.recordings[label] = [recording]\n            } else {\n                this.recordings[label].push(recording)\n            }\n\n            this.totalRecordings += 1\n            this.emit(CHANGE)\n        } else {\n            // Randi TODO decide what error to raise when inputting incorrect data (shouldn't be possible, though)\n            console.log(\"Randi, did not add data to dataset\")\n        }\n    }\n\n    addRecordingsFromFile(\n        recordings: { [label: string]: Recording[] },\n        registerIds: string[]\n    ) {\n        //totalRecordings\n        Object.keys(recordings).forEach(label => {\n            recordings[label].forEach(recording => {\n                const set = FieldDataSet.createFromFile(recording)\n                this.addRecording(set, label, registerIds)\n            })\n        })\n    }\n\n    removeRecording(recording: FieldDataSet) {\n        const recordingLabel = recording.name.slice(\n            0,\n            recording.name.indexOf(\"$\")\n        )\n        const i = this.recordings[recordingLabel].indexOf(recording)\n\n        if (i > -1) {\n            this.recordings[recordingLabel].splice(i, 1)\n\n            // If this emptied out a label, then remove that label\n            if (this.recordings[recordingLabel].length == 0) {\n                const j = this.labels.indexOf(recordingLabel)\n                this.labels.splice(j, 1)\n            }\n\n            this.totalRecordings -= 1\n        }\n    }\n\n    countTotalRecordings() {\n        let total = 0\n\n        this.labels.forEach(label => {\n            this.recordings[label].forEach(() => {\n                total += 1\n            })\n        })\n\n        return total\n    }\n\n    get summary() {\n        if (this.labels.length <= 0) return [\"Classes: none\"]\n\n        const modelInfo = []\n        const classes = []\n        this.labels.forEach(label => {\n            classes.push(\n                label + \" [\" + this.recordings[label].length + \" sample(s)]\"\n            )\n        })\n        modelInfo.push(\"Classes: \" + classes.join(\", \"))\n\n        return modelInfo\n    }\n\n    toCSV() {\n        const recordingCountHeader = `Number of recordings,${this.totalRecordings}`\n\n        const recordingData: string[] = []\n        this.labels.forEach(label => {\n            this.recordings[label].forEach(recording => {\n                recordingData.push(\n                    \"Recording metadata,\" +\n                        recording.name +\n                        \",\" +\n                        recording.rows.length +\n                        \",\" +\n                        label\n                )\n                recordingData.push(recording.toCSV())\n            })\n        })\n        const recordData = recordingData.join(\"\\n\")\n\n        const csv: string[] = [recordingCountHeader, recordData]\n        return csv.join(\"\\n\")\n    }\n}\n","import React, { useEffect, useContext, useState } from \"react\"\n\nimport { Grid, TextField, InputAdornment } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { Autocomplete } from \"@material-ui/lab\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@material-ui/icons/Stop\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteAllIcon from \"@material-ui/icons/DeleteSweep\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nimport ServiceManagerContext from \"../ServiceManagerContext\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nimport useChange from \"../../jacdac/useChange\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport { REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { throttle } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport Trend from \"../Trend\"\nimport ClassDataSetGrid from \"../ClassDataSetGrid\"\nimport ReadingFieldGrid from \"../ReadingFieldGrid\"\nimport FieldDataSet from \"../FieldDataSet\"\nimport ModelDataSet, { arraysEqual } from \"./ModelDataSet\"\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live) set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nexport default function CollectData(props: {\n    reactStyle: any\n    chartPalette: string[]\n    dataset: ModelDataSet\n    onChange: (dataset) => void\n    onNext: (dataset) => void\n}) {\n    const { chartPalette, onChange, onNext } = props\n    const [dataset, setDataSet] = useState<ModelDataSet>(props.dataset)\n    const classes = props.reactStyle\n\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const readingRegisters = useChange(bus, bus =>\n        arrayConcatMany(\n            bus.devices().map(device =>\n                device\n                    .services()\n                    .filter(srv => isSensor(srv.specification))\n                    .map(srv => srv.readingRegister)\n            )\n        )\n    )\n    /* For choosing sensors */\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [totalRecordings, setTotalRecordings] = useState(0)\n    const [recordingName, setRecordingName] = useState(\n        \"recording\" + totalRecordings\n    )\n\n    const [isRecording, setIsRecording] = useState(false)\n    const [, setRecordingLength] = useState(0)\n    const [liveRecording, setLiveRecording] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n\n    const newRecording = (registerIds: string[], live: boolean) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `${currentClassLabel}$${dataset.numRecordings}`,\n                  live,\n                  chartPalette\n              )\n            : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveRecording(newRecording(registerIdsChecked, true))\n    }\n\n    const handleRecordingNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setRecordingName(event.target.value.trim())\n    }\n\n    /* For recording data*/\n    const [currentClassLabel, setCurrentClassLabel] = useState(\"class1\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"100\")\n    const [samplingDuration, setSamplingDuration] = useState(\"2\")\n    const [datasetMatch, setDataSetMatch] = useState(false)\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(\n        (parseFloat(samplingDuration) * 1000) / samplingIntervalDelayi\n    )\n    const errorSamplingIntervalDelay =\n        isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const startEnabled = !!recordingRegisters?.length && datasetMatch\n\n    const handleSamplingIntervalChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handleLabelChange = newLabel => {\n        setCurrentClassLabel(newLabel)\n    }\n    const handleDownloadDataSet = async () => {\n        const csv = dataset.toCSV()\n        fileStorage.saveText(`${dataset.labelOptions.join(\"\")}dataset.csv`, csv)\n    }\n    const handleDeleteDataSet = () => {\n        if (confirm(\"Are you sure you want to delete all recorded samples?\")) {\n            const newDataSet = new ModelDataSet()\n            handleDataSetUpdate(newDataSet)\n            setDataSet(newDataSet)\n\n            resetDataCollection()\n        }\n    }\n    const resetDataCollection = () => {\n        setCurrentClassLabel(\"class1\")\n        setTotalRecordings(0)\n        setSamplingIntervalDelay(\"100\")\n        setSamplingDuration(\"2\")\n    }\n    const stopRecording = () => {\n        if (isRecording) {\n            // add new data to the dataset\n            dataset.addRecording(\n                liveRecording,\n                currentClassLabel,\n                registerIdsChecked\n            )\n            setTotalRecordings(totalRecordings + 1)\n            setDataSet(dataset)\n            handleDataSetUpdate(dataset)\n\n            // create new live recording\n            setLiveRecording(newRecording(registerIdsChecked, true))\n\n            // stop recording\n            setIsRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!isRecording && recordingRegisters.length) {\n            setLiveRecording(newRecording(registerIdsChecked, false))\n            setIsRecording(true)\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg =>\n            reg.subscribe(REPORT_UPDATE, () => {})\n        )\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (isRecording) stopRecording()\n        else startRecording()\n    }\n    const handleDeleteRecording = (recording: FieldDataSet) => {\n        dataset.removeRecording(recording)\n        setDataSet(dataset)\n        handleDataSetUpdate(dataset)\n    }\n    const updateLiveData = () => {\n        setLiveRecording(liveRecording)\n        setRecordingLength(liveRecording.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveRecording) return\n        liveRecording.addRow(values)\n        if (isRecording && liveRecording.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg =>\n            reg.sendSetIntAsync(samplingIntervalDelayi)\n        )\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error) return undefined\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi)\n        const stopStreaming = startStreamingRegisters()\n\n        return () => {\n            clearInterval(interval)\n            stopStreaming()\n        }\n    }, [isRecording, samplingIntervalDelayi, samplingCount, registerIdsChecked])\n    useEffect(() => {\n        setRecordingName(\"recording\" + totalRecordings)\n    }, [totalRecordings])\n    useEffect(() => {\n        let matchingInputs = true\n        if (dataset && liveRecording) {\n            if (dataset.inputTypes && dataset.inputTypes.length) {\n                if (!arraysEqual(dataset.inputTypes, liveRecording.headers))\n                    matchingInputs = false\n            }\n        }\n        setDataSetMatch(matchingInputs)\n    }, [liveRecording])\n\n    const handleDataSetUpdate = dataset => {\n        onChange(dataset)\n    }\n    const handleNext = () => {\n        onNext(dataset)\n    }\n\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h2>\n                    Current DataSet\n                    <IconButtonWithTooltip\n                        onClick={handleDownloadDataSet}\n                        title=\"Download all recording data\"\n                        disabled={dataset.numRecordings == 0}\n                    >\n                        <DownloadIcon />\n                    </IconButtonWithTooltip>\n                    <IconButtonWithTooltip\n                        onClick={handleDeleteDataSet}\n                        title=\"Delete all recording data\"\n                        disabled={dataset.numRecordings == 0}\n                    >\n                        <DeleteAllIcon />\n                    </IconButtonWithTooltip>\n                </h2>\n                <div key=\"recordedData\">\n                    {dataset.numRecordings > 0 ? (\n                        <div key=\"recordings\">\n                            <p>\n                                Input type(s): {dataset.inputTypes.join(\",\")}{\" \"}\n                            </p>\n                            {dataset.labels.map(classLabel => (\n                                <ClassDataSetGrid\n                                    key={\"dataset-\" + classLabel}\n                                    label={classLabel}\n                                    tables={dataset.getRecordingsWithLabel(\n                                        classLabel\n                                    )}\n                                    handleDeleteTable={handleDeleteRecording}\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                        <p>Empty</p>\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <h2>Collect More Data</h2>\n                {/* RANDI TODO Toggle button to get data from sensors vs upload from file */}\n                <div key=\"sensors\">\n                    <h3>Select input sensors</h3>\n                    {!readingRegisters.length && (\n                        <span>Waiting for sensors...</span>\n                    )}\n                    {!!readingRegisters.length && (\n                        <ReadingFieldGrid\n                            readingRegisters={readingRegisters}\n                            registerIdsChecked={registerIdsChecked}\n                            recording={isRecording}\n                            liveDataSet={liveRecording}\n                            handleRegisterCheck={handleRegisterCheck}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <div key=\"record\">\n                    <h3>Record data</h3>\n                    <div className={classes.row}>\n                        <TextField\n                            className={classes.field}\n                            label=\"Recording name\"\n                            value={recordingName}\n                            variant=\"outlined\"\n                            onChange={handleRecordingNameChange}\n                        />\n                        <Autocomplete\n                            disabled={isRecording}\n                            className={classes.field}\n                            options={dataset.labelOptions}\n                            renderInput={params => (\n                                <TextField\n                                    {...params}\n                                    label=\"Class label\"\n                                    variant=\"outlined\"\n                                />\n                            )}\n                            value={currentClassLabel}\n                            onInputChange={(event, newValue) =>\n                                handleLabelChange(newValue)\n                            }\n                            getOptionSelected={() => true}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingDuration}\n                            disabled={isRecording}\n                            label=\"Sampling duration\"\n                            value={samplingDuration}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        s\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingDurationChange}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingIntervalDelay}\n                            disabled={isRecording}\n                            label=\"Sampling interval\"\n                            value={samplingIntervalDelay}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        ms\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingIntervalChange}\n                        />\n                    </div>\n                    <div className={classes.buttons}>\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isRecording ? \"secondary\" : \"primary\"}\n                            aria-label=\"start/stop recording\"\n                            title=\"start/stop recording\"\n                            onClick={toggleRecording}\n                            startIcon={\n                                isRecording ? <StopIcon /> : <PlayArrowIcon />\n                            }\n                            disabled={!startEnabled}\n                        >\n                            {isRecording ? \"Stop\" : \"Start\"}\n                        </Button>\n                    </div>\n                </div>\n                <div key=\"liveData\">\n                    {liveRecording && (\n                        <Trend\n                            key=\"trends\"\n                            height={12}\n                            dataSet={liveRecording}\n                            horizon={LIVE_HORIZON}\n                            dot={true}\n                            gradient={true}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<NavigateNextIcon />}\n                        disabled={dataset.labels.length < 2}\n                        onClick={handleNext}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import type {\n    TFModelRequest,\n    TFModelTrainRequest,\n    TFModelTrainResponse,\n    TFModelPredictRequest,\n    TFModelPredictResponse,\n    TFModelMessage,\n} from \"../../../../workers/tf/dist/node_modules/tf.worker\"\nimport workerProxy from \"./proxy\"\n\nexport async function postModelRequest(\n    message: TFModelRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<any> {\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<TFModelRequest, TFModelMessage>(\n        message\n    )\n    return res?.data\n}\n\nexport async function trainRequest(\n    message: TFModelTrainRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<TFModelTrainResponse> {\n    // Randi TODO check for missing data e.g. if (!message.trainingData) return undefined\n\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<\n        TFModelTrainRequest,\n        TFModelTrainResponse\n    >(message)\n    return res\n}\n\nexport async function predictRequest(\n    message: TFModelPredictRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<TFModelPredictResponse> {\n    // Randi TODO check for missing data e.g. if (!message.trainingData) return undefined\n\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<\n        TFModelPredictRequest,\n        TFModelPredictResponse\n    >(message)\n    return res\n}\n","import JDEventSource from \"../../../jacdac-ts/src/jdom/eventsource\"\n\nexport default class MBModel extends JDEventSource {\n    // maintain info about the dataset this model was created for\n    inputShape: number[]\n    inputTypes: string[]\n    outputShape: number\n\n    // maintain training info about the model\n    trainingAcc: number\n    weightData: ArrayBuffer\n\n    static async createFromFile(modelObj: {\n        name: string\n        inputShape: number[]\n        inputTypes: string[]\n        labels: string[]\n        modelJSON: string\n        outputShape: number\n        status?: string\n        trainingAcc?: number\n        weights?: number[]\n    }) {\n        const mbModel = new MBModel(\n            modelObj.name,\n            modelObj.labels,\n            modelObj.modelJSON,\n            modelObj.status\n        )\n        mbModel.inputShape = modelObj.inputShape\n        mbModel.inputTypes = modelObj.inputTypes\n        mbModel.outputShape = modelObj.outputShape\n\n        mbModel.trainingAcc = modelObj.trainingAcc || 0\n        mbModel.weightData =\n            new Uint32Array(modelObj.weights).buffer || new ArrayBuffer(0)\n\n        return mbModel\n    }\n\n    constructor(\n        public name: string,\n        public labels?: string[],\n        public modelJSON?: string,\n        public status?: string\n    ) {\n        super()\n\n        this.labels = this.labels || []\n        this.modelJSON = this.modelJSON || \"\"\n        this.status = this.status || \"idle\"\n\n        this.weightData = new ArrayBuffer(0)\n    }\n\n    get summary() {\n        const modelSummary = [\n            \"Training Status: \" + this.status,\n            \"Input Types: \" + this.inputTypes,\n            \"JSON: \" + this.modelJSON, // Randi TODO generate summary of layers\n        ]\n\n        return modelSummary\n    }\n\n    toJSON() {\n        return {\n            name: this.name,\n            inputShape: this.inputShape,\n            inputTypes: this.inputTypes,\n            labels: this.labels,\n            modelJSON: this.modelJSON,\n            outputShape: this.outputShape,\n            status: this.status || \"idle\",\n            trainingAcc: this.trainingAcc || 0,\n            weights: Array.from(new Uint32Array(this.weightData)),\n        }\n    }\n}\n","import {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Button,\n    Grid,\n} from \"@material-ui/core\"\nimport Trend from \"../Trend\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport DeleteIcon from \"@material-ui/icons/Delete\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport React, { useEffect, useMemo, useState } from \"react\"\n\nimport { trainRequest } from \"../blockly/dsl/workers/tf.proxy\"\nimport type {\n    TFModelTrainRequest,\n    TFModelTrainResponse,\n} from \"../../workers/tf/dist/node_modules/tf.worker\"\n\nimport FieldDataSet from \"../FieldDataSet\"\nimport ModelDataSet, { arraysEqual } from \"./ModelDataSet\"\nimport MBModel from \"./MBModel\"\nimport workerProxy from \"../blockly/dsl/workers/proxy\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst NUM_EPOCHS = 250\nconst LOSS_COLOR = \"#8b0000\"\nconst ACC_COLOR = \"#77dd77\"\n\nexport default function TrainModel(props: {\n    reactStyle: any\n    dataset: ModelDataSet\n    model: MBModel\n    onChange: (model) => void\n    onNext: (model) => void\n}) {\n    const classes = props.reactStyle\n    const { dataset, onChange, onNext } = props\n    const [model, setModel] = useState<MBModel>(props.model)\n\n    const [pageReady, setPageReady] = useState(false)\n    useEffect(() => {\n        if (!pageReady) {\n            prepareDataSet(dataset)\n            prepareModel(model)\n            setPageReady(true)\n        }\n    }, [])\n\n    /* For loading page */\n    const prepareDataSet = (set: ModelDataSet) => {\n        // Assumptions: the sampling rate, sampling duration, and sensors used are constant\n        let sampleLength = -1\n        let sampleChannels = -1\n        const xData = []\n        const yData = []\n\n        for (const label of set.labels) {\n            set.getRecordingsWithLabel(label).forEach(table => {\n                if (sampleLength < table.length) {\n                    sampleLength = table.length\n                    sampleChannels = table.width\n                } else if (table.width != sampleChannels) {\n                    setTrainEnabled(false)\n                    alert(\n                        \"All input data must have the same shape: \" +\n                            table.name +\n                            \"\\n Has \" +\n                            table.width +\n                            \" inputs instead of \" +\n                            sampleChannels\n                    )\n                } /* else if (table.length != sampleLength) {\n                    // Randi decide what to do about different sized data\n                } */\n                // For x data, just add each sample as a new row into x_data\n                xData.push(table.data())\n\n                yData.push(set.labels.indexOf(label))\n            })\n        }\n\n        // save tensors with dataset object\n        set.xs = xData\n        set.ys = yData\n        set.length = sampleLength\n        set.width = sampleChannels\n    }\n\n    const prepareModel = (mod: MBModel) => {\n        // If this is a brand new model, get it setup with a standard CNN architecture\n        if (mod.modelJSON == \"\") {\n            mod.modelJSON = \"default\"\n            mod.labels = dataset.labels\n            mod.inputShape = [dataset.length, dataset.width]\n            mod.inputTypes = dataset.inputTypes\n            mod.outputShape = dataset.labels.length\n\n            setModel(mod)\n            handleModelUpdate(mod)\n        } else if (\n            !arraysEqual(mod.labels, dataset.labels) ||\n            !arraysEqual(mod.inputTypes, dataset.inputTypes)\n        ) {\n            // If there is already a model, make sure it matches the current dataset\n            //   if it does not, reset the model\n            const newModel = new MBModel(model.name)\n            prepareModel(newModel)\n        }\n    }\n\n    const prepareTrainingLogs = () => {\n        // Create space to hold training log data\n        const trainingLogDataSet = {\n            name: \"training-logs\",\n            rows: [],\n            headers: [\"loss\", \"acc\"],\n            units: [\"/\", \"/\"],\n            colors: [LOSS_COLOR, ACC_COLOR],\n        }\n        return FieldDataSet.createFromFile(trainingLogDataSet)\n    }\n\n    const deleteTFModel = () => {\n        if (confirm(\"Are you sure you want to delete current model?\")) {\n            const newModel = new MBModel(model.name)\n            prepareModel(newModel)\n            setModel(newModel)\n            handleModelUpdate(newModel)\n        }\n    }\n\n    /* For training model */\n    const [trainEnabled, setTrainEnabled] = useState(dataset.labels.length >= 2)\n    const trainingLogs = useMemo(prepareTrainingLogs, [])\n    useChange(trainingLogs)\n\n    const trainTFModel = async () => {\n        model.status = \"running\"\n        model.inputTypes = dataset.inputTypes\n        handleModelUpdate(model)\n        setTrainEnabled(false)\n\n        // setup worker\n        // subscriber gets messages about training while training is happening\n        const stopWorkerSubscribe = workerProxy(\"tf\").subscribe(\n            \"message\",\n            (msg: any) => {\n                const newData = [msg.data.loss, msg.data.acc]\n                if (trainingLogs) trainingLogs.addData(newData)\n            }\n        )\n\n        const trainMsg = {\n            worker: \"tf\",\n            type: \"train\",\n            data: {\n                xData: dataset.xs,\n                yData: dataset.ys,\n                model: model.toJSON(),\n                modelBlockJSON: \"\",\n            },\n        } as TFModelTrainRequest\n        const trainResult = (await trainRequest(\n            trainMsg\n        )) as TFModelTrainResponse\n\n        // stop subscriber after training\n        stopWorkerSubscribe()\n\n        if (trainResult) {\n            // handle result from training\n            const trainingHistory = trainResult.data.trainingInfo\n            model.weightData = trainResult.data.modelWeights\n            model.modelJSON = trainResult.data.modelJSON\n\n            console.log(\"Randi training result \", trainResult)\n\n            // Randi TODO decide when/how to compule arm code\n            // Compile code for MCU\n            /*const armcompiled = await compileAndTest(model.model, {\n                verbose: true,\n                includeTest: true,\n                float16weights: false,\n                optimize: true,\n            })\n            console.log(armcompiled)*/\n            // use armcompiled.machineCode\n\n            // Update model status\n            model.status = \"completed\"\n            model.trainingAcc = trainingHistory[trainingHistory.length - 1]\n            handleModelUpdate(model)\n\n            setTrainEnabled(true)\n        } else {\n            model.status = \"idle\"\n            handleModelUpdate(model)\n        }\n    }\n\n    /* For page management */\n    const handleNext = () => {\n        onNext(model)\n    }\n    const handleModelUpdate = model => {\n        onChange(model)\n    }\n\n    const [expanded, setExpanded] = React.useState<string | false>(false)\n    const handleExpandedSummaryChange =\n        (panel: string) =>\n        (event: React.ChangeEvent<unknown>, isExpanded: boolean) => {\n            setExpanded(isExpanded ? panel : false)\n        }\n\n    if (!pageReady) return null\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h3>Model Summary</h3>\n                <Accordion\n                    expanded={expanded === \"modelSummary\"}\n                    onChange={handleExpandedSummaryChange(\"modelSummary\")}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <div>\n                            {expanded !== \"modelSummary\" && (\n                                <span>\n                                    Classes: {model.labels.join(\", \")} <br />\n                                    Training Status: {model.status} <br />\n                                </span>\n                            )}\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div>\n                            {dataset.summary.map((line, lineIdx) => {\n                                return (\n                                    <span key={\"dataset-summary-\" + lineIdx}>\n                                        {\" \"}\n                                        {line} <br />\n                                    </span>\n                                )\n                            })}\n                            {model.summary.map((line, lineIdx) => {\n                                return (\n                                    <span key={\"model-summary-\" + lineIdx}>\n                                        {\" \"}\n                                        {line} <br />\n                                    </span>\n                                )\n                            })}\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n                <div className={classes.buttons}>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        aria-label=\"delete existing model\"\n                        title={\n                            \"Press to delete the machine learning model you have now\"\n                        }\n                        onClick={deleteTFModel}\n                        startIcon={<DeleteIcon />}\n                        style={{ marginTop: 16 }}\n                    >\n                        Delete Model\n                    </Button>\n                </div>\n                <div className={classes.buttons}>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        color={\"primary\"}\n                        aria-label=\"start training model\"\n                        title={\n                            trainEnabled\n                                ? \"Press to start training machine learning model\"\n                                : \"You must have at least two classes to train a model. Go back to first tab.\"\n                        }\n                        onClick={trainTFModel}\n                        startIcon={<PlayArrowIcon />}\n                        disabled={!trainEnabled}\n                        style={{ marginTop: 16 }}\n                    >\n                        Train Model\n                    </Button>\n                </div>\n                <br />\n            </Grid>\n            <Grid item>\n                <h3>Training Results</h3>\n                {!!trainingLogs.length && (\n                    <div key=\"liveData\">\n                        <div>\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"small\"\n                                style={{\n                                    color: ACC_COLOR,\n                                }}\n                            />\n                            Accuracy\n                            <FiberManualRecordIcon\n                                className={classes.vmiddle}\n                                fontSize=\"small\"\n                                style={{\n                                    color: LOSS_COLOR,\n                                }}\n                            />\n                            Loss\n                            <Trend\n                                key=\"training-trends\"\n                                height={12}\n                                dataSet={trainingLogs}\n                                horizon={NUM_EPOCHS}\n                                dot={true}\n                                gradient={true}\n                            />\n                        </div>\n                    </div>\n                )}\n                <p>Final Training Accuracy: {model.trainingAcc}</p>\n                <br />\n            </Grid>\n\n            <Grid item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<NavigateNextIcon />}\n                        disabled={model.status !== \"completed\"}\n                        onClick={handleNext}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Grid,\n} from \"@material-ui/core\"\nimport Trend from \"../Trend\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport React, { useContext, useEffect, useState } from \"react\"\n\nimport { BuzzerCmd } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\n\nimport { predictRequest } from \"../blockly/dsl/workers/tf.proxy\"\nimport type {\n    TFModelPredictRequest,\n    TFModelPredictResponse,\n} from \"../../workers/tf/dist/node_modules/tf.worker\"\n\nimport useChange from \"../../jacdac/useChange\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport { REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { throttle } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport ReadingFieldGrid from \"../ReadingFieldGrid\"\nimport FieldDataSet from \"../FieldDataSet\"\nimport { arraysEqual } from \"./ModelDataSet\"\nimport MBModel from \"./MBModel\"\n\nconst LIVE_HORIZON = 100\n\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nexport default function ModelOutput(props: {\n    reactStyle: any\n    chartPalette: string[]\n    model: MBModel\n}) {\n    const classes = props.reactStyle\n    const { chartPalette } = props\n    const [model] = useState<MBModel>(props.model)\n\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const readingRegisters = useChange(bus, bus =>\n        arrayConcatMany(\n            bus.devices().map(device =>\n                device\n                    .services()\n                    .filter(srv => isSensor(srv.specification))\n                    .map(srv => srv.readingRegister)\n            )\n        )\n    )\n\n    const isBuzzer = spec => {\n        return spec.shortId == \"buzzer\" //ledmatrix soundplayer\n    }\n    const buzzerServices = useChange(bus, bus =>\n        arrayConcatMany(\n            bus\n                .devices()\n                .map(device =>\n                    device.services().filter(srv => isBuzzer(srv.specification))\n                )\n        )\n    )\n\n    const [pageReady, setPageReady] = useState(false)\n    useEffect(() => {\n        if (!pageReady) {\n            prepareTestingLogs()\n            setPageReady(true)\n        }\n    }, [])\n\n    /* For loading page */\n    const prepareTestingLogs = () => {\n        // Create space to hold prediction data\n        const livePredictionDataSet = {\n            name: \"live-predictions\",\n            rows: [],\n            headers: model.labels,\n            units: model.labels.map(() => {\n                return \"/\"\n            }),\n            colors: model.labels.map(\n                (label, idx) => chartPalette[idx % chartPalette.length]\n            ),\n        }\n        setLivePredictions({\n            predictionData: FieldDataSet.createFromFile(livePredictionDataSet),\n            topClass: model.labels[0],\n        })\n    }\n\n    /* For predicting with model */\n    const [liveRecording, setLiveRecording] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [livePredictions, setLivePredictions] = useState({\n        predictionData: undefined,\n        topClass: \"\",\n    })\n\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n    const liveRecordingMatchesModel = () => {\n        if (liveRecording) {\n            let matchingInputs = true\n            if (model.inputTypes) {\n                if (!arraysEqual(model.inputTypes, liveRecording.headers)) {\n                    matchingInputs = false\n                }\n            }\n            return matchingInputs\n        }\n        return false\n    }\n    const predictionEnabled =\n        !!recordingRegisters?.length &&\n        liveRecordingMatchesModel() &&\n        model.status == \"completed\"\n\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveRecording(newRecording(registerIdsChecked))\n    }\n\n    const newRecording = (registerIds: string[]) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `liveData`,\n                  chartPalette\n              )\n            : undefined\n\n    const updateLiveData = () => {\n        setLiveRecording(liveRecording)\n        setLiveDataTimestamp(bus.timestamp)\n        if (model.status == \"completed\") updatePrediction()\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (liveRecording) {\n            liveRecording.addRow(values)\n            throttleUpdate()\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg =>\n            reg.subscribe(REPORT_UPDATE, () => {})\n        )\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const updatePrediction = async () => {\n        // Use the model to do inference on a data point the model hasn't seen before:\n        if (!predictionEnabled) return\n\n        let data = liveRecording.data()\n        data = data.slice(data.length - model.inputShape[0])\n        const liveInput = [data]\n\n        let topIdx = 0\n\n        if (data && data.length >= model.inputShape[0]) {\n            const liveOutput = []\n\n            // Get probability values from model\n            const predictMsg = {\n                worker: \"tf\",\n                type: \"predict\",\n                data: {\n                    zData: liveInput,\n                    model: model.toJSON(),\n                },\n            } as TFModelPredictRequest\n            const predResult = (await predictRequest(\n                predictMsg\n            )) as TFModelPredictResponse\n\n            // Save probability for each class in model object\n            const prediction = predResult.data.prediction\n            model.labels.forEach((label, idx) => {\n                liveOutput.push(prediction[idx])\n\n                // update which class has highest confidence\n                if (liveOutput[idx] > liveOutput[topIdx]) topIdx = idx\n            })\n\n            livePredictions.predictionData.addData(liveOutput)\n            livePredictions.topClass = model.labels[topIdx]\n        }\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => addRow(), 100) // Randi TODO decide if sampling interval should be constant in dataset? dataset.samplingInterval)\n        const stopStreaming = startStreamingRegisters()\n\n        return () => {\n            clearInterval(interval)\n            stopStreaming()\n        }\n    }, [registerIdsChecked])\n\n    /* For tying prediction to action */\n    useEffect(() => {\n        let interval\n        if (predictionEnabled) {\n            executePrediction()\n            interval = setInterval(() => executePrediction(), 1300)\n        }\n\n        return () => clearInterval(interval)\n    }, [predictionEnabled])\n\n    const playNote = note => {\n        const noteFreqs = {\n            C: 261,\n            E: 329,\n            F: 349,\n            G: 391,\n            A: 440,\n            B: 493,\n            C2: 523,\n            D2: 587,\n        }\n        if (buzzerServices.length) {\n            buzzerServices.forEach(service => {\n                const period = 1000000 / noteFreqs[note]\n                const duty = period / 2\n                const duration = 400\n                const data = jdpack<[number, number, number]>(\"u16 u16 u16\", [\n                    period,\n                    duty,\n                    duration,\n                ])\n                service.sendCmdAsync(BuzzerCmd.PlayTone, data)\n            })\n        }\n    }\n    const executePrediction = () => {\n        if (predictionEnabled && livePredictions.predictionData.rows) {\n            switch (livePredictions.topClass) {\n                case \"one\":\n                    playNote(\"C\")\n                    playNote(\"E\")\n                    playNote(\"G\")\n                    break\n                case \"four\":\n                    playNote(\"F\")\n                    playNote(\"A\")\n                    playNote(\"C2\")\n                    break\n                case \"five\":\n                    playNote(\"G\")\n                    playNote(\"B\")\n                    playNote(\"D2\")\n                    break\n                default:\n                    break\n            }\n        }\n    }\n\n    const [expanded, setExpanded] = React.useState<string | false>(false)\n    const handleExpandedSummaryChange =\n        (panel: string) =>\n        (event: React.ChangeEvent<unknown>, isExpanded: boolean) => {\n            setExpanded(isExpanded ? panel : false)\n        }\n\n    if (!pageReady) return null\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h3>Live Testing</h3>\n                <div key=\"predict\">\n                    <span>\n                        {\" \"}\n                        Top Class:{\" \"}\n                        {model.status == \"completed\"\n                            ? livePredictions.topClass\n                            : \"--\"}{\" \"}\n                    </span>\n                    <br />\n                </div>\n                <div key=\"liveData\">\n                    {liveRecording && (\n                        <div>\n                            {model.labels.map(label => {\n                                return (\n                                    <span key={\"prediction-key-\" + label}>\n                                        <FiberManualRecordIcon\n                                            className={classes.vmiddle}\n                                            fontSize=\"small\"\n                                            style={{\n                                                color: livePredictions.predictionData.colorOf(\n                                                    undefined,\n                                                    label\n                                                ),\n                                            }}\n                                        />\n                                        {label}\n                                    </span>\n                                )\n                            })}\n                            <Trend\n                                key=\"live-data-predictions\"\n                                height={12}\n                                dataSet={livePredictions.predictionData}\n                                horizon={LIVE_HORIZON}\n                                dot={true}\n                                gradient={true}\n                            />\n                            <Trend\n                                key=\"live-data-trends\"\n                                height={12}\n                                dataSet={liveRecording}\n                                horizon={LIVE_HORIZON}\n                                dot={true}\n                                gradient={true}\n                            />\n                        </div>\n                    )}\n                </div>\n                <Accordion\n                    expanded={expanded === \"chooseSensors\"}\n                    onChange={handleExpandedSummaryChange(\"chooseSensors\")}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <div>\n                            <h4>Select input sensors</h4>\n                            {!predictionEnabled && (\n                                <p>\n                                    Sensors should match:{\" \"}\n                                    {model.inputTypes.join(\", \")}{\" \"}\n                                </p>\n                            )}\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div key=\"sensors\">\n                            {!readingRegisters.length && (\n                                <span>Waiting for sensors...</span>\n                            )}\n                            {!!readingRegisters.length && (\n                                <ReadingFieldGrid\n                                    readingRegisters={readingRegisters}\n                                    registerIdsChecked={registerIdsChecked}\n                                    recording={false}\n                                    liveDataSet={liveRecording}\n                                    handleRegisterCheck={handleRegisterCheck}\n                                />\n                            )}\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { createStyles, Box, Tabs, Tab } from \"@material-ui/core\"\nimport TabPanel from \"../ui/TabPanel\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport useChartPalette from \"../useChartPalette\"\n\nimport CollectData from \"./CollectData\"\nimport TrainModel from \"./TrainModel\"\nimport ModelOutput from \"./ModelOutput\"\n\nimport ModelDataSet from \"./ModelDataSet\"\nimport MBModel from \"./MBModel\"\n\n//Dashboard.tsx\n\nconst MODEL_EDITOR = \"model_editor\" // create prefix for model editor page\nconst MODEL_NAME = MODEL_EDITOR + \"-model\"\nexport const MODEL_EDITOR_STORAGE_KEY = \"model-editor-data-json\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginBottom: theme.spacing(1),\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        field: {\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1.5),\n            display: \"inline-flex\",\n            width: theme.spacing(35),\n        },\n        segment: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        },\n        row: {\n            marginBottom: theme.spacing(0.5),\n        },\n        buttons: {\n            display: \"inline-flex\",\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n        },\n        trend: {\n            width: theme.spacing(10),\n        },\n        vmiddle: {\n            verticalAlign: \"middle\",\n        },\n    })\n)\n\nexport default function ModelPlayground() {\n    const classes = useStyles()\n    const chartPalette = useChartPalette()\n\n    const [dataset, setDataSet] = useState<ModelDataSet>(new ModelDataSet())\n    const [tfModel, setTFModel] = useState<MBModel>(new MBModel(MODEL_NAME))\n    const [tab, setTab] = useState<number>(0)\n\n    const [pageReady, setPageReady] = useState(false)\n    useEffect(() => {\n        if (!pageReady) {\n            const storedDataJSON = localStorage.getItem(\n                MODEL_EDITOR_STORAGE_KEY\n            )\n            if (storedDataJSON) {\n                const modelEditorData = JSON.parse(storedDataJSON)\n                if (modelEditorData[\"dataset\"])\n                    setDataSet(\n                        ModelDataSet.createFromFile(modelEditorData[\"dataset\"])\n                    )\n                if (modelEditorData[\"tab\"]) setTab(modelEditorData[\"tab\"])\n                if (modelEditorData[\"model\"]) {\n                    MBModel.createFromFile(modelEditorData[\"model\"]).then(\n                        storedModel => {\n                            setTFModel(storedModel)\n                            setPageReady(true)\n                        }\n                    )\n                } else {\n                    setPageReady(true)\n                }\n            } else setPageReady(true)\n        }\n    }, [])\n\n    /* Data and interface management */\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newTab: number\n    ) => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and model data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"tab\"] = newTab\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: undefined,\n                tab: newTab,\n            }\n        }\n\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setTab(newTab)\n    }\n\n    const handleDataChange = newDataSet => {\n        console.log(\"Randi updated data from tab 0: \", newDataSet)\n\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous model and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"dataset\"] = newDataSet\n        } else {\n            modelEditorData = {\n                dataset: newDataSet,\n                model: undefined,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setDataSet(newDataSet)\n    }\n\n    const handleModelChange = async newModel => {\n        console.log(\"Randi updated model from tab 1: \", newModel)\n\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"model\"] = newModel\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: newModel,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        console.log(\"Randi storing new model JSON: \", newModel)\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n\n        setTFModel(newModel)\n    }\n\n    const nextTab = () => {\n        if (tab == 0 && dataset.labels.length >= 2) {\n            setTab(1)\n        } else if (tab == 1 && tfModel.status == \"completed\") {\n            setTab(2)\n        }\n    }\n\n    if (!pageReady) return null\n    return (\n        <Box mb={2}>\n            <h1>ML Model Creator</h1>\n            <p>\n                This page allows you to collect data from Jacdac sensors and use\n                them to train a neural network model that does classification.\n            </p>\n\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                <Tab label={`1 - Collect Data`} />\n                <Tab\n                    label={`2 - Train Model`}\n                    disabled={dataset.labels.length < 2}\n                />\n                <Tab\n                    label={`3 - Test Model`}\n                    disabled={\n                        dataset.labels.length < 2 ||\n                        tfModel.status !== \"completed\"\n                    }\n                />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <CollectData\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    dataset={dataset}\n                    onChange={handleDataChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <TrainModel\n                    reactStyle={classes}\n                    dataset={dataset}\n                    model={tfModel}\n                    onChange={handleModelChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <ModelOutput\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    model={tfModel}\n                />\n            </TabPanel>\n        </Box>\n    )\n}\n","import React from \"react\"\nimport ModelEditor from \"../../components/model-editor/ModelEditor\"\n\nexport default function Page() {\n    return <ModelEditor />\n}\n"],"names":["import","MESSAGE","JDEventSource","assert","createCsvWorker","createDataWorker","createTFWorker","createVMWorker","WorkerProxy","worker","workerid","pendings","addEventListener","handleMessage","bind","event","data","message","id","pending","resolve","emit","postMessage","Math","random","Promise","reject","_workers","loaders","csv","tf","vm","workerProxy","FormControlLabel","Switch","React","SwitchWithLabel","props","label","rest","CHANGE","FieldDataSet","DataSet","inputTypes","recordings","registerIds","totalRecordings","arraysEqual","a","b","length","i","ModelDataSet","createFromFile","datasetJSONObj","set","addRecordingsFromFile","labels","getRecordingsWithLabel","addRecording","recording","push","headerList","indexOf","console","log","Object","keys","forEach","removeRecording","recordingLabel","name","slice","splice","j","countTotalRecordings","total","toCSV","recordingCountHeader","recordingData","rows","recordData","join","modelInfo","classes","useEffect","useContext","useState","Grid","TextField","InputAdornment","Button","Autocomplete","PlayArrowIcon","StopIcon","DownloadIcon","DeleteAllIcon","NavigateNextIcon","IconButtonWithTooltip","ServiceManagerContext","JacdacContext","useChange","arrayConcatMany","isSensor","REPORT_UPDATE","throttle","Trend","ClassDataSetGrid","ReadingFieldGrid","LIVE_HORIZON","createDataSet","bus","registers","live","palette","fields","map","reg","colors","f","maxRows","CollectData","chartPalette","onChange","onNext","dataset","setDataSet","reactStyle","fileStorage","readingRegisters","devices","device","services","filter","srv","specification","readingRegister","registerIdsChecked","setRegisterIdsChecked","setTotalRecordings","recordingName","setRecordingName","isRecording","setIsRecording","setRecordingLength","liveRecording","setLiveRecording","undefined","setLiveDataTimestamp","newRecording","currentClassLabel","numRecordings","handleRegisterCheck","sort","handleRecordingNameChange","target","value","trim","setCurrentClassLabel","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","datasetMatch","setDataSetMatch","recordingRegisters","samplingIntervalDelayi","parseInt","samplingCount","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","error","startEnabled","handleSamplingIntervalChange","handleSamplingDurationChange","handleLabelChange","newLabel","handleDownloadDataSet","saveText","labelOptions","handleDeleteDataSet","confirm","newDataSet","handleDataSetUpdate","resetDataCollection","stopRecording","startRecording","startStreamingRegisters","streamers","subscribe","streamer","toggleRecording","handleDeleteRecording","updateLiveData","timestamp","throttleUpdate","addRow","values","sendSetIntAsync","interval","setInterval","stopStreaming","clearInterval","matchingInputs","headers","handleNext","classLabel","row","field","params","newValue","startAdornment","buttons","display","justifyContent","postModelRequest","res","trainRequest","predictRequest","MBModel","modelObj","mbModel","modelJSON","status","inputShape","outputShape","trainingAcc","weightData","Uint32Array","weights","buffer","ArrayBuffer","toJSON","Array","from","modelSummary","Accordion","AccordionDetails","AccordionSummary","DeleteIcon","FiberManualRecordIcon","ExpandMoreIcon","useMemo","NUM_EPOCHS","LOSS_COLOR","ACC_COLOR","TrainModel","model","setModel","pageReady","setPageReady","prepareDataSet","prepareModel","sampleLength","sampleChannels","xData","yData","table","width","setTrainEnabled","alert","xs","ys","mod","handleModelUpdate","newModel","prepareTrainingLogs","trainingLogDataSet","units","deleteTFModel","trainEnabled","trainingLogs","trainTFModel","stopWorkerSubscribe","msg","newData","loss","acc","addData","trainMsg","type","modelBlockJSON","trainResult","trainingHistory","trainingInfo","modelWeights","expanded","setExpanded","handleExpandedSummaryChange","panel","isExpanded","summary","line","lineIdx","marginTop","vmiddle","color","BuzzerCmd","jdpack","ModelOutput","isBuzzer","spec","shortId","buzzerServices","prepareTestingLogs","livePredictionDataSet","idx","setLivePredictions","predictionData","topClass","livePredictions","liveRecordingMatchesModel","predictionEnabled","updatePrediction","liveInput","topIdx","liveOutput","predictMsg","zData","predResult","prediction","executePrediction","playNote","note","noteFreqs","C","E","F","G","A","B","C2","D2","service","period","duty","duration","sendCmdAsync","PlayTone","colorOf","createStyles","Box","Tabs","Tab","TabPanel","makeStyles","useChartPalette","MODEL_EDITOR","MODEL_NAME","MODEL_EDITOR_STORAGE_KEY","useStyles","theme","root","marginBottom","spacing","grow","flexGrow","marginRight","segment","trend","verticalAlign","ModelPlayground","tfModel","setTFModel","tab","setTab","storedDataJSON","localStorage","getItem","modelEditorData","JSON","parse","then","storedModel","handleTabChange","newTab","setItem","stringify","handleDataChange","handleModelChange","nextTab","ModelEditor","Page"],"sourceRoot":""}