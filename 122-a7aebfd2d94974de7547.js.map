{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRoleManager.tsx"],"names":["DashboardRoleManager","props","service","expanded","useContext","JacdacContext","bus","autoBindRegister","register","RoleManagerReg","AutoBind","autoBind","useRegisterBoolValue","handleChecked","ev","checked","sendSetBoolAsync","switchId","useId","labelId","roleManager","useChange","_","roles","undefined","map","role","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEe,SAASA,oBAAT,CAA8BC,KAA9B,EAA4D;AAAA,MAC/DC,OAD+D,GACzCD,KADyC,CAC/DC,OAD+D;AAAA,MACtDC,QADsD,GACzCF,KADyC,CACtDE,QADsD;;AAAA,oBAEvDC,wDAAU,CAAqBC,gEAArB,CAF6C;AAAA,MAE/DC,GAF+D,eAE/DA,GAF+D;;AAGvE,MAAMC,gBAAgB,GAAGL,OAAO,CAACM,QAAR,CAAiBC,qFAAc,CAACC,QAAhC,CAAzB;AACA,MAAMC,QAAQ,GAAGC,6FAAoB,CAACL,gBAAD,EAAmBN,KAAnB,CAArC;;AACA,MAAMY,aAAa;AAAA,wMAAG,iBAAOC,EAAP,EAAWC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZR,gBAAgB,CAACS,gBAAjB,CAAkCD,OAAlC,EAA2C,IAA3C,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbF,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAGA,MAAMI,QAAQ,GAAGC,uEAAK,EAAtB;AACA,MAAMC,OAAO,GAAGD,uEAAK,EAArB;AACA,MAAME,WAAW,GAAGC,0EAAS,CAACf,GAAD,EAAM,UAAAgB,CAAC;AAAA,WAAIA,CAAC,CAACF,WAAN;AAAA,GAAP,CAA7B;AACA,MAAMG,KAAK,GAAGF,0EAAS,CAACD,WAAD,EAAc,UAAAE,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,KAAP;AAAA,GAAf,CAAvB;AAEA,MAAIZ,QAAQ,KAAKa,SAAjB,EAA4B,oBAAO,2DAAC,mEAAD,OAAP;AAE5B,sBACI,wHACKD,KAAK,iBACF,2DAAC,iEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,2DAAC,iEAAD;AAAM,SAAK,EAAE;AAAb,KACKA,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,wBACX,2DAAC,4EAAD;AAAc,SAAG,EAAEA,IAAI,CAACC,IAAxB;AAA8B,UAAI,EAAED;AAApC,MADW;AAAA,GAAd,CADL,CADJ,CAFR,EAUKvB,QAAQ,iBACL,2DAAC,iEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,2DAAC,iEAAD;AACI,MAAE,EAAEc,QADR;AAEI,WAAO,EAAEN,QAFb;AAGI,YAAQ,EAAEE,aAHd;AAII,uBAAiBM;AAJrB,IADJ,eAOI;AAAO,MAAE,EAAEA;AAAX,yBAPJ,CAXR,CADJ;AAwBH,C","file":"122-a7aebfd2d94974de7547.js","sourcesContent":["import { Grid, List, Switch } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { RoleManagerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useId } from \"react-use-id-hook\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport useChange from \"../../jacdac/useChange\"\nimport { RoleListItem } from \"../services/RoleListItem\"\n\nexport default function DashboardRoleManager(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const autoBindRegister = service.register(RoleManagerReg.AutoBind)\n    const autoBind = useRegisterBoolValue(autoBindRegister, props)\n    const handleChecked = async (ev, checked: boolean) => {\n        await autoBindRegister.sendSetBoolAsync(checked, true)\n    }\n    const switchId = useId()\n    const labelId = useId()\n    const roleManager = useChange(bus, _ => _.roleManager)\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    if (autoBind === undefined) return <LoadingProgress />\n\n    return (\n        <>\n            {roles && (\n                <Grid item xs={12}>\n                    <List dense={true}>\n                        {roles.map(role => (\n                            <RoleListItem key={role.name} role={role} />\n                        ))}\n                    </List>\n                </Grid>\n            )}\n            {expanded && (\n                <Grid item xs={12}>\n                    <Switch\n                        id={switchId}\n                        checked={autoBind}\n                        onChange={handleChecked}\n                        aria-labelledby={labelId}\n                    />\n                    <label id={labelId}>auto assign roles</label>\n                </Grid>\n            )}\n        </>\n    )\n}\n"],"sourceRoot":""}