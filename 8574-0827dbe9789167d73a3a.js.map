{"version":3,"file":"8574-0827dbe9789167d73a3a.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,IAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,IAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;ACnBf;AACA;AACA;AACA;AAEA,IAAMM,aAAa,sDAAnB;AAEe,SAASC,iBAAT,CAA2BC,KAA3B,EAGZ;AACC,MAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,MAAM;AAAEG,IAAAA,EAAE,GAAG,EAAP;AAAWC,IAAAA,IAAI,GAAGN;AAAlB,MAAoCI,MAA1C;AACA,MAAM;AAAEG,IAAAA;AAAF,MAAeZ,iDAAU,CAACE,0DAAD,CAA/B;AACA,MAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,+CAAQ,CAAC,KAAD,CAA1C;;AAEA,MAAMc,WAAW;AAAA,6GAAG,aAAY;AAC5B,UAAMC,OAAO,yTAQnBN,EARmB,OAAb;AAUA,UAAMO,SAAS,kDAGFT,KAAK,IAAI,MAHP,yGAQrBG,IARqB,obAAf;;AA0BA,UAAI;AACAG,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,CAAC,SAASC,KAAK,CACjB,uDADiB,EAEjB;AACIC,UAAAA,MAAM,EAAE,MADZ;AAEIC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAELC,YAAAA,MAAM,EAAE;AAFH,WAFb;AAMIC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,YAAAA,KAAK,EAAE;AACH,8BAAgB;AACZC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,YAAY,EAAE;AACV,iCAAa,QADH;AAEVC,oBAAAA,SAAS,EAAE;AAFD;AADT;AADG,eADb;AASH,0BAAY;AACRF,gBAAAA,OAAO,EAAEX;AADD,eATT;AAYH,4BAAc;AACVW,gBAAAA,OAAO,EAAEV;AADC;AAZX;AADU,WAAf;AANV,SAFiB,CAArB;AA4BA,YAAMa,IAAI,SAASZ,CAAC,CAACa,IAAF,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,GAAG,iCAA+BJ,IAAI,CAACK,UAApC,oBAAT;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBJ,GAAvB;AACH,OAlCD,CAkCE,OAAOK,KAAP,EAAc;AACZ3B,QAAAA,QAAQ,CAAC2B,KAAD,CAAR;AACH,OApCD,SAoCU;AACNzB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KA5EgB;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA8EA,sBACI,iDAAC,oEAAD;AACI,WAAO,EAAEA,WADb;AAEI,YAAQ,EAAEF,SAFd;AAGI,SAAK,EAAC;AAHV,kBAKI,iDAAC,qEAAD,OALJ,CADJ;AASH","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Edit.js","webpack://jacdac-docs/./src/components/ui/CodeSandboxButton.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { useContext, useState } from \"react\"\nimport AppContext from \"../AppContext\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\n\nconst HTML_TEMPLATE = `<p>Open Javascript console to see messages...</p>`\n\nexport default function CodeSandboxButton(props: {\n    title?: string\n    source: { js: string; html: string }\n}) {\n    const { title, source } = props\n    const { js = \"\", html = HTML_TEMPLATE } = source\n    const { setError } = useContext(AppContext)\n    const [importing, setImporting] = useState(false)\n\n    const handleClick = async () => {\n        const indexJs = `\nimport \"milligram\";\nimport { createUSBBus, CHANGE } from \"jacdac-ts\";\nconst btn = document.getElementById(\"connectbtn\");\nconst bus = createUSBBus();\nbus.on(CHANGE, () => { btn.innerText = bus.connected ? \"connected ðŸŽ‰\" : \"connect\" })\nbtn.onclick = async () => bus.connect();\n\n${js}\n`\n        const indexHtml = `\n<html>\n    <body>\n        <h1>Jacdac ${title || \"demo\"}</h1>\n        <div>\n        <button id=\"connectbtn\">connect</button>\n        </div>    \n\n${html}\n\n    <footer>\n        <small>\n        Need to learn more about Jacdac?\n        <a target=\"_blank\" href=\"https://aka.ms/jacdac\">Read the docs</a>\n        or\n        <a\n            target=\"_blank\"\n            href=\"https://github.com/microsoft/jacdac/discussions\"\n            >start a discussion</a\n        >.\n        </small>\n    </footer>\n    <script src=\"./index.js\" />\n    </body>\n</html>    \n        `\n        try {\n            setImporting(true)\n            const x = await fetch(\n                \"https://codesandbox.io/api/v1/sandboxes/define?json=1\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                    body: JSON.stringify({\n                        files: {\n                            \"package.json\": {\n                                content: {\n                                    dependencies: {\n                                        \"jacdac-ts\": \"latest\",\n                                        milligram: \"latest\",\n                                    },\n                                },\n                            },\n                            \"index.js\": {\n                                content: indexJs,\n                            },\n                            \"index.html\": {\n                                content: indexHtml,\n                            },\n                        },\n                    }),\n                }\n            )\n            const data = await x.json()\n            console.log(data)\n            const url = `https://codesandbox.io/s/${data.sandbox_id}?file=/index.js`\n            window.location.href = url\n        } catch (error) {\n            setError(error)\n        } finally {\n            setImporting(false)\n        }\n    }\n\n    return (\n        <IconButtonWithTooltip\n            onClick={handleClick}\n            disabled={importing}\n            title=\"Try in CodeSandbox\"\n        >\n            <EditIcon />\n        </IconButtonWithTooltip>\n    )\n}\n"],"names":["React","useContext","useState","AppContext","EditIcon","IconButtonWithTooltip","HTML_TEMPLATE","CodeSandboxButton","props","title","source","js","html","setError","importing","setImporting","handleClick","indexJs","indexHtml","x","fetch","method","headers","Accept","body","JSON","stringify","files","content","dependencies","milligram","data","json","console","log","url","sandbox_id","window","location","href","error"],"sourceRoot":""}