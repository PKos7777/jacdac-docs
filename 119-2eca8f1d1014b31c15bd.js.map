{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/ArrowDropDown.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/ArrowRight.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/SignalCellularConnectedNoInternet0Bar.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","webpack://jacdac-docs/./node_modules/@material-ui/lab/esm/TreeView/TreeView.js","webpack://jacdac-docs/./node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js","webpack://jacdac-docs/./src/components/ui/StyledTreeView.tsx","webpack://jacdac-docs/./src/components/tools/JDomTreeView.tsx","webpack://jacdac-docs/./src/jacdac/useEventCount.ts","webpack://jacdac-docs/./src/jacdac/useEventRaised.ts"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useTreeItemStyles","root","color","palette","text","secondary","backgroundColor","action","hover","grey","content","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","paddingLeft","expanded","selected","background","default","label","labelRoot","display","alignItems","padding","labelIcon","marginRight","labelText","flexGrow","StyledTreeItem","kind","icon","labelInfo","bgColor","checked","setChecked","actions","nodeId","alert","other","useState","checkedState","setCheckedState","handleChecked","ev","c","stopPropagation","DeviceTreeItem","device","checkboxes","serviceFilter","id","useDeviceName","physical","d","lost","useEventRaised","LOST","FOUND","dev","services","mixins","filter","srv","useMediaQueries","mobile","showActions","dropped","qos","serviceNames","ellipseJoin","service","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_SETTINGS","undefined","r","join","indexOf","AnnounceFlagsTreeItem","announceFlags","ControlAnnounceFlags","f","toString","ServiceTreeItem","registerFilter","eventFilter","specification","isMixin","showSpecificationAction","open","packets","registers","isRegister","info","register","identifier","reg","sort","l","localeCompare","events","isEvent","event","useRegisterUnpackedValue","BaseReg","instanceName","readingRegister","reading","useRegisterHumanValue","AppContext","setDrawerType","handleSpecClick","console","log","DrawerType","SERVICE_MIXIN_NODE_NAME","SERVICE_NODE_NAME","shortId","mixin","RegisterTreeItem","lastGetAttempts","attempts","setAttempts","optional","failedGet","humanValue","visible","handleClick","sendGetAsync","useEffect","subscribe","GET_ATTEMPT","REGISTER_NODE_NAME","EventTreeItem","count","useEventCount","EVENT_NODE_NAME","margins","JDomTreeView","defaultExpanded","defaultSelected","defaultChecked","onChecked","onToggle","onSelect","dashboard","setExpanded","setSelected","useDevices","handleToggle","nodeIds","handleSelect","v","i","splice","push","clsx","width","setCount","CHANGE","eventName","node","query","version","setVersion","value"],"mappings":"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ClC;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,wBAAwB,cAAc;AACtC;AACA;;AAEA,yBAAyB,cAAc;AACvC;AACA;;AAEA,gBAAgB,YAAY,GAAG;AAC/B,qBAAqB,YAAY,GAAG;AACpC,qBAAqB,YAAY;;AAEjC,uBAAuB,gCAAa;AACpC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,gCAAc;AACtC;AACA;;AAEA,wBAAwB,gCAAa;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,gCAAc;AACtC;AACA;AACA;AACA;AACA;;;AAGA,mBAAmB,iBAAiB;AACpC;AACA,GAAG;AACH,mBAAmB,iBAAiB;AACpC;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;AACA,KAAK;;;AAGL,gEAAgE;;AAEhE;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yBAAyB,YAAY;AACrC,8BAA8B,YAAY;AAC1C,8BAA8B,YAAY;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B,8BAAQ,GAAG;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,8BAAQ,GAAG;AAC5C;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;AACH,4BAA4B,iBAAiB;AAC7C,iBAAiB,8BAAQ,GAAG;;AAE5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,8BAA8B,iBAAiB;AAC/C;AACA;;AAEA,iBAAiB,8BAAQ,GAAG;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,iCAAiC,8BAAQ,GAAG;AAC5C;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA,qBAAqB,YAAY;;AAEjC,yBAAyB,cAAc;AACvC;AACA;;AAEA,EAAE,eAAe;AACjB;AACA,IAAI,sBAAsB;AAC1B,wBAAwB,oBAAoB;AAC5C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,sBAAsB,mBAAmB,CAAC,iCAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,mBAAmB,OAAO,8BAAQ;AACpD;AACA;AACA,eAAe,yBAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,sDAAe,6BAAU;AACzB;AACA,CAAC,WAAW,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1oB8C;AACgC;AAC1F;;AAE+B;AACP;AAC8B;AACJ;AACoB;AACjB;AACK;AACnD,IAAI,eAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA,yBAAyB,iCAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB;;AAEhB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,uBAAQ;AACvE;AACA,cAAc,0CAAwB;;AAEtC,0BAA0B,gBAAgB,CAAC,wBAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC5B,mBAAmB,YAAY;AAC/B,kBAAkB,6BAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2BAAQ;;AAEtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qFAAqF;;AAErF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,eAAe;AACjB;AACA;AACA,MAAM,sBAAsB;AAC5B,0BAA0B,oBAAoB;AAC9C;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,sBAAsB,mBAAmB,OAAO,8BAAQ;AACxD,eAAe,yBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uBAAuB,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,GAAG,eAAe,mBAAmB;AACrC;AACA;AACA,GAAG,sBAAsB,mBAAmB,CAAC,yBAAU;AACvD;AACA;AACA;AACA,GAAG,oCAAoC,mBAAmB,sBAAsB,8BAAQ;AACxF;AACA;AACA;A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","file":"119-2eca8f1d1014b31c15bd.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 17l5-5-5-5v10z\"\n}), 'ArrowRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"path\", {\n  fillOpacity: \".3\",\n  d: \"M22 8V2L2 22h16V8z\"\n}), /*#__PURE__*/_react.default.createElement(\"path\", {\n  d: \"M20 22h2v-2h-2v2zm0-12v8h2v-8h-2z\"\n})), 'SignalCellularConnectedNoInternet0Bar');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","import React, { useState, ChangeEvent } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\n// tslint:disable-next-line: no-submodule-imports\nimport TreeItem, { TreeItemProps } from \"@material-ui/lab/TreeItem\"\n// tslint:disable-next-line: no-submodule-imports\nimport Typography from \"@material-ui/core/Typography\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport KindIcon from \"../KindIcon\"\nimport { Switch } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SignalCellularConnectedNoInternet0BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet0Bar\"\n\ndeclare module \"csstype\" {\n    interface Properties {\n        \"--tree-view-color\"?: string\n        \"--tree-view-bg-color\"?: string\n    }\n}\n\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            color: theme.palette.text.secondary,\n            \"&:hover > $content\": {\n                backgroundColor: theme.palette.action.hover,\n            },\n            \"&:focus > $content, &$selected > $content\": {\n                backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n                color: \"var(--tree-view-color)\",\n            },\n            \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\":\n                {\n                    backgroundColor: \"transparent\",\n                },\n        },\n        content: {\n            color: theme.palette.text.secondary,\n            fontWeight: theme.typography.fontWeightMedium,\n            \"$expanded > &\": {\n                fontWeight: theme.typography.fontWeightRegular,\n            },\n        },\n        group: {\n            marginLeft: 0,\n            \"& $content\": {\n                paddingLeft: theme.spacing(1),\n            },\n        },\n        expanded: {},\n        selected: {\n            color: theme.palette.background.default,\n        },\n        label: {\n            fontWeight: \"inherit\",\n            color: \"inherit\",\n        },\n        labelRoot: {\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: theme.spacing(0.5, 0),\n        },\n        labelIcon: {\n            marginRight: theme.spacing(0.5),\n        },\n        labelText: {\n            fontWeight: \"inherit\",\n            flexGrow: 1,\n        },\n    })\n)\n\nexport function StyledTreeItem(\n    props: TreeItemProps & {\n        nodeId: string\n        bgColor?: string\n        color?: string\n        kind?: string\n        icon?: JSX.Element\n        alert?: string\n        labelInfo?: string\n        labelText: string\n        checked?: boolean\n        setChecked?: (state: boolean) => void\n        actions?: JSX.Element | JSX.Element[]\n    }\n) {\n    const classes = useTreeItemStyles()\n    const {\n        labelText,\n        kind,\n        icon,\n        labelInfo,\n        color,\n        bgColor,\n        checked,\n        setChecked,\n        actions,\n        nodeId,\n        alert,\n        ...other\n    } = props\n    const [checkedState, setCheckedState] = useState(checked)\n\n    const handleChecked = (ev: ChangeEvent<HTMLInputElement>, c: boolean) => {\n        ev.stopPropagation()\n        setChecked(c)\n        setCheckedState(c)\n    }\n    return (\n        <TreeItem\n            nodeId={nodeId}\n            label={\n                <div className={classes.labelRoot}>\n                    {setChecked && (\n                        <Switch\n                            checked={checkedState}\n                            color=\"primary\"\n                            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                            onChange={handleChecked}\n                        />\n                    )}\n                    {kind && (\n                        <KindIcon kind={kind} className={classes.labelIcon} />\n                    )}\n                    {icon}\n                    <Typography variant=\"body2\" className={classes.labelText}>\n                        {labelText}\n                    </Typography>\n                    {alert && <SignalCellularConnectedNoInternet0BarIcon />}\n                    <Typography variant=\"caption\" color=\"inherit\">\n                        {alert && (\n                            <Typography variant=\"caption\" component=\"span\">\n                                {alert}\n                            </Typography>\n                        )}\n                        {labelInfo}\n                        {actions}\n                    </Typography>\n                </div>\n            }\n            style={{\n                \"--tree-view-color\": color,\n                \"--tree-view-bg-color\": bgColor,\n            }}\n            classes={{\n                root: classes.root,\n                content: classes.content,\n                expanded: classes.expanded,\n                selected: classes.selected,\n                group: classes.group,\n                label: classes.label,\n            }}\n            {...other}\n        />\n    )\n}\n\nexport interface StyledTreeViewItemProps {\n    key: string\n    expanded: string[]\n    selected: string[]\n    checked?: string[]\n    setChecked?: (id: string, value: boolean) => void\n}\n\nexport interface StyledTreeViewProps {\n    defaultChecked?: string[]\n    defaultExpanded?: string[]\n    defaultSelected?: string[]\n    onToggle?: (expanded: string[]) => void\n    onSelect?: (selected: string[]) => void\n    onChecked?: (checked: string[]) => void\n}\n","import React, { useContext, useState, useEffect } from \"react\"\nimport clsx from \"clsx\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport TreeView from \"@material-ui/lab/TreeView\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport useChange from \"../../jacdac/useChange\"\nimport { isRegister, isEvent } from \"../../../jacdac-ts/src/jdom/spec\"\nimport {\n    useRegisterHumanValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useEventCount from \"../../jacdac/useEventCount\"\nimport DeviceActions from \"../DeviceActions\"\nimport {\n    LOST,\n    FOUND,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    GET_ATTEMPT,\n    BaseReg,\n    SERVICE_NODE_NAME,\n    REGISTER_NODE_NAME,\n    EVENT_NODE_NAME,\n    SERVICE_MIXIN_NODE_NAME,\n    ControlAnnounceFlags,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport { ellipseJoin } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport {\n    StyledTreeItem,\n    StyledTreeViewItemProps,\n    StyledTreeViewProps,\n} from \"../ui/StyledTreeView\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport AppContext, { DrawerType } from \"../AppContext\"\nimport useDevices from \"../hooks/useDevices\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nfunction DeviceTreeItem(\n    props: { device: JDDevice } & StyledTreeViewItemProps & JDomTreeViewProps\n) {\n    const { device, checked, setChecked, checkboxes, serviceFilter, ...other } =\n        props\n    const id = device.id\n    const name = useDeviceName(device, true)\n    const physical = useChange(device, d => d.physical)\n    const kind = physical ? \"device\" : \"virtualdevice\"\n    const lost = useEventRaised([LOST, FOUND], device, dev => !!dev?.lost)\n    const services = useChange(device, () =>\n        device\n            .services({ mixins: false })\n            .filter(srv => !serviceFilter || serviceFilter(srv))\n    )\n    const { mobile } = useMediaQueries()\n    const showActions = !mobile\n    const dropped = useChange(device.qos, qos => qos.dropped)\n\n    const serviceNames = ellipseJoin(\n        services\n            .filter(\n                service =>\n                    service.serviceClass !== SRV_CONTROL &&\n                    service.serviceClass !== SRV_LOGGER &&\n                    service.serviceClass !== SRV_ROLE_MANAGER &&\n                    service.serviceClass !== SRV_SETTINGS\n            )\n            .map(service => service.name),\n        18\n    )\n\n    const alert = lost\n        ? `lost device...`\n        : dropped > 2\n        ? `${dropped} pkt lost`\n        : undefined\n    const labelInfo = [dropped > 1 && `${dropped} lost`, serviceNames]\n        .filter(r => !!r)\n        .join(\", \")\n\n    const handleChecked = c => setChecked(id, c)\n    return (\n        <StyledTreeItem\n            nodeId={id}\n            labelText={name}\n            labelInfo={labelInfo}\n            alert={alert}\n            kind={kind}\n            checked={checked?.indexOf(id) > -1}\n            setChecked={\n                checkboxes &&\n                checkboxes.indexOf(\"device\") > -1 &&\n                setChecked &&\n                handleChecked\n            }\n            actions={\n                showActions && (\n                    <DeviceActions device={device} showReset={true} />\n                )\n            }\n        >\n            <AnnounceFlagsTreeItem device={device} />\n            {services?.map(service => (\n                <ServiceTreeItem\n                    key={service.id}\n                    service={service}\n                    checked={checked}\n                    setChecked={setChecked}\n                    checkboxes={checkboxes}\n                    {...other}\n                />\n            ))}\n        </StyledTreeItem>\n    )\n}\n\nfunction AnnounceFlagsTreeItem(props: { device: JDDevice }) {\n    const { device } = props\n    const { announceFlags, id } = device\n\n    const text = [\n        announceFlags & ControlAnnounceFlags.IsClient && \"client\",\n        announceFlags & ControlAnnounceFlags.SupportsACK && \"acks\",\n        announceFlags & ControlAnnounceFlags.SupportsBroadcast && \"broadcast\",\n        announceFlags & ControlAnnounceFlags.SupportsFrames && \"frames\",\n        (announceFlags & ControlAnnounceFlags.StatusLightRgbFade) ===\n            ControlAnnounceFlags.StatusLightMono && \"mono status LED\",\n        (announceFlags & ControlAnnounceFlags.StatusLightRgbFade) ===\n            ControlAnnounceFlags.StatusLightRgbNoFade &&\n            \"rgb no fade status LED\",\n        (announceFlags & ControlAnnounceFlags.StatusLightRgbFade) ===\n            ControlAnnounceFlags.StatusLightRgbFade && \"rgb fade status LED\",\n    ]\n        .filter(f => !!f)\n        .join(\", \")\n    return (\n        <StyledTreeItem\n            nodeId={`${id}:flags`}\n            labelText={text}\n            labelInfo={`0x${announceFlags.toString(16)}`}\n        ></StyledTreeItem>\n    )\n}\n\nfunction ServiceTreeItem(\n    props: { service: JDService } & StyledTreeViewItemProps & JDomTreeViewProps\n) {\n    const {\n        service,\n        checked,\n        setChecked,\n        checkboxes,\n        registerFilter,\n        eventFilter,\n        ...other\n    } = props\n    const { specification, mixins, isMixin } = service\n    const showSpecificationAction = false\n    const id = service.id\n    const open = checked?.indexOf(id) > -1\n    const packets = specification?.packets\n    const registers = packets\n        ?.filter(isRegister)\n        .map(info => service.register(info.identifier))\n        .filter(reg => !registerFilter || registerFilter(reg))\n        .sort((l, r) => l.name.localeCompare(r.name))\n    const events = packets\n        ?.filter(isEvent)\n        .map(info => service.event(info.identifier))\n        .filter(ev => !eventFilter || eventFilter(ev))\n    const [instanceName] = useRegisterUnpackedValue<[string]>(\n        service.register(BaseReg.InstanceName)\n    )\n    const readingRegister = service.readingRegister\n    const reading = useRegisterHumanValue(readingRegister)\n\n    const name = service.name + (instanceName ? ` ${instanceName}` : \"\")\n    const { mobile } = useMediaQueries()\n    const { setDrawerType } = useContext(AppContext)\n\n    const handleSpecClick = () => {\n        console.log(`spec click`, { mobile })\n        if (mobile) setDrawerType(DrawerType.None)\n    }\n    const handleChecked = c => setChecked(id, c)\n    return (\n        <StyledTreeItem\n            nodeId={id}\n            labelText={name}\n            labelInfo={reading}\n            kind={isMixin ? SERVICE_MIXIN_NODE_NAME : SERVICE_NODE_NAME}\n            checked={open}\n            setChecked={\n                checkboxes?.indexOf(\"service\") > -1 &&\n                setChecked &&\n                handleChecked\n            }\n            actions={\n                showSpecificationAction ? (\n                    <Link\n                        color=\"inherit\"\n                        to={`/services/${specification.shortId}/`}\n                        aria-label={\"Open specification\"}\n                        onClick={handleSpecClick}\n                    >\n                        <LaunchIcon fontSize={\"small\"} />\n                    </Link>\n                ) : undefined\n            }\n        >\n            {registers?.map(register => (\n                <RegisterTreeItem\n                    key={register.id}\n                    register={register}\n                    checked={checked}\n                    setChecked={setChecked}\n                    checkboxes={checkboxes}\n                    {...other}\n                />\n            ))}\n            {events?.map(event => (\n                <EventTreeItem\n                    key={event.id}\n                    event={event}\n                    checked={checked}\n                    setChecked={setChecked}\n                    checkboxes={checkboxes}\n                    {...other}\n                />\n            ))}\n            {mixins?.map(mixin => (\n                <ServiceTreeItem\n                    key={mixin.id}\n                    service={mixin}\n                    checked={checked}\n                    setChecked={setChecked}\n                    checkboxes={checkboxes}\n                    {...other}\n                />\n            ))}\n        </StyledTreeItem>\n    )\n}\n\nfunction RegisterTreeItem(\n    props: { register: JDRegister } & StyledTreeViewItemProps &\n        JDomTreeViewProps\n) {\n    const { register, checked, setChecked, checkboxes } = props\n    const { specification, id } = register\n    const [attempts, setAttempts] = useState(register.lastGetAttempts)\n    const optional = !!specification?.optional\n    const failedGet = attempts > 2\n    const labelText = `${specification?.name || register.id}${\n        optional ? \"?\" : \"\"\n    }`\n    const humanValue = useRegisterHumanValue(register, { visible: true })\n    const handleClick = () => register.sendGetAsync()\n\n    useEffect(\n        () =>\n            register?.subscribe(GET_ATTEMPT, () => {\n                setAttempts(register.lastGetAttempts)\n            }),\n        [register]\n    )\n\n    const handleChecked = c => {\n        setChecked(id, c)\n    }\n\n    // if register is optional and no data, hide\n    if (optional && failedGet && humanValue === undefined) return <></>\n\n    return (\n        <StyledTreeItem\n            nodeId={id}\n            labelText={labelText}\n            labelInfo={humanValue || (attempts > 0 && `#${attempts}`) || \"\"}\n            kind={specification?.kind || REGISTER_NODE_NAME}\n            alert={failedGet && !optional && humanValue === undefined && `???`}\n            checked={checked?.indexOf(id) > -1}\n            onClick={handleClick}\n            setChecked={\n                checkboxes?.indexOf(\"register\") > -1 &&\n                setChecked &&\n                handleChecked\n            }\n        />\n    )\n}\n\nfunction EventTreeItem(\n    props: { event: JDEvent } & StyledTreeViewItemProps & JDomTreeViewProps\n) {\n    const { event, checked, setChecked, checkboxes } = props\n    const { specification, id } = event\n    const count = useEventCount(event)\n\n    const handleChecked = c => {\n        setChecked(id, c)\n    }\n    return (\n        <StyledTreeItem\n            nodeId={id}\n            labelText={specification?.name || event.id}\n            labelInfo={(count || \"\") + \"\"}\n            kind={EVENT_NODE_NAME}\n            checked={checked?.indexOf(id) > -1}\n            setChecked={\n                checkboxes?.indexOf(\"event\") > -1 && setChecked && handleChecked\n            }\n        />\n    )\n}\n\nexport type CheckedMap = { [id: string]: boolean }\n\nexport interface JDomTreeViewProps extends StyledTreeViewProps {\n    // don't render links to specification\n    dashboard?: boolean\n    checkboxes?: (\"device\" | \"service\" | \"register\" | \"event\")[]\n    deviceFilter?: (devices: JDDevice) => boolean\n    serviceFilter?: (services: JDService) => boolean\n    registerFilter?: (register: JDRegister) => boolean\n    eventFilter?: (event: JDEvent) => boolean\n}\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        margins: {\n            marginLeft: theme.spacing(0.5),\n            marginRight: theme.spacing(0.5),\n        },\n    })\n)\n\nexport default function JDomTreeView(props: JDomTreeViewProps) {\n    const {\n        defaultExpanded,\n        defaultSelected,\n        defaultChecked,\n        onChecked,\n        onToggle,\n        onSelect,\n        checkboxes,\n        dashboard,\n        ...other\n    } = props\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState<string[]>(defaultExpanded || [])\n    const [selected, setSelected] = useState<string[]>(defaultSelected || [])\n    const [checked, setChecked] = useState<string[]>(defaultChecked || [])\n    const devices = useDevices({ ignoreSelf: true })\n\n    const handleToggle = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setExpanded(nodeIds)\n        if (onToggle) onToggle(nodeIds)\n    }\n\n    const handleSelect = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setSelected(nodeIds)\n        if (onSelect) onSelect(nodeIds)\n    }\n    const handleChecked = (id: string, v: boolean) => {\n        const i = checked.indexOf(id)\n        if (!v && i > -1) checked.splice(i, 1)\n        else if (v && i < 0) checked.push(id)\n        setChecked(checked)\n        if (onChecked) onChecked(checked)\n    }\n\n    return (\n        <>\n            <ConnectAlert />\n            <TreeView\n                className={clsx(classes.root, classes.margins)}\n                defaultCollapseIcon={<ArrowDropDownIcon />}\n                defaultExpandIcon={<ArrowRightIcon />}\n                defaultEndIcon={<div style={{ width: 12 }} />}\n                expanded={expanded}\n                selected={selected}\n                onNodeToggle={handleToggle}\n                onNodeSelect={handleSelect}\n            >\n                {devices?.map(device => (\n                    <DeviceTreeItem\n                        key={device.id}\n                        device={device}\n                        checked={checked}\n                        setChecked={handleChecked}\n                        checkboxes={checkboxes}\n                        expanded={expanded}\n                        selected={selected}\n                        dashboard={dashboard}\n                        {...other}\n                    />\n                ))}\n            </TreeView>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function useEventCount(event: JDEvent) {\n    const [count, setCount] = useState(event?.count || 0)\n    useEffect(() => event?.subscribe(CHANGE, () => {\n        setCount(event.count)\n    }), [event])\n\n    return count;\n}","import { useState, useEffect } from \"react\";\nimport { JDEventSource } from \"../../jacdac-ts/src/jdom/eventsource\";\n\nexport default function useEventRaised<TEventSource extends JDEventSource, TValue>(eventName: string | string[], node: TEventSource, query?: (n: TEventSource) => TValue): TValue {\n    const [version, setVersion] = useState(0)\n    const value = query ? query(node) : undefined\n\n    useEffect(() => node?.subscribe(eventName, () => {\n        setVersion(version + 1)\n    }), [node, version])\n\n    return value;\n}\n"],"sourceRoot":""}