{"version":3,"sources":["webpack:///./src/components/DeviceDTDLSnippet.tsx","webpack:///./src/components/DeviceSpecificationSource.tsx","webpack:///./src/components/DeviceSpecification.tsx","webpack:///./src/templates/device.mdx","webpack:///./src/components/Page.tsx"],"names":["DeviceDTDLSnippet","props","dev","inlineServices","dtdl","useMemo","JSON","stringify","deviceSpecificationToDTDL","name","useStyles","makeStyles","theme","createStyles","root","flexGrow","backgroundColor","palette","background","paper","marginBottom","spacing","pre","margin","padding","whiteSpec","DeviceSpecificationSource","deviceSpecification","showSpecification","showDTDL","showJSON","classes","useState","tab","setTab","spec","handleTabChange","event","newValue","index","filter","n","map","i","a11yProps","DeviceSpecification","device","showSource","gridBreakpoints","useGridBreakpoints","link","identifierToUrlPath","escapeDeviceIdentifier","company","imageDeviceOf","description","repo","firmwares","length","firmware","toString","services","sc","serviceSpecificationFromClassIdentifier","shortId","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","deviceSpecificationFromIdentifier","pageContext","node","id","isMDXComponent","Page","children"],"mappings":"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","file":"component---src-templates-device-mdx-16fed296d97192a072e6.js","sourcesContent":["import { Link } from \"gatsby-theme-material-ui\";\nimport React, { useMemo } from \"react\";\nimport { deviceSpecificationToDTDL } from \"../../jacdac-ts/src/azure-iot/dtdl\";\nimport Snippet from \"./ui/Snippet\";\n\nexport function DeviceDTDLSnippet(props: { dev: jdspec.DeviceSpec, inlineServices?: boolean }) {\n    const { dev, inlineServices } = props;\n\n    const dtdl = useMemo<string>(\n        () => JSON.stringify(deviceSpecificationToDTDL(dev, { inlineServices }), null, 2),\n        [dev]);\n\n    return <Snippet value={dtdl} mode=\"json\" download={`${dev.name}.json`}\n        caption={<><Link to=\"/dtmi\">DTDL</Link> is an open source modelling language developed by Microsoft Azure.</>} />\n}","import React, {  useState } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport Tabs from '@material-ui/core/Tabs';\n// tslint:disable-next-line: no-submodule-imports\nimport Tab from '@material-ui/core/Tab';\nimport { Paper, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport TabPanel, { a11yProps } from './ui/TabPanel';\nimport Snippet from './ui/Snippet';\nimport DeviceSpecification from './DeviceSpecification';\nimport { DeviceDTDLSnippet } from './DeviceDTDLSnippet';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        marginBottom: theme.spacing(1)\n    },\n    pre: {\n        margin: \"0\",\n        padding: \"0\",\n        backgroundColor: \"transparent\",\n        whiteSpec: \"pre-wrap\"\n    }\n}));\n\nexport default function DeviceSpecificationSource(props: {\n    deviceSpecification?: jdspec.DeviceSpec,\n    showSpecification?: boolean,\n    showDTDL?: boolean,\n    showJSON?: boolean\n}) {\n    const { deviceSpecification, showSpecification, showDTDL, showJSON } = props;\n    const classes = useStyles();\n    const [tab, setTab] = useState(0);\n    const spec = deviceSpecification\n\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        setTab(newValue);\n    };\n\n    let index = 0;\n    return (\n        <div className={classes.root}>\n            <Paper square>\n                <Tabs value={tab} onChange={handleTabChange} aria-label=\"View specification formats\">\n                    {[\n                        showSpecification && \"Specification\",\n                        showJSON && \"JSON\",\n                        showDTDL && \"Device Twin\",\n                    ].filter(n => !!n)\n                        .map((n, i) => <Tab key={n} label={n} {...a11yProps(i)} />)}\n                </Tabs>\n                {showSpecification && <TabPanel key=\"spec\" value={tab} index={index++}>\n                    <DeviceSpecification device={spec} />\n                </TabPanel>}\n                {showJSON && <TabPanel key={`convjson`} value={tab} index={index++}>\n                    <Snippet value={JSON.stringify(spec, null, 2)} mode={\"json\"} />\n                </TabPanel>}\n                {showDTDL && <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                    <DeviceDTDLSnippet dev={deviceSpecification} />\n                </TabPanel>}\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\"\nimport IDChip from \"./IDChip\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { identifierToUrlPath, imageDeviceOf, serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecificationCard from \"./ServiceSpecificationCard\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\nimport Markdown from \"./ui/Markdown\";\nimport DeviceSpecificationSource from \"./DeviceSpecificationSource\";\nimport FirmwareCard from \"./firmware/FirmwareCard\"\nimport { escapeDeviceIdentifier } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\n\nexport default function DeviceSpecification(props: { device: jdspec.DeviceSpec, showSource?: string }) {\n    const { device, showSource } = props;\n    const gridBreakpoints = useGridBreakpoints();\n\n    return <>\n        <h2 key=\"title\">\n            <Link to={device.link}>{device.name}</Link>\n        </h2>\n        <Typography variant=\"subtitle1\">by <Link to={`/devices/${identifierToUrlPath(escapeDeviceIdentifier(device.company))}`}>{device.company}</Link></Typography>\n        {<img alt=\"image of the device\" src={imageDeviceOf(device)} />}\n        {device.description && <Markdown source={device.description} />}\n        {device.repo && <FirmwareCard slug={device.repo} />}\n        {!!device.firmwares.length && <><h3>Firmware identifiers</h3>\n            <ul>\n                {device.firmwares.map(firmware => <li key={firmware}><IDChip id={firmware} filter={`fw:0x${firmware.toString(16)}`} /></li>)}\n            </ul></>}\n        <h3>Services</h3>\n        <Grid container spacing={2}>\n            {device.services.map(sc => serviceSpecificationFromClassIdentifier(sc))\n                .map(spec => <Grid item key={spec.shortId} {...gridBreakpoints}>\n                    <ServiceSpecificationCard specification={spec} />\n                </Grid>)}\n        </Grid>\n        {showSource && <>\n            <h2>Specification</h2>\n            <DeviceSpecificationSource deviceSpecification={device}\n                showJSON={true} showDTDL={true} />\n        </>}\n    </>\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { deviceSpecificationFromIdentifier } from \"../../jacdac-ts/src/jdom/spec\";\nimport DeviceSpecification from \"../components/DeviceSpecification\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <DeviceSpecification device={deviceSpecificationFromIdentifier(props.pageContext.node.id)} mdxType=\"DeviceSpecification\" />\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See Also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/reference/device-definition/\"\n        }}>{`device definition`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/tools/device-registration/\"\n        }}>{`device registration`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\";\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page;"],"sourceRoot":""}