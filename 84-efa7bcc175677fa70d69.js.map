{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRealTimeClock.tsx"],"names":["DashboardRealTimeClock","props","service","useRegisterUnpackedValue","register","RealTimeClockReg","LocalTime","year","month","dayOfMonth","day","hour","min","seconds","undefined","t","Date","date","toLocaleDateString","time","toLocaleTimeString"],"mappings":";;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEe,SAASA,sBAAT,CAAgCC,KAAhC,EAA8D;AAAA,MACjEC,OADiE,GACrDD,KADqD,CACjEC,OADiE;;AAAA,8BAInEC,iGAAwB,CAA2BD,OAAO,CAACE,QAAR,CAAiBC,uFAAgB,CAACC,SAAlC,CAA3B,CAJ2C;AAAA,MAGlEC,IAHkE;AAAA,MAG5DC,KAH4D;AAAA,MAGrDC,UAHqD;AAAA,MAGzCC,GAHyC;AAAA,MAGpCC,IAHoC;AAAA,MAG9BC,GAH8B;AAAA,MAGzBC,OAHyB;;AAKzE,MAAIN,IAAI,KAAKO,SAAb,EACI,oBAAO,2DAAC,mEAAD,OAAP;AACJ,MAAMC,CAAC,GAAG,IAAIC,IAAJ,CAAST,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0BC,UAA1B,EAAsCE,IAAtC,EAA4CC,GAA5C,EAAiDC,OAAjD,CAAV;AACA,MAAMI,IAAI,GAAGF,CAAC,CAACG,kBAAF,EAAb;AACA,MAAMC,IAAI,GAAGJ,CAAC,CAACK,kBAAF,EAAb;AACA,sBAAO,qIACH,2DAAC,iEAAD;AAAY,SAAK,EAAC,QAAlB;AAA2B,YAAQ,EAAE,CAArC;AAAwC,QAAI,EAAC,OAA7C;AAAqD,kBAAYH,IAAjE;AAAuE,WAAO,EAAC;AAA/E,KAAwFA,IAAxF,CADG,eAEH,2DAAC,iEAAD;AAAY,SAAK,EAAC,QAAlB;AAA2B,YAAQ,EAAE,CAArC;AAAwC,QAAI,EAAC,OAA7C;AAAqD,kBAAYE,IAAjE;AAAuE,WAAO,EAAC;AAA/E,KAAwFA,IAAxF,CAFG,CAAP;AAIH,C","file":"84-efa7bcc175677fa70d69.js","sourcesContent":["\nimport React, { } from \"react\";\nimport { RealTimeClockReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport { RealTimeClockReadingType } from \"../../../jacdac-ts/src/hosts/realtimeclockservicehost\";\nimport { Typography } from \"@material-ui/core\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardRealTimeClock(props: DashboardServiceProps) {\n    const { service } = props;\n\n    const [year, month, dayOfMonth, day, hour, min, seconds]\n        = useRegisterUnpackedValue<RealTimeClockReadingType>(service.register(RealTimeClockReg.LocalTime));\n    if (year === undefined)\n        return <LoadingProgress />;\n    const t = new Date(year, month - 1, dayOfMonth, hour, min, seconds);\n    const date = t.toLocaleDateString()\n    const time = t.toLocaleTimeString()\n    return <>\n        <Typography align=\"center\" tabIndex={0} role=\"timer\" aria-label={date} variant=\"body2\">{date}</Typography>\n        <Typography align=\"center\" tabIndex={0} role=\"timer\" aria-label={time} variant=\"body1\">{time}</Typography>\n    </>\n}"],"sourceRoot":""}