{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./src/components/dashboard/DashboardAzureIoTHub.tsx"],"names":["DashboardAzureIoTHub","props","service","connectId","useId","hubNameRegister","useRegister","AzureIotHubReg","deviceIdRegister","connectionStatusRegister","useRegisterUnpackedValue","hubName","deviceId","connectionStatus","changeEvent","useEvent","AzureIotHubEvent","useChange","refresh","connected","server","useServiceServer","messages","_","handleConnect","sendCmdAsync","AzureIotHubCmd","handleSendMessage","msg","timestamp","device","bus","jdpack","JSON","stringify","map","m","body","join"],"mappings":"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","file":"2164-fd16ff2ef47d7ffa6cec.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import React from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport AzureIoTHubServer from \"../../../jacdac-ts/src/servers/azureiothubserver\"\nimport { Grid, Switch, Typography } from \"@material-ui/core\"\nimport useRegister from \"../hooks/useRegister\"\nimport {\n    AzureIotHubCmd,\n    AzureIotHubEvent,\n    AzureIotHubReg,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { useId } from \"react-use-id-hook\"\nimport useEvent from \"../hooks/useEvent\"\nimport useChange from \"../../jacdac/useChange\"\nimport CmdButton from \"../CmdButton\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\n\nexport default function DashboardAzureIoTHub(props: DashboardServiceProps) {\n    const { service } = props\n    const connectId = useId()\n\n    const hubNameRegister = useRegister(service, AzureIotHubReg.HubName)\n    const deviceIdRegister = useRegister(service, AzureIotHubReg.DeviceId)\n    const connectionStatusRegister = useRegister(\n        service,\n        AzureIotHubReg.ConnectionStatus\n    )\n\n    const [hubName] = useRegisterUnpackedValue<[string]>(hubNameRegister, props)\n    const [deviceId] = useRegisterUnpackedValue<[string]>(\n        deviceIdRegister,\n        props\n    )\n    const [connectionStatus] = useRegisterUnpackedValue<[string]>(\n        connectionStatusRegister,\n        props\n    )\n    const changeEvent = useEvent(service, AzureIotHubEvent.Change)\n    useChange(changeEvent, () => hubNameRegister?.refresh())\n\n    const connected = connectionStatus === \"ok\"\n    const server = useServiceServer<AzureIoTHubServer>(service)\n    const messages = useChange(server, _ => _?.messages || [])\n\n    const handleConnect = async () => {\n        await service.sendCmdAsync(\n            connected ? AzureIotHubCmd.Disconnect : AzureIotHubCmd.Connect\n        )\n    }\n\n    const handleSendMessage = async () => {\n        const msg = {\n            timestamp: service.device.bus.timestamp,\n        }\n        await service.sendCmdAsync(\n            AzureIotHubCmd.SendMessage,\n            jdpack<[string]>(\"s\", [JSON.stringify(msg)])\n        )\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <Typography component=\"span\" variant=\"body1\">\n                    hub: {hubName}, device: {deviceId}\n                </Typography>\n                <Switch\n                    checked={connected}\n                    aria-labelledby={connectId}\n                    onClick={handleConnect}\n                />\n                <label id={connectId}>\n                    {connected ? \"connected\" : \"disconnected\"}\n                </label>\n                <CmdButton\n                    title=\"Send timestamp message\"\n                    icon={<AddIcon />}\n                    onClick={handleSendMessage}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <pre>{messages?.map(m => m.body).join(\"\\n\")}</pre>\n            </Grid>\n        </Grid>\n    )\n}\n"],"sourceRoot":""}