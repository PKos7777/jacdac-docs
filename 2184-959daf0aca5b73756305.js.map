{"version":3,"file":"2184-959daf0aca5b73756305.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACgB;AACjB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,kCAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAK;AACpB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,IAAI;AACJ;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6B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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/JSONSchemaForm.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport React from \"react\"\nimport type { JSONSchema4 } from \"json-schema\"\nimport { Grid, TextField } from \"@material-ui/core\"\nimport SwitchWithLabel from \"./SwitchWithLabel\"\nimport { useId } from \"react-use-id-hook\"\nimport GridHeader from \"./GridHeader\"\n\nfunction SchemaForm(props: {\n    schema: JSONSchema4\n    required?: boolean\n    value: object\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setValue: (newValue: any) => void\n}) {\n    const { schema, required, value, setValue } = props\n    const { type, title, description } = schema\n    const id = useId()\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value || \"\")\n    }\n\n    const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const v = parseFloat(event.target.value)\n        if (!isNaN(v)) setValue(v)\n    }\n    const handleIntegerChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setValue(v)\n    }\n    const handleCheckedChange = (\n        event: React.ChangeEvent<HTMLInputElement>,\n        checked: boolean\n    ) => {\n        setValue(checked)\n    }\n\n    switch (type) {\n        case \"number\":\n            return (\n                <Grid item xs={12}>\n                    <TextField\n                        id={id}\n                        label={title}\n                        required={required}\n                        helperText={description}\n                        variant=\"outlined\"\n                        type=\"number\"\n                        value={value}\n                        fullWidth={true}\n                        onChange={handleNumberChange}\n                    />\n                </Grid>\n            )\n        case \"integer\":\n            return (\n                <Grid item xs={12}>\n                    <TextField\n                        id={id}\n                        label={title}\n                        required={required}\n                        helperText={description}\n                        variant=\"outlined\"\n                        type=\"number\"\n                        value={value}\n                        fullWidth={true}\n                        onChange={handleIntegerChange}\n                    />\n                </Grid>\n            )\n        case \"string\":\n            return (\n                <Grid item xs={12}>\n                    <TextField\n                        id={id}\n                        label={title}\n                        required={required}\n                        helperText={description}\n                        variant=\"outlined\"\n                        type=\"text\"\n                        value={value}\n                        fullWidth={true}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            )\n        case \"boolean\":\n            return (\n                <Grid item xs={12}>\n                    <SwitchWithLabel\n                        id={id}\n                        required={required}\n                        label={title}\n                        title={description}\n                        checked={!!value}\n                        onChange={handleCheckedChange}\n                    />\n                </Grid>\n            )\n        case \"object\": {\n            const { properties, required } = schema\n            return (\n                <>\n                    {title && <GridHeader title={title} />}\n                    <PropertiesForm\n                        properties={properties}\n                        required={required}\n                        value={value}\n                        setValue={setValue}\n                    />\n                </>\n            )\n        }\n    }\n\n    return null\n}\n\nfunction PropertiesForm(props: {\n    properties: { [index: string]: JSONSchema4 }\n    required: false | string[]\n    value: object\n    setValue: (newValue: object) => void\n}) {\n    const { properties, required, value, setValue } = props\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleSetValue = (key: string, v: any) => (newValue: any) => {\n        setValue({ ...(v || {}), [key]: newValue })\n    }\n\n    return (\n        <>\n            {Object.entries(properties).map(([key, schema]) => (\n                <SchemaForm\n                    key={key}\n                    schema={schema}\n                    required={required && required.indexOf(key) > -1}\n                    value={value?.[key]}\n                    setValue={handleSetValue(key, value)}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default function JSONSchemaForm(props: {\n    schema: JSONSchema4\n    value: object\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setValue: (newValue: any) => void\n    className?: string\n}) {\n    const { schema, value, setValue, className } = props\n\n    return (\n        <Grid container spacing={1} className={className}>\n            <SchemaForm schema={schema} value={value} setValue={setValue} />\n        </Grid>\n    )\n}\n"],"names":["Box","Chip","createStyles","Grid","makeStyles","Typography","React","clsx","useStyles","theme","hr","background","palette","text","disabled","marginBottom","start","width","spacing","GridHeader","props","title","count","variant","action","classes","undefined","TextField","SwitchWithLabel","useId","SchemaForm","schema","required","value","setValue","type","description","id","handleChange","event","target","handleNumberChange","v","parseFloat","isNaN","handleIntegerChange","parseInt","handleCheckedChange","checked","properties","PropertiesForm","handleSetValue","key","newValue","Object","entries","map","indexOf","JSONSchemaForm","className"],"sourceRoot":""}