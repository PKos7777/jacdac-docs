{"version":3,"sources":["webpack:///./src/components/tools/LedAnimationDesigner.tsx","webpack:///./src/pages/tools/led-animation-designer.tsx","webpack:///./src/components/ui/Snippet.tsx"],"names":["LedAnimationFrameDesigner","lazy","LedAnimationDesigner","useState","repetitions","setRepetitions","frames","setFrames","animation","useLedAnimationStyle","cssProperty","className","helmetStyle","theme","useTheme","handleFrame","i","frame","newFrames","slice","handleRemove","splice","handleClone","newFrame","clone","handleAdd","length","handleRepetitionChange","event","v","parseInt","target","value","isNaN","palette","background","default","map","undefined","JSON","stringify","Page","Snippet","props","mode","download","url","caption"],"mappings":"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","file":"component---src-pages-tools-led-animation-designer-tsx-b3dd3bac991262d91f5b.js","sourcesContent":["import React, { lazy, useState } from \"react\"\nimport useLedAnimationStyle from \"../hooks/useLedAnimationStyle\"\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    TextField,\n    useTheme,\n} from \"@material-ui/core\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport Helmet from \"react-helmet\"\nimport Snippet from \"../ui/Snippet\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport {\n    LedAnimationData,\n    LedAnimationFrame,\n} from \"../../../jacdac-ts/src/hosts/ledservicehost\"\nimport { clone } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport Suspense from \"../ui/Suspense\"\nconst LedAnimationFrameDesigner = lazy(() => import(\"./LedAnimationFrameDesigner\"))\n\nexport default function LedAnimationDesigner() {\n    const [repetitions, setRepetitions] = useState(0)\n    const [frames, setFrames] = useState<LedAnimationFrame[]>([\n        [0, 255, 0, 128],\n        [0, 255, 100, 128],\n    ])\n    const animation: LedAnimationData = [repetitions, frames]\n    const { className, helmetStyle } = useLedAnimationStyle(animation, {\n        cssProperty: \"fill\",\n    })\n    const theme = useTheme()\n    const handleFrame = (i: number) => (frame: LedAnimationFrame) => {\n        const newFrames = frames.slice(0)\n        newFrames[i] = frame\n        setFrames(newFrames)\n    }\n    const handleRemove = (i: number) => () => {\n        const newFrames = frames.slice(0)\n        newFrames.splice(i, 1)\n        setFrames(newFrames)\n    }\n    const handleClone = (i: number) => () => {\n        const frame = frames[i]\n        const newFrame = clone(frame)\n        const newFrames = [...frames.slice(0, i), newFrame, ...frames.slice(i)]\n        setFrames(newFrames)\n    }\n    const handleAdd = () =>\n        setFrames([\n            ...frames,\n            frames[frames.length - 1].slice(0) as LedAnimationFrame,\n        ])\n    const handleRepetitionChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const v = parseInt(event.target.value)\n        if (!isNaN(v)) setRepetitions(v)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                {helmetStyle && (\n                    <Helmet>\n                        <style>{helmetStyle}</style>\n                    </Helmet>\n                )}\n                <Card>\n                    <CardHeader title=\"preview\" />\n                    <CardContent>\n                        <SvgWidget size={\"14vh\"} width={64} height={64}>\n                            <circle\n                                cx={32}\n                                cy={32}\n                                r={30}\n                                className={className}\n                                stroke={theme.palette.background.default}\n                                strokeWidth={1}\n                            />\n                        </SvgWidget>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item>\n                <Card>\n                    <CardHeader title=\"repetition\" />\n                    <CardContent>\n                        <TextField\n                            aria-label=\"number of repetitions\"\n                            value={repetitions}\n                            type=\"number\"\n                            onChange={handleRepetitionChange}\n                        />\n                    </CardContent>\n                </Card>\n            </Grid>\n            {frames.map((frame, i) => (\n                <Grid item xs={12} sm={6} lg={4} key={i}>\n                    <Suspense>\n                        <LedAnimationFrameDesigner\n                            key={i}\n                            frame={frame}\n                            setFrame={handleFrame(i)}\n                            onClone={handleClone(i)}\n                            onRemove={\n                                frames.length > 1 ? handleRemove(i) : undefined\n                            }\n                        />\n                    </Suspense>\n                </Grid>\n            ))}\n            <Grid item>\n                <Card>\n                    <CardContent>\n                        <IconButtonWithTooltip\n                            title=\"add animation frame\"\n                            onClick={handleAdd}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader title=\"code\" />\n                    <CardContent>\n                        <Snippet\n                            value={() => JSON.stringify(animation, null, 2)}\n                            mode={\"json\"}\n                        />\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport LedAnimationDesigner from \"../../components/tools/LedAnimationDesigner\"\n\nexport default function Page() {\n    return <>\n        <h1>LED Animation Designer</h1>\n        <LedAnimationDesigner />\n    </>\n}","import { IconButton, Typography } from \"@material-ui/core\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React, { useContext } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string),\n    mode?: string,\n    download?: string;\n    url?: string;\n    caption?: string | JSX.Element | JSX.Element[];\n}) {\n    const { value, mode, download, url, caption } = props\n    const v: string = typeof value === 'function' ? value() : value;\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return <>\n        <CodeBlock className={className} downloadName={download} downloadText={download && v} url={url}>{v}</CodeBlock>\n        {caption && <Typography variant=\"caption\">{caption}</Typography>}\n    </>\n}"],"sourceRoot":""}