{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRainGauge.tsx"],"names":["TILT","DashbaordRainGauge","props","service","precipitationRegister","useRegister","RainGaugeReg","useRegisterUnpackedValue","precipitation","clipId","useId","server","useServiceServer","tiltCount","useChange","h","level","tiltAngle","undefined","color","useWidgetTheme","background","active","textPrimary","a","useThrottledValue","l","clickeable","handleClick","event","preventDefault","stopPropagation","rain","refresh","buttonProps","useSvgButtonProps","Math","round","w","bw","bh","bx","by","sw","ty","fs","userSelect","roundWithPrecision"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAG,EAAb;AAEe,SAASC,kBAAT,CAA4BC,KAA5B,EAA0D;AAAA,MAC7DC,OAD6D,GACjDD,KADiD,CAC7DC,OAD6D;AAGrE,MAAMC,qBAAqB,GAAGC,qEAAW,CACrCF,OADqC,EAErCG,8GAFqC,CAAzC;;AAHqE,8BAO7CC,4FAAwB,CAC5CH,qBAD4C,EAE5CF,KAF4C,CAPqB;AAAA,MAO9DM,aAP8D;;AAWrE,MAAMC,MAAM,GAAGC,kEAAK,EAApB;AACA,MAAMC,MAAM,GAAGC,yEAAgB,CAAkBT,OAAlB,CAA/B;AACA,MAAMU,SAAS,GAAGC,mEAAS,CAACH,MAAD,EAAS,UAAAI,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEF,SAAP;AAAA,GAAV,CAA3B;AACA,MAAMG,KAAK,GAAGF,mEAAS,CAACH,MAAD,EAAS,UAAAI,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,KAAP;AAAA,GAAV,CAAvB;AACA,MAAMC,SAAS,GACXJ,SAAS,KAAKK,SAAd,GAA2BL,SAAS,GAAG,CAAZ,GAAgB,CAACb,IAAjB,GAAwBA,IAAnD,GAA2D,CAD/D;AAEA,MAAMmB,KAAK,GAAGR,MAAM,GAAG,WAAH,GAAiB,SAArC;;AAjBqE,wBAkBzBS,yEAAc,CAACD,KAAD,CAlBW;AAAA,MAkB7DE,UAlB6D,mBAkB7DA,UAlB6D;AAAA,MAkBjDC,MAlBiD,mBAkBjDA,MAlBiD;AAAA,MAkBzCC,WAlByC,mBAkBzCA,WAlByC;;AAmBrE,MAAMC,CAAC,GAAGC,0EAAiB,CAACR,SAAD,EAAY,EAAZ,CAA3B;AACA,MAAMS,CAAC,GAAGD,0EAAiB,CAACT,KAAK,KAAKE,SAAV,GAAsBF,KAAtB,GAA8B,GAA/B,EAAoC,CAApC,CAA3B;AACA,MAAMW,UAAU,GAAG,CAAC,CAAChB,MAArB;;AACA,MAAMiB,WAAW;AAAA,mMAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAChBA,mBAAK,CAACC,cAAN;AACAD,mBAAK,CAACE,eAAN;AAFgB;AAAA,qBAGVpB,MAHU,aAGVA,MAHU,uBAGVA,MAAM,CAAEqB,IAAR,CAAa,IAAb,CAHU;;AAAA;AAAA;AAAA,qBAIV5B,qBAAqB,CAAC6B,OAAtB,EAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXL,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAMA,MAAMM,WAAW,GAAGC,2EAAiB,0BACVC,IAAI,CAACC,KAAL,CAAW,KAAKrB,KAAK,GAAG,GAAxB,CADU,QAEjCY,WAFiC,CAArC;AAKA,MAAMU,CAAC,GAAG,GAAV;AACA,MAAMvB,CAAC,GAAG,EAAV;AACA,MAAMwB,EAAE,GAAGD,CAAC,GAAG,CAAf;AACA,MAAME,EAAE,GAAGzB,CAAC,GAAG,CAAf;AACA,MAAM0B,EAAE,GAAG,CAACH,CAAC,GAAGC,EAAL,IAAW,CAAtB;AACA,MAAMG,EAAE,GAAG3B,CAAC,GAAGyB,EAAJ,GAAS,EAApB;AACA,MAAMG,EAAE,GAAG,CAAX;AACA,MAAMC,EAAE,GAAG7B,CAAC,GAAG,CAAf;AACA,MAAM8B,EAAE,GAAG,CAAX;AAEA,MAAI5B,SAAS,KAAKC,SAAlB,EAA6B,oBAAO,iDAAC,kEAAD,OAAP;AAE7B,sBACI,iDAAC,gEAAD;AAAW,SAAK,EAAEoB,CAAlB;AAAqB,UAAM,EAAEvB;AAA7B,kBACI,4EACI;AAAU,MAAE,EAAEN;AAAd,kBACI;AACI,aAAS,cAAY,CAACe,CAAb,UAAmBc,CAAC,GAAG,CAAvB,WAA6BI,EAAE,GAAGF,EAAlC,OADb;AAEI,KAAC,EAAE,CAFP;AAGI,KAAC,EAAEE,EAAE,GAAGF,EAAE,IAAI,IAAId,CAAR,CAHd;AAII,SAAK,EAAEY,CAJX;AAKI,UAAM,EAAEvB;AALZ,IADJ,CADJ,CADJ,eAYI;AAAG,aAAS,cAAYS,CAAZ,UAAkBc,CAAC,GAAG,CAAtB,WAA4BI,EAAE,GAAGF,EAAjC;AAAZ,kBACI;AACI,KAAC,EAAEC,EADP;AAEI,KAAC,EAAEC,EAFP;AAGI,YAAQ,EAAE,CAHd;AAII,SAAK,EAAEH,EAJX;AAKI,UAAM,EAAEC,EALZ;AAMI,eAAW,EAAEG,EANjB;AAOI,UAAM,EAAErB,MAPZ;AAQI,QAAI,EAAED,UARV;AASI,iBAAU;AATd,KAUQa,WAVR;AAWI,aAAS,EAAEP,UAAU,GAAG,YAAH,GAAkBT,SAX3C;AAYI,QAAI,EAAES,UAAU,GAAG,QAAH,GAAcT;AAZlC,KADJ,eAeI;AACI,KAAC,EAAEuB,EADP;AAEI,KAAC,EAAEC,EAFP;AAGI,SAAK,EAAEH,EAHX;AAII,UAAM,EAAEC,EAJZ;AAKI,UAAM,EAAElB,MALZ;AAMI,QAAI,EAAEA,MANV;AAOI,kBAAY,OAPhB;AAQI,YAAQ,YAAUb,MAAV,MARZ;AASI,iBAAa,EAAC,MATlB;AAUI,SAAK,EAAE;AAAEqC,gBAAU,EAAE;AAAd;AAVX,IAfJ,CAZJ,eAwCI;AACI,KAAC,EAAER,CAAC,GAAG,CADX;AAEI,KAAC,EAAEM,EAFP;AAGI,YAAQ,EAAEC,EAHd;AAII,cAAU,EAAC,QAJf;AAKI,QAAI,EAAEtB,WALV;AAMI,qCAA6BwB,wFAAkB,CAC3CvC,aAAa,IAAI,CAD0B,EAE3C,CAF2C,CAA/C;AANJ,KAWKuC,wFAAkB,CAACvC,aAAa,IAAI,CAAlB,EAAqB,CAArB,CAXvB,OAxCJ,CADJ;AAwDH,C","file":"6214-64aa33bcbcdec9a724a4.js","sourcesContent":["import React from \"react\"\nimport { RainGaugeReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport RainGaugeServer from \"../../../jacdac-ts/src/servers/RainGaugeServer\"\nimport useChange from \"../../jacdac/useChange\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { useId } from \"react-use-id-hook\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst TILT = 15\n\nexport default function DashbaordRainGauge(props: DashboardServiceProps) {\n    const { service } = props\n\n    const precipitationRegister = useRegister(\n        service,\n        RainGaugeReg.Precipitation\n    )\n    const [precipitation] = useRegisterUnpackedValue<[number]>(\n        precipitationRegister,\n        props\n    )\n    const clipId = useId()\n    const server = useServiceServer<RainGaugeServer>(service)\n    const tiltCount = useChange(server, h => h?.tiltCount)\n    const level = useChange(server, h => h?.level)\n    const tiltAngle =\n        tiltCount !== undefined ? (tiltCount % 2 ? -TILT : TILT) : 0\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, active, textPrimary } = useWidgetTheme(color)\n    const a = useThrottledValue(tiltAngle, 45)\n    const l = useThrottledValue(level !== undefined ? level : 0.5, 1)\n    const clickeable = !!server\n    const handleClick = async (event: React.PointerEvent<SVGRectElement>) => {\n        event.preventDefault()\n        event.stopPropagation()\n        await server?.rain(0.25)\n        await precipitationRegister.refresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(\n        `rain gauge at level ${Math.round(25 + level * 100)}%`,\n        handleClick\n    )\n\n    const w = 128\n    const h = 64\n    const bw = w / 2\n    const bh = h / 3\n    const bx = (w - bw) / 2\n    const by = h - bh - 24\n    const sw = 1\n    const ty = h - 4\n    const fs = 8\n\n    if (tiltAngle === undefined) return <LoadingProgress />\n\n    return (\n        <SvgWidget width={w} height={h}>\n            <defs>\n                <clipPath id={clipId}>\n                    <rect\n                        transform={`rotate(${-a}, ${w / 2}, ${by + bh})`}\n                        x={0}\n                        y={by + bh * (1 - l)}\n                        width={w}\n                        height={h}\n                    />\n                </clipPath>\n            </defs>\n            <g transform={`rotate(${a}, ${w / 2}, ${by + bh})`}>\n                <rect\n                    x={bx}\n                    y={by}\n                    tabIndex={0}\n                    width={bw}\n                    height={bh}\n                    strokeWidth={sw}\n                    stroke={active}\n                    fill={background}\n                    aria-live=\"polite\"\n                    {...buttonProps}\n                    className={clickeable ? \"clickeable\" : undefined}\n                    role={clickeable ? \"button\" : undefined}\n                />\n                <rect\n                    x={bx}\n                    y={by}\n                    width={bw}\n                    height={bh}\n                    stroke={active}\n                    fill={active}\n                    aria-label={\"water\"}\n                    clipPath={`url(#${clipId})`}\n                    pointerEvents=\"none\"\n                    style={{ userSelect: \"none\" }}\n                />\n            </g>\n            <text\n                x={w / 2}\n                y={ty}\n                fontSize={fs}\n                textAnchor=\"middle\"\n                fill={textPrimary}\n                aria-label={`precipitation ${roundWithPrecision(\n                    precipitation || 0,\n                    1\n                )} millimeters`}\n            >\n                {roundWithPrecision(precipitation || 0, 1)}mm\n            </text>\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}