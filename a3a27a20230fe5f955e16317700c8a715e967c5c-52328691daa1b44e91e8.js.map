{"version":3,"file":"a3a27a20230fe5f955e16317700c8a715e967c5c-52328691daa1b44e91e8.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/dtdl.ts","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/dtdlspec.ts","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/azure/DTDLSnippet.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","/***\n *  DTDL specification: https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md.\n */\n/**\n * @internal\n */\nexport const DTDL_REFERENCE_URL =\n    \"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\"\n/**\n * @internal\n */\nexport const DTDL_NAME = \"Digital Twins Definition Language\"\n/**\n * @internal\n */\nexport const DTDL_CONTEXT = [\"dtmi:dtdl:context;2\"]\n\n// warps fields into an object\nexport function objectSchema(schemas: DTDLSchema[]): DTDLSchema {\n    return {\n        \"@type\": \"Object\",\n        fields: schemas,\n    }\n}\n\n// wraps a schema into an array\nexport function arraySchema(schema: string | DTDLSchema): DTDLSchema {\n    return {\n        \"@type\": \"Array\",\n        elementSchema: schema,\n    }\n}\n\nexport interface DTDLNode {\n    \"@type\"?: string\n    \"@id\"?: string\n    // 1-64 characters\n    // ^[a-zA-Z](?:[a-zA-Z0-9_]*[a-zA-Z0-9])?$\n    name?: string\n    displayName?: string\n    description?: Record<string, string>\n}\n\nexport interface DTDLSchema extends DTDLNode {\n    fields?: DTDLSchema[]\n    schema?: string | DTDLSchema\n    elementSchema?: string | DTDLSchema\n}\n\nexport interface DTDLContent extends DTDLNode {\n    \"@type\": \"Property\" | \"Command\" | \"Component\" | \"Interface\"\n    unit?: string\n    schema?: string | DTDLSchema\n}\n\nexport interface DTDLInterface extends DTDLContent {\n    contents: DTDLContent[]\n    extends?: string | string[]\n    schemas?: (DTDLSchema | DTDLInterface)[]\n    \"@context\"?: string | string[]\n}\n\nexport function escapeName(name: string) {\n    name = name.trim().replace(/[^a-zA-Z0-9_]/g, \"_\")\n    if (!/^[a-zA-Z]/.test(name)) name = \"a\" + name\n    name = name[0].toLowerCase() + name.slice(1)\n    return name.slice(0, 64)\n}\n\nexport function escapeDisplayName(name: string) {\n    return name.slice(0, 64)\n}\n\nexport function DTDLUnits() {\n    return [\n        \"metrePerSecondSquared\",\n        \"centimetrePerSecondSquared\",\n        \"gForce\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radianPerSecondSquared\",\n        \"radianPerSecond\",\n        \"degreePerSecond\",\n        \"revolutionPerSecond\",\n        \"revolutionPerMinute\",\n        \"squareMetre\",\n        \"squareCentimetre\",\n        \"squareMillimetre\",\n        \"squareKilometre\",\n        \"hectare\",\n        \"squareFoot\",\n        \"squareInch\",\n        \"acre\",\n        \"farad\",\n        \"millifarad\",\n        \"microfarad\",\n        \"nanofarad\",\n        \"picofarad\",\n        \"ampere\",\n        \"microampere\",\n        \"milliampere\",\n        \"bitPerSecond\",\n        \"kibibitPerSecond\",\n        \"mebibitPerSecond\",\n        \"gibibitPerSecond\",\n        \"tebibitPerSecond\",\n        \"exbibitPerSecond\",\n        \"zebibitPerSecond\",\n        \"yobibitPerSecond\",\n        \"bytePerSecond\",\n        \"kibibytePerSecond\",\n        \"mebibytePerSecond\",\n        \"gibibytePerSecond\",\n        \"tebibytePerSecond\",\n        \"exbibytePerSecond\",\n        \"zebibytePerSecond\",\n        \"yobibytePerSecond\",\n        \"bit\",\n        \"kibibit\",\n        \"mebibit\",\n        \"gibibit\",\n        \"tebibit\",\n        \"exbibit\",\n        \"zebibit\",\n        \"yobibit\",\n        \"byte\",\n        \"kibibyte\",\n        \"mebibyte\",\n        \"gibibyte\",\n        \"tebibyte\",\n        \"exbibyte\",\n        \"zebibyte\",\n        \"yobibyte\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"coulomb\",\n        \"joule\",\n        \"kilojoule\",\n        \"megajoule\",\n        \"gigajoule\",\n        \"electronvolt\",\n        \"megaelectronvolt\",\n        \"kilowattHour\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"hertz\",\n        \"kilohertz\",\n        \"megahertz\",\n        \"gigahertz\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"lux\",\n        \"footcandle\",\n        \"henry\",\n        \"millihenry\",\n        \"microhenry\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"candelaPerSquareMetre\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"lumen\",\n        \"candela\",\n        \"weber\",\n        \"maxwell\",\n        \"tesla\",\n        \"kilogram\",\n        \"gram\",\n        \"milligram\",\n        \"microgram\",\n        \"tonne\",\n        \"slug\",\n        \"gramPerSecond\",\n        \"kilogramPerSecond\",\n        \"gramPerHour\",\n        \"kilogramPerHour\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"pascal\",\n        \"kilopascal\",\n        \"bar\",\n        \"millibar\",\n        \"millimetresOfMercury\",\n        \"poundPerSquareInch\",\n        \"inchesOfMercury\",\n        \"inchesOfWater\",\n        \"unity percent\",\n        \"ohm\",\n        \"milliohm\",\n        \"kiloohm\",\n        \"megaohm\",\n        \"decibel\",\n        \"bel\",\n        \"kelvin\",\n        \"degreeCelsius\",\n        \"degreeFahrenheit\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"second\",\n        \"millisecond\",\n        \"microsecond\",\n        \"nanosecond\",\n        \"minute\",\n        \"hour\",\n        \"day\",\n        \"year\",\n        \"newtonMetre\",\n        \"metrePerSecond\",\n        \"centimetrePerSecond\",\n        \"kilometrePerSecond\",\n        \"metrePerHour\",\n        \"kilometrePerHour\",\n        \"milePerHour\",\n        \"milePerSecond\",\n        \"knot\",\n        \"volt\",\n        \"millivolt\",\n        \"microvolt\",\n        \"kilovolt\",\n        \"megavolt\",\n        \"cubicMetre\",\n        \"cubicCentimetre\",\n        \"litre\",\n        \"millilitre\",\n        \"cubicFoot\",\n        \"cubicInch\",\n        \"fluidOunce\",\n        \"gallon\",\n        \"litrePerSecond\",\n        \"millilitrePerSecond\",\n        \"litrePerHour\",\n        \"millilitrePerHour\",\n    ].sort()\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/***\n * Jacdac service/device specification to DTDL\n *\n *  DTDL specification: https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md.\n */\n\nimport {\n    SRV_BOOTLOADER,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SystemReg,\n} from \"../jdom/constants\"\nimport {\n    isHighLevelEvent,\n    isHighLevelRegister,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../jdom/spec\"\nimport { arrayConcatMany } from \"../jdom/utils\"\nimport {\n    arraySchema,\n    DTDLContent,\n    DTDLInterface,\n    DTDLSchema,\n    DTDL_CONTEXT,\n    escapeDisplayName,\n    escapeName,\n    objectSchema,\n} from \"./dtdl\"\n\nexport const DTDL_JACDAC_PATH = \"jacdac\"\nexport const DTDL_SERVICES_PATH = \"services\"\nexport const DTDL_DEVICES_PATH = \"devices\"\n\n// https://github.com/Azure/digital-twin-model-identifier\n// ^dtmi:(?:_+[A-Za-z0-9]|[A-Za-z])(?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::(?:_+[A-Za-z0-9]|[A-Za-z])(?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$\nexport function toDTMI(segments: (string | number)[], version?: number) {\n    return `dtmi:${DTDL_JACDAC_PATH}:${[...segments]\n        .map(seg =>\n            seg === undefined\n                ? \"???\"\n                : typeof seg === \"string\"\n                ? seg\n                : `x${seg.toString(16)}`\n        )\n        .map(seg => seg.replace(/(-|_)/g, \"\"))\n        .join(\":\")};${version !== undefined ? version : 1}`.toLowerCase()\n}\n\nfunction toUnit(pkt: jdspec.PacketInfo) {\n    if (pkt.fields.length !== 1) return undefined\n    const field = pkt.fields[0]\n    if (!field.unit) return undefined\n\n    /**\n     *     type Unit = \"m\" | \"kg\" | \"g\" | \"s\" | \"A\" | \"K\" | \"cd\" | \"mol\" | \"Hz\" | \"rad\" | \"sr\" | \"N\" | \"Pa\" | \"J\" | \"W\" | \"C\" | \"V\" | \"F\" | \"Ohm\"\n        | \"S\" | \"Wb\" | \"T\" | \"H\" | \"Cel\" | \"lm\" | \"lx\" | \"Bq\" | \"Gy\" | \"Sv\" | \"kat\" | \"m2\" | \"m3\" | \"l\" | \"m/s\" | \"m/s2\" | \"m3/s\" | \"l/s\"\n        | \"W/m2\" | \"cd/m2\" | \"bit\" | \"bit/s\" | \"lat\" | \"lon\" | \"pH\" | \"dB\" | \"dBW\" | \"Bspl\" | \"count\" | \"/\" | \"%RH\" | \"%EL\" | \"EL\"\n        | \"1/s\" | \"1/min\" | \"beat/min\" | \"beats\" | \"S/m\" | \"B\" | \"VA\" | \"VAs\" | \"var\" | \"vars\" | \"J/m\" | \"kg/m3\" | \"deg\";\n\n    type SecondaryUnit = \"ms\" | \"min\" | \"h\" | \"MHz\" | \"kW\" | \"kVA\" | \"kvar\" | \"Ah\" | \"Wh\" | \"kWh\"\n        | \"varh\" | \"kvarh\" | \"kVAh\" | \"Wh/km\" | \"KiB\" | \"GB\" | \"Mbit/s\" | \"B/s\" | \"MB/s\" | \"mV\" | \"mA\" | \"dBm\" | \"ug/m3\"\n        | \"mm/h\" | \"m/h\" | \"ppm\" | \"/100\" | \"/1000\" | \"hPa\" | \"mm\" | \"cm\" | \"km\" | \"km/h\";\n     */\n    const units: Record<string, { semantic: string; unit: string }> = {\n        \"m/s2\": {\n            semantic: \"Acceleration\",\n            unit: \"metrePerSecondSquared\",\n        },\n        rad: {\n            semantic: \"Angle\",\n            unit: \"radian\",\n        },\n        \"rad/s\": {\n            semantic: \"AngularVelocity\",\n            unit: \"radianPerSecond\",\n        },\n        \"rad/s2\": {\n            semantic: \"AngularAcceleration\",\n            unit: \"radianPerSecondSquared\",\n        },\n        m: {\n            semantic: \"Length\",\n            unit: \"metre\",\n        },\n        m2: {\n            semantic: \"Area\",\n            unit: \"squareMetre\",\n        },\n        s: {\n            semantic: \"TimeSpan\",\n            unit: \"second\",\n        },\n        ms: {\n            semantic: \"TimeSpan\",\n            unit: \"millisecond\",\n        },\n        us: {\n            semantic: \"TimeSpan\",\n            unit: \"microsecond\",\n        },\n        K: {\n            semantic: \"Temperature\",\n            unit: \"kelvin\",\n        },\n        C: {\n            semantic: \"Temperature\",\n            unit: \"degreeCelsius\",\n        },\n        F: {\n            semantic: \"Temperature\",\n            unit: \"degreeFahrenheit\",\n        },\n        g: {\n            semantic: \"Acceleration\",\n            unit: \"gForce\",\n        },\n        mA: {\n            semantic: \"Current\",\n            unit: \"milliampere\",\n        },\n        uA: {\n            semantic: \"Current\",\n            unit: \"microampere\",\n        },\n        A: {\n            semantic: \"Current\",\n            unit: \"ampere\",\n        },\n        mV: {\n            semantic: \"Voltage\",\n            unit: \"millivolt\",\n        },\n        uV: {\n            semantic: \"Voltage\",\n            unit: \"microvolt\",\n        },\n        V: {\n            semantic: \"Voltage\",\n            unit: \"volt\",\n        },\n    }\n    const unit = units[field.unit]\n    if (unit) return unit\n\n    // ignoring some known units\n    if ([\"#\", \"/\"].indexOf(field.unit) > -1) return undefined\n\n    //console.warn(`unsupported unit ${field.unit}`)\n    return undefined\n}\n\n// https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#primitive-schemas\n\nfunction enumDTDI(srv: jdspec.ServiceSpec, en: jdspec.EnumInfo): string {\n    return toDTMI([srv.classIdentifier, en.name])\n}\n\nfunction enumSchema(srv: jdspec.ServiceSpec, en: jdspec.EnumInfo): DTDLSchema {\n    const dtdl = {\n        \"@type\": \"Enum\",\n        \"@id\": enumDTDI(srv, en),\n        valueSchema: \"integer\",\n        enumValues: Object.keys(en.members).map(k => ({\n            name: escapeName(k),\n            displayName: k,\n            enumValue: en.members[k],\n        })),\n    }\n    return dtdl\n}\n\nfunction fieldType(\n    srv: jdspec.ServiceSpec,\n    pkt: jdspec.PacketInfo,\n    field: jdspec.PacketMember\n) {\n    let type: string\n    if (field.type == \"bool\") type = \"boolean\"\n    else if (field.isFloat) type = \"float\"\n    else if (field.isSimpleType) {\n        if (/^(u|i)/.test(field.type)) type = \"integer\"\n        else if (field.type === \"B\")\n            // base64 encoded binary data\n            type = \"string\"\n    } else if (field.type === \"string\" || field.type == \"string0\")\n        type = \"string\"\n    else if (field.shift && /^(u|i)/.test(field.type)) type = \"float\"\n    // decimal type\n    else {\n        const en = srv.enums[field.type]\n        if (en) type = enumDTDI(srv, en)\n    }\n\n    //if (!type)\n    //    console.warn(`unknown field type ${field.type}`, field)\n\n    return {\n        name: field.name == \"_\" ? pkt.name : field.name,\n        type: type,\n    }\n}\n\nfunction toLocalizedString(str: string) {\n    return str ? { en: str } : undefined\n}\n\n// converts JADAC pkt data layout into a DTDL schema\nfunction toSchema(\n    srv: jdspec.ServiceSpec,\n    pkt: jdspec.PacketInfo,\n    supportsArray?: boolean\n): string | DTDLSchema {\n    const fields = pkt.fields.map(field => fieldType(srv, pkt, field))\n    if (!fields.length) return undefined\n\n    // a single data entry\n    if (fields.length === 1 && !pkt.fields[0].startRepeats)\n        return fields[0].type\n\n    // map fields into schema\n    const schemas: DTDLSchema[] = fields.map(field => ({\n        name: field.name,\n        schema: field.type,\n    }))\n\n    // is there an array?\n    const repeatIndex = pkt.fields.findIndex(field => field.startRepeats)\n\n    if (repeatIndex < 0) {\n        // no array\n        // wrap schemas into an object\n        return objectSchema(schemas)\n    }\n\n    // check if arrays are supported\n    if (!supportsArray) {\n        //console.warn(`arrays not supported in ${srv.shortName}.${pkt.name}`)\n        return undefined\n    }\n\n    if (repeatIndex == 0) {\n        // the whole structure is an array\n        return arraySchema(objectSchema(schemas))\n    } else {\n        // split fields into prelude and array data\n        const nonRepeat = schemas.slice(0, repeatIndex)\n        const repeats = schemas.slice(repeatIndex)\n        return objectSchema([\n            ...nonRepeat,\n            {\n                name: \"repeat\",\n                schema: arraySchema(\n                    repeats.length > 1 ? objectSchema(repeats) : repeats[0]\n                ),\n            },\n        ])\n    }\n}\n\nfunction packetToDTDL(\n    srv: jdspec.ServiceSpec,\n    pkt: jdspec.PacketInfo\n): DTDLContent {\n    const types: Record<string, string> = {\n        const: \"Property\",\n        rw: \"Property\",\n        ro: \"Telemetry\",\n        event: \"Telemetry\",\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const dtdl: any = {\n        \"@type\": types[pkt.kind] || `Unsupported${pkt.kind}`,\n        name: pkt.name,\n        \"@id\": toDTMI([srv.classIdentifier, pkt.kind, pkt.name]),\n        description: toLocalizedString(pkt.description),\n    }\n    switch (pkt.kind) {\n        case \"report\":\n        case \"command\":\n            // https://docs.microsoft.com/en-us/azure/digital-twins/concepts-models#azure-digital-twins-dtdl-implementation-specifics\n            return undefined\n        case \"const\":\n        case \"rw\":\n        case \"ro\":\n        case \"event\": {\n            const unit = toUnit(pkt)\n            if (unit) {\n                dtdl.unit = unit.unit\n            }\n            dtdl.schema = toSchema(srv, pkt, false)\n            if (pkt.kind === \"rw\") dtdl.writable = true\n            if (pkt.kind === \"event\") {\n                dtdl[\"@type\"] = [dtdl[\"@type\"], \"Event\"]\n                if (!dtdl.schema) dtdl.schema = \"integer\"\n            } else if (unit && unit.semantic)\n                dtdl[\"@type\"] = [dtdl[\"@type\"], unit.semantic]\n            break\n        }\n        default:\n            //console.log(`unknown packet kind ${pkt.kind}`)\n            break\n    }\n\n    if (!dtdl.schema) {\n        //console.log(`unknown schema for ${srv.name}.${pkt.name}`);\n        return undefined\n    }\n\n    return dtdl\n}\n\nexport function serviceSpecificationToDTDL(\n    srv: jdspec.ServiceSpec\n): DTDLInterface {\n    const registers = srv.packets.filter(\n        pkt =>\n            isHighLevelRegister(pkt) &&\n            !pkt.client &&\n            pkt.identifier !== SystemReg.Variant\n    )\n    const events = srv.packets.filter(\n        pkt => isHighLevelEvent(pkt) && !pkt.client\n    )\n    const dtdl: DTDLInterface = {\n        \"@type\": \"Interface\",\n        \"@id\": serviceSpecificationDTMI(srv),\n        displayName: escapeDisplayName(srv.name),\n        description: toLocalizedString(srv.notes[\"short\"]),\n        contents: [...registers, ...events]\n            .map(pkt => {\n                try {\n                    return packetToDTDL(srv, pkt)\n                } catch (e) {\n                    console.log(`failed to generate DTDL for ${srv.name}`, e)\n                    return undefined\n                }\n            })\n            .filter(c => !!c),\n    }\n\n    // TODO extends support\n    const hasEnums = Object.keys(srv.enums).length\n    if (hasEnums) {\n        dtdl.schemas = []\n        if (hasEnums)\n            dtdl.schemas = dtdl.schemas.concat(\n                Object.keys(srv.enums).map(en => enumSchema(srv, srv.enums[en]))\n            )\n    }\n    dtdl[\"@context\"] = DTDL_CONTEXT\n    return dtdl\n}\n\nexport function serviceSpecificationsWithDTDL() {\n    const ignoredServices = [\n        SRV_CONTROL,\n        SRV_LOGGER,\n        SRV_ROLE_MANAGER,\n        SRV_PROTO_TEST,\n        SRV_BOOTLOADER,\n    ]\n    const specs = serviceSpecifications()\n        .filter(spec => ignoredServices.indexOf(spec.classIdentifier) < 0)\n        .filter(spec => !/^_/.test(spec.shortId))\n    return specs\n}\n\nexport function serviceSpecificationToComponent(\n    srv: jdspec.ServiceSpec,\n    name: string\n): {\n    \"@type\": \"Component\"\n    name: string\n    displayName: string\n    schema: string\n} {\n    const dtdl = {\n        \"@type\": \"Component\",\n        name: name,\n        displayName: escapeDisplayName(srv.name),\n        schema: serviceSpecificationDTMI(srv),\n    }\n    return dtdl as any\n}\n\nexport function serviceSpecificationDTMI(\n    srv: jdspec.ServiceSpec,\n    customPath?: string\n) {\n    return toDTMI([customPath || DTDL_SERVICES_PATH, srv.classIdentifier])\n}\n\nexport function DTMIToRoute(dtmi: string) {\n    const route =\n        dtmi.toLowerCase().replace(/;/, \"-\").replace(/:/g, \"/\") + \".json\"\n    return route\n}\n\nfunction parseRoute(route: string, normalize?: boolean) {\n    const [, path, version] = /(.*)-(\\d+)\\.json$/.exec(route)\n    const parts = path.split(\"/\")\n    if (normalize)\n        while (parts[0] === \"dtmi\" || parts[0] === DTDL_JACDAC_PATH)\n            parts.shift()\n    return { version, parts }\n}\n\nexport function routeToDTMI(route: string) {\n    const { parts, version } = parseRoute(route)\n    if (parts[0] !== \"dtmi\") parts.unshift(\"dtmi\")\n    if (parts[1] !== DTDL_JACDAC_PATH) parts.splice(1, 0, DTDL_JACDAC_PATH)\n    return `${parts.join(\":\")};${version}`\n}\n\nexport function serviceRouteToDTDL(route: string) {\n    const { parts } = parseRoute(route, true)\n    if (parts[0] !== DTDL_SERVICES_PATH) throw Error(\"invalid route\")\n    const serviceClass = parseInt(\"0\" + parts[1], 16)\n    const specification = serviceSpecificationFromClassIdentifier(serviceClass)\n    const dtdl = serviceSpecificationToDTDL(specification)\n    return dtdl\n}\n\nexport function encodedDeviceRouteToDTDL(route: string) {\n    const { parts } = parseRoute(route, true)\n    if (parts[0] !== DTDL_DEVICES_PATH) throw Error(\"invalid route\")\n    const services = parts.slice(1).map(part => {\n        const m = /^x(\\w{8,8})(\\d*)$/.exec(part)\n        return {\n            service: serviceSpecificationFromClassIdentifier(\n                parseInt(m[1], 16)\n            ),\n            occurance: m[2] ? parseInt(m[2]) : 1,\n        }\n    })\n    const dtdl: DTDLInterface = {\n        \"@type\": \"Interface\",\n        \"@id\": routeToDTMI(route),\n        displayName: route,\n        contents: arrayConcatMany(\n            services.map(({ occurance, service }) =>\n                Array(occurance)\n                    .fill(0)\n                    .map((_, i) =>\n                        serviceSpecificationToComponent(\n                            service,\n                            `${service.shortName}${i}`\n                        )\n                    )\n            )\n        ),\n        \"@context\": DTDL_CONTEXT,\n    }\n    return dtdl\n}\n\nconst routes: Record<string, (route: string) => DTDLContent> = {\n    services: serviceRouteToDTDL,\n    devices: encodedDeviceRouteToDTDL,\n}\nexport function routeToDTDL(route: string) {\n    const { parts } = parseRoute(route, true)\n    const path = parts[0]\n    const handler = routes[path]\n    return handler?.(route)\n}\n\nexport function deviceClassToDTDL(dev: jdspec.DeviceClassSpec): DTDLInterface {\n    const services = dev.services.map(srv =>\n        serviceSpecificationFromClassIdentifier(srv)\n    )\n\n    // allocate names and count services\n    const serviceGroups: Record<string, number> = {}\n    const names: string[] = []\n    services.forEach(srv => {\n        serviceGroups[srv.classIdentifier] =\n            (serviceGroups[srv.classIdentifier] || 0) + 1\n        const name = escapeName(srv.shortId || srv.shortName)\n        if (names.indexOf(name) < 0) names.push(name + \"0\")\n        else {\n            let count = 2\n            while (names.indexOf(name + count) > -1) count++\n            names.push(name + count)\n        }\n    })\n\n    // compute id from groups\n    const dtmi = toDTMI([\n        DTDL_DEVICES_PATH,\n        ...Object.keys(serviceGroups).map(\n            cls => `x${parseInt(cls).toString(16)}${serviceGroups[cls]}`\n        ),\n    ])\n\n    const dtdl: DTDLInterface = {\n        \"@type\": \"Interface\",\n        \"@id\": dtmi,\n        displayName: escapeDisplayName(dev.name),\n        description: toLocalizedString(dev.description),\n        contents: services.map((srv, i) =>\n            serviceSpecificationToComponent(srv, names[i])\n        ),\n        \"@context\": DTDL_CONTEXT,\n    }\n    return dtdl\n}\n","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"./services\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"./iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        title=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\"\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from \"@material-ui/core\"\nimport CodeBlock from \"../CodeBlock\"\nimport TabPanel from \"../ui/TabPanel\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\"\nimport MakeCodeSimulator from \"./MakeCodeSimulator\"\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string\n    width: number\n    height: number\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props\n    const { source, rendered } = JSON.parse(renderedSource) as {\n        source: string\n        rendered: Rendered\n    }\n    const { height, width, url } = rendered || {}\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext)\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        if (newValue < tabs.length - 1) setEditor(tabs[newValue])\n        setTab(newValue)\n    }\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source])\n    const { code } = snippet\n\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Select MakeCode editor\"\n            >\n                <Tab label={\"Blocks\"} />\n                <Tab label={\"JavaScript\"} />\n                <Tab label={\"Simulator\"} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <CodeBlock className=\"typescript\">{code}</CodeBlock>\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <MakeCodeSimulator snippet={snippet} />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./trace/TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: { js: string; html: string }\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        actions,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={codeSandbox} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {actions && <div style={{ float: \"right\" }}>{actions}</div>}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const { children, className, ...rest } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\": {\n            const [source, js, html] = children.split(/\\n-{5,}\\n/gi)\n            return (\n                <HighlightedCode\n                    {...rest}\n                    className={\"javascript\"}\n                    codeSandbox={{ js, html }}\n                >\n                    {source}\n                </HighlightedCode>\n            )\n        }\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React, { useMemo } from \"react\"\nimport { DTDLNode } from \"../../../jacdac-ts/src/azure-iot/dtdl\"\nimport Snippet from \"../ui/Snippet\"\n\nexport function DTDLSnippet(props: {\n    node: DTDLNode | DTDLNode[]\n    name?: string\n}) {\n    const { node, name } = props\n    const dtdl = useMemo<string>(() => JSON.stringify(node, null, 2), [node])\n\n    if (!node) return null\n\n    return (\n        <Snippet\n            value={dtdl}\n            mode=\"json\"\n            download={`${name || \"dtdl\"}.json`}\n            caption={\n                <>\n                    <Link to=\"/dtmi\">DTDL</Link> is an open source modelling\n                    language developed by Microsoft Azure.\n                </>\n            }\n        />\n    )\n}\n","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import { Typography } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n}) {\n    const { value, mode, download, url, caption, actions } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n"],"names":["DTDL_REFERENCE_URL","DTDL_NAME","DTDL_CONTEXT","objectSchema","schemas","fields","arraySchema","schema","elementSchema","escapeName","name","trim","replace","test","toLowerCase","slice","escapeDisplayName","DTDLUnits","sort","SRV_BOOTLOADER","SRV_CONTROL","SRV_LOGGER","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SystemReg","isHighLevelEvent","isHighLevelRegister","serviceSpecificationFromClassIdentifier","serviceSpecifications","arrayConcatMany","DTDL_JACDAC_PATH","DTDL_SERVICES_PATH","DTDL_DEVICES_PATH","toDTMI","segments","version","map","seg","undefined","toString","join","toUnit","pkt","length","field","unit","units","semantic","rad","m","m2","s","ms","us","K","C","F","g","mA","uA","A","mV","uV","V","indexOf","enumDTDI","srv","en","classIdentifier","enumSchema","dtdl","valueSchema","enumValues","Object","keys","members","k","displayName","enumValue","fieldType","type","isFloat","isSimpleType","shift","enums","toLocalizedString","str","toSchema","supportsArray","startRepeats","repeatIndex","findIndex","nonRepeat","repeats","packetToDTDL","types","const","rw","ro","event","kind","description","writable","serviceSpecificationToDTDL","registers","packets","filter","client","identifier","Variant","events","serviceSpecificationDTMI","notes","contents","e","console","log","c","hasEnums","concat","serviceSpecificationsWithDTDL","ignoredServices","specs","spec","shortId","serviceSpecificationToComponent","customPath","DTMIToRoute","dtmi","route","parseRoute","normalize","path","exec","parts","split","routeToDTMI","unshift","splice","serviceRouteToDTDL","Error","serviceClass","parseInt","specification","encodedDeviceRouteToDTDL","services","part","service","occurance","Array","fill","_","i","shortName","routes","devices","routeToDTDL","handler","deviceClassToDTDL","dev","serviceGroups","names","forEach","push","count","cls","useEffect","useWindowEvent","listener","passive","deps","window","addEventListener","removeEventListener","useMemo","useContext","unique","makeCodeServices","MakeCodeSnippetContext","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","front","value","snippet","mkcds","info","src","qName","default","repo","dep","useMakeCodeRenderer","target","rendererUrl","lang","iframeId","pendingRequests","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","r","createStyles","makeStyles","React","useRef","PACKET_PROCESS","PACKET_SEND","JacdacContext","PaperBox","useStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","bus","frameRef","classes","url","encodeURIComponent","origin","URL","subscribe","packetSent","channel","broadcast","toBuffer","sender","current","useState","Tab","Tabs","CodeBlock","TabPanel","withPrefix","MakeCodeSnippet","renderedSource","rendered","JSON","parse","tabs","editor","setEditor","tab","setTab","handleTabChange","newValue","lazy","Highlight","defaultProps","LIGHT_THEME","DARK_THEME","DarkModeContext","IconButton","Link","GetAppIcon","LaunchIcon","Tooltip","Suspense","TraceSnippet","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","actions","darkMode","language","theme","valueUri","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","rest","js","html","Snippet","DTDLSnippet","node","stringify","Box","Paper","useTheme","padding","elevation","bgcolor","others","spacing","Typography","mode","download","caption","v"],"sourceRoot":""}