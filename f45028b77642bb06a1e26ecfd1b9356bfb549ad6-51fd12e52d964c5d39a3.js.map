{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/ExpandLess.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/ExpandMore.js","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardButton.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServo.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardRotaryEncoder.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardSwitch.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidget.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts"],"names":["useServiceRole","service","useState","role","setRole","useEffect","subscribe","ROLE_CHANGE","console","log","ServiceRole","props","useContext","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","useChange","_","DashboardServiceWidgetItem","expanded","isMixin","useRegisterUnpackedValue","register","SystemReg","instanceName","server","useServiceServer","handleRemove","device","removeService","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","visible","specification","spec","registers","useMemo","packets","ids","filter","pkt","isRegister","map","identifier","id","indexOf","slice","reg","length","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CTRL","SRV_LOGGER","DashboardDevice","toggleExpanded","variant","showAvatar","showHeader","name","useDeviceName","services","serviceClass","useDeviceSpecification","theme","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","serviceGridRef","useRef","intersection","ServiceWidgets","useCallback","srv","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","DashboardButton","pressed","setPressed","analog","useRegisterBoolValue","ButtonReg","downEvent","event","ButtonEvent","upEvent","EVENT","BinaryButton","color","label","handleDown","handleUp","up","widgetSize","ACTIVE_SPEED","INACTIVE_SPEED","AnalogButton","mixins","pressureRegister","pressure","thresholdRegister","find","cfg","useWidgetTheme","background","controlBackground","active","setDown","buttonProps","useSvgButtonProps","useAnimationFrame","reading","values","p","keepAnimating","setValues","sendGetAsync","w","mo","r","cx","cy","rp","ri","ps","range","describeArc","undefined","useActualAngle","ServoReg","angle","responseSpeed","rotationalSpeed","SG90_RESPONSE_SPEED","actualAngle","useThrottledValue","DashboardServo","enabledRegister","enabled","off","angleRegister","offset","textPrimary","a","transform","h","pr","pri","text","Math","round","toggleOff","sendSetBoolAsync","DashboardRotaryEncoder","positionRegister","RotaryEncoderReg","position","clicksPerTurnRegister","clicksPerTurn","textProps","fs","max","handleChange","ev","newValue","refresh","throttled","min","floor","ceil","DashboardSwitch","labelId","useId","on","SwitchReg","switchVariant","handleToggle","toggle","SwitchVariant","DashboardAccelerometer","lazy","DashboardBuzzer","DashboardLEDPixel","DashboardRoleManager","DashboardTrafficLight","DashboardCharacterScreen","DashboardRainGauge","DashboardLEDMatrix","DashboardWindDirection","DashboardMatrixKeypad","DashboardReflectedLight","DashboardPower","DashboardSpeechSynthesis","DashboardSoilMoisture","DashboardRealTimeClock","DashboardLED","DashboardJoystick","DashboardSevenSegmentDisplay","DashboardMotion","DashboardWaterLevel","DashboardColor","DashboardSoundPlayer","DashboardSoundLevel","DashboardSoundSpectrum","DashboardRandomNumberGenerator","DashboardCompass","DashboardGyroscope","DashboardSolenoid","DashboardBitRadio","serviceViews","SRV_ROLE_MANAGER","component","weight","SRV_BUZZER","SRV_LED_PIXEL","SRV_ACCELEROMETER","SRV_ROTARY_ENCODER","bundled","SRV_BUTTON","SRV_SERVO","SRV_SWITCH","SRV_TRAFFIC_LIGHT","SRV_CHARACTER_SCREEN","SRV_RAIN_GAUGE","SRV_LED_MATRIX","SRV_WIND_DIRECTION","SRV_MATRIX_KEYPAD","SRV_REFLECTED_LIGHT","SRV_POWER","SRV_SPEECH_SYNTHESIS","SRV_SOIL_MOISTURE","SRV_REAL_TIME_CLOCK","SRV_LED","SRV_JOYSTICK","SRV_SEVEN_SEGMENT_DISPLAY","SRV_MOTION","SRV_WATER_LEVEL","SRV_COLOR","SRV_SOUND_PLAYER","SRV_SOUND_LEVEL","SRV_RNG","SRV_COMPASS","SRV_GYROSCOPE","SRV_SOUND_SPECTRUM","SRV_SOLENOID","SRV_BIT_RADIO","ValueWidget","valueRegister","intensityRegister","others","intensity","hasIntensity","IntensityWidget","DefaultWidget","rspec","DashboardServiceWidget","classIdentifier","createElement","dashboardServiceWeight","view","JacdacContext","bus","mgr","setMgr","ROLE_MANAGER_CHANGE"],"mappings":"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","file":"f45028b77642bb06a1e26ecfd1b9356bfb549ad6-51fd12e52d964c5d39a3.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        console.log(\"role change\", { service })\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service, expanded } = props\n    const { isMixin } = service\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n    const server = useServiceServer(service)\n\n    const handleRemove = () => server?.device.removeService(server)\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n                {expanded && !isMixin && server && (\n                    <Grid item xs>\n                        <IconButtonWithTooltip\n                            title=\"Remove service\"\n                            onClick={handleRemove}\n                        >\n                            <CloseIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { BaseReg, SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isIntegerType, isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return ids.map(id => service.register(id)).filter(reg => !!reg)\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React, { useCallback, useRef } from \"react\"\nimport { SRV_CTRL, SRV_LOGGER } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport {\n    ButtonEvent,\n    ButtonReg,\n    EVENT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport ButtonServer from \"../../../jacdac-ts/src/servers/buttonserver\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport ButtonWidget from \"../widgets/ButtonWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { describeArc } from \"../widgets/svgutils\"\nimport useAnimationFrame from \"../hooks/useAnimationFrame\"\n\nexport default function DashboardButton(props: DashboardServiceProps) {\n    const { service } = props\n    const [pressed, setPressed] = useState<boolean>(false)\n    const analog = useRegisterBoolValue(service.register(ButtonReg.Analog))\n    // don't track reading, use events only\n    const downEvent = service.event(ButtonEvent.Down)\n    const upEvent = service.event(ButtonEvent.Up)\n    useEffect(() => downEvent.subscribe(EVENT, () => setPressed(true)), [\n        downEvent,\n    ])\n    useEffect(() => upEvent.subscribe(EVENT, () => setPressed(false)), [\n        upEvent,\n    ])\n\n    if (!analog) return <BinaryButton {...props} pressed={pressed} />\n    else return <AnalogButton {...props} pressed={pressed} />\n}\n\nfunction BinaryButton(props: { pressed: boolean } & DashboardServiceProps) {\n    const { service, pressed } = props\n\n    const server = useServiceServer<ButtonServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const label = `button ${pressed ? `down` : `up`}`\n    const handleDown = () => server?.down()\n    const handleUp = () => server?.up()\n    const widgetSize = `clamp(3rem, 10vw, 16vw)`\n\n    return (\n        <ButtonWidget\n            checked={!!pressed}\n            color={color}\n            onDown={server && handleDown}\n            onUp={server && handleUp}\n            label={label}\n            size={widgetSize}\n        />\n    )\n}\n\nconst ACTIVE_SPEED = 0.05\nconst INACTIVE_SPEED = 0.1\n\nfunction AnalogButton(props: { pressed: boolean } & DashboardServiceProps) {\n    const { service, pressed, visible } = props\n    const { mixins } = service\n    const pressureRegister = service.register(ButtonReg.Pressure)\n    const [pressure] = useRegisterUnpackedValue<[number]>(pressureRegister, {\n        visible,\n    })\n    // find threshold if any\n    const thresholdRegister = mixins\n        .find(cfg => !!cfg.register(SystemReg.ActiveThreshold))\n        ?.register(SystemReg.ActiveThreshold)\n    const [threshold] = useRegisterUnpackedValue(thresholdRegister, { visible })\n\n    //const [buttonVariant] = useRegisterUnpackedValue<[AnalogButtonVariant]>(service.register(AnalogButtonReg.Variant));\n    const widgetSize = `clamp(3rem, 10vw, 16vw)`\n    const server = useServiceServer<ButtonServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const label = `button pressure ${pressure}`\n    const { background, controlBackground, active } = useWidgetTheme(color)\n    const [down, setDown] = useState(false)\n    const handleDown = () => {\n        setDown(true)\n    }\n    const handleUp = () => {\n        setDown(false)\n    }\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(\n        label,\n        server && handleDown,\n        server && handleUp\n    )\n\n    useAnimationFrame(() => {\n        if (!server) return false\n        const [p] = server.reading.values()\n        let keepAnimating = true\n        if (down) {\n            if (p > 1 - ACTIVE_SPEED) {\n                server.reading.setValues([1])\n                keepAnimating = false\n            } else server.reading.setValues([p + ACTIVE_SPEED])\n        } else {\n            if (p < INACTIVE_SPEED) {\n                server.reading.setValues([0])\n                keepAnimating = false\n            } else server.reading.setValues([p - INACTIVE_SPEED])\n        }\n        server.reading.sendGetAsync() // refresh ui\n        return keepAnimating\n    }, [down])\n\n    const w = 64\n    const mo = pressed ? 3 : 5\n    const r = w / 2\n    const cx = r\n    const cy = r\n    const rp = r - mo\n    const ri = rp - mo\n    const ps = mo\n\n    const range = 360\n\n    /*\n        {buttonVariant === AnalogButtonVariant.Capacitive && <path transform={`translate(20,20)`} aria-hidden={true}\n            pointerEvents=\"none\"\n            style={{ userSelect: \"none\" }}\n            fill={background}\n            d=\"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"></path>}\n            */\n\n    return (\n        <SvgWidget width={w} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                rx={2}\n                ry={2}\n                width={w}\n                height={w}\n                fill={background}\n            />\n            {pressure && (\n                <path\n                    d={describeArc(cx, cy, rp, 0, pressure * range)}\n                    stroke={active}\n                    strokeLinecap={\"round\"}\n                    strokeWidth={ps}\n                />\n            )}\n            {threshold !== undefined && (\n                <circle\n                    cx={cx}\n                    cy={mo}\n                    r={mo / 3}\n                    aria-label={`active threshold ${threshold}`}\n                    fill={controlBackground}\n                    transform={`rotate(${range * threshold}, ${cx}, ${cy})`}\n                />\n            )}\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                aria-live=\"polite\"\n                fill={pressed ? active : controlBackground}\n                {...buttonProps}\n            />\n        </SvgWidget>\n    )\n}\n","import React from \"react\"\nimport { ServoReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport { SG90_RESPONSE_SPEED } from \"../../../jacdac-ts/src/servers/servers\"\nimport { Grid } from \"@material-ui/core\"\nimport ServoServer from \"../../../jacdac-ts/src/servers/servoserver\"\nimport RegisterInput from \"../RegisterInput\"\nimport PowerButton from \"../widgets/PowerButton\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nfunction useActualAngle(service: JDService, visible: boolean) {\n    const [angle] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.Angle),\n        { visible }\n    )\n    // sec/60deg\n    const [responseSpeed] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.ResponseSpeed),\n        { visible }\n    )\n    const rotationalSpeed = 60 / (responseSpeed || SG90_RESPONSE_SPEED)\n    const actualAngle = useThrottledValue(angle || 0, rotationalSpeed)\n\n    return actualAngle\n}\n\nexport default function DashboardServo(props: DashboardServiceProps) {\n    const { service, visible } = props\n\n    const enabledRegister = service.register(ServoReg.Enabled)\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const off = !enabled\n    const angleRegister = service.register(ServoReg.Angle)\n    const angle = useActualAngle(service, visible)\n    const [offset] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.Offset),\n        props\n    )\n\n    const server = useServiceServer<ServoServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const {\n        background,\n        controlBackground,\n        active,\n        textPrimary,\n    } = useWidgetTheme(color)\n\n    const cx = 78\n    const cy = 55\n\n    const a = enabled ? angle + (offset || 0) : 0\n    const transform = `rotate(${-a}, ${cx}, ${cy})`\n    const h = 111.406\n    const w = 158.50195\n    const pr = 14\n    const pri = 6\n    const text = enabled ? `${Math.round(a)}°` : \"off\"\n\n    const toggleOff = () => enabledRegister.sendSetBoolAsync(!enabled, true)\n\n    return (\n        <Grid container alignContent=\"center\">\n            <Grid item xs={12}>\n                <SvgWidget\n                    tabIndex={0}\n                    title={`servo at angle ${angle}`}\n                    width={w}\n                    height={h}\n                >\n                    <path\n                        fill={background}\n                        d=\"M158.502 10.687H0v89.75h158.502z\"\n                    />\n                    <path\n                        fill={controlBackground}\n                        d=\"M125.545 55.641c0-24.994-20.26-45.256-45.254-45.256-17.882.016-34.077 9.446-41.328 25.79-2.655.024-4.192.076-6.35.07-11.158 0-20.204 9.046-20.204 20.204 0 11.158 9.046 20.203 20.203 20.203 2.389-.005 4.354-.332 6.997-.256 7.56 15.59 23.356 24.485 40.682 24.5 24.992 0 45.254-20.264 45.254-45.256z\"\n                    />\n                    <path\n                        fill={enabled ? active : background}\n                        stroke={active}\n                        transform={transform}\n                        d=\"M93.782 55.623c-.032-3.809-.19-6.403-.352-7.023h-.002c-.93-3.558-6.621-6.73-14.793-6.73-8.17 0-14.649 3.016-14.795 6.73-.25 6.419-4.049 62.795 13.561 62.806 14.308.008 16.52-39.277 16.38-55.783zm-8.05.08a7.178 7.178 0 010 .012 7.178 7.178 0 01-7.179 7.176 7.178 7.178 0 01-7.177-7.176 7.178 7.178 0 017.177-7.178 7.178 7.178 0 017.178 7.166z\"\n                    />\n                    <text\n                        x={w / 2}\n                        y={30}\n                        textAnchor=\"middle\"\n                        fill={textPrimary}\n                    >\n                        {text}\n                    </text>\n                    <PowerButton\n                        r={pr}\n                        ri={pri}\n                        cx={w - pr - 4}\n                        cy={pr + 14}\n                        color={color}\n                        strokeWidth={1.5}\n                        off={off}\n                        onClick={toggleOff}\n                    />\n                </SvgWidget>\n            </Grid>\n            <Grid item xs={12}>\n                <RegisterInput register={angleRegister} visible={visible} />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport { RotaryEncoderReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport RotaryEncoderServer from \"../../../jacdac-ts/src/servers/rotaryencoderserver\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { Grid, Slider } from \"@material-ui/core\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\n\nexport default function DashboardRotaryEncoder(props: DashboardServiceProps) {\n    const { service } = props\n    const positionRegister = service.register(RotaryEncoderReg.Position)\n    const [position = 0] = useRegisterUnpackedValue<[number]>(\n        positionRegister,\n        props\n    )\n    const clicksPerTurnRegister = service.register(\n        RotaryEncoderReg.ClicksPerTurn\n    )\n    const [clicksPerTurn = 12] = useRegisterUnpackedValue<[number]>(\n        clicksPerTurnRegister,\n        props\n    )\n    const server = useServiceServer<RotaryEncoderServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground, active, textProps } = useWidgetTheme(\n        color\n    )\n    const label = \"\" + position\n    const widgetSize = `clamp(6rem, 15vw, 20vw)`\n\n    const w = 37.794\n    const r = 0.06\n    const fs = Math.max(0.2, 0.5 - label.length * 0.1)\n\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        server?.reading.setValues([newValue as number])\n        positionRegister.refresh()\n        clicksPerTurnRegister.refresh()\n    }\n\n    const throttled = useThrottledValue(position, clicksPerTurn)\n    const angle = (throttled / clicksPerTurn) * 360\n\n    const min = Math.floor(position / clicksPerTurn - 1) * clicksPerTurn\n    const max = Math.ceil(position / clicksPerTurn + 1) * clicksPerTurn\n\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <SvgWidget\n                    title={`rotary encoder at position ${position}`}\n                    size={widgetSize}\n                    width={w}\n                    height={w}\n                    viewBox={\"0 0 1 1\"}\n                >\n                    <g transform={`rotate(${angle}, 0.5, 0.5)`}>\n                        <path\n                            fill={background}\n                            d=\"M.67.029a.037.037 0 01-.072-.02A.5.5 0 00.538 0a.037.037 0 01-.075 0 .5.5 0 00-.061.008.038.038 0 01-.073.02.5.5 0 00-.056.025.037.037 0 01-.064.04A.5.5 0 00.16.13.037.037 0 01.11.186a.5.5 0 00-.035.05.037.037 0 01-.035.066.5.5 0 00-.02.058.037.037 0 01-.016.074A.5.5 0 000 .495.037.037 0 01.005.57a.5.5 0 00.013.06.038.038 0 01.025.07.5.5 0 00.028.056.037.037 0 01.043.06.5.5 0 00.042.046.037.037 0 01.058.047.5.5 0 00.053.032.037.037 0 01.069.03.5.5 0 00.059.016.037.037 0 01.074.01.5.5 0 00.062 0 .037.037 0 01.074-.01.5.5 0 00.06-.016.037.037 0 01.068-.03.5.5 0 00.053-.032.037.037 0 01.058-.047.5.5 0 00.042-.045.037.037 0 01.043-.061A.5.5 0 00.957.7.037.037 0 01.982.63.5.5 0 00.995.57.037.037 0 011 .495.5.5 0 00.996.434.038.038 0 01.98.36.5.5 0 00.96.302.037.037 0 01.925.236.5.5 0 00.89.186.037.037 0 01.839.13.5.5 0 00.79.092.037.037 0 01.727.053.5.5 0 00.671.03z\"\n                        />\n                        <path\n                            fill={controlBackground}\n                            d=\"M.1.499a.4.4 0 10.8 0 .4.4 0 10-.8 0z\"\n                        />\n                        <circle cx={0.5} cy={0.19} r={r} fill={active} />\n                    </g>\n                    <text x={0.5} y={0.5} fontSize={fs} {...textProps}>\n                        {label}\n                    </text>\n                </SvgWidget>\n            </Grid>\n            {server && (\n                <Grid item>\n                    <Slider\n                        color={color}\n                        min={min}\n                        max={max}\n                        step={1}\n                        value={position}\n                        valueLabelDisplay=\"off\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { SwitchReg, SwitchVariant } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { useRegisterBoolValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceServer from \"../hooks/useServiceServer\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport SwitchServer from \"../../../jacdac-ts/src/servers/switchserver\"\nimport React from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport { useId } from \"react-use-id-hook\"\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardSwitch(props: DashboardServiceProps) {\n    const { service } = props;\n\n    const labelId = useId();\n    const on = useRegisterBoolValue(service.register(SwitchReg.Active), props)\n    const [switchVariant] = useRegisterUnpackedValue<[SwitchVariant]>(service.register(SwitchReg.Variant), props);\n    const server = useServiceServer<SwitchServer>(service);\n    const color = server ? \"secondary\" : \"primary\";\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    const handleToggle = () => server?.toggle();\n\n    if (on === undefined)\n        return <LoadingProgress />;\n\n    switch (switchVariant) {\n        case SwitchVariant.PushButton:\n            return <ButtonWidget\n                checked={on}\n                color={color}\n                label={on ? \"on\" : \"off\"}\n                onDown={server && handleToggle}\n                size={widgetSize} />\n        default:\n            return <>\n                <Switch aria-labelledby={labelId} color={color} checked={on} onChange={server && handleToggle} />\n                <label id={labelId}>{on ? \"on\" : \"off\"}</label>\n            </>\n    }\n}","import React, {\n    createElement,\n    FunctionComponent,\n    lazy,\n    useMemo,\n    Suspense,\n} from \"react\"\nimport {\n    SRV_ACCELEROMETER,\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_CHARACTER_SCREEN,\n    SRV_COLOR,\n    SRV_COMPASS,\n    SRV_GYROSCOPE,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LED_PIXEL,\n    SRV_MATRIX_KEYPAD,\n    SRV_MOTION,\n    SRV_POWER,\n    SRV_RAIN_GAUGE,\n    SRV_REAL_TIME_CLOCK,\n    SRV_REFLECTED_LIGHT,\n    SRV_RNG,\n    SRV_ROLE_MANAGER,\n    SRV_ROTARY_ENCODER,\n    SRV_SERVO,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SRV_SOIL_MOISTURE,\n    SRV_SOLENOID,\n    SRV_SOUND_LEVEL,\n    SRV_SOUND_PLAYER,\n    SRV_SOUND_SPECTRUM,\n    SRV_SPEECH_SYNTHESIS,\n    SRV_SWITCH,\n    SRV_TRAFFIC_LIGHT,\n    SRV_WATER_LEVEL,\n    SRV_WIND_DIRECTION,\n    SRV_BIT_RADIO,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport RegisterInput from \"../RegisterInput\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport { CircularProgress, NoSsr } from \"@material-ui/core\"\n\n// bundled\nimport DashboardButton from \"./DashboardButton\"\nimport DashboardServo from \"./DashboardServo\"\nimport DashboardRotaryEncoder from \"./DashboardRotaryEncoder\"\nimport DashboardSwitch from \"./DashboardSwitch\"\nimport useServiceServer from \"../hooks/useServiceServer\"\n\n// lazy devices\nconst DashboardAccelerometer = lazy(() => import(\"./DashboardAccelerometer\"))\nconst DashboardBuzzer = lazy(() => import(\"./DashboardBuzzer\"))\nconst DashboardLEDPixel = lazy(() => import(\"./DashboardLEDPixel\"))\nconst DashboardRoleManager = lazy(() => import(\"./DashboardRoleManager\"))\nconst DashboardTrafficLight = lazy(() => import(\"./DashboardTrafficLight\"))\nconst DashboardCharacterScreen = lazy(\n    () => import(\"./DashboardCharacterScreen\")\n)\nconst DashboardRainGauge = lazy(() => import(\"./DashboardRainGauge\"))\nconst DashboardLEDMatrix = lazy(() => import(\"./DashboardLEDMatrix\"))\nconst DashboardWindDirection = lazy(() => import(\"./DashboardWindDirection\"))\nconst DashboardMatrixKeypad = lazy(() => import(\"./DashboardMatrixKeypad\"))\nconst DashboardReflectedLight = lazy(() => import(\"./DashboardReflectedLight\"))\nconst DashboardPower = lazy(() => import(\"./DashboardPower\"))\nconst DashboardSpeechSynthesis = lazy(\n    () => import(\"./DashboardSpeechSynthesis\")\n)\nconst DashboardSoilMoisture = lazy(() => import(\"./DashboardSoilMoisture\"))\nconst DashboardRealTimeClock = lazy(() => import(\"./DashboardRealTimeClock\"))\nconst DashboardLED = lazy(() => import(\"./DashboardLED\"))\nconst DashboardJoystick = lazy(() => import(\"./DashboardJoystick\"))\nconst DashboardSevenSegmentDisplay = lazy(\n    () => import(\"./DashboardSevenSegmentDisplay\")\n)\nconst DashboardMotion = lazy(() => import(\"./DashboardMotion\"))\nconst DashboardWaterLevel = lazy(() => import(\"./DashboardWaterLevel\"))\nconst DashboardColor = lazy(() => import(\"./DashboardColor\"))\nconst DashboardSoundPlayer = lazy(() => import(\"./DashboardSoundPlayer\"))\nconst DashboardSoundLevel = lazy(() => import(\"./DashboardSoundLevel\"))\nconst DashboardSoundSpectrum = lazy(() => import(\"./DashboardSoundSpectrum\"))\nconst DashboardRandomNumberGenerator = lazy(\n    () => import(\"./DashboardRandomNumberGenerator\")\n)\nconst DashboardCompass = lazy(() => import(\"./DashboardCompass\"))\nconst DashboardGyroscope = lazy(() => import(\"./DashboardGyroscope\"))\nconst DashboardSolenoid = lazy(() => import(\"./DashboardSolenoid\"))\nconst DashboardBitRadio = lazy(() => import(\"./DashboardBitRadio\"))\n\nexport interface DashboardServiceProps {\n    service: JDService\n    expanded?: boolean\n    // all widget services\n    services?: JDService[]\n    variant?: \"icon\" | \"\"\n    // the dashboard html element is in the view\n    visible?: boolean\n}\nexport type DashboardServiceComponent = FunctionComponent<DashboardServiceProps>\n\nconst serviceViews: {\n    [serviceClass: number]: {\n        component: DashboardServiceComponent\n        bundled?: boolean\n        weight?: (service: JDService) => number\n    }\n} = {\n    [SRV_ROLE_MANAGER]: {\n        component: DashboardRoleManager,\n        weight: () => 2,\n    },\n    [SRV_BUZZER]: {\n        component: DashboardBuzzer,\n        weight: () => 2,\n    },\n    [SRV_LED_PIXEL]: {\n        component: DashboardLEDPixel,\n        weight: () => 2,\n    },\n    [SRV_ACCELEROMETER]: {\n        component: DashboardAccelerometer,\n        weight: () => 3,\n    },\n    [SRV_ROTARY_ENCODER]: {\n        component: DashboardRotaryEncoder,\n        bundled: true,\n        weight: () => 2,\n    },\n    [SRV_BUTTON]: {\n        component: DashboardButton,\n        bundled: true,\n    },\n    [SRV_SERVO]: {\n        component: DashboardServo,\n        bundled: true,\n    },\n    [SRV_SWITCH]: {\n        component: DashboardSwitch,\n        bundled: true,\n    },\n    [SRV_TRAFFIC_LIGHT]: {\n        component: DashboardTrafficLight,\n    },\n    [SRV_CHARACTER_SCREEN]: {\n        component: DashboardCharacterScreen,\n        weight: () => 3,\n    },\n    [SRV_RAIN_GAUGE]: {\n        component: DashboardRainGauge,\n    },\n    [SRV_LED_MATRIX]: {\n        component: DashboardLEDMatrix,\n        weight: () => 3,\n    },\n    [SRV_WIND_DIRECTION]: {\n        component: DashboardWindDirection,\n    },\n    [SRV_MATRIX_KEYPAD]: {\n        component: DashboardMatrixKeypad,\n    },\n    [SRV_REFLECTED_LIGHT]: {\n        component: DashboardReflectedLight,\n    },\n    [SRV_POWER]: {\n        component: DashboardPower,\n    },\n    [SRV_SPEECH_SYNTHESIS]: {\n        component: DashboardSpeechSynthesis,\n    },\n    [SRV_SOIL_MOISTURE]: {\n        component: DashboardSoilMoisture,\n    },\n    [SRV_REAL_TIME_CLOCK]: {\n        component: DashboardRealTimeClock,\n    },\n    [SRV_LED]: {\n        component: DashboardLED,\n    },\n    [SRV_JOYSTICK]: {\n        component: DashboardJoystick,\n        weight: () => 3,\n    },\n    [SRV_SEVEN_SEGMENT_DISPLAY]: {\n        component: DashboardSevenSegmentDisplay,\n    },\n    [SRV_MOTION]: {\n        component: DashboardMotion,\n    },\n    [SRV_WATER_LEVEL]: {\n        component: DashboardWaterLevel,\n    },\n    [SRV_COLOR]: {\n        component: DashboardColor,\n        weight: () => 2,\n    },\n    [SRV_SOUND_PLAYER]: {\n        component: DashboardSoundPlayer,\n        weight: () => 2,\n    },\n    [SRV_SOUND_LEVEL]: {\n        component: DashboardSoundLevel,\n        weight: () => 2,\n    },\n    [SRV_RNG]: {\n        component: DashboardRandomNumberGenerator,\n    },\n    [SRV_COMPASS]: {\n        component: DashboardCompass,\n    },\n    [SRV_GYROSCOPE]: {\n        component: DashboardGyroscope,\n        weight: () => 3,\n    },\n    [SRV_SOUND_SPECTRUM]: {\n        component: DashboardSoundSpectrum,\n        weight: () => 2,\n    },\n    [SRV_SOLENOID]: {\n        component: DashboardSolenoid,\n    },\n    [SRV_BIT_RADIO]: {\n        component: DashboardBitRadio,\n        weight: () => 6,\n    },\n}\n\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nfunction ValueWidget(\n    props: {\n        valueRegister: JDRegister\n        intensityRegister: JDRegister\n    } & DashboardServiceProps\n) {\n    const { valueRegister, intensityRegister, ...others } = props\n    const { visible } = others\n    const intensity = useRegisterBoolValue(intensityRegister, others)\n    const hasIntensity = intensity !== undefined\n    const off = hasIntensity ? !intensity : undefined\n    const toggleOff = async () => {\n        await intensityRegister.sendSetBoolAsync(off, true)\n    }\n\n    return (\n        <RegisterInput\n            register={valueRegister}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            off={off}\n            toggleOff={hasIntensity ? toggleOff : undefined}\n            visible={visible}\n        />\n    )\n}\n\nfunction IntensityWidget(\n    props: { intensityRegister: JDRegister } & DashboardServiceProps\n) {\n    const { intensityRegister, ...others } = props\n    const { visible } = others\n    const [intensity] = useRegisterUnpackedValue<[number | boolean]>(\n        intensityRegister,\n        others\n    )\n    const off = intensity !== undefined && !intensity\n\n    return (\n        <RegisterInput\n            register={intensityRegister}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            off={off}\n            visible={visible}\n        />\n    )\n}\n\nfunction DefaultWidget(props: DashboardServiceProps) {\n    const { service, visible } = props\n    const { specification } = service\n    const register = useMemo(() => {\n        const rspec = specification?.packets.find(\n            pkt =>\n                isRegister(pkt) &&\n                collapsedRegisters.indexOf(pkt.identifier) > -1\n        )\n        return service.register(rspec?.identifier)\n    }, [service])\n\n    if (!register)\n        // nothing to see here\n        return null\n\n    // if register is value, disable if enabled is 0.\n    if (register.specification.identifier == SystemReg.Value) {\n        const intensityRegister = register.service.register(SystemReg.Intensity)\n        return (\n            <ValueWidget\n                valueRegister={register}\n                intensityRegister={intensityRegister}\n                {...props}\n            />\n        )\n    }\n\n    // case of no streaming,value just intensity, like a relay\n    if (register.specification.identifier === SystemReg.Intensity)\n        return <IntensityWidget intensityRegister={register} {...props} />\n\n    return (\n        <RegisterInput\n            register={register}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            visible={visible}\n        />\n    )\n}\n\nexport default function DashboardServiceWidget(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const { specification } = service\n    const { component, bundled } =\n        serviceViews[specification.classIdentifier] || {}\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    // no special support\n    if (!component) return createElement(DefaultWidget, props)\n\n    // precompiled\n    if (bundled) return createElement(component, props)\n\n    // lazy loading\n    return (\n        <NoSsr>\n            <Suspense\n                fallback={\n                    <CircularProgress\n                        color={color}\n                        disableShrink={true}\n                        variant={\"indeterminate\"}\n                        size={\"3em\"}\n                    />\n                }\n            >\n                {createElement(component, props)}\n            </Suspense>\n        </NoSsr>\n    )\n}\n\nexport function dashboardServiceWeight(service: JDService) {\n    const view = serviceViews[service.serviceClass]\n    return view?.weight?.(service)\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n"],"sourceRoot":""}