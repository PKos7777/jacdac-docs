{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardHIDKeyboard.tsx"],"names":["DashboardBuzzer","props","service","useState","selector","setSelector","HidKeyboardModifiers","modifiers","setModifiers","console","log","toString","handleKeyDown","ev","altKey","ctrlKey","shiftKey","metaKey","values","push","value","join"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AAGe,SAASA,eAAT,CAAyBC,KAAzB,EAAuD;AAAA,MAC1DC,OAD0D,GAC9CD,KAD8C,CAC1DC,OAD0D;;AAAA,kBAElCC,+CAAQ,CAAC,CAAD,CAF0B;AAAA,MAE3DC,QAF2D;AAAA,MAEjDC,WAFiD;;AAAA,mBAGhCF,+CAAQ,CAACG,gHAAD,CAHwB;AAAA,MAG3DC,SAH2D;AAAA,MAGhDC,YAHgD;;AAKlEC,SAAO,CAACC,GAAR,CAAY;AAAEN,YAAQ,EAARA,QAAF;AAAYG,aAAS,EAAEA,SAAS,CAACI,QAAV,CAAmB,EAAnB;AAAvB,GAAZ;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAyC;AAC3DJ,WAAO,CAACC,GAAR,CAAY;AAAEG,QAAE,EAAFA;AAAF,KAAZ;AAD2D,QAEnDC,MAFmD,GAEZD,EAFY,CAEnDC,MAFmD;AAAA,QAE3CC,OAF2C,GAEZF,EAFY,CAE3CE,OAF2C;AAAA,QAElCC,QAFkC,GAEZH,EAFY,CAElCG,QAFkC;AAAA,QAExBC,OAFwB,GAEZJ,EAFY,CAExBI,OAFwB;AAI3D,QAAMV,SAAS,GACX,CAACO,MAAM,IAAIR,sHAAX,KACCW,OAAO,IAAIX,sHADZ,KAECS,OAAO,IAAIT,8HAFZ,KAGCU,QAAQ,IAAIV,0HAHb,CADJ;AAKAE,gBAAY,CAACD,SAAD,CAAZ;AACH,GAVD;;AAYA,MAAMW,MAAM,GAAG,EAAf;AACA,MAAIX,SAAS,GAAGD,sHAAhB,EAA8CY,MAAM,CAACC,IAAP,CAAY,KAAZ;AAC9C,MAAIZ,SAAS,GAAGD,8HAAhB,EAAkDY,MAAM,CAACC,IAAP,CAAY,MAAZ;AAClD,MAAIZ,SAAS,GAAGD,sHAAhB,EAA8CY,MAAM,CAACC,IAAP,CAAY,KAAZ;AAC9C,MAAIZ,SAAS,GAAGD,0HAAhB,EAAgDY,MAAM,CAACC,IAAP,CAAY,OAAZ;AAChD,MAAIZ,SAAS,GAAGD,wHAAhB,EAA+CY,MAAM,CAACC,IAAP,CAAY,WAAZ;AAC/C,MAAIZ,SAAS,GAAGD,gIAAhB,EAAmDY,MAAM,CAACC,IAAP,CAAY,YAAZ;AACnD,MAAIZ,SAAS,GAAGD,wHAAhB,EAA+CY,MAAM,CAACC,IAAP,CAAY,WAAZ;AAC/C,MAAIZ,SAAS,GAAGD,4HAAhB,EAAiDY,MAAM,CAACC,IAAP,CAAY,aAAZ;AAEjD,MAAIf,QAAJ,EAAcc,MAAM,CAACC,IAAP,CAAYf,QAAQ,CAACO,QAAT,EAAZ;AAEd,MAAMS,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAd;AAEA,sBACI,iDAAC,+DAAD;AACI,SAAK,EAAED,KADX;AAEI,cAAU,EAAE,KAFhB;AAGI,aAAS,EAAE,IAHf;AAII,cAAU,EAAE,qBAJhB;AAKI,aAAS,EAAER;AALf,IADJ;AASH,C","file":"5969-5b1e62ab2730b14c78a1.js","sourcesContent":["import React, { useState, KeyboardEvent } from \"react\"\nimport { TextField } from \"@material-ui/core\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\n\nexport default function DashboardBuzzer(props: DashboardServiceProps) {\n    const { service } = props\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    console.log({ selector, modifiers: modifiers.toString(16) })\n\n    const handleKeyDown = (ev: KeyboardEvent<HTMLInputElement>) => {\n        console.log({ ev })\n        const { altKey, ctrlKey, shiftKey, metaKey } = ev\n\n        const modifiers =\n            (altKey && HidKeyboardModifiers.LeftAlt) |\n            (metaKey && HidKeyboardModifiers.LeftGUI) |\n            (ctrlKey && HidKeyboardModifiers.LeftControl) |\n            (shiftKey && HidKeyboardModifiers.LeftShift)\n        setModifiers(modifiers)\n    }\n\n    const values = []\n    if (modifiers & HidKeyboardModifiers.LeftAlt) values.push(\"Alt\")\n    if (modifiers & HidKeyboardModifiers.LeftControl) values.push(\"Ctrl\")\n    if (modifiers & HidKeyboardModifiers.LeftGUI) values.push(\"Cmd\")\n    if (modifiers & HidKeyboardModifiers.LeftShift) values.push(\"Shift\")\n    if (modifiers & HidKeyboardModifiers.RightAlt) values.push(\"Right Alt\")\n    if (modifiers & HidKeyboardModifiers.RightControl) values.push(\"Right Ctrl\")\n    if (modifiers & HidKeyboardModifiers.RightGUI) values.push(\"Right Cmd\")\n    if (modifiers & HidKeyboardModifiers.RightShift) values.push(\"Right Shift\")\n\n    if (selector) values.push(selector.toString())\n\n    const value = values.join(\" + \")\n\n    return (\n        <TextField\n            value={value}\n            spellCheck={false}\n            fullWidth={true}\n            helperText={\"Type your key combo\"}\n            onKeyDown={handleKeyDown}\n        />\n    )\n}\n"],"sourceRoot":""}