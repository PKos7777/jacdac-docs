{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Remove.js","webpack://jacdac-docs/./src/components/ui/ColorInput.tsx","webpack://jacdac-docs/./src/components/widgets/LightWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardLEDPixel.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx"],"names":["ColorInput","props","value","onChange","useState","picker","setPicker","handleClick","handleClose","handleChange","color","hex","colorStyle","background","rgbToHsl","r","g","b","r$","g$","b$","cMin","Math","min","cMax","max","cDelta","h","s","l","maxAndMin","floor","setRgb","el","radius","hsl","fill","setAttribute","undefined","nr","setRgbLeds","pixelsContainer","colors","pixels","children","pn","length","ci","i","pixel","item","LightStripWidget","lightVariant","numPixels","actualBrightness","server","widgetSize","useWidgetTheme","controlBackground","pathRef","useRef","pixelsRef","neoradius","neocircleradius","sw","isJewel","LedPixelVariant","isRing","paint","current","useEffect","p","offset","getTotalLength","extra","step","pos","point","getPointAtLength","x","y","subscribe","RENDER","width","height","d","dx","side","ceil","sqrt","dir","tr","line","n","neoperimeter","margin","ringradius","PI","wm","alpha","opacity","Array","map","_","LightMatrixWidget","columns","rows","widgetRef","pw","ph","ps","pr","m","w","render","ledEls","row","col","index","label","push","LightWidget","service","numPixelsRegister","useRegister","LedPixelReg","variantRegister","actualBrightnessRegister","numColumnsRegister","useRegisterUnpackedValue","numColumns","lightCommands","name","args","description","valueDescription","LightCommand","sending","setSending","command","setCommand","setOffset","duration","setDuration","setColors","mode","setMode","dcolors","slice","encoded","useMemo","sargs","vargs","join","c","parseInt","unshift","some","v","isNaN","ms","src","filter","largs","lightEncode","sendCommand","sendCmdAsync","LedPixelCmd","handleCommandChange","ev","newName","target","find","cmd","handleOffsetChange","handleModeChange","handleDurationChange","handleColorChange","cs","handleRemoveColor","pop","handleAddColor","DashboardLEDPixel","services","expanded","useServiceServer","LedPixelServer","SelectWithLabel","fullWidth","required","disabled","error","placeholder","onClose","helperText","type","none","labelId","useId","descrId","hasDescr"],"mappings":"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","file":"264-4fbfe1ecd8f56dfdcbe2.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import { Dialog, DialogContent } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { CirclePicker } from \"react-color\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport IconButtonWithTooltip from './IconButtonWithTooltip';\n\nexport default function ColorInput(props: { value: string, onChange: (color: string) => void }) {\n    const { value, onChange } = props;\n    const [picker, setPicker] = useState(false);\n    const handleClick = () => setPicker(!picker);\n    const handleClose = () => setPicker(false);\n    const handleChange = (color: { hex: string }) => {\n        setPicker(false);\n        onChange(color.hex);\n    }\n    const colorStyle = { background: value }\n\n    return (\n        <>\n            <IconButtonWithTooltip title=\"choose color\" style={colorStyle} onClick={handleClick}>\n                <FiberManualRecordIcon />\n            </IconButtonWithTooltip>\n            <Dialog open={picker} onClose={handleClose}>\n                <DialogContent>\n                    <CirclePicker color={value} onChangeComplete={handleChange} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n","import React, { useEffect, useRef } from \"react\"\nimport {\n    LedPixelReg,\n    LedPixelVariant,\n    RENDER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction rgbToHsl(r: number, g: number, b: number): [number, number, number] {\n    const [r$, g$, b$] = [r / 255, g / 255, b / 255]\n    const cMin = Math.min(r$, g$, b$)\n    const cMax = Math.max(r$, g$, b$)\n    const cDelta = cMax - cMin\n    let h: number\n    let s: number\n    let l: number\n    const maxAndMin = cMax + cMin\n\n    //lum\n    l = (maxAndMin / 2) * 100\n\n    if (cDelta === 0) s = h = 0\n    else {\n        //hue\n        if (cMax === r$) h = 60 * (((g$ - b$) / cDelta) % 6)\n        else if (cMax === g$) h = 60 * ((b$ - r$) / cDelta + 2)\n        else if (cMax === b$) h = 60 * ((r$ - g$) / cDelta + 4)\n\n        //sat\n        if (l > 50) s = 100 * (cDelta / (2 - maxAndMin))\n        else s = 100 * (cDelta / maxAndMin)\n    }\n\n    // at least 60% luminosity\n    l = Math.max(l, 60)\n    return [Math.floor(h), Math.floor(s), Math.floor(l)]\n}\n\nfunction setRgb(\n    el: SVGElement,\n    r: number,\n    g: number,\n    b: number,\n    radius?: number\n) {\n    const hsl = rgbToHsl(r, g, b)\n    const [h, s, l] = hsl\n    const fill = `hsl(${h}, ${s}%, ${l}%)`\n    el.setAttribute(\"fill\", fill)\n    if (radius !== undefined) {\n        const nr = radius * (1 + (l - 60) / 200)\n        el.setAttribute(\"r\", \"\" + nr)\n    }\n}\n\nfunction setRgbLeds(\n    pixelsContainer: SVGElement,\n    colors: Uint8Array,\n    radius?: number\n) {\n    const pixels = pixelsContainer?.children\n    if (!colors || !pixels) return\n\n    const pn = Math.min(pixels.length, colors.length / 3)\n    let ci = 0\n    for (let i = 0; i < pn; ++i) {\n        const pixel = pixels.item(i) as SVGElement\n        setRgb(pixel, colors[ci], colors[ci + 1], colors[ci + 2], radius)\n        ci += 3\n    }\n}\n\nfunction LightStripWidget(props: {\n    lightVariant: LedPixelVariant\n    numPixels: number\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n}) {\n    const { lightVariant, numPixels, actualBrightness, server, widgetSize } =\n        props\n    const { background, controlBackground } = useWidgetTheme()\n    const pathRef = useRef<SVGPathElement>(undefined)\n    const pixelsRef = useRef<SVGGElement>(undefined)\n    const neoradius = 6\n    const neocircleradius = neoradius + 1\n    const sw = neoradius * 2.8\n    const isJewel = lightVariant === LedPixelVariant.Jewel\n    const isRing = lightVariant === LedPixelVariant.Ring\n\n    // paint svg via dom\n    const paint = () => {\n        //console.log('paint')\n        setRgbLeds(pixelsRef.current, server?.colors, neocircleradius)\n    }\n\n    // reposition pixels along the path\n    useEffect(() => {\n        const p = pathRef.current\n        const pixels = pixelsRef.current?.children\n        if (!p || !pixels) return\n\n        const offset = isJewel ? 1 : 0\n        const pn = pixels.length\n        const length = p.getTotalLength()\n        const extra = isRing || isJewel ? 0 : 1\n        const step = length / (pn - offset)\n\n        for (let i = offset; i < pn; ++i) {\n            const pixel = pixels.item(i) as SVGCircleElement\n            const pos = i - offset\n            const point = p.getPointAtLength(step * (pos + extra / 2.0))\n            pixel.setAttribute(\"cx\", \"\" + point.x)\n            pixel.setAttribute(\"cy\", \"\" + point.y)\n        }\n\n        paint()\n    }, [lightVariant, numPixels, pathRef.current, pixelsRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    let width: number\n    let height: number\n\n    let d = \"\"\n    if (lightVariant === LedPixelVariant.Stick) {\n        const dx = neoradius * 3\n        d = `M 0 ${dx}`\n        for (let i = 0; i < numPixels; ++i) {\n            d += ` h ${dx} 0`\n        }\n        width = numPixels * dx\n        height = 2 * dx\n    } else if (lightVariant === LedPixelVariant.Strip) {\n        const side = Math.ceil(Math.sqrt(numPixels) * 1.6108)\n\n        let i = 0\n        let dir = 1\n        const dx = neoradius * 3\n        const tr = neoradius * 6\n\n        let line = 1\n        d = `M ${2 * tr} ${dx}`\n        while (i < numPixels) {\n            d += ` h ${dx * dir}`\n            if (i % side === side - 1) {\n                // turn around\n                d += ` c ${tr * dir} 0, ${tr * dir} ${tr}, 0 ${tr}`\n                dir = -dir\n                line++\n            }\n            i++\n        }\n\n        width = side * dx + 4 * tr\n        height = line * tr + 2 * dx\n    } else {\n        const n = numPixels - (isJewel ? 1 : 0)\n        const neoperimeter = n * (2.7 * neoradius)\n        const margin = 2 * neoradius\n        const ringradius = neoperimeter / (2 * Math.PI)\n        width = 2 * (margin + ringradius)\n        height = width\n        const wm = width - 2 * margin\n        d = `M ${margin},${\n            height >> 1\n        } a ${ringradius},${ringradius} 0 1,0 ${wm},0 a ${ringradius},${ringradius} 0 1,0 -${wm}, 0`\n    }\n\n    // tune opacity to account for global opacity\n    const alpha = 0.7\n    const opacity = alpha + (1 - alpha) * ((actualBrightness || 0) / 0xff)\n\n    return (\n        <SvgWidget width={width} height={height} size={widgetSize}>\n            <>\n                <path\n                    ref={pathRef}\n                    d={d}\n                    fill=\"transparent\"\n                    stroke={background}\n                    strokeWidth={sw}\n                />\n                <g ref={pixelsRef} opacity={opacity}>\n                    {Array(numPixels)\n                        .fill(0)\n                        .map((_, i) => (\n                            <circle\n                                key={\"pixel\" + i}\n                                r={neocircleradius}\n                                cx={width >> 1}\n                                cy={height >> 1}\n                                stroke={controlBackground}\n                                strokeWidth={1}\n                                aria-label={`pixel ${i}`}\n                            >\n                                <title>pixel {i}</title>\n                            </circle>\n                        ))}\n                </g>\n            </>\n        </SvgWidget>\n    )\n}\n\nfunction LightMatrixWidget(props: {\n    lightVariant: LedPixelVariant\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n    columns: number\n    rows: number\n}) {\n    const { columns, rows, server, widgetSize } = props\n    const { background, controlBackground } = useWidgetTheme()\n\n    const widgetRef = useRef<SVGGElement>()\n    // compute size\n    const pw = 8\n    const ph = 8\n    const ps = 0.5\n    const pr = 1\n    const m = 2\n    const w = columns * pw + (columns + 1) * m\n    const h = rows * ph + (rows + 1) * m\n\n    // paint svg via dom\n    const paint = () => setRgbLeds(widgetRef.current, server?.colors)\n\n    // add leds\n    const render = () => {\n        const ledEls: JSX.Element[] = []\n\n        let y = m\n        for (let row = 0; row < rows; row++) {\n            let x = m\n            for (let col = 0; col < columns; col++) {\n                const index = row * columns + col\n                const label = `pixel ${index} at ${row},${col}`\n                ledEls.push(\n                    <rect\n                        key={`l${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={controlBackground}\n                        stroke={\"none\"}\n                        strokeWidth={ps}\n                        aria-label={label}\n                    >\n                        <title>{label}</title>\n                    </rect>\n                )\n                x += pw + m\n            }\n            y += ph + m\n        }\n        return ledEls\n    }\n\n    // render when DOM render\n    useEffect(paint, [columns, rows, widgetRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                width={w}\n                height={h}\n                rx={pr}\n                ry={pr}\n                fill={background}\n            />\n            <g ref={widgetRef}>{render()}</g>\n        </SvgWidget>\n    )\n}\n\nexport default function LightWidget(props: {\n    server: LedPixelServer\n    variant?: \"icon\" | \"\"\n    service: JDService\n    widgetCount?: number\n    visible?: boolean\n}) {\n    const { service, server } = props\n\n    const numPixelsRegister = useRegister(service, LedPixelReg.NumPixels)\n    const variantRegister = useRegister(service, LedPixelReg.Variant)\n    const actualBrightnessRegister = useRegister(\n        service,\n        LedPixelReg.ActualBrightness\n    )\n    const numColumnsRegister = useRegister(service, LedPixelReg.NumColumns)\n\n    const [numPixels] = useRegisterUnpackedValue<[number]>(\n        numPixelsRegister,\n        props\n    )\n    const [lightVariant] = useRegisterUnpackedValue<[LedPixelVariant]>(\n        variantRegister,\n        props\n    )\n    const [actualBrightness] = useRegisterUnpackedValue<[number]>(\n        actualBrightnessRegister,\n        props\n    )\n    const [numColumns] = useRegisterUnpackedValue<[number]>(\n        numColumnsRegister,\n        props\n    )\n\n    if (numPixels === undefined || actualBrightness === undefined)\n        return <LoadingProgress /> // nothing to render\n\n    if (!numPixels) return null\n\n    if (lightVariant === LedPixelVariant.Matrix) {\n        const columns = numColumns || Math.floor(Math.sqrt(numPixels))\n        const rows = Math.floor(numPixels / columns)\n        return (\n            <LightMatrixWidget\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n                columns={columns}\n                rows={rows}\n            />\n        )\n    } else\n        return (\n            <LightStripWidget\n                numPixels={numPixels}\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n            />\n        )\n}\n","import { Grid, MenuItem, TextField, Typography } from \"@material-ui/core\"\nimport React, { ChangeEvent, useMemo, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { lightEncode } from \"../../../jacdac-ts/src/jdom/light\"\nimport ColorInput from \"../ui/ColorInput\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport RemoveIcon from \"@material-ui/icons/Remove\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\"\nimport LightWidget from \"../widgets/LightWidget\"\nimport { LedPixelCmd } from \"../../../jacdac-ts/src/jdom/constants\"\n/*\n0xD6: range P=0 N=length W=1 S=0- range from pixel P, Npixels long (currently unsupported: every Wpixels skip Spixels)\n*/\n\ninterface LightCommand {\n    name: string\n    args: \"C+\" | \"K\" | \"M\"\n    description: string\n}\n\nconst lightCommands = [\n    {\n        name: \"setall\",\n        args: \"C+\",\n        description: \"set all pixels in current range to given color pattern\",\n    },\n    {\n        name: \"fade\",\n        args: \"C+\",\n        description:\n            \"set pixels in current range to colors between colors in sequence\",\n    },\n    {\n        name: \"rotfwd\",\n        args: \"K\",\n        description: \"rotate (shift) pixels away from the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n    {\n        name: \"rotback\",\n        args: \"K\",\n        description: \"rotate (shift) pixels towards the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n]\n\nfunction LightCommand(props: { service: JDService; expanded: boolean }) {\n    const { service } = props\n    const [sending, setSending] = useState(false)\n\n    const [command, setCommand] = useState(lightCommands[1])\n    const [offset, setOffset] = useState(\"1\")\n    const [duration, setDuration] = useState(\"100\")\n    const [colors, setColors] = useState([\"#0000ff\", \"#ff0000\"])\n    const [mode, setMode] = useState(0)\n\n    const { name, args, description, valueDescription } = command\n    const dcolors = args == \"PC\" ? colors.slice(0, 1) : colors\n\n    const encoded = useMemo(() => {\n        let sargs = \"\"\n        let vargs = []\n        switch (args) {\n            case \"C+\":\n                sargs = Array(colors.length).fill(\"#\").join(\" \")\n                vargs = colors.map(c => parseInt(c.slice(1), 16))\n                break\n            case \"K\": {\n                sargs = \"%\"\n                vargs = [parseInt(offset)]\n                break\n            }\n            case \"PC\": {\n                sargs = \"% #\"\n                vargs = [parseInt(offset), parseInt(colors[0].slice(1), 16)]\n                break\n            }\n        }\n\n        if (mode) vargs.unshift(mode)\n\n        if (vargs.some(v => v === undefined || isNaN(v))) return undefined\n\n        let ms = parseInt(duration)\n        if (isNaN(ms)) ms = 100\n        const src = [mode && `tmpmode %`, `${name} ${sargs}`, `show %`]\n            .filter(l => !!l)\n            .join(\"\\n\")\n        const largs = [...vargs, ms]\n        const r = lightEncode(src, largs)\n        return r\n    }, [command, colors, duration, offset, mode])\n\n    const sendCommand = async () => {\n        if (!encoded) return\n        try {\n            setSending(true)\n            await service.sendCmdAsync(LedPixelCmd.Run, encoded)\n        } finally {\n            setSending(false)\n        }\n    }\n    const handleCommandChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const newName = ev.target.value as string\n        setCommand(lightCommands.find(cmd => cmd.name === newName))\n    }\n    const handleOffsetChange = (ev: ChangeEvent<{ value: string }>) => {\n        setOffset(ev.target.value)\n    }\n    const handleModeChange = (ev: ChangeEvent<any>) => {\n        const v = parseInt(ev.target.value)\n        if (!isNaN(v)) setMode(v)\n    }\n    const handleDurationChange = (ev: ChangeEvent<{ value: string }>) => {\n        setDuration(ev.target.value)\n    }\n    const handleColorChange = (index: number) => async (color: string) => {\n        const cs = colors.slice(0)\n        cs[index] = color\n        setColors(cs)\n    }\n    const handleRemoveColor = () => {\n        const cs = colors.slice(0)\n        cs.pop()\n        setColors(cs)\n    }\n    const handleAddColor = () => {\n        const cs = colors.slice(0)\n        cs.push(\"#ff0000\")\n        setColors(cs)\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justify=\"flex-start\"\n                >\n                    <Grid item key=\"descr\" xs={12}>\n                        <Typography variant=\"caption\">{description}</Typography>\n                    </Grid>\n                    <Grid item key=\"select\" xs={12}>\n                        <SelectWithLabel\n                            disabled={sending}\n                            fullWidth={true}\n                            label=\"command\"\n                            value={name}\n                            onChange={handleCommandChange}\n                        >\n                            {lightCommands.map(cmd => (\n                                <MenuItem key={cmd.name} value={cmd.name}>\n                                    {cmd.name}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item key=\"time\" xs={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            label={\"duration (milliseconds)\"}\n                            type=\"number\"\n                            value={duration}\n                            onChange={handleDurationChange}\n                        />\n                    </Grid>\n                    <Grid item key=\"mode\" xs={6}>\n                        <SelectWithLabel\n                            fullWidth={true}\n                            label=\"update mode\"\n                            value={mode + \"\"}\n                            onChange={handleModeChange}\n                        >\n                            <MenuItem value={0}>replace</MenuItem>\n                            <MenuItem value={1}>add</MenuItem>\n                            <MenuItem value={2}>substract</MenuItem>\n                            <MenuItem value={3}>multiply</MenuItem>\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    alignContent=\"flex-start\"\n                    justify=\"flex-start\"\n                >\n                    {(args === \"K\" || args === \"PC\") && (\n                        <Grid item key=\"K\">\n                            <TextField\n                                variant=\"outlined\"\n                                type=\"number\"\n                                helperText={valueDescription}\n                                value={offset}\n                                onChange={handleOffsetChange}\n                            />\n                        </Grid>\n                    )}\n                    {(args === \"C+\" || args === \"PC\") &&\n                        dcolors.map((c, i) => (\n                            <Grid item xs key={i}>\n                                <ColorInput\n                                    value={c}\n                                    onChange={handleColorChange(i)}\n                                />\n                            </Grid>\n                        ))}\n                    {args === \"C+\" && (\n                        <Grid item xs key=\"minuscolor\">\n                            <IconButtonWithTooltip\n                                disabled={colors.length < 2}\n                                title={\"Remove color\"}\n                                onClick={handleRemoveColor}\n                            >\n                                <RemoveIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                disabled={colors.length > 4}\n                                title={\"Add color\"}\n                                onClick={handleAddColor}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    )}\n                    <Grid item xs key=\"run\">\n                        <IconButtonWithTooltip\n                            disabled={!encoded}\n                            title={\"Run command\"}\n                            onClick={sendCommand}\n                        >\n                            <PlayArrowIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default function DashboardLEDPixel(props: DashboardServiceProps) {\n    const { service, services, expanded } = props\n    const server = useServiceServer<LedPixelServer>(\n        service,\n        () => new LedPixelServer()\n    )\n    return (\n        <>\n            {server && (\n                <LightWidget\n                    server={server}\n                    widgetCount={services.length}\n                    {...props}\n                />\n            )}\n            {expanded && <LightCommand service={service} expanded={expanded} />}\n        </>\n    )\n}\n","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SelectWithLabel(props: {\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown }>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n}) {\n    const {\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n    } = props\n    const labelId = useId()\n    const descrId = useId()\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n            >\n                {none && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n"],"sourceRoot":""}