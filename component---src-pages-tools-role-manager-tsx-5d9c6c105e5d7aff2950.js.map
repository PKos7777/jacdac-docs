{"version":3,"sources":["webpack:///./src/components/ui/CardMediaWithSkeleton.tsx","webpack:///./src/components/DeviceCardMedia.tsx","webpack:///./src/components/DeviceCardHeader.tsx","webpack:///./src/components/alert/ConnectAlert.tsx","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./src/components/ui/LoadingProgress.tsx","webpack:///./jacdac-ts/src/jdom/serviceclient.ts","webpack:///./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./jacdac-ts/src/jdom/rolemanagerclient.ts","webpack:///./src/components/RoleManagerService.tsx","webpack:///./src/components/hooks/useServices.ts","webpack:///./src/components/tools/RoleManager.tsx","webpack:///./src/pages/tools/role-manager.tsx","webpack:///./src/components/ui/SelectWithLabel.tsx","webpack:///./src/components/useServiceClient.ts"],"names":["useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","specification","useDeviceSpecification","imageUrl","useDeviceImage","name","DeviceFirmwareVersionChip","firmwareVersionRegister","service","register","ControlReg","FirmwareVersion","firmwareVersion","useRegisterStringValue","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","useRegisterIntValue","undefined","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","identifierToUrlPath","id","deviceId","filter","s","join","button","marginLeft","spacing","NoSsrConnectAlert","useContext","JacdacContext","bus","connectionState","serviceClass","devices","useChange","b","spec","serviceSpecificationFromClassIdentifier","webusb","isWebUSBEnabled","isWebUSBSupported","length","BusState","Disconnected","ConnectAlert","LoadingProgress","size","JDServiceClient","toString","JDClient","SCAN_DEBOUNCE","RequestedRole","parent","candidates","computeCandidates","services","indexOf","bound","select","setRole","info","map","c","parts","split","slice","RoleManagerClient","scanning","requestedRoles","console","log","dscan","debounceAsync","scan","bind","mount","subscribe","DEVICE_CHANGE","recomputeCandidates","changeEvent","event","RoleManagerEvent","Change","EVENT","connected","addRequested","devs","role","r","find","d","push","inp","InPipeReader","sendPacketAsync","openCommand","RoleManagerCmd","ListRequiredRoles","localDevs","ordevs","rdevs","buf","jdunpack","devidbuf","serviceIdx","devid","toHex","srv","readData","sort","a","strcmp","some","dev","i","emit","CHANGE","ERROR","forEach","rdev","clearRoles","sendCmdAsync","ClearAllRoles","serviceIndex","data","jdpack","fromHex","Packet","from","SetRole","rdp","startSimulators","todos","groupBy","hostDefinition","hostDefinitionFromServiceClass","todo","parentName","Object","keys","t","addHost","arrayConcatMany","START_SIMULATOR","NO_CANDIDATES","RequestedRoleView","requestedRole","client","useState","working","setWorking","handleStartClick","handleChange","ev","value","target","identify","noCandidates","disabled","error","candidate","nodeId","serviceName","RoleManagerService","useServiceClient","handleClearRoles","handleStartSimulators","useServices","options","JSON","stringify","RoleManager","SRV_ROLE_MANAGER","Page","SelectWithLabel","label","fullWidth","required","placeholder","onChange","children","helperText","type","labelId","useId","descrId","hasDescr","factory","deps","setClient","useEffect","unmount"],"mappings":"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","file":"component---src-pages-tools-role-manager-tsx-5d9c6c105e5d7aff2950.js","sourcesContent":["import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg, SRV_CTRL } from \"../../jacdac-ts/src/jdom/constants\";\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\";\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from 'gatsby-theme-material-ui';\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport React from \"react\";\nimport { useRegisterIntValue, useRegisterStringValue } from \"../jacdac/useRegisterValue\";\nimport DeviceActions from \"./DeviceActions\";\nimport DeviceName from \"./DeviceName\";\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\";\nimport DeviceAvatar from \"./devices/DeviceAvatar\";\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props;\n    const firmwareVersionRegister = device?.service(0)?.register(ControlReg.FirmwareVersion)\n    const firmwareVersion = useRegisterStringValue(firmwareVersionRegister);\n\n    return (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || <></>\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props;\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const temperature = useRegisterIntValue(tempRegister);\n    return (temperature !== undefined && <Chip size=\"small\" label={`${temperature}°`} />) || <></>\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice,\n    showAvatar?: boolean,\n    showDeviceId?: boolean,\n    showFirmware?: boolean,\n    showTemperature?: boolean,\n    showMedia?: boolean\n}) {\n    const { device, showFirmware, showTemperature, showMedia, showDeviceId, showAvatar } = props;\n    const specification = useDeviceSpecification(device);\n\n    return <>\n        {showMedia && <DeviceCardMedia device={device} />}\n        <CardHeader\n            avatar={showAvatar && <DeviceAvatar device={device} />}\n            action={<DeviceActions device={device} showReset={true} />}\n            title={<Link color=\"textPrimary\" to={`/devices/${identifierToUrlPath(specification?.id) || \"\"}`}>\n                <DeviceName device={device} />\n            </Link>}\n            subheader={<>\n                <Typography variant=\"caption\" gutterBottom>\n                    {[specification?.name, showDeviceId && device.deviceId].filter(s => !!s).join(', ')}\n                </Typography>\n                {showFirmware && <DeviceFirmwareVersionChip device={device} />}\n                {showTemperature && <DeviceTemperatureChip device={device} />}\n            </>}\n        />\n    </>\n}","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\";\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\";\nimport React, { useContext } from \"react\";\nimport { BusState } from \"../../../jacdac-ts/src/jdom/bus\";\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport ConnectButton from \"../../jacdac/ConnectButton\";\nimport { isWebUSBEnabled, isWebUSBSupported } from \"../../../jacdac-ts/src/jdom/usb\"\nimport { NoSsr } from '@material-ui/core';\nimport useChange from \"../../jacdac/useChange\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    button: {\n        marginLeft: theme.spacing(2)\n    }\n}))\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { bus, connectionState } = useContext<JacdacContextProps>(JacdacContext)\n    const { serviceClass } = props\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const webusb = isWebUSBEnabled() && isWebUSBSupported()\n\n    if (!devices?.length &&\n        webusb &&\n        connectionState === BusState.Disconnected)\n        return <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <ConnectButton className={classes.button} full={true} transparent={true} />\n            </Alert>\n        </Box>\n    return null\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return <NoSsr>\n        <NoSsrConnectAlert {...props} />\n    </NoSsr>\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import { CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function LoadingProgress(props: { size?: string }) {\n    const { size } = props;\n    return <CircularProgress\n        disableShrink\n        variant=\"indeterminate\"\n        size={size || \"1em\"}\n    />\n}","import { JDService } from \"./service\";\nimport { JDDevice } from \"./device\";\nimport { JDBus } from \"./bus\";\nimport { JDClient } from \"./client\";\n\nexport class JDServiceClient extends JDClient {\n\n    constructor(public readonly service: JDService) {\n        super()\n    }\n\n    protected get device(): JDDevice {\n        return this.service.device\n    }\n\n    protected get bus(): JDBus {\n        return this.device.bus\n    }\n\n    toString(): string {\n        return `client of ${this.service}`\n    }\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { InPipeReader } from \"./pipes\";\nimport { JDService } from \"./service\";\nimport { JDServiceClient } from \"./serviceclient\";\nimport { RoleManagerCmd, CHANGE, ERROR, EVENT, DEVICE_CHANGE, RoleManagerEvent } from \"./constants\";\nimport { toHex, strcmp, fromHex, debounceAsync, groupBy, arrayConcatMany } from \"./utils\";\nimport Packet from \"./packet\";\nimport { jdpack, jdunpack } from \"./pack\";\nimport { addHost, hostDefinitionFromServiceClass } from \"../hosts/hosts\";\n\nconst SCAN_DEBOUNCE = 2000\n\nexport class RequestedRole {\n    bound: JDService;\n    candidates: JDService[] = [];\n\n    constructor(\n        readonly parent: RoleManagerClient,\n        readonly name: string,\n        readonly serviceClass: number\n    ) { }\n\n    computeCandidates() {\n        const { bus } = this.parent.service.device;\n        this.candidates = bus.services({ serviceClass: this.serviceClass });\n        // check that bound service is stil update to date\n        if (this.candidates.indexOf(this.bound) < 0)\n            this.bound = undefined;\n    }\n\n    async select(service: JDService) {\n        if (service === this.bound)\n            return // already set\n        if (this.bound)\n            await this.parent.setRole(this.bound, \"\")\n        await this.parent.setRole(service, this.name)\n        this.bound = service;\n    }\n\n    get parentName(): string {\n        const parts = this.name.split(/\\//g);\n        return parts.length > 1 ? parts.slice(0, parts.length - 1).join(\"/\") : undefined;\n    }\n\n    toString() {\n        let info = `${this.name}:${this.serviceClass.toString(16)}`\n        if (this.bound)\n            info += ` -> ${this.bound}`;\n        info += \", \" + this.candidates.map(c => c.toString()).join();\n        return info;\n    }\n}\n\nexport class RoleManagerClient extends JDServiceClient {\n    private scanning = false;\n    public requestedRoles: RequestedRole[] = undefined;\n\n    constructor(service: JDService) {\n        super(service)\n        console.log(`rdp: new`)\n\n        const dscan = debounceAsync(this.scan.bind(this), SCAN_DEBOUNCE);\n        this.mount(this.bus.subscribe(DEVICE_CHANGE, debounceAsync(async () => {\n            this.recomputeCandidates();\n        }, SCAN_DEBOUNCE)));\n        const changeEvent = this.service.event(RoleManagerEvent.Change);\n        this.mount(changeEvent.subscribe(EVENT, dscan));\n        dscan();\n    }\n\n    async scan() {\n        if (this.scanning\n            || !this.service.device.connected)\n            return;\n\n        const addRequested = (devs: RequestedRole[], role: string, serviceClass: number) => {\n            let r = devs.find(d => d.name == role)\n            if (!r) devs.push(r = new RequestedRole(this, role, serviceClass))\n            return r\n        }\n\n        try {\n            console.log(`rdp start`)\n            this.scanning = true;\n            const inp = new InPipeReader(this.bus)\n            await this.service.sendPacketAsync(\n                inp.openCommand(RoleManagerCmd.ListRequiredRoles),\n                true)\n\n            const localDevs = this.bus.devices();\n            const ordevs = this.requestedRoles?.slice(0) || [];\n            const rdevs: RequestedRole[] = []\n\n            for (const buf of await inp.readData()) {\n                const [devidbuf, serviceClass, serviceIdx, role]\n                    = jdunpack<[Uint8Array, number, number, string]>(buf, \"b[8] u32 u8 s\")\n                const devid = toHex(devidbuf);\n                console.log({ devidbuf, role, serviceClass })\n                const r = addRequested(rdevs, role, serviceClass)\n                const srv = localDevs\n                    .find(d => d.deviceId == devid)\n                    ?.service(serviceIdx);\n                if (srv && srv.serviceClass === serviceClass)\n                    r.bound = srv;\n            }\n\n            rdevs.sort((a, b) => strcmp(a.name, b.name))\n\n            if (rdevs.length !== ordevs.length\n                || rdevs.some(\n                    (dev, i) => (dev.name !== ordevs[i].name) || (dev.bound !== ordevs[i].bound)\n                )\n            ) {\n                this.requestedRoles = rdevs;\n                this.recomputeCandidates();\n                console.log(`rdp changed`, this.requestedRoles)\n                this.emit(CHANGE, this.requestedRoles)\n            }\n\n            console.log(`rdp done`)\n        }\n        catch (e) {\n            this.emit(ERROR, e);\n        }\n        finally {\n            this.scanning = false;\n        }\n    }\n\n    private recomputeCandidates() {\n        this.requestedRoles?.forEach(rdev => rdev.computeCandidates());\n    }\n\n    async clearRoles() {\n        await this.service.sendCmdAsync(RoleManagerCmd.ClearAllRoles)\n    }\n\n    async setRole(service: JDService, role: string) {\n        const { device, serviceIndex } = service;\n        this.log(`set role ${device}:${serviceIndex} to ${role}`)\n        const data = jdpack<[Uint8Array, number, string]>(\"b[8] u8 s\", [fromHex(device.deviceId), serviceIndex, role || \"\"]);\n        await this.service.sendPacketAsync(Packet.from(RoleManagerCmd.SetRole, data), true)\n    }\n\n    toString() {\n        return (this.requestedRoles || []).map(rdp => rdp.toString()).join('\\n')\n    }\n\n    get missingRoles() {\n        return (this.requestedRoles || []).filter(role => !role.bound).length > 0\n    }\n\n    startSimulators() {\n        if (!this.requestedRoles) return;\n\n        // collect roles that need to be bound\n        const todos = groupBy(this.requestedRoles.filter(role => !role.bound)\n            .map(role => ({\n                role, hostDefinition: hostDefinitionFromServiceClass(role.serviceClass)\n            }))\n            .filter(todo => !!todo.hostDefinition),\n            todo => todo.role.parentName || \"\");\n\n        // spawn devices with group of devices\n        Object.keys(todos).forEach(parentName => {\n            const todo = todos[parentName];\n            // no parent, spawn individual services\n            if (!parentName) {\n                todo.forEach(t => addHost(this.bus, t.hostDefinition.services(), t.hostDefinition.name));\n            } else { // spawn all services into 1\n                addHost(this.bus, arrayConcatMany(todo.map(t => t.hostDefinition.services())), parentName)\n            }\n        })\n    }\n}\n","import React, { useContext, useState } from \"react\"\nimport { Card, CardActions, CardContent, CircularProgress, Grid, MenuItem } from \"@material-ui/core\"\nimport useChange from \"../jacdac/useChange\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { RequestedRole, RoleManagerClient } from \"../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport CmdButton from \"./CmdButton\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport useServiceClient from \"./useServiceClient\"\nimport SelectWithLabel from \"./ui/SelectWithLabel\"\nimport DeviceName from \"./DeviceName\"\nimport { serviceName } from \"../../jacdac-ts/src/jdom/pretty\"\nimport { addHost, hostDefinitionFromServiceClass } from \"../../jacdac-ts/src/hosts/hosts\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport LoadingProgress from \"./ui/LoadingProgress\"\n\nconst START_SIMULATOR = \"__start_simulator\"\nconst NO_CANDIDATES = \"__no_candidates\"\n\nfunction RequestedRoleView(props: {\n    requestedRole: RequestedRole,\n    client: RoleManagerClient\n}) {\n    const { requestedRole, client } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [working, setWorking] = useState(false)\n    const { name: role, serviceClass } = requestedRole;\n\n    const handleStartClick = () => {\n        addHost(bus, hostDefinition.services(), hostDefinition.name)\n    }\n    const handleChange = async (ev: React.ChangeEvent<{ value: unknown }>) => {\n        const value: string = ev.target.value as string;\n        if (value === START_SIMULATOR) {\n            handleStartClick();\n        } else if (value === NO_CANDIDATES) {\n            // do nothing\n        }\n        else {\n            const srv = requestedRole.candidates.find(c => c.id == value)\n            if (srv && client) {\n                try {\n                    setWorking(true)\n                    await client.setRole(srv, role)\n                    await srv.device.identify()\n                }\n                finally {\n                    setWorking(false)\n                }\n            }\n        }\n    }\n\n    const noCandidates = !requestedRole.candidates?.length;\n    const disabled = working;\n    const value = requestedRole.bound?.id || \"\"\n    const error = !value && \"select a device\"\n    const hostDefinition = hostDefinitionFromServiceClass(serviceClass)\n\n    return <Grid item xs={12} sm={6} md={4} xl={3}>\n        <SelectWithLabel\n            fullWidth={true}\n            disabled={disabled}\n            label={role}\n            value={value}\n            onChange={handleChange}\n            error={error}>\n            {requestedRole.candidates?.map(candidate => <MenuItem key={candidate.nodeId} value={candidate.id}>\n                <DeviceName device={candidate.device} />[{candidate.serviceIndex}]\n            </MenuItem>)}\n            {noCandidates && !hostDefinition && <MenuItem value={NO_CANDIDATES}>Please connect a device with a <b>{serviceName(requestedRole.serviceClass)}</b> service</MenuItem>}\n            {hostDefinition && <MenuItem value={START_SIMULATOR}>start simulator</MenuItem>}\n        </SelectWithLabel>\n    </Grid>\n}\n\n\nexport default function RoleManagerService(props: {\n    service: JDService,\n    clearRoles?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { service, clearRoles } = props\n    const client = useServiceClient(service, srv => new RoleManagerClient(srv));\n    const requestedRoles = useChange(client, c => c?.requestedRoles);\n\n    const handleClearRoles = async () => await client?.clearRoles()\n    const handleStartSimulators = async () => client.startSimulators();\n\n    return <Card>\n        <DeviceCardHeader device={service.device} showMedia={true} />\n        <CardContent>\n            {!requestedRoles?.length && <LoadingProgress />}\n            <Grid container spacing={1}>\n                {requestedRoles?.map(rdev => <RequestedRoleView\n                    key={rdev.name} requestedRole={rdev} client={client} />)}\n            </Grid>\n        </CardContent>\n        <CardActions>\n            {clearRoles && client && <CmdButton variant=\"outlined\" trackName=\"rolemgr.clearroles\" size=\"small\"\n                onClick={handleClearRoles}>\n                Clear roles\n            </CmdButton>}\n            <CmdButton variant=\"outlined\" trackName=\"rolemgr.startsims\" disabled={!requestedRoles} size=\"small\" onClick={handleStartSimulators}>\n                Start simulators\n            </CmdButton>\n        </CardActions>\n    </Card >\n}","import { useContext } from \"react\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options: {\n    serviceName?: string;\n    serviceClass?: number;\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options)\n        , [JSON.stringify(options)])\n    return services;\n}","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { SRV_ROLE_MANAGER } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport Alert from \"../ui/Alert\"\nimport RoleManagerService from \"../RoleManagerService\"\nimport useServices from \"../hooks/useServices\"\n\nexport default function RoleManager(props: { clearRoles?: boolean }) {\n    const { clearRoles } = props;\n    const services = useServices({ serviceClass: SRV_ROLE_MANAGER });\n\n    return <>\n        {<ConnectAlert serviceClass={SRV_ROLE_MANAGER} />}\n        {!services.length && <Alert severity=\"info\">We could not find any device with the role manager service on the bus!</Alert>}\n        <Grid container spacing={2}>\n            {services.map(service => <Grid key={service.id} item xs={12}>\n                <RoleManagerService service={service} clearRoles={clearRoles} />\n            </Grid>)}\n        </Grid>\n    </>\n}","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport RoleManager from \"../../components/tools/RoleManager\"\n\nexport default function Page() {\n    return <>\n        <h1>Role Manager</h1>\n        <p>\n            Use this page to configure the roles of devices using the\n        <Link to=\"/services/rolemanager/\">role manager service</Link>.\n    </p>\n        <RoleManager clearRoles={true} />\n    </>\n}\n","import { FormControl, FormHelperText, InputLabel, Select } from \"@material-ui/core\"\nimport React, { ChangeEvent } from \"react\"\nimport { useId } from \"react-use-id-hook\";\n\nexport default function SelectWithLabel(props: {\n    required?: boolean,\n    label?: string,\n    disabled?: boolean,\n    error?: string,\n    value?: string,\n    placeholder?: string,\n    type?: string,\n    fullWidth?: boolean,\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown; }>) => void,\n    helperText?: string,\n    children?: any\n}) {\n    const { label, fullWidth, required, disabled, value, error,\n        placeholder, onChange, children, helperText, type } = props;\n    const labelId = useId();\n    const descrId = useId();\n    const hasDescr = (!!helperText || !!error);\n\n    return <FormControl fullWidth={fullWidth} variant=\"outlined\">\n        <InputLabel id={labelId} key=\"label\">{required ? `${label} *` : label}</InputLabel>\n        <Select\n            disabled={disabled}\n            label={label}\n            value={value}\n            error={!!error}\n            fullWidth={true}\n            placeholder={placeholder}\n            type={type}\n            labelId={labelId}\n            aria-describedby={hasDescr ? descrId : undefined}\n            onChange={onChange}>\n            {children}\n        </Select>\n        {hasDescr && <FormHelperText id={descrId}>{error || helperText}</FormHelperText>}\n    </FormControl >;\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}