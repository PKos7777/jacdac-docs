{"version":3,"sources":["webpack:///./src/components/alert/ConnectAlert.tsx","webpack:///./jacdac-ts/src/jdom/serviceclient.ts","webpack:///./jacdac-ts/src/jdom/settingsclient.ts","webpack:///./src/components/SettingsCard.tsx","webpack:///./src/components/tools/SettingsManager.tsx","webpack:///./src/pages/tools/settings-manager.tsx","webpack:///./src/components/useServiceClient.ts"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","useContext","JacdacContext","bus","connectionState","serviceClass","devices","useChange","b","spec","serviceSpecificationFromClassIdentifier","webusb","isWebUSBEnabled","isWebUSBSupported","length","BusState","Disconnected","name","ConnectAlert","JDServiceClient","service","toString","device","JDClient","SettingsClient","registersUseAcks","clear","sendCmdAsync","SettingsCmd","Clear","listKeys","inp","InPipeReader","sendPacketAsync","openCommand","ListKeys","readAll","output","keys","map","pkt","stringData","filter","k","list","List","jdunpack","key","valueb","value","bufferToString","undefined","kv","setValue","trim","deleteValue","Packet","from","Set","jdpack","stringToBuffer","emit","CHANGE","getValue","Get","sendCmdAwaitResponseAsync","resp","data","rkey","console","error","Delete","SettingRow","client","mutable","isSecret","displayName","slice","handleComponentDelete","nameError","valueError","AddSettingRow","useState","setName","secret","setSecret","secretLabelId","useId","handleNameChange","ev","target","handleValueChange","handleChecked","checked","handleAdd","keyError","SettingsCard","useServiceClient","srv","values","useChangeAsync","c","handleClear","SettingsManager","services","SRV_SETTINGS","Connected","id","Page","factory","deps","setClient","useEffect","unmount"],"mappings":"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","file":"component---src-pages-tools-settings-manager-tsx-3de36a2d299e23341525.js","sourcesContent":["// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\";\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\";\nimport React, { useContext } from \"react\";\nimport { BusState } from \"../../../jacdac-ts/src/jdom/bus\";\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport ConnectButton from \"../../jacdac/ConnectButton\";\nimport { isWebUSBEnabled, isWebUSBSupported } from \"../../../jacdac-ts/src/jdom/usb\"\nimport { NoSsr } from '@material-ui/core';\nimport useChange from \"../../jacdac/useChange\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    button: {\n        marginLeft: theme.spacing(2)\n    }\n}))\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { bus, connectionState } = useContext<JacdacContextProps>(JacdacContext)\n    const { serviceClass } = props\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const webusb = isWebUSBEnabled() && isWebUSBSupported()\n\n    if (!devices?.length &&\n        webusb &&\n        connectionState === BusState.Disconnected)\n        return <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <ConnectButton className={classes.button} full={true} transparent={true} />\n            </Alert>\n        </Box>\n    return null\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return <NoSsr>\n        <NoSsrConnectAlert {...props} />\n    </NoSsr>\n}","import { JDService } from \"./service\";\nimport { JDDevice } from \"./device\";\nimport { JDBus } from \"./bus\";\nimport { JDClient } from \"./client\";\n\nexport class JDServiceClient extends JDClient {\n\n    constructor(public readonly service: JDService) {\n        super()\n    }\n\n    protected get device(): JDDevice {\n        return this.service.device\n    }\n\n    protected get bus(): JDBus {\n        return this.device.bus\n    }\n\n    toString(): string {\n        return `client of ${this.service}`\n    }\n}\n","import { CHANGE, SettingsCmd } from \"./constants\";\nimport { jdpack, jdunpack } from \"./pack\";\nimport Packet from \"./packet\";\nimport { InPipeReader } from \"./pipes\";\nimport { JDService } from \"./service\";\nimport { JDServiceClient } from \"./serviceclient\";\nimport { bufferToString, stringToBuffer } from \"./utils\";\n\nexport default class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true;\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear);\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(inp.openCommand(SettingsCmd.ListKeys), true)\n        const { output } = await inp.readAll();\n        const keys = output.map(pkt => pkt.stringData);\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string, value?: string }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(inp.openCommand(SettingsCmd.List), true)\n        const { output } = await inp.readAll();\n        return output.map(pkt => {\n            const [key, valueb] = pkt.jdunpack<[string, Uint8Array]>(\"z b\");\n            const value = valueb.length > 0 ? bufferToString(valueb) : undefined;\n            return key && { key, value }\n        }).filter(kv => !!kv);\n    }\n\n    async setValue(key: string, value: string) {\n        key = key.trim();\n        if (value === undefined) {\n            await this.deleteValue(key);\n        } else {\n            const pkt = Packet.from(SettingsCmd.Set, jdpack(\"z b\", [key, stringToBuffer(value)]));\n            await this.service.sendPacketAsync(pkt);\n            this.emit(CHANGE);\n        }\n    }\n\n    async getValue(key: string): Promise<string> {\n        if (!key) return undefined;\n\n        key = key.trim();\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]));\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt);\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\");\n        if (key !== rkey) {\n            console.error(`device returned different key, got \"${rkey}\", expected \"${key}\"`)\n            return undefined;\n        }\n        return bufferToString(value);\n    }\n\n\n    async deleteValue(key: string) {\n        if (!key) return;\n        key = key.trim();\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]));\n        await this.service.sendPacketAsync(pkt);\n\n        this.emit(CHANGE);\n    }\n}\n\n","import { Card, CardActions, CardContent, FormLabel, Grid, Switch, TextField } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\";\nimport DeviceCardHeader from \"./DeviceCardHeader\";\nimport useServiceClient from \"./useServiceClient\";\nimport SettingsClient from \"../../jacdac-ts/src/jdom/settingsclient\"\nimport { useChangeAsync } from \"../jacdac/useChange\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from '@material-ui/icons/Add';\nimport CmdButton from \"./CmdButton\";\nimport { useId } from \"react-use-id-hook\"\n\nfunction SettingRow(props: { client: SettingsClient, name: string, value?: string, mutable?: boolean }) {\n    const { client, name, value, mutable } = props;\n    const isSecret = name[0] == \"$\";\n    const displayName = isSecret ? name.slice(1) : name;\n    const handleComponentDelete = async () => {\n        await client.deleteValue(name)\n    }\n    const nameError = \"\"\n    const valueError = \"\"\n    return <Grid item xs={12}>\n        <Grid container spacing={1}>\n            <Grid item xs={4}>\n                <TextField fullWidth={true} error={!!nameError} variant=\"outlined\" label=\"key\" helperText={nameError} value={displayName} disabled={true} />\n            </Grid>\n            <Grid item xs={4}>\n                <TextField fullWidth={true} error={!!valueError} variant=\"outlined\" helperText={valueError} value={isSecret ? \"...\" : value} disabled={true} />\n            </Grid>\n            {mutable && <Grid item>\n                <CmdButton trackName=\"settings.delete\" title=\"Delete settings\" onClick={handleComponentDelete} icon={<DeleteIcon />} />\n            </Grid>}\n        </Grid>\n    </Grid>\n}\n\nfunction AddSettingRow(props: { client: SettingsClient }) {\n    const { client } = props;\n    const [name, setName] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const [secret, setSecret] = useState(true)\n    const secretLabelId = useId();\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setName(ev.target.value.trim())\n    }\n    const handleValueChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setValue(ev.target.value)\n    }\n    const handleChecked = (ev, checked: boolean) => {\n        setSecret(checked);\n    }\n    const handleAdd = async () => {\n        await client.setValue(`${secret ? \"$\" : \"\"}${name}`, value)\n        setName(\"\")\n        setValue(\"\")\n        setSecret(true)\n    }\n    const keyError = \"\"\n    const valueError = \"\"\n\n    return <Grid item xs={12}>\n        <Grid container spacing={1}>\n            <Grid item>\n                <TextField fullWidth={true} error={!!keyError} variant=\"outlined\" label=\"Add key\" helperText={keyError} value={name} onChange={handleNameChange} />\n            </Grid>\n            <Grid item>\n                <TextField fullWidth={true} error={!!valueError} variant=\"outlined\" label=\"value\" helperText={valueError} value={value} onChange={handleValueChange} />\n            </Grid>\n            <Grid item>\n                <Switch checked={secret} onChange={handleChecked} aria-labelledby={secretLabelId} />\n                <label id={secretLabelId}>Secret</label>\n            </Grid>\n            <Grid item>\n                <CmdButton trackName=\"settings.add\"\n                    disabled={!name || !!keyError || !!valueError} title=\"Add setting\" onClick={handleAdd} icon={<AddIcon />} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\nexport default function SettingsCard(props: { service: JDService, mutable?: boolean }) {\n    const { service, mutable } = props;\n    const client = useServiceClient(service, srv => new SettingsClient(srv));\n    const values = useChangeAsync(client, c => c?.list());\n    if (!client)\n        return null // wait till loaded\n\n    const handleClear = async () => await client?.clear();\n    return <Card>\n        <DeviceCardHeader device={service.device} showMedia={true} />\n        <CardContent>\n            <Grid container spacing={2}>\n                {values?.map(({ key, value }) => <SettingRow key={key} name={key} value={value} client={client} mutable={mutable} />)}\n                {mutable && <AddSettingRow client={client} key=\"add\" />}\n            </Grid>\n        </CardContent>\n        {mutable && <CardActions>\n            <CmdButton trackName=\"settings.clearall\" title=\"Clear all settings\" icon={<DeleteIcon />} onClick={handleClear}>\n                Clear\n            </CmdButton>\n        </CardActions>}\n    </Card >\n}\n","import React, { useContext } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport { SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BusState } from \"../../../jacdac-ts/src/jdom/bus\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport Alert from \"../ui/Alert\"\nimport SettingsCard from \"../SettingsCard\"\n\nexport default function SettingsManager() {\n    const { bus, connectionState } = useContext<JacdacContextProps>(JacdacContext)\n\n    const services = useChange(bus, b => b.services({ serviceClass: SRV_SETTINGS }));\n\n    return <>\n        {<ConnectAlert serviceClass={SRV_SETTINGS} />}\n        {!services.length && connectionState == BusState.Connected && <Alert severity=\"info\">We could not find any device with the settings storage service on the bus!</Alert>}\n        <Grid container spacing={2}>\n            {services.map(service => <Grid key={service.id} item xs={12}>\n                <SettingsCard service={service} mutable={true} />\n            </Grid>)}\n        </Grid>\n    </>\n}","import React from \"react\"\nimport SettingsManager from \"../../components/tools/SettingsManager\"\n\nexport default function Page() {\n    return <>\n        <h1>\n            Settings Manager\n    </h1>\n        <p>\n            Configure settings in a <Link to=\"/services/settings/\">setting store</Link>.\n    </p>\n        <SettingsManager />\n    </>\n}","import { useEffect, useState } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(service: JDService, factory: (service: JDService) => T, deps: React.DependencyList = []) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client;\n}"],"sourceRoot":""}