{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardTrafficLight.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts"],"names":["m","r","ri","w","h","cx","sw","TrafficLight","props","cy","fill","background","label","onDown","buttonProps","useSvgButtonProps","DashboardTrafficLight","service","services","variant","widgetRef","useRef","redRegister","useRegister","TrafficLightReg","orangeRegister","greenRegister","red","useRegisterBoolValue","orange","green","lightRegs","lights","server","useServiceServer","color","useWidgetTheme","controlBackground","widgetSize","useWidgetSize","length","names","colors","navProps","useKeyboardNavigationProps","current","map","v","i","reg","register","sendSetBoolAsync","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","useArrowKeys","options","onLeft","onUp","onRight","symmetric","undefined","handlers","e","charCode","keyCodeFromEvent","handler","preventDefault","useKeyboardNavigation","parentRef","query","onMove","offset","console","log","focusable","Array","from","querySelectorAll","me","findIndex","f","document","activeElement","next","focus","vertical","onKeyDown"],"mappings":"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","file":"8847-e265e70ab0fdd08c7f4a.js","sourcesContent":["import React, { useRef } from \"react\"\nimport { TrafficLightReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport TrafficLightServer from \"../../../jacdac-ts/src/servers/trafficlightserver\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst m = 2\nconst r = 8\nconst ri = 7\nconst w = 2 * r + 2 * m\nconst h = 4 * w + 2 * m\nconst cx = w / 2\nconst sw = 2\n\nfunction TrafficLight(props: {\n    cx: number\n    cy: number\n    label: string\n    background: string\n    fill: string\n    onDown?: () => void\n}) {\n    const { cx, cy, fill, background, label, onDown } = props\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(label, onDown)\n\n    return (\n        <>\n            <circle cx={cx} cy={cy} r={r} fill={background} stroke={\"none\"} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                fill={fill}\n                strokeWidth={sw}\n                {...buttonProps}\n            />\n        </>\n    )\n}\n\nexport default function DashboardTrafficLight(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const widgetRef = useRef<SVGGElement>()\n\n    const redRegister = useRegister(service, TrafficLightReg.Red)\n    const orangeRegister = useRegister(service, TrafficLightReg.Orange)\n    const greenRegister = useRegister(service, TrafficLightReg.Green)\n\n    const red = useRegisterBoolValue(redRegister, props)\n    const orange = useRegisterBoolValue(orangeRegister, props)\n    const green = useRegisterBoolValue(greenRegister, props)\n\n    const lightRegs = [\n        TrafficLightReg.Red,\n        TrafficLightReg.Orange,\n        TrafficLightReg.Green,\n    ]\n    const lights = [red, orange, green]\n\n    const server = useServiceServer<TrafficLightServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground } = useWidgetTheme(color)\n    const widgetSize = useWidgetSize(variant, services?.length)\n\n    let cy = 0\n    const names = [\"red\", \"yellow\", \"green\"]\n    const colors = [\"red\", \"orange\", \"green\"]\n    const navProps = useKeyboardNavigationProps(widgetRef.current)\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <g ref={widgetRef} {...navProps}>\n                <rect\n                    x={0}\n                    y={0}\n                    width={w}\n                    height={h}\n                    rx={m}\n                    fill={background}\n                />\n                {lights.map((v, i) => {\n                    cy += m + 2 * r\n                    const fill = v ? colors[i] : controlBackground\n                    const onDown = async () => {\n                        const reg = service.register(lightRegs[i])\n                        await reg.sendSetBoolAsync(!v, true)\n                    }\n                    return (\n                        <TrafficLight\n                            key={i}\n                            cx={cx}\n                            cy={cy}\n                            background={background}\n                            fill={fill}\n                            onDown={onDown}\n                            label={`${names[i]} ${v ? \"on\" : \"off\"}`}\n                        />\n                    )\n                })}\n            </g>\n        </SvgWidget>\n    )\n}\n","import React, { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\";\n\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\n\nexport default function useArrowKeys(options: {\n    onLeft?: () => void,\n    onRight?: () => void,\n    onUp?: () => void,\n    onDown?: () => void,\n    symmetric?: boolean;\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options;\n\n    if (!onLeft && !onUp && !onRight && !onDown)\n        return undefined;\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft)\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e);\n        const handler = handlers[charCode];\n        if (handler) {\n            e.preventDefault();\n            handler();\n        }\n    }\n}\n","import React from \"react\"\n\nexport default function useKeyboardNavigation(parentRef: Element) {\n    const query = '[tabindex=\"0\"]';\n    const onMove = (offset: number) => () => {\n        console.log('keyboard move', { offset })\n        const focusable = Array.from<SVGElement>(parentRef?.querySelectorAll(query) || []);\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement);\n            const next = ((me + offset) + focusable.length) % focusable.length;\n            focusable[next].focus();\n        }\n    }\n    return onMove;\n}","import useArrowKeys from \"./useArrowKeys\";\nimport useKeyboardNavigation from \"./useKeyboardNavigation\";\n\nexport default function useKeyboardNavigationProps(parentRef: Element, vertical?: boolean) {\n    const onMove = useKeyboardNavigation(parentRef);\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    });\n\n    return {\n        onKeyDown: parentRef && onKeyDown\n    }\n}"],"sourceRoot":""}