{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/VMRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","register","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","sendCommandAsync","command","values","commandName","p","isCommand","sendCmdAsync","jdpack","packFormat","writeRegisterAsync","ev","jdreg","sendSetPackedAsync","lookup","e","root","type","object","fld","undefined","property","unpackedValue","field","fields","f","value","refreshRegistersAsync","k","refresh","JDServiceClient","VMEnvironment","_currentEvent","_envs","_locals","serviceChanged","role","added","unmount","reg","serviceEnv","getService","emit","getRootName","s","ROLE_HAS_NO_SERVICE","Object","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","le","val","JDVMError","id","lit","useWindowEvent","listener","passive","deps","useEffect","window","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","m","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","createElement","style","position","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","msg","data","keys","r","useStyles","makeStyles","createStyles","root2","paddingTop","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","origin","URL","PACKET_SEND","PACKET_PROCESS","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","MyRoleManager","notify","_roles","_devices","on","DEVICE_ANNOUNCE","dev","addServices","DEVICE_DISCONNECT","removeServices","roles","services","roleNeedingService","nameMatch","serviceShortId","shortId","d","rolesToUnmap","n1","n2","cn1","slice","toLowerCase","trim","cn2","getServicesFromName","addRoleService","existingServices","device","VMStatus","JumpException","label","IT4CommandEvaluator","parent","gc","_regSaved","_changeSaved","_started","trace","context","evalExpression","expr","checkExpression","start","inst","args","evaluate","_status","Running","neededStart","a","Completed","regValue","Stopped","IT4CommandRunner","handlerId","_eval","step","isWaiting","finish","status","cancel","IT4HandlerRunner","stopped","_labelToIndex","commands","c","cmd","reset","commandIndex","getCommand","_commandIndex","executeCommandAsync","VM_COMMAND_ATTEMPTED","_currentCommand","sourceId","VM_COMMAND_COMPLETED","Ready","IT4ProgramRunner","message","TRACE","prog","_handlers","_waitQueue","_running","_in_run","_program","compileProgram","checkProgram","regs","events","errors","debug","_rm","_env","ROLE_SERVICE_BOUND","ROLE_CHANGE","handlers","h","ROLE_SERVICE_UNBOUND","ERROR","run","resolveService","nextTime","ProgramError","VMRunner","runner","autoStartDefault","autoStart","disabled","useChange","t","setAutoStart","handleRun","handleCancel","running","useVMRunner","program","AppContext","setError","testRunner","setTestRunner","handleTrace","Flags","VMRoles","_","handleRoleClick","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","serviceSpecificationFromName","shortName","friendlyName","Diagnostics","xml","stringify","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","showDashboard","useLocalStorage","setXml","setSource","setProgram","handleXml","handleJSON","json","newSource","handleI4Program","newProgram","blocks","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-tsx-d19ce907bf9c9508eb3c.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { isEvent, isRegister, isCommand } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { jdpack, PackedValues } from \"../jdom/pack\"\nimport { ROLE_HAS_NO_SERVICE } from \"./utils\"\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    public async sendCommandAsync(command: jsep.Identifier, values: PackedValues) {\n        const commandName = command?.name\n        const pkt = this.service.specification.packets.find(\n            p => isCommand(p) && p.name === commandName\n        )\n        if (pkt) {\n            await this.service.sendCmdAsync(\n                pkt.identifier,\n                jdpack(pkt.packFormat, values),\n                true\n            )\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async writeRegisterAsync(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        await jdreg?.sendSetPackedAsync(jdreg.specification?.packFormat, [ev], true)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public async refreshRegistersAsync() {\n        for (const k in this._registers) {\n            const register = this._registers[k]\n            await register.refresh()\n        }\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor() {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService, added: boolean) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (added) {\n            this._envs[role] = new VMServiceEnvironment(service)\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, () => { this.emit(CHANGE)})\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        let s = this._envs[root]\n        if (!s) {\n            this.emit(ROLE_HAS_NO_SERVICE, root)\n        }\n        return s\n    }\n\n    public async refreshRegistersAsync() {\n        for(const s of Object.values(this._envs)) {\n            await s?.refreshRegistersAsync()\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async sendCommandAsync(e: jsep.MemberExpression, values: PackedValues) {\n        const serviceEnv = this.getService(e)\n        await serviceEnv?.sendCommandAsync(e.property as jsep.Identifier, values)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) {\n            return undefined\n        }\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            return serviceEnv.lookup(reg)\n        }\n        return undefined\n    }\n\n    public async writeRegisterAsync(e: jsep.MemberExpression | string, ev: any) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            await serviceEnv.writeRegisterAsync(reg, ev)\n        }\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        for(const vs of Object.values(this._envs)) {\n            vs.unmount()\n         }\n    }\n}\n","import { JDVMError } from \"./utils\"\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                if (val === undefined)\n                    throw new JDVMError(`lookup of ${unparse(e)} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                const val = this.env(id.name)\n                if (val === undefined)\n                    throw new JDVMError(`lookup of ${id.name} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<{ serviceShortId: string; service: JDService }> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    roles() {\n        return this._roles\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            const roleNeedingService = Object.keys(this._roles).find(\n                k =>\n                    !this._roles[k].service &&\n                    this.nameMatch(\n                        this._roles[k].serviceShortId,\n                        s.specification.shortId\n                    )\n            )\n            if (roleNeedingService && this._devices.indexOf(dev) === -1) {\n                this._roles[roleNeedingService] = {\n                    serviceShortId: s.specification.shortId,\n                    service: s,\n                }\n                this._devices.push(dev)\n                if (this.notify) this.notify(roleNeedingService, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            const rolesToUnmap = Object.keys(this._roles).filter(\n                k => dev.services().indexOf(this._roles[k].service) >= 0\n            )\n            if (rolesToUnmap.length > 0) {\n                rolesToUnmap.forEach(role => {\n                    const service = this._roles[role].service\n                    this._roles[role] = {\n                        serviceShortId: service.specification.shortId,\n                        service: undefined,\n                    }\n                    if (this.notify) this.notify(role, service, false)\n                })\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        return this._roles[role].service\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortId, root))\n    }\n\n    public addRoleService(role: string, serviceShortId: string) {\n        if (role in this._roles && this._roles[role].service) return\n        this._roles[role] = { serviceShortId: serviceShortId, service: undefined }\n        const existingServices = Object.values(this._roles)\n            .filter(p => p.service)\n            .map(p => p.service)\n        const ret = this.getServicesFromName(serviceShortId).filter(\n            s => existingServices.indexOf(s) === -1\n        )\n        if (ret.length > 0) {\n            this._roles[role].service = ret[0]\n            this._devices.push(ret[0].device)\n            this.notify(role, ret[0], true)\n        }\n    }\n}\n","import { IT4Program, IT4Handler, IT4Command } from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./ir\"\nimport {\n    ROLE_CHANGE,\n    ROLE_SERVICE_BOUND,\n    ROLE_SERVICE_UNBOUND,\n    VM_COMMAND_ATTEMPTED,\n    VM_COMMAND_COMPLETED,\n    JDVMError,\n} from \"./utils\"\nimport { unparse } from \"./expr\"\nimport { SMap } from \"../jdom/utils\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TraceContext = any\n\nexport enum VMStatus {\n    ProgramError = \"programerror\",\n    Ready = \"ready\",\n    Running = \"running\",\n    Completed = \"completed\",\n    Stopped = \"stopped\",\n}\n\ninterface Environment {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass JumpException {\n    constructor(public label: string) {}\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: IT4CommandRunner,\n        private readonly env: Environment,\n        private readonly gc: IT4Command\n    ) {}\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate() {\n        this._status = VMStatus.Running\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            this._status = VMStatus.Completed\n            return\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new JumpException((args[1] as jsep.Identifier).name)\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"jump\": {\n                this._status = VMStatus.Completed\n                throw new JumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n            default:\n                throw new JDVMError(`Unknown instruction ${this.inst}`)\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(\n        public readonly parent: IT4HandlerRunner,\n        private handlerId: number,\n        env: Environment,\n        public gc: IT4Command\n    ) {\n        this._eval = new IT4CommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n            // TODO: emit event\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    async step() {\n        if (this.isWaiting) {\n            this.trace(unparse(this.gc.command))\n            await this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        this.trace(s)\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner extends JDEventSource {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: IT4ProgramRunner,\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as IT4Command\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new JDVMError(\"ite not compiled away\")\n        }\n        return cmd as IT4Command\n    }\n\n    private async executeCommandAsync() {\n        this.emit(VM_COMMAND_ATTEMPTED, this._currentCommand.gc.sourceId)\n        try {\n            await this._currentCommand.step()\n        } catch (e) {\n            if (e instanceof JumpException) {\n                const { label } = e as JumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                // since it's a label it executes successfully\n                this._currentCommand.status = VMStatus.Completed\n            } else {\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMStatus.Completed)\n            this.emit(\n                VM_COMMAND_COMPLETED,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new IT4CommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    // run-to-completion semantics\n    async step() {\n        // handler stopped or/ empty\n        if (this.stopped || !this.handler.commands.length) return\n        this.trace(\"step begin\")\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        await this.executeCommandAsync()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            await this.executeCommandAsync()\n        }\n        this.trace(\"step end\")\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[] = []\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _in_run = false\n    private _rm: MyRoleManager\n    private _program: IT4Program\n\n    trace(message: string, context: TraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    constructor(prog: IT4Program, bus: JDBus) {\n        super()\n        try {\n            this._program = compileProgram(prog)\n            const [regs, events] = checkProgram(this._program)\n            if (this._program.errors.length > 0) {\n                console.debug(this._program.errors)\n            }\n            this._rm = new MyRoleManager(bus, (role, service, added) => {\n                try {\n                    this._env.serviceChanged(role, service, added)\n                    if (added) {\n                        this.emit(ROLE_SERVICE_BOUND, service)\n                        this.emit(ROLE_CHANGE)\n                        this.emit(CHANGE)\n                        this._program.handlers.forEach(h => {\n                            regs.forEach(r => {\n                                if (r.role === role) {\n                                    this._env.registerRegister(role, r.register)\n                                }\n                            })\n                            events.forEach(e => {\n                                if (e.role === role) {\n                                    this._env.registerEvent(role, e.event)\n                                }\n                            })\n                        })\n                    } else {\n                        this.emit(ROLE_SERVICE_UNBOUND, service)\n                        this.emit(ROLE_CHANGE)\n                        this.emit(CHANGE)\n                    }\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._env = new VMEnvironment()\n            this._env.subscribe(CHANGE, () => {\n                try {\n                    this.run()\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._handlers = this._program.handlers.map(\n                (h, index) => new IT4HandlerRunner(this, index, this._env, h)\n            )\n            this._waitQueue = this._handlers.slice(0)\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get status() {\n        const ret =\n            this._program === undefined\n                ? VMStatus.ProgramError\n                : this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        if (!this._program || !this._running) return // nothing to cancel\n\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n        this.trace(\"cancelled\")\n    }\n\n    start() {\n        if (!this._program || this._running) return // already running\n        this.trace(\"start\")\n        try {\n            this._program.roles.forEach(role => {\n                this._rm.addRoleService(role.role, role.serviceShortId)\n            })\n            this._running = true\n            this._in_run = false\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get roles() {\n        return this._program ? this._rm?.roles() : {}\n    }\n\n    resolveService(role: string) {\n        return this._program && this._rm?.getService(role)\n    }\n\n    async run() {\n        if (!this._program) return\n        if (!this._running) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            if (this._waitQueue.length > 0) {\n                const nextTime: IT4HandlerRunner[] = []\n                for (const h of this._waitQueue) {\n                    await h.step()\n                    if (h.status !== VMStatus.Stopped) {\n                        if (h.status === VMStatus.Completed) h.reset()\n                        nextTime.push(h)\n                    }\n                }\n                this._waitQueue = nextTime\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\n\nexport default function VMRunner(props: {\n    runner: IT4ProgramRunner\n    autoStart?: boolean\n}) {\n    const { runner, autoStart: autoStartDefault } = props\n    const disabled = !runner\n    const status = useChange(runner, t => t?.status)\n    const [autoStart, setAutoStart] = useState<boolean>(!!autoStartDefault)\n    const handleRun = () => {\n        setAutoStart(!!autoStartDefault)\n        try {\n            runner.start()\n        } catch (e) {\n            console.debug(e)\n        }\n    }\n    const handleCancel = () => {\n        setAutoStart(false)\n        runner.cancel()\n    }\n    const running = status === VMStatus.Running\n\n    // auto start\n    useEffect(() => {\n        if (autoStart && runner) runner.start()\n        return () => runner?.cancel()\n    }, [runner, autoStart])\n\n    return (\n        <Button\n            disabled={disabled}\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <StopIcon /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    IT4ProgramRunner,\n    TraceContext,\n} from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nexport default function useVMRunner(program: IT4Program) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [testRunner, setTestRunner] = useState<IT4ProgramRunner>()\n\n    // create runner\n    useEffect(() => {\n        const runner = program && new IT4ProgramRunner(program, bus)\n        setTestRunner(runner)\n    }, [program])\n\n    // errors\n    useEffect(() => testRunner?.subscribe(ERROR, e => setError(e)))\n    // traces\n    const handleTrace = (value: { message: string; context: TraceContext }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(() =>\n        testRunner?.subscribe<{ message: string; context: TraceContext }>(\n            TRACE,\n            handleTrace\n        )\n    )\n\n    return {\n        runner: testRunner,\n    }\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4ProgramRunner } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport AddIcon from \"@material-ui/icons/Add\"\n\nexport default function VMRoles(props: { runner: IT4ProgramRunner }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { runner } = props\n    const roles = useChange(runner, _ => {\n        const r = _?.roles\n        if (r) console.debug(`vm roles`, { roles: r })\n        return r\n    })\n    const handleRoleClick =\n        (role: string, service: JDService, specification: jdspec.ServiceSpec) =>\n        () => {\n            if (!service && specification) {\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n            } else {\n                // do nothing\n            }\n        }\n\n    return (\n        <Grid container spacing={1}>\n            {roles &&\n                Object.keys(roles)\n                    .map(role => ({\n                        role,\n                        service: roles[role].service,\n                        specification: serviceSpecificationFromName(\n                            roles[role].shortName\n                        ),\n                    }))\n                    .map(({ role, service, specification }) => (\n                        <Grid item key={role}>\n                            <Tooltip\n                                title={\n                                    service\n                                        ? `bound to ${service.device.friendlyName}`\n                                        : `start simulator`\n                                }\n                            >\n                                <Chip\n                                    label={role}\n                                    variant={service ? \"default\" : \"outlined\"}\n                                    avatar={\n                                        service ? (\n                                            <DeviceAvatar\n                                                device={service.device}\n                                            />\n                                        ) : (\n                                            <AddIcon />\n                                        )\n                                    }\n                                    onClick={handleRoleClick(\n                                        role,\n                                        service,\n                                        specification\n                                    )}\n                                />\n                            </Tooltip>\n                        </Grid>\n                    ))}\n        </Grid>\n    )\n}\n","import { Grid, NoSsr, Typography } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport Dashboard from \"../../components/dashboard/Dashboard\"\nimport Alert from \"../../components/ui/Alert\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport VMRunner from \"../../components/vm/VMRunner\"\nimport CodeBlock from \"../../components/CodeBlock\"\nimport useVMRunner from \"./useVMRunner\"\nimport VMRoles from \"./VMRoles\"\n\nfunction Diagnostics(props: {\n    program: IT4Program\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">IT4</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.it4\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: {\n    storageKey?: string\n    showDashboard?: boolean\n}) {\n    const { storageKey, showDashboard } = props\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<IT4Program>()\n    const { runner } = useVMRunner(program)\n\n    const handleXml = (xml: string) => {\n        setXml(xml)\n    }\n    const handleJSON = (json: WorkspaceJSON) => {\n        const newSource = JSON.stringify(json)\n        if (JSON.stringify(source) !== newSource) setSource(json)\n    }\n    const handleI4Program = (json: IT4Program) => {\n        const newProgram = JSON.stringify(json)\n        if (JSON.stringify(program) !== newProgram) setProgram(json)\n    }\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            {!source?.blocks?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\" closeable={true}>\n                        Start a simulator or connect a device to load the blocks\n                        automatically.\n                    </Alert>\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <NoSsr>\n                    <VMBlockEditor\n                        initialXml={xml}\n                        onXmlChange={handleXml}\n                        onJSONChange={handleJSON}\n                        onIT4ProgramChange={handleI4Program}\n                        runner={runner}\n                    />\n                </NoSsr>\n            </Grid>\n            <Grid item xs={12}>\n                <VMRunner autoStart={true} runner={runner} />\n            </Grid>\n            <Grid item xs={12}>\n                <VMRoles runner={runner} />\n            </Grid>\n            {Flags.diagnostics && (\n                <Diagnostics program={program} source={source} xml={xml} />\n            )}\n            {showDashboard && (\n                <Grid item xs={12}>\n                    <Dashboard\n                        showStartSimulators={true}\n                        showHeader={true}\n                        showAvatar={true}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor showDashboard={true} />\n}\n"],"sourceRoot":""}