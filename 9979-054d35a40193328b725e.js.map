{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardLEDMatrix.tsx"],"names":["DashboardLEDMatrixDisplay","props","service","ledsRegister","useRegister","LedMatrixReg","brightnessRegister","rowsRegister","columnsRegister","useRegisterUnpackedValue","leds","brightness","rows","columns","server","useServiceServer","color","useChange","handleChange","newLeds","sendSetAsync"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,SAASA,yBAAT,CACXC,KADW,EAEb;AAAA,MACUC,OADV,GACsBD,KADtB,CACUC,OADV;AAGE,MAAMC,YAAY,GAAGC,oEAAW,CAACF,OAAD,EAAUG,4FAAV,CAAhC;AACA,MAAMC,kBAAkB,GAAGF,oEAAW,CAACF,OAAD,EAAUG,wGAAV,CAAtC;AACA,MAAME,YAAY,GAAGH,oEAAW,CAACF,OAAD,EAAUG,4FAAV,CAAhC;AACA,MAAMG,eAAe,GAAGJ,oEAAW,CAACF,OAAD,EAAUG,kGAAV,CAAnC;;AANF,8BAQiBI,4FAAwB,CAAeN,YAAf,EAA6BF,KAA7B,CARzC;AAAA,MAQSS,IART;;AAAA,+BAS2BD,4FAAwB,CAC7CH,kBAD6C,EAE7CL,KAF6C,CATnD;AAAA;AAAA,MASSU,UATT,uCASsB,CATtB;;AAAA,+BAaiBF,4FAAwB,CAAWF,YAAX,EAAyBN,KAAzB,CAbzC;AAAA,MAaSW,IAbT;;AAAA,+BAcoBH,4FAAwB,CAAWD,eAAX,EAA4BP,KAA5B,CAd5C;AAAA,MAcSY,OAdT;;AAeE,MAAMC,MAAM,GAAGC,yEAAgB,CAACb,OAAD,CAA/B;AACA,MAAMc,KAAK,GAAGF,MAAM,GAAG,WAAH,GAAiB,SAArC;AACAG,qEAAS,CAACH,MAAD,CAAT;;AACA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAyB;AAC1ChB,gBAAY,CAACiB,YAAb,CAA0BD,OAA1B,EAAmC,IAAnC;AACH,GAFD;;AAGA,sBACI,iDAAC,6DAAD;AACI,QAAI,EAAET,IADV;AAEI,cAAU,EAAEC,UAFhB;AAGI,QAAI,EAAEC,IAHV;AAII,WAAO,EAAEC,OAJb;AAKI,SAAK,EAAEG,KALX;AAMI,YAAQ,EAAEE;AANd,IADJ;AAUH,C","file":"9979-054d35a40193328b725e.js","sourcesContent":["import React from \"react\"\nimport { LedMatrixReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useChange from \"../../jacdac/useChange\"\nimport LEDMatrixDisplayWidget from \"../widgets/LEDMatrixWidget\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardLEDMatrixDisplay(\n    props: DashboardServiceProps\n) {\n    const { service } = props\n\n    const ledsRegister = useRegister(service, LedMatrixReg.Leds)\n    const brightnessRegister = useRegister(service, LedMatrixReg.Brightness)\n    const rowsRegister = useRegister(service, LedMatrixReg.Rows)\n    const columnsRegister = useRegister(service, LedMatrixReg.Columns)\n\n    const [leds] = useRegisterUnpackedValue<[Uint8Array]>(ledsRegister, props)\n    const [brightness = 0] = useRegisterUnpackedValue<[number]>(\n        brightnessRegister,\n        props\n    )\n    const [rows] = useRegisterUnpackedValue<[number]>(rowsRegister, props)\n    const [columns] = useRegisterUnpackedValue<[number]>(columnsRegister, props)\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    useChange(server)\n    const handleChange = (newLeds: Uint8Array) => {\n        ledsRegister.sendSetAsync(newLeds, true)\n    }\n    return (\n        <LEDMatrixDisplayWidget\n            leds={leds}\n            brightness={brightness}\n            rows={rows}\n            columns={columns}\n            color={color}\n            onChange={handleChange}\n        />\n    )\n}\n"],"sourceRoot":""}