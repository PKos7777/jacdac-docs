{"version":3,"file":"5604-d525df368ba5f001d6b6.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/logparser.ts","webpack://jacdac-docs/./src/components/trace/TraceCard.tsx","webpack://jacdac-docs/./src/components/trace/TraceList.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { arrayConcatMany, fromHex } from \"./utils\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport TracePlayer from \"./trace/traceplayer\"\nimport Frame from \"./frame\"\nimport Trace from \"./trace/trace\"\n\n/**\n * Parse a trace text file\n * @param contents\n * @returns\n * @category Trace\n */\nexport function parseTrace(contents: string): Trace {\n    const description: string[] = []\n    const packets: Packet[] = []\n    contents?.split(/\\r?\\n/).forEach(ln => {\n        // parse data\n        const m = /^(\\d+.?\\d*)\\s+([a-f0-9]{12,})/i.exec(ln)\n        if (!m) {\n            // probably junk data\n            if (packets.length == 0) description.push(ln)\n            return\n        }\n\n        const timestamp = parseInt(m[1])\n        const data = fromHex(m[2])\n        // add to array\n        packets.push(Packet.fromBinary(data, timestamp))\n    })\n    if (packets.length) return new Trace(packets, description.join(\"\\n\").trim())\n    else return undefined\n}\n\n/**\n * Parses a logic analyzer log into a trace\n * @param logcontents\n * @returns\n * @category Trace\n */\nexport function parseLogicLog(logcontents: string): Frame[] {\n    if (!logcontents) return undefined\n\n    const res: Frame[] = []\n    let frameBytes = []\n    let lastTime = 0\n    for (const ln of logcontents.split(/\\r?\\n/)) {\n        let m = /^JD (\\d+) ([0-9a-f]+)/i.exec(ln)\n        if (m) {\n            res.push({\n                timestamp: parseInt(m[1]),\n                data: fromHex(m[2]),\n            })\n            continue\n        }\n\n        /** Windows, logic 1.*\nTime [s],Value,Parity Error,Framing Error\n0.042909760000000,0x00,,Error\n0.042980320000000,0xD4,,\n0.042990240000000,0x81,,\n0.043000160000000,0x10,,\n0.043010240000000,0x00,,\n0.043020160000000,0xE8,,\n0.043030240000000,0xDF,,\n0.043040160000000,0xCB,,\n0.043050240000000,0xD1,,\n0.043060160000000,0x97,,\n0.043070240000000,0x34,,\n0.043080160000000,0x37,,\n0.043090240000000,0x48,,\n0.043100160000000,0x0C,,\n0.043110080000000,0x00,,\n0.043120160000000,0x00,,\n0.043130080000000,0x00,,\n0.043140160000000,0x00,,\n0.043150080000000,0x00,,\n0.043160160000000,0x00,,\n0.043170080000000,0x00,,\n0.043180160000000,0xCA,,\n0.043190080000000,0x1F,,\n0.043200160000000,0xDC,,\n0.043210080000000,0x12,,\n0.043220160000000,0x46,,\n0.043230080000000,0x47,,\n0.043240160000000,0x27,,\n0.043250080000000,0x1F,,\n0.043264800000000,0x00,,Error\n0.063968960000000,0x00,,Error\n         */\n        m = /^([\\d.]+),(?:Async Serial,)?.*(0x[A-F0-9][A-F0-9])/.exec(ln)\n        if (!m) continue\n        const tm = parseFloat(m[1])\n        if (lastTime && tm - lastTime > 0.1) {\n            res.push({\n                timestamp: lastTime * 1000,\n                data: new Uint8Array(frameBytes),\n                info: \"timeout\",\n            })\n            frameBytes = []\n            lastTime = 0\n        }\n\n        lastTime = tm\n        if (/(framing error|Error)/.test(ln)) {\n            if (frameBytes.length > 0)\n                res.push({\n                    timestamp: lastTime * 1000,\n                    data: new Uint8Array(frameBytes),\n                })\n            frameBytes = []\n            lastTime = 0\n        } else {\n            frameBytes.push(parseInt(m[2]))\n        }\n    }\n\n    return res\n}\n\n/**\n * Replays a parsed logic log\n * @param bus\n * @param frames\n * @param speed\n * @category Trace\n */\nexport function replayLogicLog(\n    bus: JDBus,\n    frames: Frame[],\n    speed?: number\n): void {\n    const packets = arrayConcatMany(\n        frames.map(frame => Packet.fromFrame(frame.data, frame.timestamp))\n    )\n    const player = new TracePlayer(bus, speed)\n    player.trace = new Trace(packets)\n    bus.clear(packets[0].timestamp)\n    player.start()\n}\n","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n} from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport Trace from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport AppContext, { DrawerType } from \"../AppContext\"\nimport Markdown from \"../ui/Markdown\"\nimport PacketsContext from \"../PacketsContext\"\n\nexport default function TraceCard(props: { name: string; trace: Trace }) {\n    const { name, trace } = props\n    const { description, duration, length } = trace\n    const { setReplayTrace, toggleTracing } = useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n\n    const handleClick = () => {\n        setDrawerType(DrawerType.Packets)\n        setReplayTrace(trace)\n        toggleTracing()\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                title={name}\n                subheader={`${prettyDuration(duration)}, ${length} packets`}\n            />\n            <CardContent>\n                {description && <Markdown source={description} />}\n            </CardContent>\n            <CardActions>\n                <Button onClick={handleClick} variant=\"outlined\">\n                    import\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { parseTrace } from \"../../../jacdac-ts/src/jdom/logparser\"\nimport Trace from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport { Grid } from \"@material-ui/core\"\nimport TraceCard from \"./TraceCard\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\n\nexport default function TraceList() {\n    const gridBreakpoints = useGridBreakpoints()\n    const data = useStaticQuery(graphql`\n        query {\n            allPlainText {\n                nodes {\n                    content\n                    parent {\n                        ... on File {\n                            name\n                            ext\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const traces: { trace: Trace; name: string }[] = data.allPlainText.nodes\n        .filter(node => node.parent?.ext === \".txt\")\n        .map(node => {\n            return {\n                trace: parseTrace(node.content as string),\n                name: node.parent.name as string,\n            }\n        })\n        .filter(trace => !!trace.trace)\n\n    return (\n        <Grid container spacing={2}>\n            {traces.map(({ trace, name }) => (\n                <Grid item key={name}>\n                    <TraceCard name={name} trace={trace} {...gridBreakpoints} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}"],"names":["arrayConcatMany","fromHex","Packet","TracePlayer","Trace","parseTrace","contents","description","packets","split","forEach","ln","m","exec","length","push","timestamp","parseInt","data","fromBinary","join","trim","undefined","parseLogicLog","logcontents","res","frameBytes","lastTime","tm","parseFloat","Uint8Array","info","test","replayLogicLog","bus","frames","speed","map","frame","fromFrame","player","trace","clear","start","Button","Card","CardActions","CardContent","CardHeader","React","useContext","prettyDuration","AppContext","DrawerType","Markdown","PacketsContext","TraceCard","props","name","duration","setReplayTrace","toggleTracing","setDrawerType","handleClick","Packets","useStaticQuery","Grid","useGridBreakpoints","TraceList","gridBreakpoints","traces","allPlainText","nodes","filter","node","parent","ext","content","itemCount","drawerType","xs","sm","md","lg","xl","None"],"sourceRoot":""}