{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/pages/dashboard.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","useId","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","specification","filter","rs","strcmp","deviceId","defaultDeviceFilter","d","Dashboard","showConnect","showStartSimulators","deviceSort","deviceFilter","AppContext","toggleShowDeviceHostsDialog","useDevices","announced","sort","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","splitFilter","findServiceProvider","hosted","physicals","roleManager","useRoleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","DashboardDeviceItem","variant","drawerType","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","DrawerType","xs","sm","md","lg","xl","hr","background","palette","text","disabled","marginBottom","start","width","GridHeader","count","clsx","undefined","Page"],"mappings":"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","file":"component---src-pages-dashboard-tsx-48d148cefc244a83c40c.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import { Grid, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../../jacdac/ConnectButtons\"\nimport useRoleManager from \"../services/useRoleManager\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [hosted, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManager()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            <DashboardDeviceGroup\n                title=\"Simulators\"\n                action={\n                    <>\n                        {showStartSimulators && !!roleManager && (\n                            <IconButtonWithTooltip\n                                title=\"start missing simulators\"\n                                onClick={handleStartSimulators}\n                            >\n                                <DevicesIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        <IconButtonWithTooltip\n                            title=\"clear simulators\"\n                            onClick={handleClearSimulators}\n                        >\n                            <ClearIcon />\n                        </IconButtonWithTooltip>{\" \"}\n                    </>\n                }\n                devices={hosted}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            />\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { Box, Chip, createStyles, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n","import React from \"react\"\nimport Dashboard from \"../components/dashboard/Dashboard\"\n\nexport default function Page() {\n    return <Dashboard showAvatar={true} showHeader={true} showConnect={true} showStartSimulators={true} />\n}"],"sourceRoot":""}