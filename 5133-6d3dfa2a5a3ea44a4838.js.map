{"version":3,"file":"5133-6d3dfa2a5a3ea44a4838.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/useFetch.ts"],"sourcesContent":["interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<GithubFirmwareRelease> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    switch (resp.status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return releases[0]\n        }\n        case 404:\n            // unknow repo or no access\n            return undefined\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return undefined\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n"],"names":["cmp","a","b","d","major","minor","patch","pre","length","i","aa","bb","test","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","slice","m","exec","split","semverCmp","useFetch","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","version","type","name","undefined","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","map","filter","r","sort","l","normalizeSlug","slug","cleaned","replace","parts","repoPath","folder","join","parseRepoUrl","url","owner","fetchLatestRelease","options","uri","resp","fetch","status","json","releases","ignoreThrottled","Error","fetchReleaseBinary","downloadUrl","req","headers","Accept","firmware","blob","fetchText","tag","path","mimeType","src","text","useFetchApi","res","response","console","log","useFetchJSON","useRepository","useLatestRelease","useLatestReleases","loading","error","useState","useEffectAsync","setResponse","setError","setStatus","setLoading","mounted"],"sourceRoot":""}