{"version":3,"file":"5969-5caa6fa41005262bfceb.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Keyboard.js","webpack://jacdac-docs/./src/components/dashboard/DashboardHIDKeyboard.tsx","webpack://jacdac-docs/./src/components/ui/KeyboardKeyInput.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z\"\n}), 'Keyboard');\n\nexports.default = _default;","import React, { useState } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport {\n    HidKeyboardAction,\n    HidKeyboardCmd,\n    HidKeyboardModifiers,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport CmdButton from \"../CmdButton\"\nimport ClearIcon from \"@material-ui/icons/Clear\"\nimport KeyboardKeyInput from \"../ui/KeyboardKeyInput\"\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\"\nexport default function DashboardHIDKeyboard(props: DashboardServiceProps) {\n    const { service } = props\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n\n    const handleClear = async () => {\n        setSelector(0)\n        setModifiers(HidKeyboardModifiers.None)\n        await service.sendCmdAsync(HidKeyboardCmd.Clear)\n    }\n\n    const handleClick = async () => {\n        const unpacked: [[number, HidKeyboardModifiers, HidKeyboardAction][]] =\n            [[[selector, modifiers, HidKeyboardAction.Press]]]\n        const data = jdpack(\"r: u16 u8 u8\", unpacked)\n        await service.sendCmdAsync(HidKeyboardCmd.Key, data)\n    }\n\n    const disabled = !selector && !modifiers\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <KeyboardKeyInput\n                    selector={selector}\n                    modifiers={modifiers}\n                    onChange={handleKeyChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <CmdButton\n                    title=\"send keys\"\n                    disabled={disabled}\n                    onClick={handleClick}\n                    icon={<KeyboardIcon />}\n                />\n                <CmdButton\n                    title=\"clear keys\"\n                    disabled={disabled}\n                    onClick={handleClear}\n                    icon={<ClearIcon />}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport Keyboard from \"react-simple-keyboard\"\nimport \"react-simple-keyboard/build/css/index.css\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useId } from \"react-use-id-hook\"\nimport {\n    modifierCodes,\n    renderKeyboardKey,\n    selectors,\n} from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        capture: {\n            cursor: \"pointer\",\n            \"&:hover\": {\n                borderColor: theme.palette.primary.main,\n            },\n            \"&:focus\": {\n                borderColor: theme.palette.action.active,\n            },\n        },\n        darkKeyboard: {\n            backgroundColor: \"#333 !important\",\n            borderColor: \"#777 !important\",\n            color: \"white !important\",\n            \"& .hg-button\": {\n                background: \"rgba(0, 0, 0, 0.5) !important\",\n                color: \"white\",\n            },\n            \"& .hg-button.buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n        keyboard: {\n            \"& .buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n    })\n)\n\nexport default function KeyboardKeyInput(props: {\n    initialSelector?: number\n    initialModifiers?: HidKeyboardModifiers\n    selector?: number\n    modifiers?: HidKeyboardModifiers\n    onChange: (newSelector: number, newModifiers: HidKeyboardModifiers) => void\n}) {\n    const { initialSelector, initialModifiers, selector, modifiers, onChange } =\n        props\n    const uncontrolled = useMemo(\n        () => selector === undefined || modifiers === undefined,\n        []\n    )\n    const [selector_, setSelector_] = useState<number>(initialSelector || 0)\n    const [modifiers_, setModifiters_] = useState<HidKeyboardModifiers>(\n        initialModifiers || HidKeyboardModifiers.None\n    )\n    const { darkMode } = useContext(DarkModeContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyboardRef = useRef<any>()\n    const classes = useStyles()\n    const theme = `hg-theme-default hg-layout-default ${\n        darkMode === \"dark\" ? classes.darkKeyboard : classes.keyboard\n    }`\n    const keyboardId = useId()\n\n    const layout = {\n        default: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6 7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space} {metaright} {altright}\",\n        ],\n    }\n    const display = {\n        \"{escape}\": \"esc ⎋\",\n        \"{tab}\": \"tab ⇥\",\n        \"{backspace}\": \"backspace ⌫\",\n        \"{enter}\": \"enter ↵\",\n        \"{capslock}\": \"caps lock ⇪\",\n        \"{shiftleft}\": \"shift ⇧\",\n        \"{shiftright}\": \"shift ⇧\",\n        \"{controlleft}\": \"ctrl ⌃\",\n        \"{controlright}\": \"ctrl ⌃\",\n        \"{altleft}\": \"alt ⌥\",\n        \"{altright}\": \"alt ⌥\",\n        \"{metaleft}\": \"cmd ⌘\",\n        \"{metaright}\": \"cmd ⌘\",\n    }\n    const handleKeyboardKeyPress = (code: string) => {\n        code = code.toLowerCase().replace(/[{}]/g, \"\")\n        let newSelector = selector_\n        let newModifiers = modifiers_\n        const msel = selectors[code]\n        const mcode = modifierCodes[code]\n        if (msel) {\n            if (msel === selector) newSelector = undefined\n            else newSelector = msel\n        } else {\n            if (mcode) {\n                if (newModifiers & mcode) newModifiers &= ~mcode\n                else newModifiers |= mcode\n            }\n        }\n        setSelector_(newSelector)\n        setModifiters_(newModifiers)\n        onChange(newSelector, newModifiers)\n    }\n\n    // update external values\n    useEffect(() => {\n        if (selector !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled selector`)\n            setSelector_(selector)\n        }\n    }, [selector])\n    useEffect(() => {\n        if (modifiers !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled modifier`)\n            setModifiters_(modifiers)\n        }\n    }, [modifiers])\n\n    const value = renderKeyboardKey(selector_, modifiers_, false)\n    useEffect(() => {\n        keyboardRef.current?.addButtonTheme(value, \"buttonSelected\")\n        return () =>\n            keyboardRef.current?.removeButtonTheme(value, \"buttonSelected\")\n    }, [value])\n\n    return (\n        <Keyboard\n            baseClass={keyboardId}\n            keyboardRef={r => (keyboardRef.current = r)}\n            onKeyPress={handleKeyboardKeyPress}\n            layout={layout}\n            theme={theme}\n            display={display}\n            mergeDisplay={true}\n        />\n    )\n}\n"],"names":["React","useState","Grid","HidKeyboardAction","HidKeyboardCmd","HidKeyboardModifiers","jdpack","CmdButton","ClearIcon","KeyboardKeyInput","KeyboardIcon","DashboardHIDKeyboard","props","service","selector","setSelector","modifiers","setModifiers","None","handleKeyChange","newSelector","newModifiers","handleClear","sendCmdAsync","Clear","handleClick","unpacked","Press","data","Key","disabled","useContext","useEffect","useMemo","useRef","createStyles","makeStyles","Keyboard","DarkModeContext","useId","modifierCodes","renderKeyboardKey","selectors","useStyles","theme","capture","cursor","borderColor","palette","primary","main","action","active","darkKeyboard","backgroundColor","color","background","dark","keyboard","initialSelector","initialModifiers","onChange","uncontrolled","undefined","selector_","setSelector_","modifiers_","setModifiters_","darkMode","keyboardRef","classes","keyboardId","layout","default","display","handleKeyboardKeyPress","code","toLowerCase","replace","msel","mcode","console","warn","value","current","addButtonTheme","removeButtonTheme","r"],"sourceRoot":""}