{"version":3,"sources":["webpack://jacdac-docs/./jacdac-ts/src/vm/VMenvironment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/VMexpr.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/VMutils.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts"],"names":["VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","register","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","sendCommandAsync","command","values","commandName","p","isCommand","sendCmdAsync","jdpack","packFormat","writeRegisterAsync","ev","setEnabled","writeRegAsync","jdreg","sendSetPackedAsync","isIntensity","fields","type","SystemReg","lookup","e","root","object","fld","undefined","property","unpackedValue","field","f","value","refreshRegistersAsync","k","refresh","JDServiceClient","VMEnvironment","registers","events","_currentEvent","_envs","_locals","serviceChanged","role","unmount","forEach","r","reg","serviceEnv","getService","emit","getRootName","s","ROLE_HAS_NO_SERVICE","Object","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","VMExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","Math","abs","le","val","VMError","id","lit","VM_ERROR","VM_WATCH_CHANGE","VM_MISSING_ROLE_WARNING","VM_MISSING_DEVICE_WARNING","VM_BREAKPOINT","VM_COMMAND_ATTEMPTED","VM_COMMAND_COMPLETED","message","jacdacName","Error","errorPath","ROLE_BOUND","ROLE_UNBOUND","RoleManager","bus","_roles","on","DEVICE_ANNOUNCE","addServices","bind","DEVICE_DISCONNECT","removeServices","devices","ignoreSelf","announced","dev","console","log","setRoles","newRoles","roles","supportedNewRoles","filter","serviceShortId","serviceSpecificationFromName","debug","newRole","existingRole","bindServices","unboundRoles","binding","boundRoles","services","serviceName","srv","b","selfDevice","device","addRoleService","slice"],"mappings":"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","file":"b4b5e3de7d195d717097f81a5311f716f303ebf6-cff4ecfd056e8858a6d8.js","sourcesContent":["import { isEvent, isRegister, isCommand, isIntensity } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT, SystemReg } from \"../jdom/constants\"\nimport { jdpack, PackedValues } from \"../jdom/pack\"\nimport { RoleRegister, RoleEvent } from \"./VMir\"\nimport { VMEnvironmentInterface } from \"./VMrunner\"\nimport { ROLE_HAS_NO_SERVICE } from \"./rolemanager\"\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    public async sendCommandAsync(\n        command: jsep.Identifier,\n        values: PackedValues\n    ) {\n        const commandName = command?.name\n        const pkt = this.service.specification.packets.find(\n            p => isCommand(p) && p.name === commandName\n        )\n        if (pkt) {\n            await this.service.sendCmdAsync(\n                pkt.identifier,\n                jdpack(pkt.packFormat, values),\n                true\n            )\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async writeRegisterAsync(regName: string, ev: any) {\n        await this.setEnabled()\n        await this.writeRegAsync(this._registers[regName], ev)\n    }\n\n    private async writeRegAsync(jdreg: JDRegister, ev: any) {\n        await jdreg?.sendSetPackedAsync(\n            jdreg.specification?.packFormat,\n            [ev],\n            true\n        )\n    }\n\n    private async setEnabled() {\n        const pkt = this.service.specification.packets.find(isIntensity)\n        if (pkt && pkt.fields[0].type === \"bool\") {\n            const jdreg = this.service.register(SystemReg.Intensity)\n            await this.writeRegAsync(jdreg, true)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        const root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        const fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public async refreshRegistersAsync() {\n        for (const k in this._registers) {\n            const register = this._registers[k]\n            await register.refresh()\n        }\n    }\n}\n\nexport class VMEnvironment\n    extends JDEventSource\n    implements VMEnvironmentInterface\n{\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(\n        private registers: RoleRegister[],\n        private events: RoleEvent[]\n    ) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (service) {\n            this._envs[role] = new VMServiceEnvironment(service)\n            this.registers.forEach(r => {\n                if (r.role === role) {\n                    this.registerRegister(role, r.register)\n                }\n            })\n            this.events.forEach(e => {\n                if (e.role === role) {\n                    this.registerEvent(role, e.event)\n                }\n            })\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, () => {\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        let s = this._envs[root]\n        if (!s) {\n            this.emit(ROLE_HAS_NO_SERVICE, root)\n        }\n        return s\n    }\n\n    public async refreshRegistersAsync() {\n        for (const s of Object.values(this._envs)) {\n            await s?.refreshRegistersAsync()\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async sendCommandAsync(\n        e: jsep.MemberExpression,\n        values: PackedValues\n    ) {\n        const serviceEnv = this.getService(e)\n        await serviceEnv?.sendCommandAsync(\n            e.property as jsep.Identifier,\n            values\n        )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            const me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) {\n            return undefined\n        }\n        const me = e as jsep.MemberExpression\n        return serviceEnv.lookup(\n            me.property as jsep.Identifier | jsep.MemberExpression\n        )\n    }\n\n    public async writeRegisterAsync(\n        e: jsep.MemberExpression | string,\n        ev: any\n    ) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            await serviceEnv.writeRegisterAsync(reg, ev)\n        }\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        for (const vs of Object.values(this._envs)) {\n            vs.unmount()\n        }\n    }\n}\n","import { VMError } from \"./VMutils\"\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: VMExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class VMExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"ABS\":\n                        this.exprStack.push(Math.abs(top))\n                        return\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                if (val === undefined) {\n                    throw new VMError(`lookup of ${unparse(e)} failed`)\n                }\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                const val = this.env(id.name)\n                if (val === undefined)\n                    throw new VMError(`lookup of ${id.name} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","export const VM_ERROR = \"vmError\"\nexport const VM_WATCH_CHANGE = \"vmWatchChange\"\nexport const VM_MISSING_ROLE_WARNING = \"vmMissingRole\"\nexport const VM_MISSING_DEVICE_WARNING = \"vmMissingDevice\"\nexport const VM_BREAKPOINT = \"vmBreakpoint\"\nexport const VM_COMMAND_ATTEMPTED = \"vmCommandAttempted\"\nexport const VM_COMMAND_COMPLETED = \"vmCommandCompleted\"\n\nexport class VMError extends Error {\n    constructor(message: string, readonly jacdacName?: string) {\n        super(message)\n        this.name = VM_ERROR\n    }\n}\n\nexport default function errorPath(e: VMError): string {\n    return (e as VMError)?.jacdacName\n}","import { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\n\nexport const ROLE_BOUND = \"roleBound\"\nexport const ROLE_UNBOUND = \"roleUnbound\"\nexport const ROLE_HAS_NO_SERVICE = \"roleHasNoService\"\n\nexport interface RoleBinding {\n    role: string\n    serviceShortId: string\n    service?: JDService\n}\n\n// TODO: replicate MakeCode role manager logic\nexport class RoleManager extends JDEventSource {\n    private readonly _roles: RoleBinding[] = []\n\n    constructor(private readonly bus: JDBus) {\n        super()\n\n        this.bus.on(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        this.bus.on(DEVICE_DISCONNECT, this.removeServices.bind(this))\n\n        this.bus\n            .devices({ ignoreSelf: true, announced: true })\n            .forEach(dev => this.addServices(dev))\n\n        this.on(ROLE_UNBOUND, role => console.log(`role unbound`, { role }))\n        this.on(ROLE_BOUND, role => console.log(`role bound`, { role }))\n    }\n\n    get roles() {\n        return this._roles.slice(0)\n    }\n\n    get boundRoles() {\n        return this._roles.filter(r => !!r.service)\n    }\n\n    get unboundRoles() {\n        return this._roles.filter(r => !r.service)\n    }\n\n    setRoles(\n        newRoles: {\n            role: string\n            serviceShortId: string\n        }[]\n    ) {\n        const roles = this.roles\n\n        // remove unknown roles\n\n        const supportedNewRoles = newRoles.filter(({ serviceShortId }) =>\n            serviceSpecificationFromName(serviceShortId)\n        )\n        console.debug(`set roles`, { roles, newRoles, supportedNewRoles })\n\n        // removed roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                this._roles.push({ ...newRole })\n            } else if (existingRole.serviceShortId !== newRole.serviceShortId) {\n                // modified type, force rebinding\n                existingRole.serviceShortId = newRole.serviceShortId\n                if (existingRole.service) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, newRole.role)\n                    this.emit(CHANGE)\n                }\n            } // else unmodifed role\n        }\n\n        // bound services\n        this.bindServices()\n    }\n\n    private bindServices() {\n        this.unboundRoles.forEach(binding => {\n            const boundRoles = this.boundRoles\n            const service = this.bus\n                .services({\n                    ignoreSelf: true,\n                    serviceName: binding.serviceShortId,\n                })\n                .find(srv => !boundRoles.find(b => b.service === srv))\n            binding.service = service\n            this.emit(ROLE_BOUND, binding.role)\n            this.emit(CHANGE)\n        })\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                this.emit(CHANGE)\n            })\n    }\n\n    public getService(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    public addRoleService(role: string, serviceShortId: string) {\n        if (!serviceSpecificationFromName(serviceShortId)) return // unknown role type\n\n        let binding = this._roles.find(r => r.role === role)\n\n        // check if we already have this role\n        if (binding && serviceShortId === binding.serviceShortId) return\n\n        // new role\n        binding = { role, serviceShortId }\n        this._roles.push(binding)\n\n        const ret = this.bus\n            .services({ ignoreSelf: true, serviceName: serviceShortId })\n            .find(s => !this._roles.find(r => r.service === s))\n        if (ret) {\n            binding.service = ret\n            this.emit(ROLE_BOUND, role)\n            this.emit(CHANGE)\n        } else {\n            this.emit(ROLE_UNBOUND, role)\n            this.emit(CHANGE)\n        }\n    }\n}\n"],"sourceRoot":""}