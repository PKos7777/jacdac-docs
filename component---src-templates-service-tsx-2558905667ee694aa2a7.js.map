{"version":3,"file":"component---src-templates-service-tsx-2558905667ee694aa2a7.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/ServiceSpecification.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/devicetwin.ts","webpack://jacdac-docs/./src/components/ServiceSpecificationSource.tsx","webpack://jacdac-docs/./src/components/ServiceMarkdown.tsx","webpack://jacdac-docs/./src/templates/service.tsx"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n            <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n        </Fragment>)}\n    </Fragment>\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\"\nimport Markdown from \"./ui/Markdown\"\nimport EnumSpecification from \"./EnumSpecification\"\nimport { Box, Grid } from \"@material-ui/core\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"./hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport useChange from \"../jacdac/useChange\"\nimport DashbardDeviceItem from \"./dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map((pkt, i) => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.name}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { SRV_CONTROL } from \"../jdom/constants\"\nimport {\n    isHighLevelRegister,\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../jdom/spec\"\n\nexport interface ServiceTwinRegisterSpec {\n    code: number\n    name: string\n    kind: jdspec.PacketKind\n    packFormat: string\n    fields: string[]\n}\n\nexport interface ServiceTwinSpec {\n    serviceClass: number\n    name: string\n    registers: ServiceTwinRegisterSpec[]\n}\n\nexport function serviceSpecificationToServiceTwinSpecification(\n    specification: jdspec.ServiceSpec\n): ServiceTwinSpec {\n    if (!specification) return undefined\n\n    const {\n        classIdentifier: serviceClass,\n        camelName: name,\n        packets,\n    } = specification\n\n    const registers = packets\n        .filter(isHighLevelRegister) // TODO formalize\n        .map<ServiceTwinRegisterSpec>(\n            ({ identifier, name, packFormat, kind, fields }) => ({\n                code: identifier,\n                name,\n                kind,\n                packFormat,\n                fields: fields.map(f => f.name),\n            })\n        )\n    const dspec: ServiceTwinSpec = {\n        serviceClass,\n        name,\n        registers,\n    }\n    return dspec\n}\n\nexport function serviceSpecificationsWithServiceTwinSpecification() {\n    const specs = [\n        serviceSpecificationFromClassIdentifier(SRV_CONTROL),\n        ...serviceSpecifications().filter(srv => !isInfrastructure(srv)),\n    ]\n    return specs\n}\n","import React, { useState } from \"react\"\nimport { Tabs, Tab } from \"@material-ui/core\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Paper, createStyles, makeStyles, Theme } from \"@material-ui/core\"\nimport TabPanel from \"./ui/TabPanel\"\nimport Snippet from \"./ui/Snippet\"\nimport { converters } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ServiceSpecification from \"./ServiceSpecification\"\nimport { DTDLSnippet } from \"./azure/DTDLSnippet\"\nimport { serviceSpecificationToDTDL } from \"../../jacdac-ts/src/azure-iot/dtdlspec\"\nimport { serviceSpecificationToServiceTwinSpecification } from \"../../jacdac-ts/src/azure-iot/devicetwin\"\nimport { withPrefix } from \"gatsby\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.paper,\n            marginBottom: theme.spacing(1),\n        },\n        pre: {\n            margin: \"0\",\n            padding: \"0\",\n            backgroundColor: \"transparent\",\n            whiteSpec: \"pre-wrap\",\n        },\n    })\n)\n\nexport default function ServiceSpecificationSource(props: {\n    classIdentifier?: number\n    serviceSpecification?: jdspec.ServiceSpec\n    showSpecification?: boolean\n}) {\n    const { classIdentifier, serviceSpecification, showSpecification } = props\n    const classes = useStyles()\n    const [tab, setTab] = useState(0)\n    const spec =\n        serviceSpecification ||\n        serviceSpecificationFromClassIdentifier(classIdentifier)\n    const convs = converters()\n    const showDTDL = spec && spec?.camelName !== \"system\"\n    const showDeviceTwin = spec && spec?.camelName !== \"sytem\"\n\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    let index = 0\n    return (\n        <div className={classes.root}>\n            <Paper square>\n                <Tabs\n                    value={tab}\n                    onChange={handleTabChange}\n                    aria-label=\"View specification formats\"\n                >\n                    {[\n                        showSpecification && \"Specification\",\n                        \"MakeCode\",\n                        \"TypeScript\",\n                        \"C\",\n                        \"JSON\",\n                        showDTDL && \"DTDL\",\n                        showDeviceTwin && \"Twin\",\n                    ]\n                        .filter(n => !!n)\n                        .map((n, i) => (\n                            <Tab key={n} label={n} />\n                        ))}\n                </Tabs>\n                {showSpecification && (\n                    <TabPanel key=\"spec\" value={tab} index={index++}>\n                        <ServiceSpecification service={spec} />\n                    </TabPanel>\n                )}\n                {[\"sts\", \"ts\", \"c\", \"json\"].map(lang => (\n                    <TabPanel key={`conv${lang}`} value={tab} index={index++}>\n                        <Snippet value={() => convs[lang](spec)} mode={lang} />\n                    </TabPanel>\n                ))}\n                {showDTDL && (\n                    <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                        <DTDLSnippet node={serviceSpecificationToDTDL(spec)} />\n                    </TabPanel>\n                )}\n                {showDeviceTwin && (\n                    <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                        <Snippet\n                            mode=\"json\"\n                            url={withPrefix(\n                                `/services/twin/x${spec.classIdentifier.toString(\n                                    16\n                                )}.json`\n                            )}\n                            value={JSON.stringify(\n                                serviceSpecificationToServiceTwinSpecification(\n                                    spec\n                                ),\n                                null,\n                                2\n                            )}\n                        />\n                    </TabPanel>\n                )}\n            </Paper>\n        </div>\n    )\n}\n","import React from \"react\"\nimport Markdown from \"./ui/Markdown\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport { Button, Link } from \"gatsby-theme-material-ui\"\nimport DeviceSpecificationList from \"./DeviceSpecificationList\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { serviceTestFromServiceClass } from \"../../jacdac-ts/src/test/testspec\"\nimport { Grid } from \"@material-ui/core\"\nimport ServiceSpecificationSource from \"./ServiceSpecificationSource\"\n\nexport default function ServiceMarkdown(props: {\n    classIdentifier: number\n    source: string\n}) {\n    const { classIdentifier, source } = props\n    const service = serviceSpecificationFromClassIdentifier(classIdentifier)\n    const test = serviceTestFromServiceClass(classIdentifier)\n    const { shortId } = service\n\n    return (\n        <>\n            <ServiceSpecificationStatusAlert specification={service} />\n            <Markdown source={source} />\n\n            <Grid container spacing={1}>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        to={`/services/${shortId}/playground/`}\n                    >\n                        Playground\n                    </Button>\n                </Grid>\n                {test && (\n                    <Grid item>\n                        <Button\n                            variant=\"contained\"\n                            to={`/services/${shortId}/test/`}\n                        >\n                            Test\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n\n            <h2>Registered Devices</h2>\n            <DeviceSpecificationList\n                requiredServiceClasses={[classIdentifier]}\n            />\n\n            <h2>Sources</h2>\n            <ServiceSpecificationSource serviceSpecification={service} />\n\n            <h2> See Also</h2>\n            <ul>\n                <li>\n                    <a\n                        href={`https://github.com/microsoft/jacdac/edit/main/services/${shortId}.md`}\n                    >\n                        Edit specification source\n                    </a>\n                    .\n                </li>\n                <li>\n                    Read{\" \"}\n                    <Link to=\"/reference/service-specification/\">\n                        Service Specification Language\n                    </Link>{\" \"}\n                    reference\n                </li>\n                <li>\n                    Create a new service specification using the{\" \"}\n                    <Link to=\"/tools/service-editor/\">Service Editor</Link>\n                </li>\n                <li>\n                    Using services in JavaScript with the{\" \"}\n                    <Link to={`/clients/javascript/jdom/`}>\n                        Jacdac Object Model (JDOM)\n                    </Link>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import React from \"react\"\nimport ServiceMarkdown from \"../components/ServiceMarkdown\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function Page(props: { pageContext: any }) {\n    return <ServiceMarkdown {...props.pageContext} />\n}\n"],"names":["React","Fragment","serviceSpecificationFromClassIdentifier","Chip","EnumSpecification","props","serviceClass","spec","enums","Object","values","filter","en","derived","length","map","e","name","isFlags","keys","members","toString","useContext","Link","serviceSpecificationFromName","isRegister","isEvent","isCommand","isPipeReport","isReportOf","isPipeReportOf","PacketSpecification","IDChip","Markdown","Box","Grid","ServiceSpecificationStatusAlert","useServiceProviderFromServiceClass","JacdacContext","useChange","DashbardDeviceItem","DashboardServiceDevices","bus","devices","b","device","id","ServiceSpecification","service","node","showDerived","shortId","classIdentifier","packets","pkt","registers","events","commands","reports","r","secondary","pipeReports","others","indexOf","reportOf","find","rep","pipeReportOf","notes","short","extends","extend","i","long","note","group","sort","l","DashboardDevice","dashboardServiceWeight","AppContext","DrawerType","DashboardDeviceItem","expanded","toggleExpanded","variant","other","drawerType","breakpoints","breakpointWeight","services","srv","readingRegister","valueRegister","intensityRegister","reduce","c","v","None","xs","sm","md","lg","xl","SRV_CONTROL","isHighLevelRegister","isInfrastructure","serviceSpecifications","serviceSpecificationToServiceTwinSpecification","specification","undefined","camelName","identifier","packFormat","kind","fields","code","f","dspec","serviceSpecificationsWithServiceTwinSpecification","specs","useState","Tabs","Tab","Paper","createStyles","makeStyles","TabPanel","Snippet","converters","DTDLSnippet","serviceSpecificationToDTDL","withPrefix","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","marginBottom","spacing","pre","margin","padding","whiteSpec","ServiceSpecificationSource","serviceSpecification","showSpecification","classes","tab","setTab","convs","showDTDL","showDeviceTwin","handleTabChange","event","newValue","index","n","lang","JSON","stringify","Button","DeviceSpecificationList","serviceTestFromServiceClass","ServiceMarkdown","source","test","Page","pageContext"],"sourceRoot":""}