{"version":3,"sources":["webpack:///./src/templates/service-playground.mdx","webpack:///./src/components/EnumSpecification.tsx","webpack:///./src/components/hooks/useDeviceHostFromServiceClass.ts","webpack:///./src/components/ServiceSpecification.tsx","webpack:///./src/components/dashboard/DashboardDeviceItem.tsx","webpack:///./src/components/Page.tsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","serviceSpecificationFromClassIdentifier","pageContext","node","classIdentifier","isMDXComponent","EnumSpecification","serviceClass","spec","enums","Object","values","filter","en","derived","length","map","e","name","isFlags","keys","members","toString","useDeviceHostFromServiceClass","useContext","JacdacContext","bus","useEffect","devices","def","hostDefinitionFromServiceClass","host","addHost","services","removeDeviceHost","DashboardServiceDevices","useChange","b","device","id","ServiceSpecification","service","showSource","showDevices","showDerived","shortId","packets","pkt","registers","isRegister","events","isEvent","commands","isCommand","reports","r","secondary","pipeReports","isPipeReport","others","indexOf","reportOf","find","rep","isReportOf","pipeReportOf","isPipeReportOf","notes","short","extends","extend","i","serviceSpecificationFromName","long","note","group","sort","l","DashboardDeviceItem","expanded","toggleExpanded","variant","other","breakpoints","breakpointWeight","srv","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","reduce","c","v","xs","sm","md","lg","xl","Page","children"],"mappings":"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","file":"component---src-templates-service-playground-mdx-98ba61c99dfdf8220e4a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\";\nimport ServiceSpecification from \"../components/ServiceSpecification\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ServiceSpecification service={serviceSpecificationFromClassIdentifier(props.pageContext.node.classIdentifier)} mdxType=\"ServiceSpecification\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n            <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n        </Fragment>)}\n    </Fragment>\n}\n","import { useContext, useEffect } from \"react\";\nimport { addHost, hostDefinitionFromServiceClass } from \"../../../jacdac-ts/src/hosts/hosts\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\n\nexport default function useDeviceHostFromServiceClass(serviceClass: number): void {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext);\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass });\n        const def = !devices.length && hostDefinitionFromServiceClass(serviceClass);\n        const host = def && addHost(bus, def.services());\n        return () => bus.removeDeviceHost(host);\n    }, [serviceClass]);\n}","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { serviceSpecificationFromName, isRegister, isEvent, isCommand, isPipeReport, isReportOf, isPipeReportOf, deviceSpecificationsForService } from \"../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\";\nimport ServiceSpecificationSource from \"./ServiceSpecificationSource\"\nimport Markdown from \"./ui/Markdown\";\nimport EnumSpecification from \"./EnumSpecification\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport DeviceSpecificationList from \"./DeviceSpecificationList\"\nimport useDeviceHostFromServiceClass from \"./hooks/useDeviceHostFromServiceClass\";\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport useChange from \"../jacdac/useChange\";\nimport DashbardDeviceItem from \"./dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props;\n    const { bus } = useContext<JacdacContextProps>(JacdacContext);\n    const devices = useChange(bus, b => b.devices({ serviceClass }));\n    return <Grid container spacing={2}>\n        {devices.map(device => <DashbardDeviceItem\n            key={device.id}\n            device={device}\n            showAvatar={true}\n            showHeader={true}\n        />)}\n    </Grid >\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec,\n    showSource?: boolean,\n    showDevices?: boolean,\n    showDerived?: boolean\n}) {\n    const { service: node, showSource, showDevices, showDerived } = props;\n    const { shortId, name, classIdentifier } = node;\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived);\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(r => registers.indexOf(r) < 0\n        && events.indexOf(r) < 0\n        && commands.indexOf(r) < 0\n        && reports.indexOf(r) < 0\n        && pipeReports.indexOf(r) < 0\n    )\n    // spin up host on demand\n    useDeviceHostFromServiceClass(node.classIdentifier);\n\n    const reportOf = (pkt: jdspec.PacketInfo) => reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) => pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (<Fragment key={`servicespec${shortId}`}>\n        <h1 key=\"title\">{name}\n            <Box ml={1} component=\"span\">\n                <IDChip id={node.classIdentifier} filter={`srv:${shortId}`} />\n            </Box>\n        </h1>\n        <ServiceSpecificationStatusAlert specification={node} />\n        <Markdown key=\"notesshort\" source={node.notes.short} />\n        {!!node.extends?.length &&\n            <p key=\"extends\">\n                <span>Extends </span>\n                {node.extends.map((extend, i) => <Fragment key={`extend${extend}`}>\n                    {i > 0 && <span>, </span>}\n                    <Link key={`extend${extend}`} to={`/services/${extend}/`}>{serviceSpecificationFromName(extend).name}</Link>\n                </Fragment>)}\n    .</p>}\n        <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n        <DashboardServiceDevices serviceClass={classIdentifier} />\n        <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n        {[\n            { name: \"Registers\", packets: registers, note: node.notes[\"registers\"] },\n            { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n            { name: \"Commands\", packets: commands, note: node.notes[\"commands\"] },\n            { name: \"Others\", packets: others, note: node.notes[\"others\"] }\n        ].filter(group => group.packets.length)\n            .map(group => <Fragment key={`group${group.name}`}>\n                <h2>{group.name}</h2>\n                {group.note && <Markdown key={`node${group.name}`} source={group.note} />}\n                {group.packets\n                    .sort((l, r) => (l.derived ? 1 : -1) - (r.derived ? 1 : -1))\n                    .map((pkt, i) => <PacketSpecification\n                        key={`pkt${pkt.name}`}\n                        serviceClass={node.classIdentifier}\n                        packetInfo={pkt}\n                        reportInfo={reportOf(pkt)}\n                        pipeReportInfo={pipeReportOf(pkt)}\n                        showDevices={true}\n                    />)}\n            </Fragment>)\n        }\n    </Fragment>\n    )\n}","import { Grid } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import React, { Fragment } from \"react\";\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page;"],"sourceRoot":""}