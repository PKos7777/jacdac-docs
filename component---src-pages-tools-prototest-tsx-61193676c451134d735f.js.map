{"version":3,"file":"component---src-pages-tools-prototest-tsx-61193676c451134d735f.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/components/TestCard.tsx","webpack://jacdac-docs/./src/pages/tools/prototest.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"./services\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"./iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        title=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\"\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from \"@material-ui/core\"\nimport CodeBlock from \"../CodeBlock\"\nimport TabPanel from \"../ui/TabPanel\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\"\nimport MakeCodeSimulator from \"./MakeCodeSimulator\"\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string\n    width: number\n    height: number\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props\n    const { source, rendered } = JSON.parse(renderedSource) as {\n        source: string\n        rendered: Rendered\n    }\n    const { height, width, url } = rendered || {}\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext)\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        if (newValue < tabs.length - 1) setEditor(tabs[newValue])\n        setTab(newValue)\n    }\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source])\n    const { code } = snippet\n\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Select MakeCode editor\"\n            >\n                <Tab label={\"Blocks\"} />\n                <Tab label={\"JavaScript\"} />\n                <Tab label={\"Simulator\"} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <CodeBlock className=\"typescript\">{code}</CodeBlock>\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <MakeCodeSimulator snippet={snippet} />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./trace/TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: { js: string; html: string }\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        actions,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={codeSandbox} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {actions && <div style={{ float: \"right\" }}>{actions}</div>}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    actions?: ReactNode\n    url?: string\n}) {\n    const { children, className, ...rest } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\": {\n            const [source, js, html] = children.split(/\\n-{5,}\\n/gi)\n            return (\n                <HighlightedCode\n                    {...rest}\n                    className={\"javascript\"}\n                    codeSandbox={{ js, html }}\n                >\n                    {source}\n                </HighlightedCode>\n            )\n        }\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const classes = useStyles()\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreSelf: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import { Typography } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n}) {\n    const { value, mode, download, url, caption, actions } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport { toHex } from \"../../jacdac-ts/src/jdom/utils\"\nimport CmdButton from \"./CmdButton\"\nimport Snippet from \"./ui/Snippet\"\n\nexport type TestLogger = (name: string, ...msg: any) => void\nexport type Test = (log: TestLogger) => Promise<void>\n\nexport default function TestCard(props: {\n    title: string\n    subheader?: string\n    children?: JSX.Element | JSX.Element[]\n    onTest: Test\n    autoRun?: boolean\n}) {\n    const { title, subheader, onTest, children, autoRun } = props\n    const [output, setOutput] = useState(\"\")\n\n    const runTest = async () => {\n        const log: string[] = []\n\n        const toValue = (msg: any) => {\n            if (msg === undefined || msg === null) return \"\"\n            else if (typeof msg === \"string\") return msg\n            else if (msg instanceof Uint8Array) return toHex(msg)\n            else if (Array.isArray(msg)) return msg.map(toValue)\n            else return JSON.stringify(msg)\n        }\n\n        const logger = (msg: any) => {\n            if (msg instanceof Error) log.push(msg + \"\")\n            if (typeof msg === \"object\") {\n                Object.keys(msg).forEach(k =>\n                    log.push(`${k}: ${toValue(msg[k])}`)\n                )\n            } else log.push(toValue(msg))\n        }\n\n        try {\n            await onTest(logger)\n        } catch (e) {\n            logger(e)\n            throw e\n        } finally {\n            setOutput(log.join(\"\\n\"))\n        }\n    }\n\n    const handleClick = async () => await runTest()\n\n    return (\n        <Card>\n            <CardHeader title={title} subheader={subheader} />\n            <CardContent>\n                {children}\n                {output && <Snippet value={output} />}\n            </CardContent>\n            <CardActions>\n                <CmdButton\n                    variant=\"outlined\"\n                    onClick={handleClick}\n                    disableReset={true}\n                    autoRun={autoRun}\n                >\n                    Test\n                </CmdButton>\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid, Switch, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport {\n    bufferEq,\n    pick,\n    randomRange,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    ProtoTestCmd,\n    ProtoTestReg,\n    SRV_PROTO_TEST,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport JDField from \"../../../jacdac-ts/src/jdom/field\"\nimport {\n    jdpack,\n    jdpackEqual,\n    jdunpack,\n    PackedValues,\n} from \"../../../jacdac-ts/src/jdom/pack\"\nimport DeviceName from \"../../components/devices/DeviceName\"\nimport DeviceActions from \"../../components/DeviceActions\"\nimport useEffectAsync from \"../../components/useEffectAsync\"\nimport TestCard from \"../../components/TestCard\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport Alert from \"../../components/ui/Alert\"\nimport JDServiceProvider from \"../../../jacdac-ts/src/jdom/serviceprovider\"\nimport ProtocolTestServer from \"../../../jacdac-ts/src/jdom/protocoltestserver\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { cryptoRandomUint32 } from \"../../../jacdac-ts/src/jdom/random\"\n\nfunction randomFieldPayload(field: JDField) {\n    const { specification } = field\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let r: any = undefined\n    switch (specification.type) {\n        case \"bool\":\n            r = Math.random() > 0.5 ? 1 : 0\n            break\n        case \"i8\":\n        case \"i16\":\n        case \"i32\":\n        case \"u8\":\n        case \"u16\":\n        case \"u32\": {\n            const unsigned = specification.type[0] === \"u\"\n            const n = Math.min(30, parseInt(specification.type.slice(1)))\n            const min = pick(\n                specification.typicalMin,\n                specification.absoluteMin,\n                unsigned ? 0 : -((1 << (n - 1)) - 1)\n            )\n            const max = pick(\n                specification.typicalMax,\n                specification.absoluteMax,\n                unsigned ? (1 << n) - 1 : (1 << (n - 1)) - 1\n            )\n            r = randomRange(min, max)\n            break\n        }\n        case \"bytes\": {\n            // maxBytes?\n            const a = cryptoRandomUint32(randomRange(1, 3))\n            r = new Uint8Array(a.buffer)\n            break\n        }\n        case \"string\":\n        case \"string0\": {\n            const ch_a = \"a\".charCodeAt(0)\n            const ch_z = \"z\".charCodeAt(0)\n            const n = randomRange(4, 10)\n            let s = \"\"\n            for (let i = 0; i < n; ++i) {\n                s += String.fromCharCode(randomRange(ch_a, ch_z))\n            }\n            r = s\n            break\n        }\n    }\n\n    return r\n}\n\nfunction randomPayload<T extends PackedValues>(\n    packFormat: string,\n    fields: JDField[]\n): T {\n    if (!packFormat) throw new Error(\"pack format unknown\")\n    const rs = fields.map(randomFieldPayload)\n    if (rs.some(r => r === undefined))\n        throw new Error(\"unsupported data layout\")\n    return rs as T\n}\n\nfunction RegisterProtocolTest(props: {\n    rw: JDRegister\n    ro: JDRegister\n    ev: JDEvent\n}) {\n    const { rw, ro, ev } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { specification, fields } = rw\n    const name = specification.name.replace(/^rw_/, \"\")\n\n    // event code and command code are the same as rw register\n    useEffectAsync(async () => {\n        await rw.sendGetAsync()\n        await ro.sendGetAsync()\n    }, [])\n\n    const testRwRo = async log => {\n        log(`-- testing rw`)\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n\n        // setup observer for event counts\n        const evCount = ev.count\n\n        // send over packet\n        await rw.sendSetAsync(data)\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n\n        // check ro\n        log(`-- testing ro`)\n        await ro.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        const ropayload = jdunpack(ro.data, packFormat)\n        log({ ropayload })\n        if (!jdpackEqual(packFormat, payload, ropayload))\n            throw new Error(`expected ro ${payload}, got ${ropayload}`)\n\n        // the event should have triggered once\n        log(`-- testing event`)\n        if (packFormat !== \"u8\" && evCount + 1 !== ev.count)\n            throw new Error(`expected 1 event, got ${ev.count - evCount}`)\n    }\n\n    const testCommand = async log => {\n        log(`-- testing cmd`)\n\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n        // send over cmd packet\n        await rw.service.sendPacketAsync(Packet.from(rw.code, data))\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n    }\n\n    const test = async log => {\n        log(`- testing no acks`)\n        rw.service.registersUseAcks = false\n        await testRwRo(log)\n        await testCommand(log)\n        log(`- testing acks`)\n        rw.service.registersUseAcks = true\n        await testRwRo(log)\n        await testCommand(log)\n    }\n\n    return (\n        <TestCard\n            title={name}\n            subheader={specification.packFormat || \"?\"}\n            onTest={test}\n        />\n    )\n}\n\nfunction ServiceProtocolTest(props: { service: JDService }) {\n    const { service } = props\n    const { device } = service\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    const regs = service.registers()\n    const rws = service\n        .registers()\n        .filter(reg => reg.specification.kind == \"rw\")\n        .map(rw => {\n            const roname = rw.name.replace(/^rw_/, \"ro_\")\n            const ro = regs.find(\n                r =>\n                    r.specification.kind === \"ro\" &&\n                    r.specification.name === roname\n            )\n            const ev = service.event(rw.code)\n            return { rw, ro, ev }\n        })\n\n    const outPipeTest = async log => {\n        // fill bytes with data\n        const rw = service.register(ProtoTestReg.RwBytes)\n        const [data] = randomPayload<[Uint8Array]>(\"b\", rw.fields)\n        log(`data: ${toHex(data)}`)\n        // send over cmd packet\n        rw.service.registersUseAcks = true\n        await rw.sendSetAsync(data)\n        await rw.sendGetAsync()\n        // wait for response\n        await bus.delay(100)\n        log(`data recv: ${toHex(rw.data)}`)\n        if (!bufferEq(data, rw.data))\n            throw new Error(\n                `rw write failed, expected ${toHex(data)}, got ${toHex(\n                    rw.data\n                )}`\n            )\n        // read packet back\n        const recv = await service.receiveWithInPipe<[number]>(\n            ProtoTestCmd.CReportPipe,\n            \"u8\"\n        )\n        const recvu = new Uint8Array(recv.map(buf => buf[0]))\n        log(`received ${toHex(recvu)}`)\n        if (!bufferEq(data, recvu))\n            throw new Error(\n                `expected ${toHex(data)}, got ${toHex(recv.map(buf => buf[0]))}`\n            )\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={10}>\n                <Typography variant=\"h4\">\n                    <DeviceName device={device} />\n                </Typography>\n            </Grid>\n            <Grid item xs={2}>\n                <DeviceActions device={device} showReset={true} />\n            </Grid>\n            {rws?.map(rw => (\n                <Grid key={rw.rw.id} item xs={12} md={6}>\n                    <RegisterProtocolTest {...rw} />\n                </Grid>\n            ))}\n            <Grid key={\"cpipe\"} item xs={12} md={6}>\n                <TestCard\n                    title={\"out pipe\"}\n                    subheader={\"\"}\n                    onTest={outPipeTest}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ProtocolTest() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [host, setHost] = useState(false)\n    const services = useChange(bus, b =>\n        b.services({ serviceClass: SRV_PROTO_TEST })\n    )\n\n    const toggleHost = () => setHost(!host)\n\n    // add virtual device\n    useEffect(() => {\n        if (!host) return () => {}\n\n        const d = new JDServiceProvider([new ProtocolTestServer()])\n        bus.addServiceProvider(d)\n        return () => bus.removeServiceProvider(d)\n    }, [host])\n\n    return (\n        <>\n            <h1>Protocol Test</h1>\n            <p>\n                A helper page to test the Jacdac protocol against a &nbsp;\n                <Link to=\"/services/prototest/\">protocol test</Link> service.\n            </p>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid key=\"connect\" item xs={12}>\n                    <ConnectAlert serviceClass={SRV_PROTO_TEST} />\n                </Grid>\n                {services?.map(service => (\n                    <Grid key={service.id} item xs={12}>\n                        <ServiceProtocolTest service={service} />\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        <AlertTitle>Developer zone</AlertTitle>\n                        <Switch checked={host} onChange={toggleHost} />\n                        <label>Add simulator</label>\n                    </Alert>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["useEffect","useWindowEvent","type","listener","passive","deps","window","undefined","addEventListener","removeEventListener","concat","useMemo","useContext","unique","makeCodeServices","MakeCodeSnippetContext","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","useMakeCodeRenderer","target","rendererUrl","lang","iframeId","pendingRequests","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","createStyles","makeStyles","React","useRef","PACKET_PROCESS","PACKET_SEND","JacdacContext","PaperBox","useStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","bus","frameRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","pkt","packetSent","channel","broadcast","toBuffer","sender","current","useState","Tab","Tabs","CodeBlock","TabPanel","withPrefix","MakeCodeSnippet","renderedSource","rendered","JSON","parse","tabs","editor","setEditor","tab","setTab","handleTabChange","event","newValue","lazy","Highlight","defaultProps","LIGHT_THEME","DARK_THEME","DarkModeContext","IconButton","Link","GetAppIcon","LaunchIcon","Tooltip","Suspense","TraceSnippet","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","actions","darkMode","language","theme","valueUri","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","rest","js","html","Box","Alert","serviceSpecificationFromClassIdentifier","ConnectButton","NoSsr","useChange","button","marginLeft","spacing","NoSsrConnectAlert","serviceClass","closeable","transports","devices","b","ignoreSelf","spec","transport","ConnectAlert","Paper","useTheme","padding","elevation","bgcolor","others","Typography","Snippet","mode","download","caption","v","Card","CardActions","CardContent","CardHeader","toHex","CmdButton","TestCard","title","subheader","onTest","autoRun","output","setOutput","runTest","toValue","Uint8Array","Array","isArray","stringify","logger","Error","e","handleClick","Grid","Switch","bufferEq","pick","randomRange","ProtoTestCmd","ProtoTestReg","SRV_PROTO_TEST","jdpack","jdpackEqual","jdunpack","DeviceName","DeviceActions","useEffectAsync","Packet","AlertTitle","JDServiceProvider","ProtocolTestServer","cryptoRandomUint32","randomFieldPayload","field","specification","unsigned","n","min","parseInt","slice","typicalMin","absoluteMin","max","typicalMax","absoluteMax","a","buffer","ch_a","charCodeAt","ch_z","s","i","String","fromCharCode","randomPayload","packFormat","fields","rs","some","RegisterProtocolTest","rw","ro","sendGetAsync","testRwRo","payload","evCount","count","sendSetAsync","delay","rwdata","rwpayload","ropayload","testCommand","service","sendPacketAsync","from","registersUseAcks","ServiceProtocolTest","device","regs","registers","rws","reg","kind","roname","find","outPipeTest","register","RwBytes","recv","receiveWithInPipe","CReportPipe","recvu","buf","ProtocolTest","host","setHost","services","toggleHost","d","addServiceProvider","removeServiceProvider"],"sourceRoot":""}