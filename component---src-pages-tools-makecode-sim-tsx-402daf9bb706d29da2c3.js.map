{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/alert/SimulateDeviceAlert.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/pages/tools/makecode-sim.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","useId","SimulateDeviceAlert","handleStartSimulator","provider","serviceProviderDefinitionFromServiceClass","addServiceProvider","AppContext","toggleShowDeviceHostsDialog","SRV_BUTTON","SRV_BUZZER","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","specification","filter","rs","strcmp","deviceId","defaultDeviceFilter","d","Dashboard","showConnect","showStartSimulators","deviceSort","deviceFilter","useDevices","announced","sort","useMediaQueries","mobile","splitFilter","findServiceProvider","simulators","physicals","roleManager","useRoleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","useServiceRole","service","role","setRole","useEffect","subscribe","ROLE_CHANGE","ServiceRole","showSelectRoleDialog","handleClick","hasRoleForService","_","DashboardServiceWidgetItem","useRegisterUnpackedValue","register","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","visible","registers","useMemo","ids","isRegister","identifier","indexOf","reg","optional","kind","lastGetAttempts","REGISTER_OPTIONAL_POLL_COUNT","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_SETTINGS","SRV_PROTO_TEST","DashboardDevice","serviceFilter","variant","showAvatar","showHeader","useDeviceName","useDeviceSpecification","xs","serviceGridRef","intersection","useSnackbar","enqueueSnackbar","RESTART","console","debug","shortId","ServiceWidgets","useCallback","isMixin","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","DashboardDeviceItem","drawerType","breakpoints","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","DrawerType","sm","md","lg","xl","mgr","setMgr","ROLE_MANAGER_CHANGE","hr","background","palette","text","disabled","marginBottom","start","width","GridHeader","count","clsx","undefined","Carousel","iframeBridge","bind","extensions","candidateExtensions","handleAdd","postAddExtensions","Page","DarkModeContext","toggleDarkMode","darkModeMounted","rawTheme","createMuiTheme","primary","main","secondary","contrastThreshold","responsiveFontSizes"],"mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;ACnBF;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe,Y;;;;;;;;;;;;;;;;;;;;;ACnBf;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAGC,mEAAU,CAAC,UAAAC,KAAK;AAAA,SAC9BC,mEAAY,CAAC;AACTC,UAAM,EAAE;AACJC,gBAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADR;AADC,GAAD,CADkB;AAAA,CAAN,CAA5B;;AAQA,SAASC,iBAAT,CAA2BC,KAA3B,EAA6D;AACzD,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AADyD,MAEjDU,YAFiD,GAEhCF,KAFgC,CAEjDE,YAFiD;;AAAA,oBAGzCC,iDAAU,CAAqBC,6DAArB,CAH+B;AAAA,MAGjDC,GAHiD,eAGjDA,GAHiD;;AAAA,MAIjDC,UAJiD,GAIlCD,GAJkC,CAIjDC,UAJiD;AAKzD,MAAMC,OAAO,GAAGC,mEAAS,CAACH,GAAD,EAAM,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACF,OAAF,CAAU;AAAEL,kBAAY,EAAZA,YAAF;AAAgBQ,gBAAU,EAAE;AAA5B,KAAV,CAAJ;AAAA,GAAP,CAAzB;AACA,MAAMC,IAAI,GAAGC,2GAAuC,CAACV,YAAD,CAApD,CANyD,CAQzD;;AACA,MAAI,CAACI,UAAU,CAACO,MAAZ,IAAsBN,OAAtB,aAAsBA,OAAtB,eAAsBA,OAAO,CAAEM,MAAnC,EAA2C,OAAO,IAAP;AAE3C,sBACI,iDAAC,+DAAD;AAAK,gBAAY,EAAC;AAAlB,kBACI,iDAAC,uDAAD;AAAO,YAAQ,EAAC,MAAhB;AAAuB,aAAS,EAAE;AAAlC,KACK,CAACF,IAAD,iBAAS,8FADd,EAEKA,IAAI,iBAAI,qFAAyBA,IAAI,CAACG,IAA9B,aAFb,EAGKR,UAAU,CAACS,GAAX,CAAe,UAAAC,SAAS;AAAA,wBACrB,iDAAC,mEAAD;AACI,SAAG,EAAEA,SAAS,CAACC,IADnB;AAEI,eAAS,EAAED,SAFf;AAGI,eAAS,EAAEf,OAAO,CAACL,MAHvB;AAII,UAAI,EAAE,IAJV;AAKI,iBAAW,EAAE;AALjB,MADqB;AAAA,GAAxB,CAHL,CADJ,CADJ;AAiBH;;AAEc,SAASsB,YAAT,CAAsBlB,KAAtB,EAAwD;AACnE,sBACI,iDAAC,+DAAD,qBACI,iDAAC,iBAAD,EAAuBA,KAAvB,CADJ,CADJ;AAKH,C;;;;;;;;;;;;;;;;;;;;;ACvDD;AAGe,SAASmB,gBAAT,CAAgDC,eAAhD,EAA2E;AACtF,MAAMC,KAAK,GAAGC,gBAAM,CAAc,IAAIC,GAAJ,EAAd,CAApB;;AADsF,kBAE1DC,kBAAQ,CAAC,CAAD,CAFkD;AAAA,MAE/EC,MAF+E;AAAA,MAEvEC,SAFuE;;AAItF,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAiBP,KAAK,CAACQ,OAAN,CAAcC,GAAd,CAAkBF,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEG,EAAxB,CAAjB;AAAA,GAAjB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACJ,IAAD,EAAcK,KAAd,EAAiC;AACjD,QAAI,CAACL,IAAL,EAAW;AACX,QAAMM,CAAC,GAAGP,QAAQ,CAACC,IAAD,CAAlB;;AACA,QAAI,CAAC,CAACK,KAAF,KAAYC,CAAhB,EAAmB;AACf,UAAI,CAACD,KAAL,EACIZ,KAAK,CAACQ,OAAN,CAAcM,MAAd,CAAqBP,IAAI,CAACG,EAA1B,EADJ,KAEK;AACD,YAAIX,eAAJ,EACIC,KAAK,CAACQ,OAAN,CAAcO,KAAd;AACJf,aAAK,CAACQ,OAAN,CAAcQ,GAAd,CAAkBT,IAAI,CAACG,EAAvB;AACH;AACDL,eAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACH;AACJ,GAbD;;AAcA,SAAO;AACHa,gBAAY,EAAEjB,KAAK,CAACQ,OAAN,CAAcU,IAAd,GAAqB,CADhC;AAEHZ,YAAQ,EAARA,QAFG;AAGHK,eAAW,EAAXA,WAHG;AAIHQ,kBAAc,EAAE,wBAACZ,IAAD,EAAiB;AAC7BI,iBAAW,CAACJ,IAAD,EAAO,CAACD,QAAQ,CAACC,IAAD,CAAhB,CAAX;AACH,KANE;AAOHQ,SAAK,EAAE,iBAAM;AACTf,WAAK,CAACQ,OAAN,CAAcO,KAAd;AACAV,eAAS,CAAC,CAAD,CAAT;AACH;AAVE,GAAP;AAYH,C;;;;;;;;;;;;;;;;;;;;;AClCD;AACA;AACA;AAEA;AAEA;AAEe,SAASe,WAAT,CAAqBzC,KAArB,EAOW;AAAA,MACd0C,KADc,GAC2D1C,KAD3D,CACd0C,KADc;AAAA,MACPC,MADO,GAC2D3C,KAD3D,CACP2C,MADO;AAAA,MACCpC,OADD,GAC2DP,KAD3D,CACCO,OADD;AAAA,MACUqC,QADV,GAC2D5C,KAD3D,CACU4C,QADV;AAAA,MACoBC,cADpB,GAC2D7C,KAD3D,CACoB6C,cADpB;AAAA,MACoCC,QADpC,GAC2D9C,KAD3D,CACoC8C,QADpC;AAAA,MACiDC,KADjD,mDAC2D/C,KAD3D;;AAEtB,MAAMgD,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,WAAsB;AAAA,aAAMJ,cAAc,CAACI,MAAD,CAApB;AAAA,KAAtB;AAAA,GAArB;;AACA,MAAMC,SAAS,GAAGC,uCAAK,EAAvB;AAEA,MAAI,CAACR,MAAD,IAAW,EAACpC,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEM,MAAV,CAAf,EACI,OAAO,IAAP;AAEJ,sBAAO;AAAS,MAAE,EAAEqC;AAAb,kBACH,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,kBACI,oBAAC,yBAAD;AAAY,SAAK,EAAER,KAAnB;AAA0B,UAAM,EAAEC;AAAlC,IADJ,EAEKpC,OAFL,aAEKA,OAFL,uBAEKA,OAAO,CAAEQ,GAAT,CAAa,UAAAkC,MAAM;AAAA,wBAAI,oBAAC,kCAAD;AACpB,SAAG,EAAEA,MAAM,CAAClB,EADQ;AAEpB,YAAM,EAAEkB,MAFY;AAGpB,cAAQ,EAAEL,QAAQ,CAACK,MAAD,CAHE;AAIpB,oBAAc,EAAED,YAAY,CAACC,MAAD;AAJR,OAKhBF,KALgB,EAAJ;AAAA,GAAnB,CAFL,EAQKD,QARL,CADG,CAAP;AAYH,C;;;;;;;;;;;;;;;;;;;;;;ACnCD;AACA;AAOA;AAIA;AACA;AACA;AACA;AACA;AAEe,SAASM,mBAAT,GAA+B;AAAA,oBAC1BjD,oBAAU,CAAqBC,sBAArB,CADgB;AAAA,MAClCC,GADkC,eAClCA,GADkC;;AAE1C,MAAMgD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACnD,YAAD;AAAA,WAA0B,YAAM;AACzD,UAAMoD,QAAQ,GAAGC,6DAAyC,CAACrD,YAAD,CAA1D;AACAsD,4CAAkB,CAACnD,GAAD,EAAMiD,QAAN,CAAlB;AACH,KAH4B;AAAA,GAA7B;;AAF0C,qBAMFnD,oBAAU,CAACsD,0BAAD,CANR;AAAA,MAMlCC,2BANkC,gBAMlCA,2BANkC;;AAQ1C,sBACI,oBAAC,oBAAD;AAAO,YAAQ,EAAC;AAAhB,wCAEI,oBAAC,oCAAD;AACI,WAAO,EAAEL,oBAAoB,CAACM,6BAAD,CADjC;AAEI,SAAK,EAAC,QAFV;AAGI,kBAAW;AAHf,oBAFJ,oBAUI,oBAAC,oCAAD;AACI,WAAO,EAAEN,oBAAoB,CAACO,6BAAD,CADjC;AAEI,SAAK,EAAC,QAFV;AAGI,kBAAW;AAHf,oBAVJ,eAiBI,oBAAC,oCAAD;AACI,WAAO,EAAEP,oBAAoB,CAACQ,+BAAD,CADjC;AAEI,SAAK,EAAC,UAFV;AAGI,kBAAW;AAHf,0BAjBJ,oBAyBI,oBAAC,oCAAD;AACI,WAAO,EAAER,oBAAoB,CAACS,0BAAD,CADjC;AAEI,SAAK,EAAC,KAFV;AAGI,kBAAW;AAHf,oBAzBJ,oBAiCI,oBAAC,oCAAD;AACI,WAAO,EAAET,oBAAoB,CAACU,oCAAD,CADjC;AAEI,SAAK,EAAC,eAFV;AAGI,kBAAW;AAHf,oBAjCJ,0CAyCI,oBAAC,oCAAD;AACI,SAAK,EAAC,iBADV;AAEI,WAAO,EAAEL;AAFb,kBAII,oBAAC,kBAAD,OAJJ,CAzCJ,MADJ;AAmDH,C;;;AC7ED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CAEA;;CAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASM,iBAAT,CAA2BC,CAA3B,EAAwCC,CAAxC,EAA6D;AACzD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WACbA,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CACI,UAACC,IAAD,EAAOC,GAAP;AAAA,aACID,IAAI,IAAIE,0BAAS,CAACD,GAAD,CAAT,GAAiB,EAAjB,GAAsBE,mCAAkB,CAACF,GAAD,CAAlB,GAA0B,CAA1B,GAA8B,CAAxD,CADR;AAAA,KADJ,EAGI,CAHJ,KAIK,CALQ;AAAA,GAAjB;;AAMA,MAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WACVA,IAAI,CAACN,MAAL,CAAY,UAACC,IAAD,EAAOH,GAAP;AAAA,aAAeD,QAAQ,CAACC,GAAD,CAAvB;AAAA,KAAZ,EAA0C,CAA1C,CADU;AAAA,GAAd;;AAGA,MAAMS,EAAE,GAAGF,KAAK,CACZV,CAAC,CACIa,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKhE,GAHL,CAGS,UAAAqD,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAAtE,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAMuE,EAAE,GAAGP,KAAK,CACZT,CAAC,CACIY,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKhE,GAHL,CAGS,UAAAqD,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAAtE,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAIkE,EAAE,KAAKK,EAAX,EAAe,OAAO,CAACL,EAAD,GAAMK,EAAb;AACf,SAAOC,wBAAM,CAAClB,CAAC,CAACmB,QAAH,EAAalB,CAAC,CAACkB,QAAf,CAAb;AACH,C,CAED;;;AACA,SAASC,mBAAT,CAA6BC,CAA7B,EAAmD;AAC/C,SAAO,IAAP;AACH;;AAec,SAASC,SAAT,CAAmBvF,KAAnB,EAA0C;AAAA,MAEjDwF,WAFiD,GAOjDxF,KAPiD,CAEjDwF,WAFiD;AAAA,MAGjDC,mBAHiD,GAOjDzF,KAPiD,CAGjDyF,mBAHiD;AAAA,0BAOjDzF,KAPiD,CAIjD0F,UAJiD;AAAA,MAIjDA,UAJiD,kCAIpC1B,iBAJoC;AAAA,4BAOjDhE,KAPiD,CAKjD2F,YALiD;AAAA,MAKjDA,YALiD,oCAKlCN,mBALkC;AAAA,MAM9CtC,KAN8C,mDAOjD/C,KAPiD;;AAAA,oBAQrCG,oBAAU,CAAqBC,sBAArB,CAR2B;AAAA,MAQ7CC,GAR6C,eAQ7CA,GAR6C;;AAAA,qBASbF,oBAAU,CAACsD,0BAAD,CATG;AAAA,MAS7CC,2BAT6C,gBAS7CA,2BAT6C;;AAUrD,MAAMnD,OAAO,GAAGqF,6BAAU,CAAC;AAAEC,aAAS,EAAE,IAAb;AAAmBnF,cAAU,EAAE;AAA/B,GAAD,CAAV,CACXuE,MADW,CACJU,YADI,EAEXG,IAFW,CAENJ,UAFM,CAAhB;;AAVqD,yBAalCK,kCAAe,EAbmB;AAAA,MAa7CC,MAb6C,oBAa7CA,MAb6C;;AAAA,0BAchB7E,gBAAgB,CAAC6E,MAAD,CAdA;AAAA,MAc7CrE,QAd6C,qBAc7CA,QAd6C;AAAA,MAcnCa,cAdmC,qBAcnCA,cAdmC;;AAAA,qBAerByD,6BAAW,CACvC1F,OADuC,EAEvC,UAAA+E,CAAC;AAAA,WAAI,CAAC,CAACjF,GAAG,CAAC6F,mBAAJ,CAAwBZ,CAAC,CAACF,QAA1B,CAAN;AAAA,GAFsC,CAfU;AAAA,MAe9Ce,UAf8C;AAAA,MAelCC,SAfkC;;AAmBrD,MAAMC,WAAW,GAAGC,iCAAc,EAAlC;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChClG,OAAG,CAACmG,gBAAJ,GAAuBC,OAAvB,CAA+B,UAAAC,GAAG;AAAA,aAAIrG,GAAG,CAACsG,qBAAJ,CAA0BD,GAA1B,CAAJ;AAAA,KAAlC;AACH,GAFD;;AAGA,MAAME,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,WAAMP,WAAN,aAAMA,WAAN,uBAAMA,WAAW,CAAEQ,eAAb,EAAN;AAAA,GAA9B;;AAEA,sBACI,uDACI,oBAAC,WAAD;AACI,SAAK,EAAC,YADV;AAEI,UAAM,eACF,0CACKpB,mBAAmB,IAAI,CAAC,CAACY,WAAzB,iBACG,oBAAC,oCAAD;AACI,WAAK,EAAC,0BADV;AAEI,aAAO,EAAEO;AAFb,oBAII,oBAAC,sBAAD,OAJJ,CAFR,eASI,oBAAC,oCAAD;AACI,WAAK,EAAC,iBADV;AAEI,aAAO,EAAElD;AAFb,oBAII,oBAAC,kBAAD,OAJJ,CATJ,eAeI,oBAAC,oCAAD;AACI,WAAK,EAAC,kBADV;AAEI,aAAO,EAAE6C;AAFb,oBAII,oBAAC,oBAAD,OAJJ,CAfJ,EAoB6B,GApB7B,CAHR;AA0BI,WAAO,EAAEJ,UA1Bb;AA2BI,YAAQ,EAAExE,QA3Bd;AA4BI,kBAAc,EAAEa;AA5BpB,KA6BQO,KA7BR,GA+BK0C,mBAAmB,IAAI,EAACU,UAAD,aAACA,UAAD,eAACA,UAAU,CAAEtF,MAAb,CAAvB,iBACG,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,mBAAD,OADJ,CAhCR,CADJ,eAsCI,oBAAC,WAAD;AACI,SAAK,EAAC,SADV;AAEI,UAAM,EACF2E,WAAW,iBACP,oBAAC,6BAAD;AAAgB,UAAI,EAAE,KAAtB;AAA6B,iBAAW,EAAE;AAA1C,MAJZ;AAOI,WAAO,EAAEY,SAPb;AAQI,YAAQ,EAAEzE,QARd;AASI,kBAAc,EAAEa;AATpB,KAUQO,KAVR,GAYKyC,WAAW,IAAI,CAACY,SAAS,CAACvF,MAA1B,iBACG,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,oBAAC,2BAAD,OADJ,CAbR,CAtCJ,CADJ;AA2DH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJD;AACA;AAGe,SAASiG,cAAT,CAAwBC,OAAxB,EAA4C;AAAA,kBAC/BvF,kBAAQ,CAASuF,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEC,IAAlB,CADuB;AAAA,MAChDA,IADgD;AAAA,MAC1CC,OAD0C;;AAEvDC,qBAAS,CAAC;AAAA,WAAMH,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEI,SAAT,CAAmBC,8BAAnB,EAAgC,YAAM;AAClDH,aAAO,CAACF,OAAO,CAACC,IAAT,CAAP;AACH,KAFe,CAAN;AAAA,GAAD,EAEL,CAACD,OAAD,CAFK,CAAT;AAGA,SAAOC,IAAP;AACH,C;;ACVD;AACA;AAEA;AACA;AACA;AACA;AAEe,SAASK,WAAT,CAAqBrH,KAArB,EAAoD;AAAA,MACvD+G,OADuD,GAC3C/G,KAD2C,CACvD+G,OADuD;;AAAA,oBAE9B5G,oBAAU,CAACsD,0BAAD,CAFoB;AAAA,MAEvD6D,oBAFuD,eAEvDA,oBAFuD;;AAG/D,MAAMjB,WAAW,GAAGC,iCAAc,EAAlC;AACA,MAAMU,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;AACA,MAAMQ,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,oBAAoB,CAACP,OAAD,CAA1B;AAAA,GAApB;;AAEA,MAAMS,iBAAiB,GAAGhH,4BAAS,CAAC6F,WAAD,EAAc,UAAAoB,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAED,iBAAH,CAAqBT,OAArB,CAAJ;AAAA,GAAf,CAAnC,CAP+D,CAQ/D;;AACA,MAAI,CAACS,iBAAL,EACI,OAAO,IAAP;AAEJ,sBAAO,oBAAC,qBAAD;AAAQ,QAAI,EAAC,OAAb;AAAqB,WAAO,EAAED;AAA9B,KAA4CP,IAAI,IAAI,KAApD,CAAP;AACH,C;;;;ACrBD;AACA;AACA;AAGA;AACA;AACA;AAEe,SAASU,0BAAT,CACX1H,KADW,EAEA;AAAA,MACH+G,OADG,GACS/G,KADT,CACH+G,OADG;;AAAA,8BAEYY,qDAAwB,CAC3CZ,OAAO,CAACa,QAAR,CAAiBC,sDAAjB,CAD2C,EAE3C7H,KAF2C,CAFpC;AAAA,MAEJ8H,YAFI;;AAOX,sBACI,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,mBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,cAAU,EAAC;AAAvC,kBACI,oBAAC,mBAAD;AAAM,QAAI,MAAV;AAAW,MAAE;AAAb,kBACI,oBAAC,WAAD;AAAa,WAAO,EAAEf;AAAtB,IADJ,CADJ,EAIKe,YAAY,iBACT,oBAAC,mBAAD;AAAM,QAAI;AAAV,kBACI,oBAAC,yBAAD;AACI,aAAS,EAAC,mBADd;AAEI,WAAO,EAAC,SAFZ;AAGI,aAAS,EAAC,MAHd;AAII,SAAK,EAAE;AAAEC,WAAK,EAAE;AAAT;AAJX,KAMKD,YANL,CADJ,CALR,CADJ,eAkBI,oBAAC,sCAAD,EAA4B9H,KAA5B,CAlBJ,CADJ;AAsBH,C;;;;;;;;ACxCD;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA,IAAMgI,eAAe,GAAG,CACpBH,kDADoB,EAEpBA,kFAFoB,EAGpBA,8DAHoB,EAIpBA,gEAJoB,CAAxB;AAMA,IAAMI,kBAAkB,GAAG,CACvBJ,4CADuB,EAEvBA,wCAFuB,EAGvBA,gDAHuB,CAA3B;AAMe,SAASK,uBAAT,CAAiClI,KAAjC,EAA+D;AAAA,MAClE+G,OADkE,GACnC/G,KADmC,CAClE+G,OADkE;AAAA,MACzDnE,QADyD,GACnC5C,KADmC,CACzD4C,QADyD;AAAA,MAC/CuF,OAD+C,GACnCnI,KADmC,CAC/CmI,OAD+C;AAE1E,MAAMnD,aAAa,GAAGxE,4BAAS,CAACuG,OAAD,EAAU,UAAApG,IAAI;AAAA,WAAIA,IAAI,CAACqE,aAAT;AAAA,GAAd,CAA/B;AACA,MAAMoD,SAAuB,GAAGC,iBAAO,CAAC,YAAM;AAAA;;AAC1C,QAAMhE,OAAO,GAAGW,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEX,OAA/B;AACA,QAAIiE,GAAG,GACH,CAAAjE,OAAO,SAAP,IAAAA,OAAO,WAAP,+BAAAA,OAAO,CACDY,MADN,CACa,UAAAT,GAAG;AAAA,aAAI+D,2BAAU,CAAC/D,GAAD,CAAd;AAAA,KADhB,qEAEMzD,GAFN,CAEU,UAAAyD,GAAG;AAAA,aAAIA,GAAG,CAACgE,UAAR;AAAA,KAFb,MAEoC,EAHxC;AAIAF,OAAG,GAAGA,GAAG,CAACrD,MAAJ,CAAW,UAAAlD,EAAE;AAAA,aAAIiG,eAAe,CAACS,OAAhB,CAAwB1G,EAAxB,IAA8B,CAAlC;AAAA,KAAb,CAAN;AACA,QAAI,CAACa,QAAL,EACI;AACA0F,SAAG,GAAGA,GAAG,CACJrD,MADC,CACM,UAAAlD,EAAE;AAAA,eAAIkG,kBAAkB,CAACQ,OAAnB,CAA2B1G,EAA3B,IAAiC,CAAC,CAAtC;AAAA,OADR,EAEDgD,KAFC,CAEK,CAFL,EAEQ,CAFR,CAAN;AAGJ,WACIuD,GAAG,CACEvH,GADL,CACS,UAAAgB,EAAE;AAAA,aAAIgF,OAAO,CAACa,QAAR,CAAiB7F,EAAjB,CAAJ;AAAA,KADX,EAEKkD,MAFL,CAEY,UAAAyD,GAAG;AAAA,aAAI,CAAC,CAACA,GAAN;AAAA,KAFf,EAGI;AAHJ,KAIKzD,MAJL,CAKQ,UAAAyD,GAAG;AAAA;;AAAA,aACC,wBAACA,GAAG,CAAC1D,aAAL,+CAAC,mBAAmB2D,QAApB,KACC,wBAAAD,GAAG,CAAC1D,aAAJ,4EAAmB4D,IAAnB,MAA4B,OAA5B,IACGF,GAAG,CAACG,eAAJ,GAAsBC,+CAH3B;AAAA,KALX,CADJ;AAYH,GAxBsC,EAwBpC,CAAC9D,aAAD,EAAgBpC,QAAhB,CAxBoC,CAAvC;AA0BA,MAAI,EAACwF,SAAD,aAACA,SAAD,eAACA,SAAS,CAAEvH,MAAZ,CAAJ,EACI;AACA,WAAO,IAAP;AAEJ,sBACI,0CACKuH,SAAS,CAACrH,GAAV,CAAc,UAAA6G,QAAQ,EAAI;AACvB,wBACI,oBAAC,mBAAD;AAAM,SAAG,EAAEA,QAAQ,CAAC7F,EAApB;AAAwB,UAAI,MAA5B;AAA6B,QAAE,EAAE;AAAjC,oBACI,oBAAC,4BAAD;AACI,cAAQ,EAAE6F,QADd;AAEI,qBAAe,EAAE,IAFrB;AAGI,sBAAgB,EAAE,IAHtB;AAII,uBAAiB,EAAE,KAJvB;AAKI,eAAS,EAAE,KALf;AAMI,aAAO,EAAEO;AANb,MADJ,CADJ;AAYH,GAbA,CADL,CADJ;AAkBH,C;;;;AC5ED;AAMe,SAASY,uBAAT,CACbC,UADa,EAEbC,OAFa,EAG0B;AAAA,kBACbzH,kBAAQ,EADK;AAAA,MAChC0H,KADgC;AAAA,MACzBC,QADyB;;AAAA,aAEsCF,OAAO,IAAI,EAFjD;AAAA,4BAE/BG,SAF+B;AAAA,MAE/BA,SAF+B,+BAEnB,CAFmB;AAAA,uBAEhBC,IAFgB;AAAA,MAEhBA,IAFgB,0BAET,IAFS;AAAA,6BAEHC,UAFG;AAAA,MAEHA,UAFG,gCAEU,IAFV;AAAA,MAEgBC,iBAFhB,QAEgBA,iBAFhB;;AAIvC,MAAMC,MAAM,GAAG,CAAAN,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEO,cAAP,KAAyBF,iBAAxC;;AAEA,MAAMG,WAAW,GAAG,SAAdA,WAAc,QAAgD;AAAA,QAA9CR,KAA8C;AAClEC,YAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIAhC,qBAAS,CAAC,YAAM;AACd,QAAMtF,IAAI,GAAGoH,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEnH,OAAzB,CADc,CACmB;;AACjC,QAAM8H,YAAY,GAAG,CAAC,CAACC,MAAM,CAACC,oBAA9B;AAEA,QAAI,CAACF,YAAD,IAAiBH,MAAjB,IAA2B,CAAC5H,IAAhC,EAAsC;AAEtC,QAAMkI,cAAc,GAAG;AAAEV,eAAS,EAATA,SAAF;AAAaC,UAAI,EAAJA,IAAb;AAAmBC,gBAAU,EAAVA;AAAnB,KAAvB;AACA,QAAMS,QAAQ,GAAG,IAAIF,oBAAJ,CAAyBH,WAAzB,EAAsCI,cAAtC,CAAjB,CAPc,CASd;;AACAC,YAAQ,CAACC,OAAT,CAAiBpI,IAAjB;AAEA,WAAO;AAAA,aAAMmI,QAAQ,CAACE,UAAT,EAAN;AAAA,KAAP;AAED,GAdQ,EAcN,CAACjB,UAAD,EAAaI,SAAb,EAAwBC,IAAxB,EAA8BC,UAA9B,EAA0CE,MAA1C,CAdM,CAAT;AAgBA,SAAON,KAAP;AACD,C;;;;;;;;ACpCD;AAQA;AACA;AAQA;AACA;CAEA;;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,IAAMgB,eAAe,GAAG,CAACC,8BAAD,EAAcC,6BAAd,EAA0BC,+BAA1B,EAAwCC,iCAAxC,CAAxB;AAEe,SAASC,eAAT,CACXvK,KADW,EAOb;AAAA,MAEMiD,MAFN,GASMjD,KATN,CAEMiD,MAFN;AAAA,MAGMuH,aAHN,GASMxK,KATN,CAGMwK,aAHN;AAAA,MAIM5H,QAJN,GASM5C,KATN,CAIM4C,QAJN;AAAA,MAKMC,cALN,GASM7C,KATN,CAKM6C,cALN;AAAA,MAMM4H,OANN,GASMzK,KATN,CAMMyK,OANN;AAAA,MAOMC,UAPN,GASM1K,KATN,CAOM0K,UAPN;AAAA,MAQMC,UARN,GASM3K,KATN,CAQM2K,UARN;AAUE,MAAM7J,IAAI,GAAG8J,gCAAa,CAAC3H,MAAD,CAA1B;AACA,MAAM6B,QAAQ,GAAGtE,4BAAS,CAACyC,MAAD,EAAS;AAAA,WAC/BA,MAAM,CACD6B,QADL,CACc;AAAEE,mBAAa,EAAE;AAAjB,KADd,EAEKC,MAFL,CAGQ,UAAA8B,OAAO;AAAA,aAAImD,eAAe,CAACzB,OAAhB,CAAwB1B,OAAO,CAAC7G,YAAhC,IAAgD,CAApD;AAAA,KAHf,CAD+B;AAAA,GAAT,CAA1B;AAOA,MAAM8E,aAAa,GAAG6F,yCAAsB,CAAC5H,MAAD,CAA5C;;AAlBF,yBAmByB8C,kCAAe,EAnBxC;AAAA,MAmBcC,MAnBd,oBAmBU8E,EAnBV;;AAoBE,MAAMC,cAAc,GAAGzJ,gBAAM,EAA7B;AACA,MAAM0J,YAAY,GAAGjC,uBAAuB,CAACgC,cAAD,CAA5C;AACA,MAAM5C,OAAO,GAAG,CAAC,EAAC6C,YAAD,aAACA,YAAD,eAACA,YAAY,CAAEvB,cAAf,CAAjB;;AAtBF,qBAuB8BwB,qCAAW,EAvBzC;AAAA,MAuBUC,eAvBV,gBAuBUA,eAvBV;;AAyBEhE,qBAAS,CAAC;AAAA,WACNjE,MADM,aACNA,MADM,uBACNA,MAAM,CAAEkE,SAAR,CAAkBgE,0BAAlB,EAA2B,YAAM;AAC7BC,aAAO,CAACC,KAAR,CAAiBpI,MAAM,CAACqI,OAAxB;AACAJ,qBAAe,CAAIjI,MAAM,CAACqI,OAAX,oBAAmC;AAC9Cb,eAAO,EAAE;AADqC,OAAnC,CAAf;AAGH,KALD,CADM;AAAA,GAAD,CAAT;AASA,MAAMc,cAAc,GAAGC,qBAAW,CAC9B;AAAA;;AAAA,wBACI,oBAAC,mBAAD;AACI,SAAG,EAAET,cADT;AAEI,eAAS,EAAC,KAFd;AAGI,eAAS,MAHb;AAII,aAAO,EAAE,CAJb;AAKI,aAAO,EAAC,QALZ;AAMI,gBAAU,EAAC,UANf;AAOI,kBAAY,EAAC;AAPjB,OASKjG,QATL,aASKA,QATL,2CASKA,QAAQ,CACHG,MADL,CACY,UAAAb,GAAG;AAAA,aAAIxB,QAAQ,IAAI,CAACwB,GAAG,CAACqH,OAArB;AAAA,KADf,CATL,8EASK,iBAEKxG,MAFL,CAEY,UAAAb,GAAG;AAAA,aAAI,CAACoG,aAAD,IAAkBA,aAAa,CAACpG,GAAD,CAAnC;AAAA,KAFf,CATL,0DASK,sBAGKrD,GAHL,CAGS,UAAAgG,OAAO;AAAA,0BACT,oBAAC,0BAAD;AACI,WAAG,EAAEA,OAAO,CAAChF,EADjB;AAEI,eAAO,EAAEgF,OAFb;AAGI,gBAAQ,EAAEnE,QAHd;AAII,gBAAQ,EAAEkC,QAJd;AAKI,eAAO,EAAE2F,OALb;AAMI,eAAO,EAAEtC;AANb,QADS;AAAA,KAHhB,CATL,CADJ;AAAA,GAD8B,EA0B9B,CAACuD,6BAAY,CAAC5G,QAAD,CAAb,EAAyBlC,QAAzB,EAAmC6H,OAAnC,EAA4CtC,OAA5C,CA1B8B,CAAlC;AA6BA,MAAI,CAACwC,UAAL,EACI,oBACI,oBAAC,oBAAD;AAAO,SAAK,EAAE;AAAEgB,aAAO,EAAE;AAAX,KAAd;AAAqC,WAAO,EAAC;AAA7C,kBACI,oBAAC,cAAD,OADJ,CADJ;AAMJ,sBACI,oBAAC,mBAAD;AAAM,iBAAU,QAAhB;AAAyB,8BAAsB7K,IAAtB;AAAzB,kBACI,oBAAC,yBAAD;AACI,SAAK,EAAE;AAAE8K,mBAAa,EAAE;AAAjB,KADX;AAEI,UAAM,EAAElB,UAAU,iBAAI,oBAAC,2BAAD;AAAc,YAAM,EAAEzH;AAAtB,MAF1B;AAGI,UAAM,eACF,oBAAC,4BAAD;AACI,YAAM,EAAEA,MADZ;AAEI,cAAQ,EAAEL,QAFd;AAGI,kBAAY,EAAE,CAACA,QAHnB;AAII,eAAS,EAAEA,QAAQ,IAAI,CAACoD,MAJ5B;AAKI,kBAAY,EAAEpD,QAAQ,IAAI,CAACoD;AAL/B,OAOKnD,cAAc,iBACX,oBAAC,oCAAD;AACI,aAAO,EAAEA,cADb;AAEI,WAAK,EAAED,QAAQ,GAAG,UAAH,GAAgB;AAFnC,OAIKA,QAAQ,gBACL,oBAAC,yBAAD,OADK,gBAGL,oBAAC,yBAAD,OAPR,CARR,CAJR;AAyBI,SAAK,eAAE,oBAAC,yBAAD;AAAY,iBAAW,EAAE,KAAzB;AAAgC,YAAM,EAAEK;AAAxC,MAzBX;AA0BI,aAAS,eACL,0CACK,CAAC+C,MAAD,IAAWhB,aAAX,iBACG,oBAAC,yBAAD;AAAY,aAAO,EAAC,SAApB;AAA8B,kBAAY;AAA1C,OACKA,aAAa,CAAClE,IADnB,CAFR;AA3BR,IADJ,eAqCI,oBAAC,0BAAD;AAAa,SAAK,EAAE;AAAE+K,gBAAU,EAAE;AAAd;AAApB,kBACI,oBAAC,cAAD,OADJ,EAEKjJ,QAAQ,iBACL,oBAAC,mBAAD;AACI,aAAS,MADb;AAEI,aAAS,EAAC,QAFd;AAGI,WAAO,EAAE,CAHb;AAII,gBAAY,EAAC;AAJjB,KAMKkC,QANL,aAMKA,QANL,uBAMKA,QAAQ,CAAE/D,GAAV,CAAc,UAAAgG,OAAO;AAAA,wBAClB,oBAAC,uBAAD;AACI,SAAG,EAAE,YAAYA,OAAO,CAAC+E,YAD7B;AAEI,aAAO,EAAE/E,OAFb;AAGI,cAAQ,EAAEjC,QAHd;AAII,cAAQ,EAAElC,QAJd;AAKI,aAAO,EAAE6H,OALb;AAMI,aAAO,EAAEtC;AANb,MADkB;AAAA,GAArB,CANL,CAHR,CArCJ,CADJ;AA8DH,C;;;;;;;;;;;;;;;;;;;ACjLD;AACA;AAEA;AAGA;AACA;AACA;AAEe,SAAS4D,mBAAT,CAA6B/L,KAA7B,EAKW;AAAA,MACdiD,MADc,GAC0CjD,KAD1C,CACdiD,MADc;AAAA,MACNL,QADM,GAC0C5C,KAD1C,CACN4C,QADM;AAAA,MACIC,cADJ,GAC0C7C,KAD1C,CACI6C,cADJ;AAAA,MACoB4H,OADpB,GAC0CzK,KAD1C,CACoByK,OADpB;AAAA,MACgC1H,KADhC,6GAC0C/C,KAD1C;;AAAA,oBAECG,iDAAU,CAACsD,0DAAD,CAFX;AAAA,MAEduI,UAFc,eAEdA,UAFc;;AAGtB,MAAMC,WAA4B,GAAGzL,mEAAS,CAACyC,MAAD,EAAS,YAAM;AACzD,QAAMiJ,gBAAgB,GAAGjJ,MAAM,CAAC6B,QAAP,GACpB/D,GADoB,CAChB,UAAAqD,GAAG,EAAI;AACR,aAAO+H,yFAAsB,CAAC/H,GAAD,CAAtB,KACCA,GAAG,CAACgI,eAAJ,IAAuBhI,GAAG,CAACiI,aAA3B,IAA4CjI,GAAG,CAACkI,iBAAhD,GAAoE,CAApE,GAAwE,CADzE,CAAP;AAEH,KAJoB,EAKpBhI,MALoB,CAKb,UAACiI,CAAD,EAAYC,CAAZ;AAAA,aAAkBD,CAAC,GAAGC,CAAtB;AAAA,KALa,EAKY,CALZ,CAAzB;AAOA,QAAIN,gBAAgB,GAAG,CAAnB,IAAwBF,UAAU,KAAKS,uEAA3C,EACI,OAAO;AAAE3B,QAAE,EAAE,EAAN;AAAU4B,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,EAAtB;AAA0BC,QAAE,EAAE,CAA9B;AAAiCC,QAAE,EAAE;AAArC,KAAP,CADJ,KAEK,IAAIX,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEpB,QAAE,EAAE,EAAN;AAAU4B,QAAE,EAAE,EAAd;AAAkBC,QAAE,EAAE,CAAtB;AAAyBC,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE;AAApC,KAAP,CADC,KAEA,IAAIX,gBAAgB,IAAI,CAAxB,EACD,OAAO;AAAEpB,QAAE,EAAE,EAAN;AAAU4B,QAAE,EAAE,CAAd;AAAiBC,QAAE,EAAE,CAArB;AAAwBC,QAAE,EAAE,CAA5B;AAA+BC,QAAE,EAAE;AAAnC,KAAP,CADC,KAGD,OAAO;AAAE/B,QAAE,EAAElI,QAAQ,GAAG,EAAH,GAAQ,CAAtB;AAAyB8J,QAAE,EAAE,CAA7B;AAAgCC,QAAE,EAAE,CAApC;AAAuCC,QAAE,EAAE,CAA3C;AAA8CC,QAAE,EAAE;AAAlD,KAAP;AACP,GAhB6C,EAgB3C,CAACjK,QAAD,EAAWoJ,UAAX,CAhB2C,CAA9C,CAHsB,CAqBtB;;AACA,sBAAO,iDAAC,+DAAD;AAAM,QAAI;AAAV,KAAeC,WAAf,gBACH,iDAAC,8DAAD;AACI,UAAM,EAAEhJ,MADZ;AAEI,YAAQ,EAAEL,QAFd;AAGI,kBAAc,EAAEC,cAHpB;AAII,WAAO,EAAE4H;AAJb,KAKQ1H,KALR,EADG,CAAP;AASH,C;;;;;;;;;;AC9CD;AACA;AAEA,yDAAe,UAAC/C,KAAD;AAAA,sBACX,iDAAC,+DAAD,EAAaA,KAAb,eACI;AAAM,KAAC,EAAC,+tHAAR;AAAwuH,eAAW,EAAC;AAApvH,IADJ,CADW;AAAA,CAAf,E;;;;;;;;;;;;;;ACHA;AACA;AAEA;AAEe,SAASsG,cAAT,GAA6C;AAAA,oBACxCnG,iDAAU,CAAqBC,6DAArB,CAD8B;AAAA,MAChDC,GADgD,eAChDA,GADgD;;AAAA,kBAElCmB,+CAAQ,CAAoBnB,GAAG,CAACgG,WAAxB,CAF0B;AAAA,MAEjDyG,GAFiD;AAAA,MAE5CC,MAF4C;;AAGxD7F,kDAAS,CAAC;AAAA,WACN7G,GAAG,CAAC8G,SAAJ,CAAc6F,yFAAd,EAAmC;AAAA,aAAMD,MAAM,CAAC1M,GAAG,CAACgG,WAAL,CAAZ;AAAA,KAAnC,CADM;AAAA,GAAD,CAAT;AAGA,SAAOyG,GAAP;AACH,C;;;;;;;;;;;;;;;;;;;ACZD;AACA;AACA;AAEA,IAAMtN,SAAS,GAAGC,mEAAU,CAAC,UAACC,KAAD;AAAA,SAAWC,mEAAY,CAAC;AACjDsN,MAAE,EAAE;AACAC,gBAAU,EAAExN,KAAK,CAACyN,OAAN,CAAcC,IAAd,CAAmBC,QAD/B;AAEAC,kBAAY,EAAE;AAFd,KAD6C;AAKjDC,SAAK,EAAE;AACHC,WAAK,EAAE9N,KAAK,CAACI,OAAN,CAAc,CAAd;AADJ;AAL0C,GAAD,CAAvB;AAAA,CAAD,CAA5B;AAUe,SAAS2N,UAAT,CAAoBzN,KAApB,EAKZ;AAAA,MACS0C,KADT,GAC2C1C,KAD3C,CACS0C,KADT;AAAA,MACgBgL,KADhB,GAC2C1N,KAD3C,CACgB0N,KADhB;AAAA,MACuBjD,OADvB,GAC2CzK,KAD3C,CACuByK,OADvB;AAAA,MACgC9H,MADhC,GAC2C3C,KAD3C,CACgC2C,MADhC;AAEC,MAAM1C,OAAO,GAAGT,SAAS,EAAzB;AACA,sBAAO,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACH,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,aAAS,EAAC,KAA1B;AAAgC,WAAO,EAAE,CAAzC;AAA4C,WAAO,EAAC,QAApD;AAA6D,cAAU,EAAC;AAAxE,kBACI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI;AAAI,aAAS,EAAEmO,sDAAI,CAAC1N,OAAO,CAACgN,EAAT,EAAahN,OAAO,CAACsN,KAArB;AAAnB,IADJ,CADJ,eAII,iDAAC,+DAAD;AAAM,QAAI;AAAV,KACK5K,MAAM,iBAAI,iDAAC,+DAAD;AAAK,aAAS,EAAC,MAAf;AAAsB,MAAE,EAAE;AAA1B,KAA8BA,MAA9B,CADf,eAEI,iDAAC,+DAAD;AAAY,aAAS,EAAC,MAAtB;AAA6B,WAAO,EAAE8H,OAAO,IAAI;AAAjD,KAA+D/H,KAA/D,CAFJ,EAGKgL,KAAK,KAAKE,SAAV,iBAAuB,iDAAC,+DAAD;AAAK,aAAS,EAAC,MAAf;AAAsB,MAAE,EAAE;AAA1B,kBAA+B,iDAAC,+DAAD;AAAM,SAAK,EAAEF;AAAb,IAA/B,CAH5B,CAJJ,eASI,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE;AAAb,kBACI;AAAI,aAAS,EAAEzN,OAAO,CAACgN;AAAvB,IADJ,CATJ,CADG,CAAP;AAeH,C;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCD;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASvH,UAAT,CAAoBzB,CAApB,EAAiCC,CAAjC,EAAsD;AAClD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WACbA,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CACI,UAACC,IAAD,EAAOC,GAAP;AAAA,aACID,IAAI,IAAIE,6EAAS,CAACD,GAAD,CAAT,GAAiB,EAAjB,GAAsBE,sFAAkB,CAACF,GAAD,CAAlB,GAA0B,CAA1B,GAA8B,CAAxD,CADR;AAAA,KADJ,EAGI,CAHJ,KAIK,CALQ;AAAA,GAAjB;;AAMA,MAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WACVA,IAAI,CAACN,MAAL,CAAY,UAACC,IAAD,EAAOH,GAAP;AAAA,aAAeD,QAAQ,CAACC,GAAD,CAAvB;AAAA,KAAZ,EAA0C,CAA1C,CADU;AAAA,GAAd;;AAGA,MAAMS,EAAE,GAAGF,KAAK,CACZV,CAAC,CACIa,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKhE,GAHL,CAGS,UAAAqD,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAAtE,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAMuE,EAAE,GAAGP,KAAK,CACZT,CAAC,CACIY,QADL,GAEKC,KAFL,CAEW,CAFX,EAGKhE,GAHL,CAGS,UAAAqD,GAAG;AAAA,WAAIA,GAAG,CAACY,aAAR;AAAA,GAHZ,EAIKC,MAJL,CAIY,UAAAtE,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAJhB,CADY,CAAhB;AAOA,MAAIkE,EAAE,KAAKK,EAAX,EAAe,OAAO,CAACL,EAAD,GAAMK,EAAb;AACf,SAAOC,2EAAM,CAAClB,CAAC,CAACmB,QAAH,EAAalB,CAAC,CAACkB,QAAf,CAAb;AACH;;AAED,SAASyI,QAAT,GAAoB;AAAA,oBACA1N,iDAAU,CAAqBC,6DAArB,CADV;AAAA,MACRC,GADQ,eACRA,GADQ;;AAAA,MAERyN,YAFQ,GAESzN,GAFT,CAERyN,YAFQ;AAGhB,MAAMnI,YAAY,GAAGmI,YAAY,CAACnI,YAAb,CAA0BoI,IAA1B,CAA+BD,YAA/B,CAArB;AACA,MAAMtD,aAAa,GAAGsD,YAAY,CAACtD,aAAb,CAA2BuD,IAA3B,CAAgCD,YAAhC,CAAtB;AACA,MAAME,UAAU,GAAGxN,mEAAS,CAACsN,YAAD,EAAe,UAAArG,CAAC;AAAA,WAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEwG,mBAAP;AAAA,GAAhB,CAA5B;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMJ,YAAN,aAAMA,YAAN,uBAAMA,YAAY,CAAEK,iBAAd,EAAN;AAAA,GAAlB;;AAEA,sBACI,iHACI,iDAAC,6EAAD;AACI,cAAU,EAAE,KADhB;AAEI,cAAU,EAAEzI,UAFhB;AAGI,gBAAY,EAAEC,YAHlB;AAII,iBAAa,EAAE6E,aAJnB;AAKI,uBAAmB,EAAE;AALzB,IADJ,EAQK,CAAC,EAACwD,UAAD,aAACA,UAAD,eAACA,UAAU,CAAEnN,MAAb,CAAD,iBACG,iDAAC,gEAAD;AAAK,KAAC,EAAE;AAAR,kBACI,iDAAC,gEAAD;AACI,QAAI,EAAC,QADT;AAEI,SAAK,EAAC,SAFV;AAGI,WAAO,EAAC,WAHZ;AAII,aAAS,eAAE,iDAAC,4EAAD,OAJf;AAKI,WAAO,EAAEqN,SALb;AAMI,kBAAY;AANhB,kBADJ,CATR,CADJ;AAyBH;;AAEc,SAASE,IAAT,GAAgB;AAAA,qBACiBjO,iDAAU,CAACkO,4EAAD,CAD3B;AAAA,MACnBC,cADmB,gBACnBA,cADmB;AAAA,MACHC,eADG,gBACHA,eADG;;AAE3B,MAAMC,QAAQ,GAAGC,oEAAc,CAAC;AAC5BtB,WAAO,EAAE;AACLuB,aAAO,EAAE;AACLC,YAAI,EAAE;AADD,OADJ;AAILC,eAAS,EAAE;AACPD,YAAI,EAAE;AADC,OAJN;AAOL1N,UAAI,EAAE,OAPD;AAQL4N,uBAAiB,EAAE;AARd;AADmB,GAAD,CAA/B;AAYA,MAAMnP,KAAK,GAAGoP,oEAAmB,CAACN,QAAD,CAAjC;AAEAtH,kDAAS,CAAC,YAAM;AACZ,QAAIqH,eAAJ,EAAqBD,cAAc,CAAC,OAAD,CAAd;AACxB,GAFQ,EAEN,CAACC,eAAD,CAFM,CAAT;AAIA,sBACI,iDAAC,yEAAD;AAAc,SAAK,EAAE7O;AAArB,kBACI,iDAAC,0DAAD,qBACI,oMADJ,CADJ,eAcI,iDAAC,QAAD,OAdJ,CADJ;AAkBH,C","file":"component---src-pages-tools-makecode-sim-tsx-402daf9bb706d29da2c3.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import React, { useContext } from \"react\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport Alert from \"../ui/Alert\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\n\nexport default function SimulateDeviceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const handleStartSimulator = (serviceClass: number) => () => {\n        const provider = serviceProviderDefinitionFromServiceClass(serviceClass)\n        addServiceProvider(bus, provider)\n    }\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n\n    return (\n        <Alert severity=\"info\">\n            Simulate devices (\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUTTON)}\n                title=\"button\"\n                aria-label=\"start button simulator\"\n            >\n                🔘\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUZZER)}\n                title=\"buzzer\"\n                aria-label=\"start buzzer simulator\"\n            >\n                🎹\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                title=\"joystick\"\n                aria-label=\"start joystick simulator\"\n            >\n                🕹️\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_LED)}\n                title=\"LED\"\n                aria-label=\"start LED simulator\"\n            >\n                💡\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_TRAFFIC_LIGHT)}\n                title=\"traffic light\"\n                aria-label=\"start traffic light simulator\"\n            >\n                🚦\n            </IconButtonWithTooltip>\n            , ...) by clicking &nbsp;\n            <IconButtonWithTooltip\n                title=\"start simulator\"\n                onClick={toggleShowDeviceHostsDialog}\n            >\n                <AddIcon />\n            </IconButtonWithTooltip>\n            .\n        </Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../../jacdac/ConnectButtons\"\nimport useRoleManager from \"../services/useRoleManager\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport SimulateDeviceAlert from \"../alert/SimulateDeviceAlert\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const { mobile } = useMediaQueries()\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManager()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            <DashboardDeviceGroup\n                title=\"Simulators\"\n                action={\n                    <>\n                        {showStartSimulators && !!roleManager && (\n                            <IconButtonWithTooltip\n                                title=\"start missing simulators\"\n                                onClick={handleStartSimulators}\n                            >\n                                <DevicesIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        <IconButtonWithTooltip\n                            title=\"clear simulators\"\n                            onClick={handleClearSimulators}\n                        >\n                            <ClearIcon />\n                        </IconButtonWithTooltip>{\" \"}\n                    </>\n                }\n                devices={simulators}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showStartSimulators && !simulators?.length && (\n                    <Grid item xs={12}>\n                        <SimulateDeviceAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs>\n                    <ServiceRole service={service} />\n                </Grid>\n                {instanceName && (\n                    <Grid item>\n                        <Typography\n                            className=\"no-pointer-events\"\n                            variant=\"caption\"\n                            component=\"span\"\n                            style={{ float: \"right\" }}\n                        >\n                            {instanceName}\n                        </Typography>\n                    </Grid>\n                )}\n            </Grid>\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport {\n    REGISTER_OPTIONAL_POLL_COUNT,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport RegisterInput from \"../RegisterInput\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid } from \"@material-ui/core\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval,\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded, visible } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets\n        let ids =\n            packets\n                ?.filter(pkt => isRegister(pkt))\n                ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded)\n            // grab the first interresting register\n            ids = ids\n                .filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1)\n        return (\n            ids\n                .map(id => service.register(id))\n                .filter(reg => !!reg)\n                // hide optional const register without values\n                .filter(\n                    reg =>\n                        !reg.specification?.optional ||\n                        (reg.specification?.kind === \"const\" &&\n                            reg.lastGetAttempts < REGISTER_OPTIONAL_POLL_COUNT)\n                )\n        )\n    }, [specification, expanded])\n\n    if (!registers?.length)\n        // nothing to see here\n        return null\n\n    return (\n        <>\n            {registers.map(register => {\n                return (\n                    <Grid key={register.id} item xs={true}>\n                        <RegisterInput\n                            register={register}\n                            showServiceName={true}\n                            showRegisterName={true}\n                            hideMissingValues={false}\n                            showTrend={false}\n                            visible={visible}\n                        />\n                    </Grid>\n                )\n            })}\n        </>\n    )\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n} from \"@material-ui/core\"\nimport React, { useCallback, useEffect, useRef } from \"react\"\nimport {\n    RESTART,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { useSnackbar } from \"notistack\"\n\nconst ignoredServices = [SRV_CONTROL, SRV_LOGGER, SRV_SETTINGS, SRV_PROTO_TEST]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        serviceFilter,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services({ specification: true })\n            .filter(\n                service => ignoredServices.indexOf(service.serviceClass) < 0\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const { xs: mobile } = useMediaQueries()\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffect(() =>\n        device?.subscribe(RESTART, () => {\n            console.debug(`${device.shortId} restarted...`)\n            enqueueSnackbar(`${device.shortId} restarted...`, {\n                variant: \"warning\",\n            })\n        })\n    )\n\n    const ServiceWidgets = useCallback(\n        () => (\n            <Grid\n                ref={serviceGridRef}\n                component=\"div\"\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"flex-end\"\n                alignContent=\"space-between\"\n            >\n                {services\n                    ?.filter(srv => expanded || !srv.isMixin)\n                    ?.filter(srv => !serviceFilter || serviceFilter(srv))\n                    ?.map(service => (\n                        <DashboardServiceWidgetItem\n                            key={service.id}\n                            service={service}\n                            expanded={expanded}\n                            services={services}\n                            variant={variant}\n                            visible={visible}\n                        />\n                    ))}\n            </Grid>\n        ),\n        [dependencyId(services), expanded, variant, visible]\n    )\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStop={expanded}\n                        hideIdentity={!expanded}\n                        showReset={expanded && !mobile}\n                        showSettings={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                services={services}\n                                expanded={expanded}\n                                variant={variant}\n                                visible={visible}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default (props: SvgIconProps) =>\n    <SvgIcon {...props}>\n        <path d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\" strokeWidth=\".75\" />\n    </SvgIcon>\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n","import { Box, Chip, createStyles, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    hr: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\"\n    },\n    start: {\n        width: theme.spacing(2)\n    },\n}));\n\nexport default function GridHeader(props: {\n    title?: string,\n    count?: number,\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\",\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props;\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n                <hr className={clsx(classes.hr, classes.start)} />\n            </Grid>\n            <Grid item>\n                {action && <Box component=\"span\" mr={1}>{action}</Box>}\n                <Typography component=\"span\" variant={variant || \"subtitle1\"}>{title}</Typography>\n                {count !== undefined && <Box component=\"span\" ml={0.5}><Chip label={count} /></Box>}\n            </Grid>\n            <Grid item xs>\n                <hr className={classes.hr} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n","import React, { useContext, useEffect } from \"react\"\nimport {\n    Box,\n    Button,\n    createMuiTheme,\n    responsiveFontSizes,\n} from \"@material-ui/core\"\nimport ThemedLayout from \"../../components/ui/ThemedLayout\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport MakeCodeIcon from \"../../components/icons/MakeCodeIcon\"\nimport Helmet from \"react-helmet\"\nimport Dashboard from \"../../components/dashboard/Dashboard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport DarkModeContext from \"../../components/ui/DarkModeContext\"\n\nfunction deviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\nfunction Carousel() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { iframeBridge } = bus\n    const deviceFilter = iframeBridge.deviceFilter.bind(iframeBridge)\n    const serviceFilter = iframeBridge.serviceFilter.bind(iframeBridge)\n    const extensions = useChange(iframeBridge, _ => _?.candidateExtensions)\n    const handleAdd = () => iframeBridge?.postAddExtensions()\n\n    return (\n        <>\n            <Dashboard\n                showHeader={false}\n                deviceSort={deviceSort}\n                deviceFilter={deviceFilter}\n                serviceFilter={serviceFilter}\n                showStartSimulators={false}\n            />\n            {!!extensions?.length && (\n                <Box m={1}>\n                    <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        startIcon={<MakeCodeIcon />}\n                        onClick={handleAdd}\n                        aria-label={\"Add blocks\"}\n                    >\n                        Add blocks\n                    </Button>\n                </Box>\n            )}\n        </>\n    )\n}\n\nexport default function Page() {\n    const { toggleDarkMode, darkModeMounted } = useContext(DarkModeContext)\n    const rawTheme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#63c\",\n            },\n            secondary: {\n                main: \"#ffc400\",\n            },\n            type: \"light\",\n            contrastThreshold: 3.1,\n        },\n    })\n    const theme = responsiveFontSizes(rawTheme)\n\n    useEffect(() => {\n        if (darkModeMounted) toggleDarkMode(\"light\")\n    }, [darkModeMounted])\n\n    return (\n        <ThemedLayout theme={theme}>\n            <Helmet>\n                <style>\n                    {`\nhtml {\n    margin-right: 4px;\n}\nhtml, body {\n    background: transparent !important;\n    overflow: hidden !important;\n}\n`}\n                </style>\n            </Helmet>\n            <Carousel />\n        </ThemedLayout>\n    )\n}\n"],"sourceRoot":""}