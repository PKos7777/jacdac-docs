{"version":3,"sources":["webpack:///./jacdac-ts/src/jdom/settingsclient.ts","webpack:///./src/components/SettingsCard.tsx","webpack:///./src/components/tools/SettingsManager.tsx","webpack:///./src/pages/tools/settings-manager.tsx"],"names":["SettingsClient","service","registersUseAcks","clear","sendCmdAsync","SettingsCmd","Clear","listKeys","inp","InPipeReader","bus","sendPacketAsync","openCommand","ListKeys","readAll","output","keys","map","pkt","stringData","filter","k","list","List","jdunpack","key","valueb","value","length","bufferToString","undefined","kv","setValue","trim","deleteValue","Packet","from","Set","jdpack","stringToBuffer","emit","CHANGE","getValue","Get","sendCmdAwaitResponseAsync","resp","data","rkey","console","error","Delete","JDServiceClient","SettingRow","props","client","name","mutable","isSecret","displayName","slice","handleComponentDelete","nameError","valueError","AddSettingRow","useState","setName","secret","setSecret","secretLabelId","useId","handleNameChange","ev","target","handleValueChange","handleChecked","checked","handleAdd","keyError","SettingsCard","useServiceClient","srv","values","useChangeAsync","c","handleClear","device","SettingsManager","useContext","JacdacContext","connectionState","services","useChange","b","serviceClass","SRV_SETTINGS","BusState","Connected","id","Page"],"mappings":"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","file":"component---src-pages-tools-settings-manager-tsx-889986aae585f2c73534.js","sourcesContent":["import { CHANGE, SettingsCmd } from \"./constants\";\nimport { jdpack, jdunpack } from \"./pack\";\nimport Packet from \"./packet\";\nimport { InPipeReader } from \"./pipes\";\nimport { JDService } from \"./service\";\nimport { JDServiceClient } from \"./serviceclient\";\nimport { bufferToString, stringToBuffer } from \"./utils\";\n\nexport default class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true;\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear);\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(inp.openCommand(SettingsCmd.ListKeys), true)\n        const { output } = await inp.readAll();\n        const keys = output.map(pkt => pkt.stringData);\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string, value?: string }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(inp.openCommand(SettingsCmd.List), true)\n        const { output } = await inp.readAll();\n        return output.map(pkt => {\n            const [key, valueb] = pkt.jdunpack<[string, Uint8Array]>(\"z b\");\n            const value = valueb.length > 0 ? bufferToString(valueb) : undefined;\n            return key && { key, value }\n        }).filter(kv => !!kv);\n    }\n\n    async setValue(key: string, value: string) {\n        key = key.trim();\n        if (value === undefined) {\n            await this.deleteValue(key);\n        } else {\n            const pkt = Packet.from(SettingsCmd.Set, jdpack(\"z b\", [key, stringToBuffer(value)]));\n            await this.service.sendPacketAsync(pkt);\n            this.emit(CHANGE);\n        }\n    }\n\n    async getValue(key: string): Promise<string> {\n        if (!key) return undefined;\n\n        key = key.trim();\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]));\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt);\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\");\n        if (key !== rkey) {\n            console.error(`device returned different key, got \"${rkey}\", expected \"${key}\"`)\n            return undefined;\n        }\n        return bufferToString(value);\n    }\n\n\n    async deleteValue(key: string) {\n        if (!key) return;\n        key = key.trim();\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]));\n        await this.service.sendPacketAsync(pkt);\n\n        this.emit(CHANGE);\n    }\n}\n\n","import { Card, CardActions, CardContent, FormLabel, Grid, Switch, TextField } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\";\nimport DeviceCardHeader from \"./DeviceCardHeader\";\nimport useServiceClient from \"./useServiceClient\";\nimport SettingsClient from \"../../jacdac-ts/src/jdom/settingsclient\"\nimport { useChangeAsync } from \"../jacdac/useChange\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from '@material-ui/icons/Add';\nimport CmdButton from \"./CmdButton\";\nimport { useId } from \"react-use-id-hook\"\n\nfunction SettingRow(props: { client: SettingsClient, name: string, value?: string, mutable?: boolean }) {\n    const { client, name, value, mutable } = props;\n    const isSecret = name[0] == \"$\";\n    const displayName = isSecret ? name.slice(1) : name;\n    const handleComponentDelete = async () => {\n        await client.deleteValue(name)\n    }\n    const nameError = \"\"\n    const valueError = \"\"\n    return <Grid item xs={12}>\n        <Grid container spacing={1}>\n            <Grid item xs={4}>\n                <TextField fullWidth={true} error={!!nameError} variant=\"outlined\" label=\"key\" helperText={nameError} value={displayName} disabled={true} />\n            </Grid>\n            <Grid item xs={4}>\n                <TextField fullWidth={true} error={!!valueError} variant=\"outlined\" helperText={valueError} value={isSecret ? \"...\" : value} disabled={true} />\n            </Grid>\n            {mutable && <Grid item>\n                <CmdButton trackName=\"settings.delete\" title=\"Delete settings\" onClick={handleComponentDelete} icon={<DeleteIcon />} />\n            </Grid>}\n        </Grid>\n    </Grid>\n}\n\nfunction AddSettingRow(props: { client: SettingsClient }) {\n    const { client } = props;\n    const [name, setName] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const [secret, setSecret] = useState(true)\n    const secretLabelId = useId();\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setName(ev.target.value.trim())\n    }\n    const handleValueChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setValue(ev.target.value)\n    }\n    const handleChecked = (ev, checked: boolean) => {\n        setSecret(checked);\n    }\n    const handleAdd = async () => {\n        await client.setValue(`${secret ? \"$\" : \"\"}${name}`, value)\n        setName(\"\")\n        setValue(\"\")\n        setSecret(true)\n    }\n    const keyError = \"\"\n    const valueError = \"\"\n\n    return <Grid item xs={12}>\n        <Grid container spacing={1}>\n            <Grid item>\n                <TextField fullWidth={true} error={!!keyError} variant=\"outlined\" label=\"Add key\" helperText={keyError} value={name} onChange={handleNameChange} />\n            </Grid>\n            <Grid item>\n                <TextField fullWidth={true} error={!!valueError} variant=\"outlined\" label=\"value\" helperText={valueError} value={value} onChange={handleValueChange} />\n            </Grid>\n            <Grid item>\n                <Switch checked={secret} onChange={handleChecked} aria-labelledby={secretLabelId} />\n                <label id={secretLabelId}>Secret</label>\n            </Grid>\n            <Grid item>\n                <CmdButton trackName=\"settings.add\"\n                    disabled={!name || !!keyError || !!valueError} title=\"Add setting\" onClick={handleAdd} icon={<AddIcon />} />\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\nexport default function SettingsCard(props: { service: JDService, mutable?: boolean }) {\n    const { service, mutable } = props;\n    const client = useServiceClient(service, srv => new SettingsClient(srv));\n    const values = useChangeAsync(client, c => c?.list());\n    if (!client)\n        return null // wait till loaded\n\n    const handleClear = async () => await client?.clear();\n    return <Card>\n        <DeviceCardHeader device={service.device} showMedia={true} />\n        <CardContent>\n            <Grid container spacing={2}>\n                {values?.map(({ key, value }) => <SettingRow key={key} name={key} value={value} client={client} mutable={mutable} />)}\n                {mutable && <AddSettingRow client={client} key=\"add\" />}\n            </Grid>\n        </CardContent>\n        {mutable && <CardActions>\n            <CmdButton trackName=\"settings.clearall\" title=\"Clear all settings\" icon={<DeleteIcon />} onClick={handleClear}>\n                Clear\n            </CmdButton>\n        </CardActions>}\n    </Card >\n}\n","import React, { useContext } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport { SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BusState } from \"../../../jacdac-ts/src/jdom/bus\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport Alert from \"../ui/Alert\"\nimport SettingsCard from \"../SettingsCard\"\n\nexport default function SettingsManager() {\n    const { bus, connectionState } = useContext<JacdacContextProps>(JacdacContext)\n\n    const services = useChange(bus, b => b.services({ serviceClass: SRV_SETTINGS }));\n\n    return <>\n        {<ConnectAlert serviceClass={SRV_SETTINGS} />}\n        {!services.length && connectionState == BusState.Connected && <Alert severity=\"info\">We could not find any device with the settings storage service on the bus!</Alert>}\n        <Grid container spacing={2}>\n            {services.map(service => <Grid key={service.id} item xs={12}>\n                <SettingsCard service={service} mutable={true} />\n            </Grid>)}\n        </Grid>\n    </>\n}","import React from \"react\"\nimport SettingsManager from \"../../components/tools/SettingsManager\"\n\nexport default function Page() {\n    return <>\n        <h1>\n            Settings Manager\n    </h1>\n        <p>\n            Configure settings in a <Link to=\"/services/settings/\">setting store</Link>.\n    </p>\n        <SettingsManager />\n    </>\n}"],"sourceRoot":""}