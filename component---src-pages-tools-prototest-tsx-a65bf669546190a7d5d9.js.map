{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/components/TestCard.tsx","webpack://jacdac-docs/./src/pages/tools/prototest.tsx"],"names":["useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","trim","button","marginLeft","spacing","NoSsrConnectAlert","serviceClass","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","transport","ConnectAlert","PaperBox","padding","elevation","bgcolor","others","useTheme","Snippet","mode","download","caption","v","TestCard","title","subheader","onTest","autoRun","output","setOutput","runTest","toValue","Uint8Array","toHex","Array","isArray","stringify","logger","Error","handleClick","randomFieldPayload","field","specification","unsigned","n","min","parseInt","slice","pick","typicalMin","absoluteMin","max","typicalMax","absoluteMax","randomRange","a","cryptoRandomUint32","buffer","ch_a","charCodeAt","ch_z","s","i","String","fromCharCode","randomPayload","packFormat","fields","rs","some","RegisterProtocolTest","rw","ro","useEffectAsync","sendGetAsync","testRwRo","payload","jdpack","evCount","count","sendSetAsync","delay","rwdata","rwpayload","jdunpack","jdpackEqual","ropayload","testCommand","service","sendPacketAsync","Packet","registersUseAcks","ServiceProtocolTest","device","regs","registers","rws","reg","kind","roname","find","outPipeTest","register","ProtoTestReg","bufferEq","receiveWithInPipe","ProtoTestCmd","recv","recvu","buf","ProtocolTest","host","setHost","services","SRV_PROTO_TEST","toggleHost","d","JDServiceProvider","ProtocolTestServer","addServiceProvider","removeServiceProvider"],"mappings":"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","file":"component---src-pages-tools-prototest-tsx-a65bf669546190a7d5d9.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Markdown from \"./ui/Markdown\"\nimport { Alert } from \"@material-ui/lab\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children.replace(/[\\s\\r\\n]*$/g, \"\")}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"info\":\n        case \"error\":\n        case \"warning\":\n        case \"success\":\n            return (\n                <Alert severity={language}>\n                    <Markdown source={children.trim()} />\n                </Alert>\n            )\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import { Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n}) {\n    const { value, mode, download, url, caption } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                url={url}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import { Card, CardActions, CardContent, CardHeader } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { delay, toHex } from \"../../jacdac-ts/src/jdom/utils\";\nimport CmdButton from \"./CmdButton\";\nimport Snippet from \"./ui/Snippet\"\nimport useEffectAsync from \"./useEffectAsync\";\n\nexport type TestLogger = (name: string, ...msg: any) => void;\nexport type Test = (log: TestLogger) => Promise<void>;\n\nexport default function TestCard(props: {\n    title: string,\n    subheader?: string;\n    children?: JSX.Element | JSX.Element[],\n    onTest: Test,\n    autoRun?: boolean\n}) {\n    const { title, subheader, onTest, children, autoRun } = props;\n    const [output, setOutput] = useState(\"\");\n\n    const runTest = async () => {\n        const log: string[] = [];\n\n        const toValue = (msg: any) => {\n            if (msg === undefined || msg === null)\n                return \"\"\n            else if (typeof msg === \"string\")\n                return msg;\n            else if (msg instanceof Uint8Array)\n                return toHex(msg)\n            else if (Array.isArray(msg))\n                return msg.map(toValue);\n            else\n                return JSON.stringify(msg);\n        }\n\n        const logger = (msg: any) => {\n            if (msg instanceof Error)\n                log.push(msg + \"\")\n            if (typeof msg === \"object\") {\n                Object.keys(msg)\n                    .forEach(k => log.push(`${k}: ${toValue(msg[k])}`))\n            } else\n                log.push(toValue(msg));\n        }\n\n        try {\n            await onTest(logger);\n        } catch (e) {\n            logger(e);\n            throw e;\n        } finally {\n            setOutput(log.join('\\n'))\n        }\n    }\n\n    const handleClick = async () => await runTest();\n\n    return <Card>\n        <CardHeader title={title} subheader={subheader} />\n        <CardContent>\n            {children}\n            {output && <Snippet value={output} />}\n        </CardContent>\n        <CardActions>\n            <CmdButton variant=\"outlined\" onClick={handleClick} disableReset={true} autoRun={autoRun}>Test</CmdButton>\n        </CardActions>\n    </Card>\n}","import { Grid, Switch, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport {\n    bufferEq,\n    delay,\n    pick,\n    randomRange,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    ProtoTestCmd,\n    ProtoTestReg,\n    SRV_PROTO_TEST,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport { JDField } from \"../../../jacdac-ts/src/jdom/field\"\nimport {\n    jdpack,\n    jdpackEqual,\n    jdunpack,\n    PackedValues,\n} from \"../../../jacdac-ts/src/jdom/pack\"\nimport DeviceName from \"../../components/devices/DeviceName\"\nimport DeviceActions from \"../../components/DeviceActions\"\nimport useEffectAsync from \"../../components/useEffectAsync\"\nimport TestCard from \"../../components/TestCard\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport Alert from \"../../components/ui/Alert\"\nimport JDServiceProvider from \"../../../jacdac-ts/src/jdom/serviceprovider\"\nimport ProtocolTestServer from \"../../../jacdac-ts/src/jdom/protocoltestserver\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { cryptoRandomUint32 } from \"../../../jacdac-ts/src/jdom/random\"\n\nfunction randomFieldPayload(field: JDField) {\n    const { specification } = field\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let r: any = undefined\n    switch (specification.type) {\n        case \"bool\":\n            r = Math.random() > 0.5 ? 1 : 0\n            break\n        case \"i8\":\n        case \"i16\":\n        case \"i32\":\n        case \"u8\":\n        case \"u16\":\n        case \"u32\": {\n            const unsigned = specification.type[0] === \"u\"\n            const n = Math.min(30, parseInt(specification.type.slice(1)))\n            const min = pick(\n                specification.typicalMin,\n                specification.absoluteMin,\n                unsigned ? 0 : -((1 << (n - 1)) - 1)\n            )\n            const max = pick(\n                specification.typicalMax,\n                specification.absoluteMax,\n                unsigned ? (1 << n) - 1 : (1 << (n - 1)) - 1\n            )\n            r = randomRange(min, max)\n            break\n        }\n        case \"bytes\": {\n            // maxBytes?\n            const a = cryptoRandomUint32(randomRange(1, 3))\n            r = new Uint8Array(a.buffer)\n            break\n        }\n        case \"string\":\n        case \"string0\": {\n            const ch_a = \"a\".charCodeAt(0)\n            const ch_z = \"z\".charCodeAt(0)\n            const n = randomRange(4, 10)\n            let s = \"\"\n            for (let i = 0; i < n; ++i) {\n                s += String.fromCharCode(randomRange(ch_a, ch_z))\n            }\n            r = s\n            break\n        }\n    }\n\n    return r\n}\n\nfunction randomPayload<T extends PackedValues>(\n    packFormat: string,\n    fields: JDField[]\n): T {\n    if (!packFormat) throw new Error(\"pack format unknown\")\n    const rs = fields.map(randomFieldPayload)\n    if (rs.some(r => r === undefined))\n        throw new Error(\"unsupported data layout\")\n    return rs as T\n}\n\nfunction RegisterProtocolTest(props: {\n    rw: JDRegister\n    ro: JDRegister\n    ev: JDEvent\n}) {\n    const { rw, ro, ev } = props\n    const { specification, fields } = rw\n    const name = specification.name.replace(/^rw_/, \"\")\n\n    // event code and command code are the same as rw register\n    useEffectAsync(async () => {\n        await rw.sendGetAsync()\n        await ro.sendGetAsync()\n    }, [])\n\n    const testRwRo = async log => {\n        log(`-- testing rw`)\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n\n        // setup observer for event counts\n        const evCount = ev.count\n\n        // send over packet\n        await rw.sendSetAsync(data)\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n\n        // check ro\n        log(`-- testing ro`)\n        await ro.sendGetAsync()\n        // wait for response\n        await delay(100)\n        const ropayload = jdunpack(ro.data, packFormat)\n        log({ ropayload })\n        if (!jdpackEqual(packFormat, payload, ropayload))\n            throw new Error(`expected ro ${payload}, got ${ropayload}`)\n\n        // the event should have triggered once\n        log(`-- testing event`)\n        if (packFormat !== \"u8\" && evCount + 1 !== ev.count)\n            throw new Error(`expected 1 event, got ${ev.count - evCount}`)\n    }\n\n    const testCommand = async log => {\n        log(`-- testing cmd`)\n\n        const packFormat = specification.packFormat\n        const payload = randomPayload(packFormat, fields)\n        log({ payload })\n        const data = jdpack(packFormat, payload)\n        log({ data: toHex(data) })\n        // send over cmd packet\n        await rw.service.sendPacketAsync(Packet.from(rw.code, data))\n        // read packet\n        await rw.sendGetAsync()\n        // wait for response\n        await delay(100)\n        // check read\n        log({ rwdata: toHex(rw.data) })\n        const rwpayload = jdunpack(rw.data, packFormat)\n        log({ rwpayload })\n        if (!jdpackEqual(packFormat, payload, rwpayload))\n            throw new Error(`expected rw ${payload}, got ${rwpayload}`)\n    }\n\n    const test = async log => {\n        log(`- testing no acks`)\n        rw.service.registersUseAcks = false\n        await testRwRo(log)\n        await testCommand(log)\n        log(`- testing acks`)\n        rw.service.registersUseAcks = true\n        await testRwRo(log)\n        await testCommand(log)\n    }\n\n    return (\n        <TestCard\n            title={name}\n            subheader={specification.packFormat || \"?\"}\n            onTest={test}\n        />\n    )\n}\n\nfunction ServiceProtocolTest(props: { service: JDService }) {\n    const { service } = props\n    const { device } = service\n\n    const regs = service.registers()\n    const rws = service\n        .registers()\n        .filter(reg => reg.specification.kind == \"rw\")\n        .map(rw => {\n            const roname = rw.name.replace(/^rw_/, \"ro_\")\n            const ro = regs.find(\n                r =>\n                    r.specification.kind === \"ro\" &&\n                    r.specification.name === roname\n            )\n            const ev = service.event(rw.code)\n            return { rw, ro, ev }\n        })\n\n    const outPipeTest = async log => {\n        // fill bytes with data\n        const rw = service.register(ProtoTestReg.RwBytes)\n        const [data] = randomPayload<[Uint8Array]>(\"b\", rw.fields)\n        log(`data: ${toHex(data)}`)\n        // send over cmd packet\n        rw.service.registersUseAcks = true\n        await rw.sendSetAsync(data)\n        await rw.sendGetAsync()\n        // wait for response\n        await delay(100)\n        log(`data recv: ${toHex(rw.data)}`)\n        if (!bufferEq(data, rw.data))\n            throw new Error(\n                `rw write failed, expected ${toHex(data)}, got ${toHex(\n                    rw.data\n                )}`\n            )\n        // read packet back\n        const recv = await service.receiveWithInPipe<[number]>(\n            ProtoTestCmd.CReportPipe,\n            \"u8\"\n        )\n        const recvu = new Uint8Array(recv.map(buf => buf[0]))\n        log(`received ${toHex(recvu)}`)\n        if (!bufferEq(data, recvu))\n            throw new Error(\n                `expected ${toHex(data)}, got ${toHex(recv.map(buf => buf[0]))}`\n            )\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={10}>\n                <Typography variant=\"h4\">\n                    <DeviceName device={device} />\n                </Typography>\n            </Grid>\n            <Grid item xs={2}>\n                <DeviceActions device={device} showReset={true} />\n            </Grid>\n            {rws?.map(rw => (\n                <Grid key={rw.rw.id} item xs={12} md={6}>\n                    <RegisterProtocolTest {...rw} />\n                </Grid>\n            ))}\n            <Grid key={\"cpipe\"} item xs={12} md={6}>\n                <TestCard\n                    title={\"out pipe\"}\n                    subheader={\"\"}\n                    onTest={outPipeTest}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ProtocolTest() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [host, setHost] = useState(false)\n    const services = useChange(bus, b =>\n        b.services({ serviceClass: SRV_PROTO_TEST })\n    )\n\n    const toggleHost = () => setHost(!host)\n\n    // add virtual device\n    useEffect(() => {\n        if (!host) return () => {}\n\n        const d = new JDServiceProvider([new ProtocolTestServer()])\n        bus.addServiceProvider(d)\n        return () => bus.removeServiceProvider(d)\n    }, [host])\n\n    return (\n        <>\n            <h1>Protocol Test</h1>\n            <p>\n                A helper page to test the Jacdac protocol against a\n                <Link to=\"/services/prototest/\">protocol test</Link> service.\n            </p>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid key=\"connect\" item xs={12}>\n                    <ConnectAlert serviceClass={SRV_PROTO_TEST} />\n                </Grid>\n                {services?.map(service => (\n                    <Grid key={service.id} item xs={12}>\n                        <ServiceProtocolTest service={service} />\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        <AlertTitle>Developer zone</AlertTitle>\n                        <Switch checked={host} onChange={toggleHost} />\n                        <label>Add simulator</label>\n                    </Alert>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"sourceRoot":""}