{"version":3,"sources":["webpack:///./src/components/widgets/JoystickWidget.tsx","webpack:///./src/components/dashboard/DashboardJoystick.tsx"],"names":["decay","value","rate","precision","nv","Math","abs","JoystickWidget","props","color","x","y","onUpdate","hostValues","useWidgetTheme","active","background","controlBackground","dragSurfaceRef","useRef","useState","grabbing","setGrabbing","w","w2","cx","cy","rp","rc","rj","pw","ph","jx","jy","jw","updateJoystickDrag","bounds","current","getBoundingClientRect","dx","left","width","dy","top","height","angle","atan2","distance","min","sqrt","pow","newx","cos","newy","sin","handlePointerDown","ev","preventDefault","clientX","clientY","handlePointerUp","handlePointerMove","useAnimationFrame","ax","ay","nx","ny","handleStyle","cursor","DashboardJoystick","service","services","variant","register","JoystickReg","Direction","useRegisterUnpackedValue","host","useServiceHost","values","reading","setValues","refresh"],"mappings":"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","file":"100-1b637b125645bb6b4551.js","sourcesContent":["import React, { useRef, useState, CSSProperties } from \"react\";\nimport useAnimationFrame from \"../hooks/useAnimationFrame\";\nimport SvgWidget from \"./SvgWidget\";\nimport useWidgetTheme from \"./useWidgetTheme\";\n\n\nfunction decay(value: number, rate: number, precision: number) {\n    let nv = value * rate;\n    if (Math.abs(nv) < precision)\n        nv = 0;\n    return nv;\n}\n\nexport default function JoystickWidget(props: {\n    x: number, y: number,\n    color: \"secondary\" | \"primary\",\n    onUpdate?: (newx: number, newy: number) => void,\n    hostValues?: () => [number, number]\n}) {\n    const { color, x, y, onUpdate, hostValues } = props;\n    const { active, background, controlBackground } = useWidgetTheme(color);\n    const dragSurfaceRef = useRef<SVGCircleElement>();\n    const [grabbing, setGrabbing] = useState(false)\n\n    const w = 40;\n    const w2 = w >> 1;\n    const cx = w2;\n    const cy = w2;\n    const rp = 2\n    const rc = 6\n    const rj = 10\n    const pw = 12\n    const ph = 8\n\n    const jx = cx + (x || 0) * rj\n    const jy = cy + (y || 0) * rj\n    const jw = 1\n\n    const updateJoystickDrag = (x: number, y: number) => {\n        const bounds = dragSurfaceRef.current.getBoundingClientRect();\n\n        const dx = ((x - bounds.left) * (w / bounds.width)) - w2;\n        const dy = ((y - bounds.top) * (w / bounds.height)) - w2;\n\n        const angle = Math.atan2(dy, dx);\n        const distance = Math.min(Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)), rj) / rj;\n\n        const newx = distance * Math.cos(angle)\n        const newy = distance * Math.sin(angle)\n\n        onUpdate(newx, newy);\n    }\n\n    const handlePointerDown = async (ev: React.PointerEvent<SVGCircleElement>) => {\n        ev.preventDefault();\n        setGrabbing(true)\n        updateJoystickDrag(ev.clientX, ev.clientY)\n    }\n    const handlePointerUp = (ev: React.PointerEvent<SVGCircleElement>) => {\n        ev.preventDefault();\n        setGrabbing(false)\n    }\n    const handlePointerMove = async (ev: React.PointerEvent<SVGCircleElement>) => {\n        ev.preventDefault();\n        if (grabbing)\n            updateJoystickDrag(ev.clientX, ev.clientY)\n    }\n\n    useAnimationFrame(() => {\n        if (!hostValues || grabbing) return false; // let use do its thing\n        const [ax, ay] = hostValues()\n        const nx = decay(ax, 0.9, 16)\n        const ny = decay(ay, 0.9, 16)\n\n        // async\n        onUpdate(nx, ny);\n\n        return nx !== 0 || ny !== 0;\n    }, [hostValues, grabbing])\n\n    const handleStyle: CSSProperties = {\n        cursor: grabbing ? \"grabbing\" : \"grab\"\n    }\n\n    return <SvgWidget width={w} height={w}>\n        <circle ref={dragSurfaceRef} className=\"joystick-background\" cx={cx} cy={cy} r=\"16\" fill={background}></circle>\n        <rect className=\"dpad-up\" x={\"16\"} y=\"6\" width={ph} height={pw} rx={rp} fill={controlBackground}></rect>\n        <rect className=\"dpad-down\" x=\"16\" y=\"22\" width={ph} height={pw} rx={rp} fill={controlBackground}></rect>\n        <rect className=\"dpad-right\" x=\"22\" y=\"16\" width={pw} height={ph} ry={rp} fill={controlBackground}></rect>\n        <rect className=\"dpad-left\" x=\"6\" y=\"16\" width={pw} height={ph} ry={rp} fill={controlBackground}></rect>\n        <circle className=\"dpad-center\" cx={cx} cy={cy} r={rc} fill={controlBackground}></circle>\n        {hostValues\n            ? <circle\n                className=\"joystick-handle\"\n                cx={jx}\n                cy={jy}\n                r={rc}\n                fill={background}\n                stroke={active}\n                strokeWidth={jw}\n                tabIndex={0}\n                role=\"button\"\n                aria-label=\"joystick handle\"\n                arial-live=\"polite\"\n                onPointerMove={handlePointerMove}\n                onPointerDown={handlePointerDown}\n                onPointerUp={handlePointerUp}\n                onPointerLeave={handlePointerUp}\n                style={handleStyle}\n            />\n            : <circle\n                className=\"joystick-handle\"\n                cx={jx}\n                cy={jy}\n                r={rc}\n                fill={background}\n                stroke={active}\n                strokeWidth={jw}\n                aria-label=\"joystick handle\"\n            />}\n    </SvgWidget>\n}\n","import React, { } from \"react\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport JoystickSensorServiceHost from \"../../../jacdac-ts/src/hosts/joystickservicehost\";\nimport JoystickWidget from \"../widgets/JoystickWidget\";\nimport { JoystickReg } from \"../../../jacdac-ts/src/jdom/constants\";\n\nexport default function DashboardJoystick(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n    const register = service.register(JoystickReg.Direction)\n    const [x, y] = useRegisterUnpackedValue<[number, number]>(register)\n    const host = useServiceHost<JoystickSensorServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n\n    const values = () => host.reading.values();\n    const onUpdate = (newx: number, newy: number) => {\n        host.reading.setValues([newx, newy]);\n        register.refresh();\n    }\n\n    return <JoystickWidget x={x} y={y}\n        color={color}\n        onUpdate={onUpdate}\n        hostValues={host && values} />\n}\n"],"sourceRoot":""}