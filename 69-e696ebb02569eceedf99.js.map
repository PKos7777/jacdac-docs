{"version":3,"sources":["webpack:///./src/components/Toc.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","treeifyToc","toc","tree","slice","tocNodes","forEach","node","index","k","path","replace","undefined","filter","parts","split","pop","length","parentPath","join","parent","children","push","r","nodes","sortNodes","sort","l","order","Toc","props","pagePath","useContext","AppContext","setDrawerType","useTheme","classes","data","useStaticQuery","handleClick","DrawerType","None","useMemo","name","allMdx","edges","map","frontmatter","title","headings","test","value","hideToc","fields","slug","TocListItem","entry","level","selected","sub","color","text","primary","child","i"],"mappings":"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","file":"69-e696ebb02569eceedf99.js","sourcesContent":["import React, { useContext, useMemo } from \"react\"\nimport { makeStyles, createStyles, Theme, List, ListItem, Typography, useTheme, Box } from '@material-ui/core';\nimport { Link } from 'gatsby-theme-material-ui';\n// tslint:disable-next-line: no-submodule-imports\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface TocNode {\n  name: string;\n  path: string;\n  order: number;\n  children?: TocNode[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    }\n  }),\n);\n\nfunction treeifyToc(toc: TocNode[]) {\n  let tree = toc.slice(0)\n\n  // reconstruct tree\n  const tocNodes: { [index: string]: TocNode } = {};\n  tree.forEach((node, index) => {\n    const k = node.path.replace(/\\/$/, '')\n    if (tocNodes[k]) {\n      tree[index] = undefined\n    }\n    else\n      tocNodes[k] = node\n  });\n  tree = tree.filter(node => !!node)\n  tree.forEach((node, index) => {\n    const parts = node.path.replace(/\\/$/, '').split(\"/\");\n    parts.pop();\n    while (parts.length) {\n      const parentPath = `${parts.join(\"/\")}`;\n      const parent = tocNodes[parentPath]\n      if (parent) {\n        if (!parent.children)\n          parent.children = [];\n        parent.children.push(node)\n        tree[index] = undefined;\n        break;\n      }\n      parts.pop();\n    }\n  })\n  const r = {\n    tree: tree.filter(node => !!node),\n    nodes: tocNodes\n  }\n\n  function sortNodes(nodes: TocNode[]) {\n    nodes.sort((l, r) => l.order - r.order)\n    nodes.forEach(node => node.children && sortNodes(node.children))\n  }\n  sortNodes(r.tree)\n\n  return r;\n}\n\nexport default function Toc(props: { pagePath: string }) {\n  const { pagePath } = props;\n  const { setDrawerType } = useContext(AppContext)\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const data = useStaticQuery(graphql`\n  query {\n     allMdx {\n      edges {\n        node {\n          headings {\n            value\n          }\n          frontmatter {\n            title\n            order\n            hideToc\n            hideMainMenu\n          }\n          excerpt\n          fields {\n            slug\n          }\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n        }\n      }\n    }\n  }`);\n\n  /*\n      site {\n        siteMetadata {\n          title\n        }\n    }\n  \n    allServicesJson {\n        nodes {\n          name\n          shortId\n        }\n      } \n    allDevicesJson {\n        nodes {\n          id\n          name\n        }\n      }\n   */\n\n  const handleClick = () => {\n    setDrawerType(DrawerType.None)\n  }\n\n  const tree = useMemo(() => {\n    // convert pages into tree\n    const toc: TocNode[] = [{\n      name: \"Home\",\n      path: \"/\",\n      order: 0\n    }, {\n      name: \"Dashboard\",\n      path: \"/dashboard/\",\n      order: 0.5\n    }, {\n      name: \"Reference\",\n      path: \"/reference/\",\n      order: 1\n    }, {\n      name: \"Services\",\n      path: \"/services/\",\n      order: 0.6\n    }, {\n      name: \"Devices\",\n      path: \"/devices/\",\n      order: 0.7\n    }, {\n      name: \"Tools\",\n      path: \"/tools/\",\n      order: 4\n    }, {\n      name: \"Clients\",\n      path: \"/clients/\",\n      order: 5\n    }]\n\n    data.allMdx.edges.map(node => node.node)\n      .filter(node => !!node.frontmatter?.title\n        || (!!node.headings.length && !/404/.test(node.headings[0].value)))\n      .filter(node => !node.frontmatter?.hideToc)\n      .map(node => {\n        const r = {\n          name: node.frontmatter?.title || node.headings[0].value,\n          path: node.fields.slug,\n          order: node.frontmatter?.order !== undefined ? node.frontmatter?.order : 50\n        }\n        return r;\n      })\n      .forEach(node => toc.push(node))\n\n    /*\n    data.allServicesJson.nodes.map(node => {\n      return {\n        name: node.name,\n        path: `/services/${node.shortId}/`\n      }\n    }).forEach(node => toc.push(node))\n\n    data.allDevicesJson.nodes.map(node => {\n      return {\n        name: node.name,\n        path: `/devices/${identifierToUrlPath(node.id)}/`\n      }\n    }).forEach(node => toc.push(node));\n    */\n\n    const { tree } = treeifyToc(toc)\n    return tree;\n  }, []);\n\n  function TocListItem(props: { entry: TocNode, level: number }) {\n    const { entry, level } = props;\n    const { path, children, name } = entry;\n    const selected = pagePath === path;\n    const sub = level === 1 || (!!children && !!children.length);\n\n    return <>\n      <ListItem button\n        selected={selected}\n        key={'tocitem' + path}>\n        <Link style={({ color: theme.palette.text.primary })} onClick={handleClick} to={path}>\n          <ListItemText\n            primary={<Typography variant={sub ? \"button\" : \"caption\"}>{name}</Typography>} />\n        </Link>\n      </ListItem>\n      { sub && !!children?.length && <Box ml={level > 0 ? 1 : 0}>\n        {children?.map(child => <TocListItem key={'tocitem' + child.path} entry={child} level={level + 1} />)}\n      </Box>}\n    </>\n  }\n\n  return <List dense className={classes.root}>\n    {tree.map((entry, i) => <TocListItem key={i} entry={entry} level={0} />)}\n  </List>\n}\n"],"sourceRoot":""}