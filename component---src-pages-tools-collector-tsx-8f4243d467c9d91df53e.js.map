{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/FiberManualRecord.js","webpack:///./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack:///./node_modules/@material-ui/icons/Delete.js","webpack:///./node_modules/@material-ui/icons/Stop.js","webpack:///./node_modules/@material-ui/icons/SaveAlt.js","webpack:///./node_modules/@material-ui/icons/Save.js","webpack:///./node_modules/@material-ui/icons/PlayArrow.js","webpack:///./src/components/EventSelect.tsx","webpack:///./src/components/DataSetGrid.tsx","webpack:///./src/pages/tools/collector.tsx","webpack:///./src/components/ReadingFieldGrid.tsx"],"names":["useStyles","makeStyles","theme","createStyles","formControl","minWidth","selectEmpty","marginTop","spacing","EventSelect","props","eventId","onChange","label","filter","className","useContext","JacdacContext","bus","classes","events","useChange","arrayConcatMany","devices","map","device","services","service","event","selectedEvent","node","handleChange","ev","target","value","clsx","qualifiedName","id","friendlyName","DataSetGrid","tables","handleDeleteTable","ServiceManagerContext","fileStorage","gridBreakpoints","useGridBreakpoints","length","handleDownload","table","sep","csv","toCSV","saveText","name","handelDelete","rows","prettyDuration","duration","headers","join","root","marginBottom","grow","flexGrow","field","marginRight","segment","row","buttons","trend","width","vmiddle","verticalAlign","LIVE_HORIZON","createDataSet","registers","live","palette","fields","reg","colors","f","i","set","FieldDataSet","maxRows","Collector","useState","registerIdsChecked","setRegisterIdsChecked","aggregatorId","setAggregatorId","recording","setRecording","setTables","setRecordingLength","prefix","setPrefix","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","undefined","liveDataSet","setLiveDataSet","setLiveDataTimestamp","triggerEventId","setTriggerEventId","chartPalette","useChartPalette","readingRegisters","find","srv","isSensor","specification","readingRegister","recordingRegisters","indexOf","aggregators","serviceClass","SRV_SENSOR_AGGREGATOR","aggregator","samplingIntervalDelayi","parseInt","samplingCount","Math","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","error","triggerEvent","startEnabled","useEffect","un","subscribe","EVENT","toggleRecording","createSensorConfig","samplingInterval","samplesInWindow","inputs","saveConfig","sensorConfig","JSON","stringify","newDataSet","registerIds","handleRegisterCheck","splice","push","sort","stopRecording","startRecording","client","SensorAggregatorClient","setInputs","collect","startStreamingRegisters","console","log","streamers","REPORT_UPDATE","streamer","handleSamplingIntervalChange","trim","handleSamplingDurationChange","handlePrefixChange","handleTriggerChange","handleAggregatorChecked","updateLiveData","timestamp","throttleUpdate","throttle","addRow","values","forEach","sendSetIntAsync","interval","setInterval","stopStreaming","clearInterval","subscribeSample","startAdornment","ReadingFieldGridItem","register","registerChecked","deviceName","useDeviceName","handleCheck","color","colorOf","ReadingFieldGrid"],"mappings":"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","file":"component---src-pages-tools-collector-tsx-8f4243d467c9d91df53e.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","import React, { useContext } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n// tslint:disable-next-line: no-submodule-imports\nimport InputLabel from '@material-ui/core/InputLabel';\n// tslint:disable-next-line: no-submodule-imports\nimport MenuItem from '@material-ui/core/MenuItem';\n// tslint:disable-next-line: no-submodule-imports\nimport FormHelperText from '@material-ui/core/FormHelperText';\n// tslint:disable-next-line: no-submodule-imports\nimport FormControl from '@material-ui/core/FormControl';\n// tslint:disable-next-line: no-submodule-imports\nimport Select from '@material-ui/core/Select';\nimport { JDEvent } from '../../jacdac-ts/src/jdom/event';\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport useChange from '../jacdac/useChange';\nimport clsx from 'clsx';\nimport { arrayConcatMany } from '../../jacdac-ts/src/jdom/utils';\nimport { JDDevice } from '../../jacdac-ts/src/jdom/device';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\nexport default function EventSelect(props: {\n    eventId: string,\n    onChange: (eventId: string) => void,\n    label: string,\n    filter?: (event: JDEvent) => boolean,\n    className?: string\n}) {\n    const { eventId, onChange, label, filter, className } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const events: JDEvent[] = useChange(bus, () => arrayConcatMany(arrayConcatMany(\n        bus.devices().map((device: JDDevice) => device.services()\n            .map(service => service.events.filter(event => !filter || filter(event)))\n        )\n    )))\n    const selectedEvent = bus.node(eventId) as JDEvent\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string);\n    };\n\n    return (\n        <FormControl variant=\"outlined\" className={clsx(className, classes.formControl)}>\n            <InputLabel key=\"label\">{label}</InputLabel>\n            <Select\n                key=\"select\"\n                value={selectedEvent ? eventId : \"\"}\n                onChange={handleChange}\n                label={selectedEvent?.qualifiedName}>\n                <MenuItem key={\"none\"} value={\"\"}>\n                    <em>None</em>\n                </MenuItem>\n                {events.map(ev => <MenuItem key={ev.id} value={ev.id}>{ev.friendlyName}</MenuItem>)}\n            </Select>\n        </FormControl>\n    );\n}","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@material-ui/core\";\nimport { Button, IconButton } from \"gatsby-theme-material-ui\";\nimport React, { useContext } from \"react\";\nimport { prettyDuration } from \"../../jacdac-ts/src/jdom/pretty\";\nimport ServiceManagerContext from \"./ServiceManagerContext\";\nimport Trend from \"./Trend\";\nimport useGridBreakpoints from './useGridBreakpoints';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FieldDataSet from \"./FieldDataSet\";\n\n\nexport default function DataSetGrid(props: {\n    tables: FieldDataSet[],\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { tables, handleDeleteTable } = props;\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const gridBreakpoints = useGridBreakpoints(tables?.length)\n\n    const handleDownload = (table: FieldDataSet) => () => {\n        const sep = ','\n        const csv = table.toCSV(sep)\n        fileStorage.saveText(`${table.name}.csv`, csv)\n    }\n    const handelDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n    return <Grid container spacing={2}>\n        {tables.map((table) =>\n            <Grid item {...gridBreakpoints} key={`result` + table.id}>\n                <Card>\n                    <CardHeader\n                        subheader={`${table.rows.length} rows, ${prettyDuration(table.duration)}`} />\n                    <CardContent>\n                        <div>{table.headers.join(', ')}</div>\n                        <Trend dataSet={table} height={8} mini={true} />\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<SaveAltIcon />}\n                            onClick={handleDownload(table)}>\n                            Save\n                        </Button>\n                        {handleDeleteTable &&\n                            <IconButton onClick={handelDelete(table)}>\n                                <DeleteIcon />\n                            </IconButton>}\n                    </CardActions>\n                </Card>\n            </Grid>)}\n    </Grid>\n}","import React, { useState, useContext, useEffect } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Button, TextField, InputAdornment, createStyles, Switch, Card, CardActions } from '@material-ui/core';\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from '@material-ui/icons/Stop';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from '@material-ui/icons/Save';\nimport useChange from '../../jacdac/useChange';\nimport { JDBus } from '../../../jacdac-ts/src/jdom/bus'\nimport FieldDataSet from '../../components/FieldDataSet';\nimport Trend from '../../components/Trend';\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../../components/ui/Alert\";\nimport EventSelect from '../../components/EventSelect';\nimport { JDEvent } from '../../../jacdac-ts/src/jdom/event';\nimport { EVENT, REPORT_UPDATE, SRV_SENSOR_AGGREGATOR } from '../../../jacdac-ts/src/jdom/constants';\nimport { arrayConcatMany, throttle } from '../../../jacdac-ts/src/jdom/utils';\nimport DataSetGrid from '../../components/DataSetGrid';\nimport { JDRegister } from '../../../jacdac-ts/src/jdom/register';\nimport ReadingFieldGrid from '../../components/ReadingFieldGrid';\nimport DeviceCardHeader from '../../components/DeviceCardHeader';\nimport { SensorAggregatorClient } from '../../../jacdac-ts/src/jdom/sensoraggregatorclient';\nimport { Link } from 'gatsby-theme-material-ui';\nimport { JDService } from '../../../jacdac-ts/src/jdom/service';\nimport ServiceManagerContext from '../../components/ServiceManagerContext';\nimport useChartPalette from '../../components/useChartPalette';\nimport { isSensor } from '../../../jacdac-ts/src/jdom/spec';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        marginBottom: theme.spacing(1)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    field: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1.5)\n    },\n    segment: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    row: {\n        marginBottom: theme.spacing(0.5)\n    },\n    buttons: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(2)\n    },\n    trend: {\n        width: theme.spacing(10)\n    },\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live)\n        set.maxRows = LIVE_HORIZON + 4\n\n    return set;\n}\n\nexport default function Collector() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const [recording, setRecording] = useState(false)\n    const [tables, setTables] = useState<FieldDataSet[]>([])\n    const [, setRecordingLength] = useState(0)\n    const [prefix, setPrefix] = useState(\"data\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"100\")\n    const [samplingDuration, setSamplingDuration] = useState(\"10\")\n    const [liveDataSet, setLiveDataSet] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const chartPalette = useChartPalette()\n    const readingRegisters = useChange(bus, bus =>\n        bus.devices().map(device => device\n            .services().find(srv => isSensor(srv.specification))\n            ?.readingRegister\n        ).filter(reg => !!reg))\n    const recordingRegisters = readingRegisters\n        .filter(reg => registerIdsChecked.indexOf(reg.id) > -1)\n    const aggregators: JDService[] = useChange(bus, bus => bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR }))\n    const aggregator: JDService = aggregators.find(srv => srv.id == aggregatorId)\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(parseFloat(samplingDuration) * 1000 / samplingIntervalDelayi)\n    const errorSamplingIntervalDelay = isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const triggerEvent = bus.node(triggerEventId) as JDEvent;\n    const startEnabled = !!recordingRegisters?.length\n\n    useEffect(() => {\n        //console.log(`trigger event`, triggerEventId, triggerEvent)\n        const un = triggerEvent?.subscribe(EVENT, () => {\n            //console.log(`trigger toggle recoring`, recording)\n            toggleRecording()\n        })\n        //console.log(`mounted`, triggerEvent)\n        return () => {\n            //console.log(`unmount trigger`)\n            if (un) un()\n        }\n    }, [triggerEvent, recording, registerIdsChecked, liveDataSet])\n\n    const createSensorConfig = () => ({\n        samplingInterval: samplingIntervalDelayi,\n        samplesInWindow: 10,\n        inputs: recordingRegisters.map(reg => ({\n            serviceClass: reg.service.serviceClass\n        }))\n    })\n    const saveConfig = () => {\n        const sensorConfig = JSON.stringify(createSensorConfig(), null, 2)\n        fileStorage.saveText(`${prefix || \"jacdac\"}-sensor-config.json`, sensorConfig)\n    }\n    const newDataSet = (registerIds: string[], live: boolean) => registerIds.length\n        ? createDataSet(\n            bus,\n            readingRegisters.filter(reg => registerIds.indexOf(reg.id) > -1),\n            `${prefix || \"data\"}${tables.length}`,\n            live,\n            chartPalette)\n        : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1)\n            registerIdsChecked.splice(i, 1)\n        else\n            registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveDataSet(newDataSet(registerIdsChecked, true))\n    }\n    const stopRecording = () => {\n        if (recording) {\n            //console.log(`stop recording`, liveDataSet)\n            setTables([liveDataSet, ...tables])\n            setLiveDataSet(newDataSet(registerIdsChecked, true))\n            setRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!recording && recordingRegisters.length) {\n            setLiveDataSet(newDataSet(registerIdsChecked, false))\n            setRecording(true)\n            if (aggregator) {\n                const client = new SensorAggregatorClient(aggregator)\n                await client.setInputs(createSensorConfig())\n                client.collect(samplingCount)\n            }\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg => reg.subscribe(REPORT_UPDATE, () => { }))\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (recording)\n            stopRecording()\n        else\n            startRecording()\n    }\n    const handleSamplingIntervalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handlePrefixChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPrefix(event.target.value.trim())\n    }\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n    const handleDeleteTable = (table: FieldDataSet) => {\n        const i = tables.indexOf(table)\n        if (i > -1) {\n            tables.splice(i, 1)\n            setTables([...tables])\n        }\n    }\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? '' : srv?.id\n        setAggregatorId(id);\n    }\n    const updateLiveData = () => {\n        setLiveDataSet(liveDataSet);\n        setRecordingLength(liveDataSet.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveDataSet) return;\n        //console.log(values)\n        liveDataSet.addRow(values)\n        if (recording && liveDataSet.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return;\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg => reg.sendSetIntAsync(samplingIntervalDelayi));\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error || (aggregator && recording)) return undefined;\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi);\n        const stopStreaming = startStreamingRegisters()\n        return () => {\n            clearInterval(interval);\n            stopStreaming();\n        }\n    }, [recording, samplingIntervalDelayi, samplingCount, registerIdsChecked, aggregator]);\n    useEffect(() => {\n        if (aggregator) {\n            const client = new SensorAggregatorClient(aggregator)\n            return client.subscribeSample(values => addRow(values))\n        }\n        return () => { }\n    }, [recording, liveDataSet, registerIdsChecked, aggregator])\n\n    return <div className={classes.root}>\n        <h1>Data Collector</h1>\n        <p>\n            Use this page to collect streaming data from Jacdac devices into various output formats.\n        </p>\n        {!!aggregators.length && <div key=\"aggregators\">\n            <h3>(Optional) Choose a data aggregator</h3>\n            <p>A <Link to=\"/services/aggregator\">data aggregator</Link> service collects collects sensor data on the bus and returns an aggregated at regular intervals.</p>\n            <Grid container>\n                {aggregators.map(aggregator => <Grid key={'aggregate' + aggregator.id} item xs={4}>\n                    <Card>\n                        <DeviceCardHeader device={aggregator.device} showMedia={true} />\n                        <CardActions>\n                            <Switch checked={aggregatorId == aggregator.id} disabled={recording} onChange={handleAggregatorChecked(aggregator)} />\n                        </CardActions>\n                    </Card>\n                </Grid>)}\n            </Grid>\n        </div>}\n        <div key=\"sensors\">\n            <h3>Choose sensors</h3>\n            {!readingRegisters.length && <Alert className={classes.grow} severity=\"info\">Waiting for sensor...</Alert>}\n            {!!readingRegisters.length && <ReadingFieldGrid\n                readingRegisters={readingRegisters}\n                registerIdsChecked={registerIdsChecked}\n                recording={recording}\n                liveDataSet={liveDataSet}\n                handleRegisterCheck={handleRegisterCheck}\n            />}\n        </div>\n        <div key=\"record\">\n            <h3>Record data</h3>\n            {aggregator && <p>Record the sensor input configuration in order to up your ML model later on.</p>}\n            <div className={classes.buttons}>\n                <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color={recording ? \"secondary\" : \"primary\"}\n                    aria-label=\"start/stop recording\"\n                    title=\"start/stop recording\"\n                    onClick={toggleRecording}\n                    startIcon={recording ? <StopIcon /> : <PlayArrowIcon />}\n                    disabled={!startEnabled}\n                >{recording ? \"Stop\" : \"Start\"}</Button>\n                {aggregator && <Button\n                    variant=\"contained\"\n                    title=\"save sensor input configuration\"\n                    onClick={saveConfig}\n                    startIcon={<SaveIcon />}\n                    disabled={recording}>\n                    Save configuration\n                </Button>}\n            </div>\n            <div className={classes.row}>\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingIntervalDelay}\n                    disabled={recording}\n                    label=\"Sampling interval\"\n                    value={samplingIntervalDelay}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">ms</InputAdornment>,\n                    }}\n                    onChange={handleSamplingIntervalChange} />\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingDuration}\n                    disabled={recording}\n                    label=\"Sampling duration\"\n                    value={samplingDuration}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">s</InputAdornment>,\n                    }}\n                    onChange={handleSamplingDurationChange} />\n                <TextField\n                    className={classes.field}\n                    disabled={recording}\n                    label=\"File name prefix\"\n                    value={prefix}\n                    variant=\"outlined\"\n                    onChange={handlePrefixChange} />\n                <EventSelect className={classes.field} eventId={triggerEventId} onChange={handleTriggerChange} label={\"Start Event\"} />\n            </div>\n        </div>\n        {liveDataSet && <Trend key=\"trends\" height={12} dataSet={liveDataSet} horizon={LIVE_HORIZON} dot={true} gradient={true} />}\n        {\n            !!tables.length && <div key=\"recordings\">\n                <h3>Recordings</h3>\n                <DataSetGrid tables={tables} handleDeleteTable={handleDeleteTable} />\n            </div>\n        }\n    </div >;\n\n    //{liveDataSet && <DataSetTable key=\"datasettable\" className={classes.segment} dataSet={liveDataSet} maxRows={3} minRows={3} />}\n\n}\n","import { Card, CardActions, CardContent, CardHeader, createStyles, Grid, makeStyles, Switch, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\";\nimport DeviceActions from \"./DeviceActions\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FieldDataSet from \"./FieldDataSet\";\nimport useDeviceName from \"./useDeviceName\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister,\n    handleRegisterCheck: (register: JDRegister) => void,\n    recording: boolean,\n    registerChecked: boolean,\n    liveDataSet?: FieldDataSet\n}) {\n    const { register, handleRegisterCheck, recording, registerChecked, liveDataSet } = props;\n    const gridBreakpoints = useGridBreakpoints();\n    const classes = useStyles();\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return <Grid item {...gridBreakpoints} key={'source' + register.id}>\n        <Card>\n            <CardHeader subheader={register.service.name}\n                title={`${deviceName}/${register.name}`}\n                action={<DeviceActions device={register.service.device} showReset={true} />} />\n            <CardContent>\n                {register.fields.map((field) => <span key={field.id}>\n                    <FiberManualRecordIcon className={classes.vmiddle} fontSize=\"large\" style={({\n                        color: (registerChecked && liveDataSet?.colorOf(field)) || \"#ccc\"\n                    })} />\n                    {field.name}\n                </span>)}\n            </CardContent>\n            <CardActions>\n                <Switch disabled={recording} onChange={handleCheck} checked={registerChecked} />\n            </CardActions>\n        </Card>\n    </Grid>;\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[],\n    registerIdsChecked: string[],\n    recording?: boolean,\n    handleRegisterCheck: (register: JDRegister) => void,\n    liveDataSet?: FieldDataSet\n}) {\n    const { readingRegisters, registerIdsChecked, recording, handleRegisterCheck, liveDataSet } = props\n\n    return <Grid container spacing={2}>\n        {readingRegisters.map(register => {\n            const registerChecked = registerIdsChecked.indexOf(register.id) > -1;\n            return <ReadingFieldGridItem\n                key={register.id}\n                register={register}\n                registerChecked={registerChecked}\n                recording={recording}\n                handleRegisterCheck={handleRegisterCheck}\n                liveDataSet={liveDataSet}\n            />;\n        })}\n    </Grid>\n}"],"sourceRoot":""}