{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardArcadeGamepad.tsx"],"names":["buttonLabels","ArcadeGamepadButton","Left","Up","Down","Right","ArcadeButton","props","cx","cy","ro","color","pressure","ri","button","host","onRefresh","useWidgetTheme","textProps","active","background","controlBackground","checked","title","label","handleDown","down","handleUp","up","buttonProps","useSvgButtonProps","DashboardArcadeGamepad","service","useRegisterUnpackedValue","register","ArcadeGamepadReg","AvailableButtons","available","pressedRegister","Buttons","pressed","useServiceHost","length","w","h","cw","ch","sro","sri","scy","pos","small","A","B","Menu","Select","Exit","Reset","handleRefresh","refresh","abx","aby","abr","abw","map","find","p"],"mappings":"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","file":"111-fbfc9a4e0345e00b138c.js","sourcesContent":["\nimport React from \"react\";\nimport { ArcadeGamepadButton, ArcadeGamepadReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport ArcadeGamepadServiceHost from \"../../../jacdac-ts/src/hosts/arcadegamepadservicehost\";\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nconst buttonLabels = {\n    [ArcadeGamepadButton.Left]: \"\\u25C4\",\n    [ArcadeGamepadButton.Up]: \"\\u25B2\",\n    [ArcadeGamepadButton.Down]: \"\\u25BC\",\n    [ArcadeGamepadButton.Right]: \"\\u25BA\",\n}\n\nfunction ArcadeButton(props: {\n    cx: number,\n    cy: number,\n    ro: number,\n    ri: number,\n    pressure: number,\n    button: ArcadeGamepadButton,\n    host: ArcadeGamepadServiceHost,\n    onRefresh: () => void,\n    color?: \"primary\" | \"secondary\"\n}) {\n    const { cx, cy, ro, color, pressure, ri, button, host, onRefresh } = props;\n    const { textProps, active, background, controlBackground } = useWidgetTheme(color);\n    const checked = (pressure || 0) > 0;\n    const title = ArcadeGamepadButton[button]\n    const label = buttonLabels[button] || title[0]\n\n    const handleDown = () => {\n        host?.down(button, 0.7);\n        onRefresh()\n    }\n    const handleUp = () => {\n        host?.up(button);\n        onRefresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(title, handleDown, handleUp)\n\n    return <g transform={`translate(${cx},${cy})`} aria-label={`button ${title} ${checked ? \"down\" : \"up\"}`}>\n        <circle cx={0} cy={0} r={ro} fill={background} />\n        <circle\n            cx={0} cy={0} r={ri}\n            fill={checked ? active : controlBackground}\n            {...buttonProps}\n        >\n            <title>{title}</title>\n        </circle>\n        <text cx={0} cy={0} fontSize={ri} {...textProps}>{label}</text>\n    </g>\n}\n\nexport default function DashboardArcadeGamepad(props: DashboardServiceProps) {\n    const { service } = props;\n    const [available] = useRegisterUnpackedValue<[[ArcadeGamepadButton][]]>(service.register(ArcadeGamepadReg.AvailableButtons))\n    const pressedRegister = service.register(ArcadeGamepadReg.Buttons);\n    const [pressed] = useRegisterUnpackedValue<[[ArcadeGamepadButton, number][]]>(pressedRegister);\n    const host = useServiceHost<ArcadeGamepadServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background } = useWidgetTheme(color);\n\n    if (!available?.length)\n        return <LoadingProgress />\n\n    const w = 256\n    const h = 128\n\n    const cw = w / 12\n    const ch = h / 4\n\n    const ro = cw - 2\n    const ri = ro - 4\n\n    const sro = ro - 10\n    const sri = sro - 2\n    const scy = sro\n\n    const pos = {\n        [ArcadeGamepadButton.Left]: { cx: cw * 1.5, cy: 2 * ch, small: false },\n        [ArcadeGamepadButton.Up]: { cx: cw * 3, cy: ch, small: false },\n        [ArcadeGamepadButton.Right]: { cx: cw * 4.5, cy: 2 * ch, small: false },\n        [ArcadeGamepadButton.Down]: { cx: cw * 3, cy: 3 * ch, small: false },\n\n        [ArcadeGamepadButton.A]: { cx: cw * 10.5, cy: ch * 1.25, small: false },\n        [ArcadeGamepadButton.B]: { cx: cw * 9.5, cy: ch * 2.75, small: false },\n\n        [ArcadeGamepadButton.Menu]: { cx: cw * 7, cy: scy, small: true },\n        [ArcadeGamepadButton.Select]: { cx: cw * 6, cy: scy, small: true },\n\n        [ArcadeGamepadButton.Exit]: { cx: cw * 8, cy: scy, small: true },\n        [ArcadeGamepadButton.Reset]: { cx: cw * 9, cy: scy, small: true },\n    }\n\n    const handleRefresh = async () => await pressedRegister.refresh();\n\n    const abx = cw * 8 + 1\n    const aby = ch * 3 + 4\n    const abr = cw / 2;\n    const abw = cw * 5 - 6;\n    return <SvgWidget width={w} height={h}>\n        <circle cx={cw * 3} cy={2 * ch} r={2.6 * cw} fill=\"none\" stroke={background} strokeWidth={4} />\n        <rect transform={`rotate(-66, ${abx}, ${aby})`} x={abx} y={aby} rx={abr} ry={abr} width={abw} height={cw * 2.2} fill=\"none\" stroke={background} strokeWidth={4} />\n        {available.map(button => ({ button: button[0], pos: pos[button[0]] }))\n            .map(({ button, pos }) => <ArcadeButton\n                key={button}\n                cx={pos.cx}\n                cy={pos.cy}\n                ro={pos.small ? sro : ro}\n                ri={pos.small ? sri : ri}\n                button={button}\n                host={host}\n                onRefresh={handleRefresh}\n                pressure={pressed?.find(p => p[0] === button)?.[1] || 0}\n                color={color}\n            />)}\n    </SvgWidget>\n}"],"sourceRoot":""}