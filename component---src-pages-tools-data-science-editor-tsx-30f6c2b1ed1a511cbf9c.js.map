{"version":3,"sources":["webpack://jacdac-docs/./src/components/blockly/jsonvisitor.ts","webpack://jacdac-docs/./src/components/data-science/DSBlockEditor.tsx","webpack://jacdac-docs/./src/pages/tools/data-science-editor.tsx"],"names":["visitBlock","block","visitor","inputs","children","forEach","input","visitInput","child","fields","Object","keys","map","k","visitField","name","field","visitWorkspace","workspace","blocks","DS_SOURCE_STORAGE_KEY","DSEditorWithContext","useContext","BlockContext","workspaceJSON","useEffect","console","log","type","value","Flags","DScienceEditor","dsls","useMemo","dataDsl","variablesDsl","shadowDsl","fieldsDsl","Page"],"mappings":"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","file":"component---src-pages-tools-data-science-editor-tsx-30f6c2b1ed1a511cbf9c.js","sourcesContent":["import { BlockJSON, FieldJSON, InputJSON, WorkspaceJSON } from \"./jsongenerator\"\n\nexport interface WorkspaceVisitor {\n    visitBlock?: (block: BlockJSON) => void\n    visitInput?: (input: InputJSON) => void\n    visitField?: (name: string, field: FieldJSON) => void\n}\n\nexport function visitBlock(block: BlockJSON, visitor: WorkspaceVisitor) {\n    if (!block) return\n    visitor.visitBlock?.(block)\n    const { inputs, children } = block\n    inputs?.forEach(input => visitInput(input, visitor))\n    children?.forEach(child => visitBlock(child, visitor))\n}\n\nexport function visitInput(input: InputJSON, visitor: WorkspaceVisitor) {\n    if (!input) return\n    visitor.visitInput?.(input)\n    const { fields, child } = input\n    if (fields) Object.keys(fields).map(k => visitField(k, fields[k], visitor))\n    visitBlock(child, visitor)\n}\n\nexport function visitField(\n    name: string,\n    field: FieldJSON,\n    visitor: WorkspaceVisitor\n) {\n    if (!field) return\n    visitor.visitField?.(name, field)\n}\n\nexport function visitWorkspace(\n    workspace: WorkspaceJSON,\n    visitor: WorkspaceVisitor\n) {\n    workspace?.blocks.forEach(block => visitBlock(block, visitor))\n}\n","import React, { useContext, useEffect, useMemo } from \"react\"\nimport { NoSsr } from \"@material-ui/core\"\nimport BlockContext, { BlockProvider } from \"../blockly/BlockContext\"\nimport BlockEditor from \"../blockly/BlockEditor\"\nimport dataDsl from \"../blockly/dsl/datadsl\"\nimport variablesDsl from \"../blockly/dsl/variablesdsl\"\nimport shadowDsl from \"../blockly/dsl/shadowdsl\"\nimport fieldsDsl from \"../blockly/dsl/fieldsdsl\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport BlockDiagnostics from \"../blockly/BlockDiagnostics\"\nimport { visitWorkspace } from \"../blockly/jsonvisitor\"\n\nconst DS_SOURCE_STORAGE_KEY = \"data-science-blockly-xml\"\n\nfunction DSEditorWithContext() {\n    // block context handles hosting blockly\n    const { workspaceJSON } = useContext(BlockContext)\n\n    // run this when workspaceJSON changes\n    useEffect(() => {\n        visitWorkspace(workspaceJSON, {\n            visitBlock: block => console.log(`block ${block.type}`, { block }),\n            visitInput: input => console.log(`input ${input.name}`, { input }),\n            visitField: (name, field) =>\n                console.log(`field ${name}: ${field.value}`, { field }),\n        })\n    }, [workspaceJSON])\n\n    return (\n        <>\n            <BlockEditor />\n            {Flags.diagnostics && <BlockDiagnostics />}\n        </>\n    )\n}\n\nexport default function DScienceEditor() {\n    const dsls = useMemo(() => {\n        return [dataDsl, variablesDsl, shadowDsl, fieldsDsl]\n    }, [])\n    return (\n        <NoSsr>\n            <BlockProvider storageKey={DS_SOURCE_STORAGE_KEY} dsls={dsls}>\n                <DSEditorWithContext />\n            </BlockProvider>\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport DSBlockEditor from \"../../components/data-science/DSBlockEditor\"\n\nexport default function Page() {\n    return <DSBlockEditor />\n}\n"],"sourceRoot":""}