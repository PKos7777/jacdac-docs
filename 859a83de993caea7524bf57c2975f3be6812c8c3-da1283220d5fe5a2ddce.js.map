{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","webpack:///./src/components/ui/CardMediaWithSkeleton.tsx","webpack:///./src/components/DeviceCardMedia.tsx","webpack:///./src/components/DeviceCardHeader.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack:///./jacdac-ts/src/test/testrunner.ts","webpack:///./src/components/test/ServiceTestRunner.tsx","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack:///./jacdac-ts/jacdac-spec/spectool/jdtest.ts","webpack:///./src/components/useGridBreakpoints.ts","webpack:///./node_modules/@material-ui/icons/PlayCircleFilled.js","webpack:///./jacdac-ts/jacdac-spec/spectool/jdtestfuns.ts","webpack:///./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./jacdac-ts/node_modules/jsep/build/jsep.js","webpack:///./jacdac-ts/src/test/testspec.ts","webpack:///./node_modules/@material-ui/icons/HourglassEmpty.js"],"names":["useStyles","makeStyles","theme","createStyles","media","height","paddingTop","CardMediaWithSkeleton","props","image","src","className","others","classes","hasImage","DeviceCardMedia","device","specification","useDeviceSpecification","imageUrl","useDeviceImage","name","DeviceFirmwareVersionChip","firmwareVersionRegister","service","register","ControlReg","FirmwareVersion","firmwareVersion","useRegisterStringValue","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","useRegisterIntValue","undefined","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","identifierToUrlPath","id","deviceId","filter","s","join","JDCommandStatus","JDTestStatus","commandStatusToTestStatus","status","Active","Passed","Failed","NotReady","RequiresUserInput","cmdToTestFunction","cmd","call","callee","testCommandFunctions","find","t","unparse","e","type","caller","arguments","map","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","start","exprStack","tos","length","eval","visitExpression","pop","push","r","v","le","lit","value","JDCommandEvaluator","command","_prompt","_progress","_status","_startExpressions","_rangeComplete","testFun","args","startExprs","getExpressionsOfType","ce","forEach","child","findIndex","exprEval","createPrompt","replace","a","i","aStart","toString","prompt","slice","p","evaluate","expr","ev","reg","regSaved","regValue","amt","amtSaved","begin","beginSaved","end","endSaved","JDCommandRunner","testRunner","_output","message","progress","_timeOut","_timeLeft","_commmandEvaluator","reset","output","envChange","finish","newOutput","cancel","finishCommand","emit","CHANGE","JDEventSource","JDTestRunner","serviceTestRunner","testSpec","commands","c","_description","description","_commandIndex","commandIndex","next","newStatus","currentCommand","index","JDServiceTestRunner","_testIndex","registers","environment","tests","serviceSpec","serviceSpecificationFromClassIdentifier","serviceClass","regName","pkt","packets","identifier","intValue","mount","subscribe","currentTest","stats","total","success","failed","indeterminate","test","testIndex","ct","indexOf","JDServiceClient","TestStatusIcon","useChange","TestListItem","onSelectTest","selected","handleSelectTest","TestList","CommandStatusIcon","CommandListItem","handleAnswer","FirstCommand","ActiveTest","handleRestart","handleNext","firstCommand","restOfCommands","useEffect","ServiceTestRunner","serviceTest","serviceTestFromServiceClass","factory","useCallback","useServiceClient","console","log","supportedExpressions","returnParent","results","visit","parent","current","Array","isArray","Object","keys","key","parseSpecificationTestMarkdownToJSON","filecontent","spec","filename","info","serviceClassIdentifier","classIdentifier","backticksType","errors","lineNo","testHeading","testPrompt","split","line","processLine","error","finishTest","trim","m","exec","interpret","hd","cont","expanded","processCommand","root","jsep","expected","arg","callers","callExpr","indexFun","testExpressionFunctions","callsUnder","exprs","visited","lookupReplace","lookup","property","val","parseIntFloat","getRegister","msg","some","file","useGridBreakpoints","itemCount","useContext","AppContext","drawerType","xs","sm","md","lg","xl","DrawerType","None","_serviceTests","serviceTestData"],"mappings":"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D,eAAe,4DAAI,wEAAwE,yEAAU;AACrG;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,SAAM;AAC/B,mIAAU;AACzB;AACA,CAAC,gBAAgB,E;;;;;;;;ACxEjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgC;AAC3D;AACP;AACsB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gDAAgB;AAC/C;AACA;AACA;AACA;AACA,cAAc,0GAAwB;;AAEtC,sBAAsB,mDAAmB,QAAQ,0FAAQ;AACzD,eAAe,4DAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,SAAM;AAC/B,mIAAU;AACzB;AACA,CAAC,cAAc,E;;;;;;;ACnCf;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC;AAChC,GAAG;AACH;AACA;AACA;AACA;AACA,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,6EAA6E;AAC7E;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA,2BAA2B;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAI;;;AAGJ,MAAM,KAA8B,EAAE,iBAYnC;AACH;AACA,QAAQ,KAA6B;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,Q;;;;;;;;ACpzBD;AAAA;AAAA;AAAA;AACA;AACA;AACA;CAIA;;AACA,IAAMoP,aAAuC,GAAGC,kEAAhD;AAEA;AACA;AACA;AACA;;AACO,SAAS3E,2BAAT,CACHtC,YADG,EAEmB;AACtB,SACIA,YAAY,KAAKpI,SAAjB,IACAoP,aAAa,CAACzN,IAAd,CAAmB,UAAAuH,IAAI;AAAA,WAAIA,IAAI,CAAC8C,sBAAL,KAAgC5D,YAApC;AAAA,GAAvB,CAFJ;AAIH,C;;;;;;;;ACrBY;;AAEb,6BAA6B,mBAAO,CAAC,MAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,MAA+C;;AAErF;AACA;AACA,CAAC;AACD;;AAEA,oCAAoC,mBAAO,CAAC,MAAO;;AAEnD,4CAA4C,mBAAO,CAAC,MAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,2B","file":"859a83de993caea7524bf57c2975f3be6812c8c3-da1283220d5fe5a2ddce.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { CardMedia, CardMediaProps, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        height: 0,\n        paddingTop: '75%', // 4:3\n    }\n}));\n\n/*\n        [theme.breakpoints.down('lg')]: {\n            paddingTop: '56.72%', // 16:9\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingTop: '18%',\n        },\n        [theme.breakpoints.down('md')]: { // 6:3\n            paddingTop: '50%',\n        }\n*/\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props;\n    const classes = useStyles();\n    const hasImage = !!image || !!src;\n    return hasImage ?\n        <CardMedia className={className || classes.media} {...others} image={image} src={src} />\n        : <></>;\n}","import React from \"react\";\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\";\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\";\nimport useDeviceImage from \"./devices/useDeviceImage\";\nimport CardMediaWithSkeleton from \"./ui/CardMediaWithSkeleton\";\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props;\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification)\n\n    return <CardMediaWithSkeleton\n        image={imageUrl}\n        title={specification?.name}\n    />\n}","import { ControlReg } from \"../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport {\n    useRegisterIntValue,\n    useRegisterStringValue,\n} from \"../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./devices/DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./devices/DeviceAvatar\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = device\n        ?.service(0)\n        ?.register(ControlReg.FirmwareVersion)\n    const firmwareVersion = useRegisterStringValue(firmwareVersionRegister)\n\n    return (\n        (firmwareVersion && <Chip size=\"small\" label={firmwareVersion} />) || (\n            <></>\n        )\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = device?.service(0)?.register(ControlReg.McuTemperature)\n    const temperature = useRegisterIntValue(tempRegister)\n    return (\n        (temperature !== undefined && (\n            <Chip size=\"small\" label={`${temperature}°`} />\n        )) || <></>\n    )\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={<DeviceActions device={device} showReset={true} />}\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n    Commands,\n    testCommandFunctions,\n} from \"../../jacdac-spec/spectool/jdtestfuns\"\nimport { getExpressionsOfType } from \"../../jacdac-spec/spectool/jdtest\"\n\nimport { CHANGE } from \"../jdom/constants\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { JDService } from \"../jdom/service\"\nimport { JDRegister } from \"../jdom/register\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { serviceSpecificationFromClassIdentifier } from \"../jdom/spec\"\n\nexport enum JDCommandStatus {\n    NotReady,\n    Active,\n    RequiresUserInput,\n    Passed,\n    Failed,\n}\n\nexport enum JDTestStatus {\n    NotReady,\n    Active,\n    Passed,\n    Failed,\n}\n\nfunction commandStatusToTestStatus(status: JDCommandStatus) {\n    switch (status) {\n        case JDCommandStatus.Active:\n            return JDTestStatus.Active\n        case JDCommandStatus.Passed:\n            return JDTestStatus.Passed\n        case JDCommandStatus.Failed:\n            return JDTestStatus.Failed\n        case JDCommandStatus.NotReady:\n            return JDTestStatus.NotReady\n        case JDCommandStatus.RequiresUserInput:\n            return JDTestStatus.Active\n    }\n}\n\nfunction cmdToTestFunction(cmd: jdtest.CommandSpec) {\n    const id = (<jsep.Identifier>cmd.call.callee).name\n    return testCommandFunctions.find(t => t.id == id)\n}\n\nfunction unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\ntype SMap<T> = { [v: string]: T }\ntype StartMap = { e: jsep.Expression; v: any }[]\n\nclass JDExprEvaluator {\n    private exprStack: any[] = []\n\n    constructor(private env: SMap<any>, private start: StartMap) {}\n\n    private tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    private visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"CallExpression\": {\n                const caller = <jsep.CallExpression>e\n                const callee = <jsep.Identifier>caller.callee\n                switch (callee.name) {\n                    case \"start\":\n                        this.exprStack.push(\n                            this.start.find(r => r.e === caller).v\n                        )\n                        return\n                    default: // ERROR\n                }\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\":\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        break\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        break\n                    default:\n                }\n                break\n            }\n\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                this.exprStack.push(this.env[id.name])\n                break\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                break\n            }\n            default:\n        }\n    }\n}\n\nclass JDCommandEvaluator {\n    private _prompt = \"\"\n    private _progress = \"\"\n    private _status = JDCommandStatus.Active\n    private _startExpressions: StartMap = []\n    private _rangeComplete: number = undefined\n\n    constructor(\n        private readonly env: SMap<any>,\n        private readonly command: jdtest.CommandSpec\n    ) {}\n\n    public get prompt() {\n        return this._prompt\n    }\n    public get status() {\n        return this._status\n    }\n    public get progress() {\n        return this._progress\n    }\n\n    public start() {\n        this._startExpressions = []\n        const testFun = cmdToTestFunction(this.command)\n        const args = this.command.call.arguments\n        let startExprs: jsep.Expression[] = []\n        switch (testFun.id as Commands) {\n            case \"check\": {\n                startExprs = (<jsep.CallExpression[]>getExpressionsOfType(args,'CallExpression'))\n                    .filter(ce => (<jsep.Identifier>ce.callee).name === \"start\")\n                    .map(ce => ce.arguments[0])\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                startExprs.push(args[0])\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                startExprs.push(args[0])\n                startExprs.push(args[1])\n                break\n            }\n            case \"rangesFromUpTo\":\n            case \"rangesFromDownTo\": {\n                startExprs.push(args[1])\n                startExprs.push(args[2])\n                break\n            }\n        }\n        // evaluate the start expressions and store the results\n        startExprs.forEach(child => {\n            if (this._startExpressions.findIndex(r => r.e === child) < 0) {\n                const exprEval = new JDExprEvaluator(this.env, [])\n                this._startExpressions.push({\n                    e: child,\n                    v: exprEval.eval(child),\n                })\n            }\n        })\n        this.createPrompt()\n    }\n\n    private createPrompt() {\n        const testFun = cmdToTestFunction(this.command)\n        const replace = this.command.call.arguments.map((a, i) => {\n            const aStart = this._startExpressions.find(r => r.e === a)\n            return [\n                `{${i + 1}}`,\n                aStart && testFun.args[i] !== \"register\"\n                    ? aStart.v.toString()\n                    : unparse(a),\n            ]\n        })\n        this._prompt =\n            testFun.id === \"ask\" || testFun.id === \"say\"\n                ? this.command.prompt.slice(0)\n                : testFun.prompt.slice(0)\n        replace.forEach(p => (this._prompt = this._prompt.replace(p[0], p[1])))\n    }\n\n    public evaluate() {\n        const testFun = cmdToTestFunction(this.command)\n        this._status = JDCommandStatus.Active\n        this._progress = \"\"\n        switch (testFun.id as Commands) {\n            case \"say\":\n            case \"ask\": {\n                this._status =\n                    testFun.id === \"say\"\n                        ? JDCommandStatus.Passed\n                        : JDCommandStatus.RequiresUserInput\n                break\n            }\n            case \"check\": {\n                const expr = new JDExprEvaluator(\n                    this.env,\n                    this._startExpressions\n                )\n                const ev = expr.eval(this.command.call.arguments[0])\n                this._status = ev\n                    ? JDCommandStatus.Passed\n                    : JDCommandStatus.Active\n                break\n            }\n            case \"changes\":\n            case \"increases\":\n            case \"decreases\": {\n                const reg = this.command.call.arguments[0]\n                const regSaved = this._startExpressions.find(r => r.e === reg)\n                const regValue = this.env[unparse(reg)]\n                const status =\n                    (testFun.id === \"changes\" && regValue !== regSaved.v) ||\n                    (testFun.id === \"increases\" && regValue > regSaved.v) ||\n                    (testFun.id === \"decreases\" && regValue < regSaved.v)\n                        ? JDCommandStatus.Passed\n                        : JDCommandStatus.Active\n                this._status = status\n                regSaved.v = regValue\n                break\n            }\n            case \"increasesBy\":\n            case \"decreasesBy\": {\n                const reg = this.command.call.arguments[0]\n                const regSaved = this._startExpressions.find(r => r.e === reg)\n                const amt = this.command.call.arguments[1]\n                const amtSaved = this._startExpressions.find(r => r.e === amt)\n                const regValue = this.env[unparse(reg)]\n                if (testFun.id === \"increasesBy\") {\n                    if (regValue === regSaved.v + amtSaved.v) {\n                        this._status = JDCommandStatus.Passed\n                    } else if (\n                        regValue >= regSaved.v &&\n                        regValue < regSaved.v + amtSaved.v\n                    ) {\n                        this._status = JDCommandStatus.Active\n                        this._progress = `${(regValue - regSaved.v)} out of ${amtSaved.v}`\n                    } else {\n                        this._status = JDCommandStatus.Active\n                    }\n                } else {\n                    if (regValue === regSaved.v - amtSaved.v) {\n                        this._status = JDCommandStatus.Passed\n                        this._progress = \"completed\"\n                    } else if (\n                        regValue <= regSaved.v &&\n                        regValue > regSaved.v - amtSaved.v\n                    ) {\n                        this._status = JDCommandStatus.Active\n                        this._progress = `${(regSaved.v - regValue)} out of ${amtSaved.v}`\n                    } else {\n                        this._status = JDCommandStatus.Active\n                    }\n                }\n                break\n            }\n            case \"rangesFromUpTo\":\n            case \"rangesFromDownTo\": {\n                this._status = JDCommandStatus.Active\n                const reg = this.command.call.arguments[0]\n                const regValue = this.env[unparse(reg)]\n                const begin = this.command.call.arguments[1]\n                const beginSaved = this._startExpressions.find(r => r.e === begin)\n                const end = this.command.call.arguments[2]\n                const endSaved = this._startExpressions.find(r => r.e === end)\n                if (this._rangeComplete === undefined) {\n                    if (regValue == beginSaved.v)\n                        this._rangeComplete = regValue\n                } else {\n                    if (regValue === this._rangeComplete + (testFun.id == 'rangesFromUpTo' ? 1 : -1))\n                        this._rangeComplete = regValue\n                    if (this._rangeComplete === endSaved.v) {\n                        this._status =  JDCommandStatus.Passed\n                    }\n                }\n                if (this._rangeComplete != undefined) {\n                    this._progress = \n                        testFun.id == 'rangesFromUpTo' \n                            ? `from ${(beginSaved.v)} up to ${this._rangeComplete}`\n                            : `from ${(beginSaved.v)} down to ${this._rangeComplete}`\n                }\n                break\n            }\n        }\n    }\n}\n\nexport interface JDCommandOutput {\n    message: string\n    progress: string\n}\n\nexport class JDCommandRunner extends JDEventSource {\n    private _status = JDCommandStatus.NotReady\n    private _output: JDCommandOutput = { message: \"\", progress: \"\" }\n    private readonly _timeOut = 5000 // timeout\n    private _timeLeft = 5000\n    private _commmandEvaluator: JDCommandEvaluator = null\n\n    constructor(\n        private readonly testRunner: JDTestRunner,\n        private readonly env: SMap<any>,\n        private readonly command: jdtest.CommandSpec\n    ) {\n        super()\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDCommandStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDCommandStatus.Failed &&\n            this.status !== JDCommandStatus.Passed\n        )\n    }\n\n    get output() {\n        return this._output\n    }\n\n    set output(value: JDCommandOutput) {\n        if (\n            !this._output ||\n            this._output.message !== value.message ||\n            this._output.progress !== value.progress\n        ) {\n            this._output = value\n            this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.output = { message: \"\", progress: \"\" }\n        this.status = JDCommandStatus.NotReady\n        this._commmandEvaluator = null\n    }\n\n    start() {\n        this.status = JDCommandStatus.Active\n        this._commmandEvaluator = new JDCommandEvaluator(this.env, this.command)\n        this._commmandEvaluator.start()\n        this.envChange(false)\n        this.envChange(true)\n    }\n\n    envChange(finish = true) {\n        if (this._commmandEvaluator) {\n            this._commmandEvaluator.evaluate()\n            const newOutput: JDCommandOutput = {\n                message: this._commmandEvaluator.prompt,\n                progress: this._commmandEvaluator.progress,\n            }\n            this.output = newOutput\n            if (this._commmandEvaluator.status === JDCommandStatus.RequiresUserInput)\n                this.status= JDCommandStatus.RequiresUserInput\n            else if (finish) \n                this.finish(this._commmandEvaluator.status)\n        }\n    }\n\n    cancel() {\n        this.finish(JDCommandStatus.Failed)\n    }\n\n    finish(s: JDCommandStatus) {\n        if (\n            (s === JDCommandStatus.Failed || s === JDCommandStatus.Passed) &&\n            (this.status === JDCommandStatus.Active ||\n                this.status === JDCommandStatus.RequiresUserInput)\n        ) {\n            this.status = s\n            this.testRunner.finishCommand()\n        }\n    }\n}\n\nexport class JDTestRunner extends JDEventSource {\n    private _status = JDTestStatus.NotReady\n    private _description: string\n    private _commandIndex: number\n    public readonly commands: JDCommandRunner[]\n\n    constructor(\n        private readonly serviceTestRunner: JDServiceTestRunner,\n        private readonly env: SMap<any>,\n        private readonly testSpec: jdtest.TestSpec\n    ) {\n        super()\n        this.commands = testSpec.commands.map(\n            c => new JDCommandRunner(this, this.env, c)\n        )\n        this._description = testSpec.description\n    }\n\n    reset() {\n        if (this.status !== JDTestStatus.NotReady) {\n            this._status = JDTestStatus.NotReady\n            this._commandIndex = undefined\n            this.commands.forEach(t => t.reset())\n            this.emit(CHANGE)\n        }\n    }\n\n    start() {\n        this.reset()\n        this.status = JDTestStatus.Active\n        this.commandIndex = 0\n    }\n\n    next() {\n        this.serviceTestRunner.next()\n    }\n\n    cancel() {\n        this.finish(JDTestStatus.Failed)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: JDTestStatus) {\n        if (s != this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    get indeterminate(): boolean {\n        return (\n            this.status !== JDTestStatus.Failed &&\n            this.status !== JDTestStatus.Passed\n        )\n    }\n\n    get description() {\n        return this._description\n    }\n\n    finish(newStatus: JDTestStatus) {\n        if (this.status === JDTestStatus.Active) {\n            this.status = newStatus\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    private set commandIndex(index: number) {\n        if (this._commandIndex !== index) {\n            this._commandIndex = index\n            this.currentCommand?.start()\n            this.emit(CHANGE)\n        }\n    }\n\n    public envChange() {\n        this.currentCommand?.envChange()\n    }\n\n    public finishCommand() {\n        if (this.commandIndex === this.commands.length - 1)\n            this.finish(commandStatusToTestStatus(this.currentCommand.status))\n        // (this.commandIndex < this.commands.length)\n        else this.commandIndex++\n    }\n\n    get currentCommand() {\n        return this.commands[this._commandIndex]\n    }\n}\n\nexport class JDServiceTestRunner extends JDServiceClient {\n    private _testIndex = -1\n    private registers: SMap<JDRegister> = {}\n    private environment: SMap<number> = {}\n    public readonly tests: JDTestRunner[]\n\n    constructor(\n        public readonly testSpec: jdtest.ServiceTestSpec,\n        service: JDService\n    ) {\n        super(service)\n        this.tests = this.testSpec.tests.map(\n            t => new JDTestRunner(this, this.environment, t)\n        )\n        const serviceSpec = serviceSpecificationFromClassIdentifier(\n            service.serviceClass\n        )\n        this.testSpec.tests.forEach(t => {\n            t.registers.forEach(regName => {\n                if (!this.registers[regName]) {\n                    const pkt = serviceSpec.packets.find(\n                        pkt => pkt.name === regName\n                    )\n                    const register = service.register(pkt.identifier)\n                    this.registers[regName] = register\n                    this.environment[regName] = register.intValue\n                    this.mount(\n                        register.subscribe(CHANGE, () => {\n                            this.environment[regName] = register.intValue\n                            this.currentTest?.envChange()\n                        })\n                    )\n                }\n            })\n        })\n        this.start()\n    }\n\n    private get testIndex() {\n        return this._testIndex\n    }\n\n    private set testIndex(index: number) {\n        if (this._testIndex !== index) {\n            // stop previous test if needed\n            const ct = this.currentTest\n            if (ct) {\n                if (ct.status === JDTestStatus.Active) {\n                    ct.cancel()\n                }\n            }\n\n            // update test\n            this._testIndex = index\n            this.emit(CHANGE)\n        }\n    }\n\n    public stats() {\n        const r = {\n            total: this.tests.length,\n            success: 0,\n            failed: 0,\n            indeterminate: 0,\n        }\n        for (const test of this.tests) {\n            switch (test.status) {\n                case JDTestStatus.Failed:\n                    r.failed++\n                    break\n                case JDTestStatus.Passed:\n                    r.success++\n                    break\n                default:\n                    r.indeterminate++\n            }\n        }\n        return r\n    }\n\n    public start() {\n        this.tests.forEach(t => t.reset())\n        this.testIndex = 0\n    }\n\n    public next() {\n        this.testIndex++\n    }\n\n    get currentTest() {\n        return this.tests[this._testIndex]\n    }\n\n    set currentTest(test: JDTestRunner) {\n        const index = this.tests.indexOf(test)\n        if (index > -1) this.testIndex = index\n    }\n}\n","import React, { useCallback, useEffect } from \"react\"\nimport useServiceClient from \"../useServiceClient\"\nimport {\n    Grid,\n    Button,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    Typography,\n    Card,\n    CardContent,\n    CardActions,\n    Box,\n    ListSubheader,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    JDServiceTestRunner,\n    JDTestRunner,\n    JDTestStatus,\n    JDCommandRunner,\n    JDCommandStatus,\n} from \"../../../jacdac-ts/src/test/testrunner\"\nimport ErrorIcon from \"@material-ui/icons/Error\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashboardDevice from \"../dashboard/DashboardDevice\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { serviceTestFromServiceClass } from \"../../../jacdac-ts/src/test/testspec\"\n\nfunction TestStatusIcon(props: { test: JDTestRunner }) {\n    const { test } = props\n    const status = useChange(test, t => t.status)\n\n    switch (status) {\n        case JDTestStatus.Active:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDTestStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDTestStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction TestListItem(props: {\n    test: JDTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { test, currentTest, onSelectTest } = props\n    const description = useChange(test, t => t.description)\n    const selected = test === currentTest\n    const handleSelectTest = () => onSelectTest(test)\n\n    return (\n        <ListItem selected={selected} button onClick={handleSelectTest}>\n            <ListItemIcon>\n                <TestStatusIcon test={test} />\n            </ListItemIcon>\n            <ListItemText primary={description} />\n        </ListItem>\n    )\n}\n\nfunction TestList(props: {\n    testRunner: JDServiceTestRunner\n    currentTest: JDTestRunner\n    onSelectTest: (test: JDTestRunner) => void\n}) {\n    const { testRunner, currentTest, onSelectTest } = props\n    const { tests } = testRunner\n    const stats = useChange(testRunner, r => r.stats())\n\n    return (\n        <Card>\n            <CardContent>\n                <List\n                    dense={true}\n                    subheader={\n                        <ListSubheader>\n                            {`${stats.total} tests, ${stats.success} success, ${stats.failed} failed`}\n                        </ListSubheader>\n                    }\n                >\n                    {tests?.map((test, i) => (\n                        <TestListItem\n                            key={i}\n                            test={test}\n                            currentTest={currentTest}\n                            onSelectTest={onSelectTest}\n                        />\n                    ))}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CommandStatusIcon(props: { command: JDCommandRunner }) {\n    const { command } = props\n    const status = useChange(command, c => c.status)\n\n    switch (status) {\n        case JDCommandStatus.Active:\n        case JDCommandStatus.RequiresUserInput:\n            return <PlayCircleFilledIcon color=\"action\" />\n        case JDCommandStatus.Failed:\n            return <ErrorIcon color=\"error\" />\n        case JDCommandStatus.Passed:\n            return <CheckCircleIcon color=\"primary\" />\n        default:\n            return <HourglassEmptyIcon color=\"disabled\" />\n    }\n}\n\nfunction CommandListItem(props: { command: JDCommandRunner }) {\n    const { command } = props\n    const { message, progress } = useChange(command, c => c.output)\n    const status = useChange(command, c => c.status)\n    const handleAnswer = (status: JDCommandStatus) => () =>\n        command.finish(status)\n    return (\n        <ListItem selected={status === JDCommandStatus.Active}>\n            <ListItemIcon>\n                <CommandStatusIcon command={command} />\n            </ListItemIcon>\n            <ListItemText\n                primary={message}\n                secondary={progress}\n            />\n            {status === JDCommandStatus.RequiresUserInput && (\n                <ListItemSecondaryAction>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleAnswer(JDCommandStatus.Passed)}\n                    >\n                        Yes\n                    </Button>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleAnswer(JDCommandStatus.Failed)}\n                    >\n                        No\n                    </Button>\n                </ListItemSecondaryAction>\n            )}\n        </ListItem>\n    )\n}\n\nfunction FirstCommand(props: { command: JDCommandRunner }) {\n    const { command } = props\n    const { message } = useChange(command, c => c.output)\n    return (\n        <Box m={2}>\n            <Typography variant=\"body1\">{message}</Typography>\n        </Box>\n    )\n}\n\nfunction ActiveTest(props: { test: JDTestRunner }) {\n    const { test } = props\n    const { commands } = test\n    const status = useChange(test, t => t.status)\n    const handleRestart = () => test.start()\n    const handleNext = () => test.next()\n    const [firstCommand, ...restOfCommands] = commands\n    // auto start\n    useEffect(() => test.start(), [test])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">WHEN</Typography>\n                <FirstCommand command={firstCommand} />\n                <Typography variant=\"h5\">TEST</Typography>\n                <List dense={false}>\n                    {restOfCommands.map((cmd, i) => (\n                        <CommandListItem key={i} command={cmd} />\n                    ))}\n                </List>\n                {status === JDTestStatus.Passed && (\n                    <Alert severity=\"success\">Test passed</Alert>\n                )}\n                {status === JDTestStatus.Failed && (\n                    <Alert severity=\"error\">Test failed</Alert>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant={\n                        status === JDTestStatus.Active\n                            ? \"outlined\"\n                            : \"contained\"\n                    }\n                    color={\n                        status === JDTestStatus.Passed ? \"primary\" : undefined\n                    }\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n                <Button variant=\"outlined\" onClick={handleRestart}>\n                    Restart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function ServiceTestRunner(props: {\n    service: JDService\n    serviceTest?: jdtest.ServiceTestSpec\n}) {\n    const {\n        service,\n        serviceTest = serviceTestFromServiceClass(service.serviceClass),\n    } = props\n    const factory = useCallback(\n        service => serviceTest && new JDServiceTestRunner(serviceTest, service),\n        [service, serviceTest]\n    )\n    const testRunner = useServiceClient(service, factory)\n    const currentTest = useChange(testRunner, t => t?.currentTest)\n    const handleSelectTest = (test: JDTestRunner) => {\n        console.log({ test })\n        testRunner.currentTest = test\n    }\n\n    if (!serviceTest)\n        return (\n            <Alert severity=\"warning\">\n                Sorry, there are no tests available for service{\" \"}\n                {service.specification.name}.\n            </Alert>\n        )\n\n    if (!testRunner) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs>\n                <TestList\n                    testRunner={testRunner}\n                    currentTest={currentTest}\n                    onSelectTest={handleSelectTest}\n                />\n            </Grid>\n            {currentTest && (\n                <Grid item xs>\n                    <ActiveTest test={currentTest} />\n                </Grid>\n            )}\n            {service && (\n                <Grid item xs>\n                    <DashboardDevice\n                        showAvatar={true}\n                        showHeader={true}\n                        device={service.device}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdspec.d.ts\" />\n/// <reference path=\"jdtest.d.ts\" />\n\nimport { parseIntFloat, getRegister } from \"./jdutils\"\nimport { testCommandFunctions, testExpressionFunctions } from \"./jdtestfuns\"\nimport jsep, { ExpressionType } from \"jsep\"\n\nconst supportedExpressions: ExpressionType[] = [\n    \"BinaryExpression\",\n    \"CallExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\nexport function getExpressionsOfType(expr: jsep.Expression | jsep.Expression[], type: string, returnParent = false) {\n    const results: jsep.Expression[] = []\n    visit(null, expr)\n    return results\n\n    function visit(parent: any, current: any) {\n        if (Array.isArray(current)) {\n            (current as any[]).forEach(c => visit(current, c))\n        } else if (typeof current === \"object\") {\n            if (parent && current?.type === type)\n                results.push(returnParent ? parent : current)\n            Object.keys(current).forEach((key: string) => {\n                visit(current, current[key])\n            })\n        }\n    }\n}\n\n// we parse a test with respect to an existing ServiceSpec\nexport function parseSpecificationTestMarkdownToJSON(\n    filecontent: string,\n    spec: jdspec.ServiceSpec,\n    filename = \"\"\n): jdtest.ServiceTestSpec {\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: jdtest.ServiceTestSpec = {\n        description: \"\",\n        serviceClassIdentifier: spec.classIdentifier,\n        tests: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentTest: jdtest.TestSpec = null\n    let testHeading = \"\"\n    let testPrompt = \"\"\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentTest) finishTest()\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" || line.slice(0, 4) == \"    \"\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                testHeading = \"\"\n                testPrompt = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\" && !info.description) {\n                    info.description = cont.trim()\n                } else if (hd == \"##\") {\n                    if (currentTest) finishTest()\n                    testHeading = cont.trim()\n                }\n            } else {\n                testPrompt += line\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function processCommand(expanded: string) {\n        if (!currentTest) {\n            if (!testHeading)\n                error(`every test must have a description (via ##)`)\n            currentTest = {\n                description: testHeading,\n                registers: [],\n                commands: [],\n            }\n            testHeading = \"\"\n        }\n        const call = /^([a-zA-Z]\\w*)\\(.*\\)$/.exec(expanded)\n        if (!call) {\n            error(\n                `a command must be a call to a registered test function (JavaScript syntax)`\n            )\n            return\n        }\n        const [, callee] = call\n        const index = testCommandFunctions.findIndex(r => callee == r.id)\n        if (index < 0) {\n            error(`${callee} is not a registered test command function.`)\n            return\n        }\n        const root: jsep.CallExpression = <jsep.CallExpression>jsep(expanded)\n        if (\n            !root ||\n            !root.type ||\n            root.type != \"CallExpression\" ||\n            !root.callee ||\n            !root.arguments\n        ) {\n            error(`a command must be a call expression in JavaScript syntax`)\n        } else {\n            // check for unsupported expression types\n            if (supportedExpressions.indexOf(root.type) < 0)\n                error(`Expression of type ${root.type} not currently supported`)\n            // check arguments\n            const expected = testCommandFunctions[index].args.length\n            if (expected !== root.arguments.length)\n                error(\n                    `${callee} expects ${expected} arguments; got ${root.arguments.length}`\n                )\n            else {\n                root.arguments.forEach((arg,a) => {\n                    if (testCommandFunctions[index].args[a] === \"register\" && arg.type !== \"Identifier\") {\n                        error (\n                            `${callee} expects a register in argument position ${a+1}`\n                        )\n                    }\n                })\n                const callers = <jsep.CallExpression[]>getExpressionsOfType(root,'CallExpression')\n                callers.forEach(callExpr => {\n                    if (callExpr.callee.type !== \"Identifier\")\n                        error(`all calls must be direct calls`)\n                    const id = (<jsep.Identifier>callExpr.callee).name\n                    const indexFun = testExpressionFunctions.findIndex(\n                        r => id == r.id\n                    )\n                    if (indexFun < 0)\n                        error(\n                            `${id} is not a registered test expression function.`\n                        )\n                    if (id === 'start') {\n                        if (callee !== 'check')\n                            error(\"start expression function can only be used inside check test function\")\n                        const callsUnder = <jsep.CallExpression[]>getExpressionsOfType(callExpr,'CallExpression')\n                        callsUnder.forEach(ce => {\n                            if (ce.callee.type === \"Identifier\" && (<jsep.Identifier>ce.callee).name === \"start\")\n                                error(\"cannot nest start underneath start\")\n                        })\n                    }\n                    const expected =\n                        testExpressionFunctions[indexFun].args.length\n                    if (expected !== callExpr.arguments.length)\n                        error(\n                            `${callee} expects ${expected} arguments; got ${callExpr.arguments.length}`\n                        )\n                })\n            }\n            // now visit all (p,c), c an Identifier that is not a callee child of CallExpression\n            // or a property child of a MemberExpression\n            const exprs = <any[]>getExpressionsOfType(root, 'Identifier', true)\n            let visited: any[] = []\n            exprs.forEach(parent => {\n                if (visited.indexOf(parent) < 0) {\n                    visited.push(parent)\n                    lookupReplace(parent)\n                }\n            })\n            currentTest.commands.push({ prompt: testPrompt, call: root })\n            testPrompt = \"\"\n        }\n    }\n\n    function lookupReplace(parent: any) {\n        if (Array.isArray(parent)) {\n            const exprs: jsep.Expression[] = parent\n            exprs.forEach((child: jsep.Expression) => {\n                if (child.type === \"Identifier\")\n                    lookup(parent, <jsep.Identifier>child)\n            })\n        } else {\n            Object.keys(parent).forEach((key: string) => {\n                const child = parent[key]\n                if (child?.type !== \"Identifier\") return\n                if (\n                    (parent.type !== \"MemberExpression\" &&\n                        parent.type !== \"CallExpression\") ||\n                    (parent.type === \"MemberExpression\" &&\n                        child !== (<jsep.MemberExpression>parent).property) ||\n                    (parent.type === \"CallExpression\" &&\n                        child !== (<jsep.CallExpression>parent).callee)\n                ) {\n                    lookup(parent, <jsep.Identifier>child)\n                }\n            })\n        }\n\n        function lookup(parent: any, child: jsep.Identifier) {\n            try {\n                try {\n                    const val = parseIntFloat(spec, child.name)\n                    const lit: jsep.Literal = {\n                        type: \"Literal\",\n                        value: val,\n                        raw: val.toString(),\n                    }\n                    /*TODO: replace the Identifier by the (resolved) Literal\n                    if (parent.type) {\n                        Object.keys(parent).forEach((key:string) => {\n                            if (Object.getOwnPropertyDescriptor(parent,key) == child)\n                                Object.defineProperty(parent, key, lit);\n                        })\n                    } else {\n    \n                    }*/\n                } catch (e) {\n                    getRegister(spec, child.name)\n                    if (currentTest.registers.indexOf(child.name) < 0)\n                        currentTest.registers.push(child.name)\n                    // TODO: if parent is MemberExpression, continue to do lookup\n                }\n            } catch (e) {\n                error(`${child.name} not found in specification`)\n            }\n        }\n    }\n\n    function finishTest() {\n        info.tests.push(currentTest)\n        currentTest = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\n\nexports.default = _default;","/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"jdtest.d.ts\" />\n\nexport type Commands =\n    | \"reset\"\n    | \"changes\"\n    | \"ask\"\n    | \"say\"\n    | \"check\"\n    | \"increases\"\n    | \"decreases\"\n    | \"increasesBy\"\n    | \"decreasesBy\"\n    | \"rangesFromUpTo\"\n    | \"rangesFromDownTo\"\n\nexport const testCommandFunctions: jdtest.TestFunctionDescription[] = [\n    { id: \"reset\", args: [], prompt: \"sends a reset command to the module\" },\n    { id: \"changes\", args: [\"register\"], prompt: `did the value of {1} change?` },\n    { id: \"say\", args: [], prompt: undefined },\n    { id: \"ask\", args: [], prompt: undefined },\n    { id: \"check\", args: [\"boolean\"], prompt: `does the condition {1} hold?` },\n    {\n        id: \"increases\",\n        args: [\"register\"],\n        prompt: `did the value of register {1} increase?`,\n    },\n    {\n        id: \"decreases\",\n        args: [\"register\"],\n        prompt: `did the value of register {1} decrease?`,\n    },\n    {\n        id: \"increasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `did the value of register {1} increase by {2}?`,\n    },\n    {\n        id: \"decreasesBy\",\n        args: [\"register\", \"number\"],\n        prompt: `did the value of register {1} decrease by {2}?`,\n    },\n    {\n        id: \"rangesFromUpTo\",\n        args: [\"register\", \"number\", \"number\"],\n        prompt: `register {1} should range in value from {2} up to {3}`,\n    },\n    {\n        id: \"rangesFromDownTo\",\n        args: [\"register\", \"number\", \"number\"],\n        prompt: `register {1} should range in value from {2} down to {3}`,\n    },\n]\n\nexport const testExpressionFunctions: jdtest.TestFunctionDescription[] = [\n    { id: \"start\", args: [\"any\"], prompt: undefined },\n]\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","//     JavaScript Expression Parser (JSEP) 0.3.5\n//     JSEP may be freely distributed under the MIT License\n//     https://ericsmekens.github.io/jsep/\n\n/*global module: true, exports: true, console: true */\n(function (root) {\n  'use strict'; // Node Types\n  // ----------\n  // This is the full set of types that any JSEP node can be.\n  // Store them here to save space when minified\n\n  var COMPOUND = 'Compound',\n      IDENTIFIER = 'Identifier',\n      MEMBER_EXP = 'MemberExpression',\n      LITERAL = 'Literal',\n      THIS_EXP = 'ThisExpression',\n      CALL_EXP = 'CallExpression',\n      UNARY_EXP = 'UnaryExpression',\n      BINARY_EXP = 'BinaryExpression',\n      LOGICAL_EXP = 'LogicalExpression',\n      CONDITIONAL_EXP = 'ConditionalExpression',\n      ARRAY_EXP = 'ArrayExpression',\n      PERIOD_CODE = 46,\n      // '.'\n  COMMA_CODE = 44,\n      // ','\n  SQUOTE_CODE = 39,\n      // single quote\n  DQUOTE_CODE = 34,\n      // double quotes\n  OPAREN_CODE = 40,\n      // (\n  CPAREN_CODE = 41,\n      // )\n  OBRACK_CODE = 91,\n      // [\n  CBRACK_CODE = 93,\n      // ]\n  QUMARK_CODE = 63,\n      // ?\n  SEMCOL_CODE = 59,\n      // ;\n  COLON_CODE = 58,\n      // :\n  throwError = function throwError(message, index) {\n    var error = new Error(message + ' at character ' + index);\n    error.index = index;\n    error.description = message;\n    throw error;\n  },\n      // Operations\n  // ----------\n  // Set `t` to `true` to save space (when minified, not gzipped)\n  t = true,\n      // Use a quickly-accessible map to store all of the unary operators\n  // Values are set to `true` (it really doesn't matter)\n  unary_ops = {\n    '-': t,\n    '!': t,\n    '~': t,\n    '+': t\n  },\n      // Also use a map for the binary operations but set their values to their\n  // binary precedence for quick reference:\n  // see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\n  binary_ops = {\n    '||': 1,\n    '&&': 2,\n    '|': 3,\n    '^': 4,\n    '&': 5,\n    '==': 6,\n    '!=': 6,\n    '===': 6,\n    '!==': 6,\n    '<': 7,\n    '>': 7,\n    '<=': 7,\n    '>=': 7,\n    '<<': 8,\n    '>>': 8,\n    '>>>': 8,\n    '+': 9,\n    '-': 9,\n    '*': 10,\n    '/': 10,\n    '%': 10\n  },\n      // Get return the longest key length of any object\n  getMaxKeyLen = function getMaxKeyLen(obj) {\n    var max_len = 0,\n        len;\n\n    for (var key in obj) {\n      if ((len = key.length) > max_len && obj.hasOwnProperty(key)) {\n        max_len = len;\n      }\n    }\n\n    return max_len;\n  },\n      max_unop_len = getMaxKeyLen(unary_ops),\n      max_binop_len = getMaxKeyLen(binary_ops),\n      // Literals\n  // ----------\n  // Store the values to return for the various literals we may encounter\n  literals = {\n    'true': true,\n    'false': false,\n    'null': null\n  },\n      // Except for `this`, which is special. This could be changed to something like `'self'` as well\n  this_str = 'this',\n      // Returns the precedence of a binary operator or `0` if it isn't a binary operator\n  binaryPrecedence = function binaryPrecedence(op_val) {\n    return binary_ops[op_val] || 0;\n  },\n      // Utility function (gets called from multiple places)\n  // Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\n  createBinaryExpression = function createBinaryExpression(operator, left, right) {\n    var type = operator === '||' || operator === '&&' ? LOGICAL_EXP : BINARY_EXP;\n    return {\n      type: type,\n      operator: operator,\n      left: left,\n      right: right\n    };\n  },\n      // `ch` is a character code in the next three functions\n  isDecimalDigit = function isDecimalDigit(ch) {\n    return ch >= 48 && ch <= 57; // 0...9\n  },\n      isIdentifierStart = function isIdentifierStart(ch) {\n    return ch === 36 || ch === 95 || // `$` and `_`\n    ch >= 65 && ch <= 90 || // A...Z\n    ch >= 97 && ch <= 122 || // a...z\n    ch >= 128 && !binary_ops[String.fromCharCode(ch)]; // any non-ASCII that is not an operator\n  },\n      isIdentifierPart = function isIdentifierPart(ch) {\n    return ch === 36 || ch === 95 || // `$` and `_`\n    ch >= 65 && ch <= 90 || // A...Z\n    ch >= 97 && ch <= 122 || // a...z\n    ch >= 48 && ch <= 57 || // 0...9\n    ch >= 128 && !binary_ops[String.fromCharCode(ch)]; // any non-ASCII that is not an operator\n  },\n      // Parsing\n  // -------\n  // `expr` is a string with the passed in expression\n  jsep = function jsep(expr) {\n    // `index` stores the character number we are currently at while `length` is a constant\n    // All of the gobbles below will modify `index` as we move along\n    var index = 0,\n        charAtFunc = expr.charAt,\n        charCodeAtFunc = expr.charCodeAt,\n        exprI = function exprI(i) {\n      return charAtFunc.call(expr, i);\n    },\n        exprICode = function exprICode(i) {\n      return charCodeAtFunc.call(expr, i);\n    },\n        length = expr.length,\n        // Push `index` up to the next non-space character\n    gobbleSpaces = function gobbleSpaces() {\n      var ch = exprICode(index); // space or tab\n\n      while (ch === 32 || ch === 9 || ch === 10 || ch === 13) {\n        ch = exprICode(++index);\n      }\n    },\n        // The main parsing function. Much of this code is dedicated to ternary expressions\n    gobbleExpression = function gobbleExpression() {\n      var test = gobbleBinaryExpression(),\n          consequent,\n          alternate;\n      gobbleSpaces();\n\n      if (exprICode(index) === QUMARK_CODE) {\n        // Ternary expression: test ? consequent : alternate\n        index++;\n        consequent = gobbleExpression();\n\n        if (!consequent) {\n          throwError('Expected expression', index);\n        }\n\n        gobbleSpaces();\n\n        if (exprICode(index) === COLON_CODE) {\n          index++;\n          alternate = gobbleExpression();\n\n          if (!alternate) {\n            throwError('Expected expression', index);\n          }\n\n          return {\n            type: CONDITIONAL_EXP,\n            test: test,\n            consequent: consequent,\n            alternate: alternate\n          };\n        } else {\n          throwError('Expected :', index);\n        }\n      } else {\n        return test;\n      }\n    },\n        // Search for the operation portion of the string (e.g. `+`, `===`)\n    // Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n    // and move down from 3 to 2 to 1 character until a matching binary operation is found\n    // then, return that binary operation\n    gobbleBinaryOp = function gobbleBinaryOp() {\n      gobbleSpaces();\n      var biop,\n          to_check = expr.substr(index, max_binop_len),\n          tc_len = to_check.length;\n\n      while (tc_len > 0) {\n        // Don't accept a binary op when it is an identifier.\n        // Binary ops that start with a identifier-valid character must be followed\n        // by a non identifier-part valid character\n        if (binary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n          index += tc_len;\n          return to_check;\n        }\n\n        to_check = to_check.substr(0, --tc_len);\n      }\n\n      return false;\n    },\n        // This function is responsible for gobbling an individual expression,\n    // e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n    gobbleBinaryExpression = function gobbleBinaryExpression() {\n      var ch_i, node, biop, prec, stack, biop_info, left, right, i, cur_biop; // First, try to get the leftmost thing\n      // Then, check to see if there's a binary operator operating on that leftmost thing\n\n      left = gobbleToken();\n      biop = gobbleBinaryOp(); // If there wasn't a binary operator, just return the leftmost node\n\n      if (!biop) {\n        return left;\n      } // Otherwise, we need to start a stack to properly place the binary operations in their\n      // precedence structure\n\n\n      biop_info = {\n        value: biop,\n        prec: binaryPrecedence(biop)\n      };\n      right = gobbleToken();\n\n      if (!right) {\n        throwError(\"Expected expression after \" + biop, index);\n      }\n\n      stack = [left, biop_info, right]; // Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n\n      while (biop = gobbleBinaryOp()) {\n        prec = binaryPrecedence(biop);\n\n        if (prec === 0) {\n          break;\n        }\n\n        biop_info = {\n          value: biop,\n          prec: prec\n        };\n        cur_biop = biop; // Reduce: make a binary expression from the three topmost entries.\n\n        while (stack.length > 2 && prec <= stack[stack.length - 2].prec) {\n          right = stack.pop();\n          biop = stack.pop().value;\n          left = stack.pop();\n          node = createBinaryExpression(biop, left, right);\n          stack.push(node);\n        }\n\n        node = gobbleToken();\n\n        if (!node) {\n          throwError(\"Expected expression after \" + cur_biop, index);\n        }\n\n        stack.push(biop_info, node);\n      }\n\n      i = stack.length - 1;\n      node = stack[i];\n\n      while (i > 1) {\n        node = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\n        i -= 2;\n      }\n\n      return node;\n    },\n        // An individual part of a binary expression:\n    // e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n    gobbleToken = function gobbleToken() {\n      var ch, to_check, tc_len;\n      gobbleSpaces();\n      ch = exprICode(index);\n\n      if (isDecimalDigit(ch) || ch === PERIOD_CODE) {\n        // Char code 46 is a dot `.` which can start off a numeric literal\n        return gobbleNumericLiteral();\n      } else if (ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\n        // Single or double quotes\n        return gobbleStringLiteral();\n      } else if (ch === OBRACK_CODE) {\n        return gobbleArray();\n      } else {\n        to_check = expr.substr(index, max_unop_len);\n        tc_len = to_check.length;\n\n        while (tc_len > 0) {\n          // Don't accept an unary op when it is an identifier.\n          // Unary ops that start with a identifier-valid character must be followed\n          // by a non identifier-part valid character\n          if (unary_ops.hasOwnProperty(to_check) && (!isIdentifierStart(exprICode(index)) || index + to_check.length < expr.length && !isIdentifierPart(exprICode(index + to_check.length)))) {\n            index += tc_len;\n            return {\n              type: UNARY_EXP,\n              operator: to_check,\n              argument: gobbleToken(),\n              prefix: true\n            };\n          }\n\n          to_check = to_check.substr(0, --tc_len);\n        }\n\n        if (isIdentifierStart(ch) || ch === OPAREN_CODE) {\n          // open parenthesis\n          // `foo`, `bar.baz`\n          return gobbleVariable();\n        }\n      }\n\n      return false;\n    },\n        // Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n    // keep track of everything in the numeric literal and then calling `parseFloat` on that string\n    gobbleNumericLiteral = function gobbleNumericLiteral() {\n      var number = '',\n          ch,\n          chCode;\n\n      while (isDecimalDigit(exprICode(index))) {\n        number += exprI(index++);\n      }\n\n      if (exprICode(index) === PERIOD_CODE) {\n        // can start with a decimal marker\n        number += exprI(index++);\n\n        while (isDecimalDigit(exprICode(index))) {\n          number += exprI(index++);\n        }\n      }\n\n      ch = exprI(index);\n\n      if (ch === 'e' || ch === 'E') {\n        // exponent marker\n        number += exprI(index++);\n        ch = exprI(index);\n\n        if (ch === '+' || ch === '-') {\n          // exponent sign\n          number += exprI(index++);\n        }\n\n        while (isDecimalDigit(exprICode(index))) {\n          //exponent itself\n          number += exprI(index++);\n        }\n\n        if (!isDecimalDigit(exprICode(index - 1))) {\n          throwError('Expected exponent (' + number + exprI(index) + ')', index);\n        }\n      }\n\n      chCode = exprICode(index); // Check to make sure this isn't a variable name that start with a number (123abc)\n\n      if (isIdentifierStart(chCode)) {\n        throwError('Variable names cannot start with a number (' + number + exprI(index) + ')', index);\n      } else if (chCode === PERIOD_CODE) {\n        throwError('Unexpected period', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: parseFloat(number),\n        raw: number\n      };\n    },\n        // Parses a string literal, staring with single or double quotes with basic support for escape codes\n    // e.g. `\"hello world\"`, `'this is\\nJSEP'`\n    gobbleStringLiteral = function gobbleStringLiteral() {\n      var str = '',\n          quote = exprI(index++),\n          closed = false,\n          ch;\n\n      while (index < length) {\n        ch = exprI(index++);\n\n        if (ch === quote) {\n          closed = true;\n          break;\n        } else if (ch === '\\\\') {\n          // Check for all of the common escape codes\n          ch = exprI(index++);\n\n          switch (ch) {\n            case 'n':\n              str += '\\n';\n              break;\n\n            case 'r':\n              str += '\\r';\n              break;\n\n            case 't':\n              str += '\\t';\n              break;\n\n            case 'b':\n              str += '\\b';\n              break;\n\n            case 'f':\n              str += '\\f';\n              break;\n\n            case 'v':\n              str += '\\x0B';\n              break;\n\n            default:\n              str += ch;\n          }\n        } else {\n          str += ch;\n        }\n      }\n\n      if (!closed) {\n        throwError('Unclosed quote after \"' + str + '\"', index);\n      }\n\n      return {\n        type: LITERAL,\n        value: str,\n        raw: quote + str + quote\n      };\n    },\n        // Gobbles only identifiers\n    // e.g.: `foo`, `_value`, `$x1`\n    // Also, this function checks if that identifier is a literal:\n    // (e.g. `true`, `false`, `null`) or `this`\n    gobbleIdentifier = function gobbleIdentifier() {\n      var ch = exprICode(index),\n          start = index,\n          identifier;\n\n      if (isIdentifierStart(ch)) {\n        index++;\n      } else {\n        throwError('Unexpected ' + exprI(index), index);\n      }\n\n      while (index < length) {\n        ch = exprICode(index);\n\n        if (isIdentifierPart(ch)) {\n          index++;\n        } else {\n          break;\n        }\n      }\n\n      identifier = expr.slice(start, index);\n\n      if (literals.hasOwnProperty(identifier)) {\n        return {\n          type: LITERAL,\n          value: literals[identifier],\n          raw: identifier\n        };\n      } else if (identifier === this_str) {\n        return {\n          type: THIS_EXP\n        };\n      } else {\n        return {\n          type: IDENTIFIER,\n          name: identifier\n        };\n      }\n    },\n        // Gobbles a list of arguments within the context of a function call\n    // or array literal. This function also assumes that the opening character\n    // `(` or `[` has already been gobbled, and gobbles expressions and commas\n    // until the terminator character `)` or `]` is encountered.\n    // e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n    gobbleArguments = function gobbleArguments(termination) {\n      var ch_i,\n          args = [],\n          node,\n          closed = false;\n      var separator_count = 0;\n\n      while (index < length) {\n        gobbleSpaces();\n        ch_i = exprICode(index);\n\n        if (ch_i === termination) {\n          // done parsing\n          closed = true;\n          index++;\n\n          if (termination === CPAREN_CODE && separator_count && separator_count >= args.length) {\n            throwError('Unexpected token ' + String.fromCharCode(termination), index);\n          }\n\n          break;\n        } else if (ch_i === COMMA_CODE) {\n          // between expressions\n          index++;\n          separator_count++;\n\n          if (separator_count !== args.length) {\n            // missing argument\n            if (termination === CPAREN_CODE) {\n              throwError('Unexpected token ,', index);\n            } else if (termination === CBRACK_CODE) {\n              for (var arg = args.length; arg < separator_count; arg++) {\n                args.push(null);\n              }\n            }\n          }\n        } else {\n          node = gobbleExpression();\n\n          if (!node || node.type === COMPOUND) {\n            throwError('Expected comma', index);\n          }\n\n          args.push(node);\n        }\n      }\n\n      if (!closed) {\n        throwError('Expected ' + String.fromCharCode(termination), index);\n      }\n\n      return args;\n    },\n        // Gobble a non-literal variable name. This variable name may include properties\n    // e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n    // It also gobbles function calls:\n    // e.g. `Math.acos(obj.angle)`\n    gobbleVariable = function gobbleVariable() {\n      var ch_i, node;\n      ch_i = exprICode(index);\n\n      if (ch_i === OPAREN_CODE) {\n        node = gobbleGroup();\n      } else {\n        node = gobbleIdentifier();\n      }\n\n      gobbleSpaces();\n      ch_i = exprICode(index);\n\n      while (ch_i === PERIOD_CODE || ch_i === OBRACK_CODE || ch_i === OPAREN_CODE) {\n        index++;\n\n        if (ch_i === PERIOD_CODE) {\n          gobbleSpaces();\n          node = {\n            type: MEMBER_EXP,\n            computed: false,\n            object: node,\n            property: gobbleIdentifier()\n          };\n        } else if (ch_i === OBRACK_CODE) {\n          node = {\n            type: MEMBER_EXP,\n            computed: true,\n            object: node,\n            property: gobbleExpression()\n          };\n          gobbleSpaces();\n          ch_i = exprICode(index);\n\n          if (ch_i !== CBRACK_CODE) {\n            throwError('Unclosed [', index);\n          }\n\n          index++;\n        } else if (ch_i === OPAREN_CODE) {\n          // A function call is being made; gobble all the arguments\n          node = {\n            type: CALL_EXP,\n            'arguments': gobbleArguments(CPAREN_CODE),\n            callee: node\n          };\n        }\n\n        gobbleSpaces();\n        ch_i = exprICode(index);\n      }\n\n      return node;\n    },\n        // Responsible for parsing a group of things within parentheses `()`\n    // This function assumes that it needs to gobble the opening parenthesis\n    // and then tries to gobble everything within that parenthesis, assuming\n    // that the next thing it should see is the close parenthesis. If not,\n    // then the expression probably doesn't have a `)`\n    gobbleGroup = function gobbleGroup() {\n      index++;\n      var node = gobbleExpression();\n      gobbleSpaces();\n\n      if (exprICode(index) === CPAREN_CODE) {\n        index++;\n        return node;\n      } else {\n        throwError('Unclosed (', index);\n      }\n    },\n        // Responsible for parsing Array literals `[1, 2, 3]`\n    // This function assumes that it needs to gobble the opening bracket\n    // and then tries to gobble the expressions as arguments.\n    gobbleArray = function gobbleArray() {\n      index++;\n      return {\n        type: ARRAY_EXP,\n        elements: gobbleArguments(CBRACK_CODE)\n      };\n    },\n        nodes = [],\n        ch_i,\n        node;\n\n    while (index < length) {\n      ch_i = exprICode(index); // Expressions can be separated by semicolons, commas, or just inferred without any\n      // separators\n\n      if (ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\n        index++; // ignore separators\n      } else {\n        // Try to gobble each expression individually\n        if (node = gobbleExpression()) {\n          nodes.push(node); // If we weren't able to find a binary expression and are out of room, then\n          // the expression passed in probably has too much\n        } else if (index < length) {\n          throwError('Unexpected \"' + exprI(index) + '\"', index);\n        }\n      }\n    } // If there's only one expression just try returning the expression\n\n\n    if (nodes.length === 1) {\n      return nodes[0];\n    } else {\n      return {\n        type: COMPOUND,\n        body: nodes\n      };\n    }\n  }; // To be filled in by the template\n\n\n  jsep.version = '0.3.5';\n\n  jsep.toString = function () {\n    return 'JavaScript Expression Parser (JSEP) v' + jsep.version;\n  };\n  /**\n   * @method jsep.addUnaryOp\n   * @param {string} op_name The name of the unary op to add\n   * @return jsep\n   */\n\n\n  jsep.addUnaryOp = function (op_name) {\n    max_unop_len = Math.max(op_name.length, max_unop_len);\n    unary_ops[op_name] = t;\n    return this;\n  };\n  /**\n   * @method jsep.addBinaryOp\n   * @param {string} op_name The name of the binary op to add\n   * @param {number} precedence The precedence of the binary op (can be a float)\n   * @return jsep\n   */\n\n\n  jsep.addBinaryOp = function (op_name, precedence) {\n    max_binop_len = Math.max(op_name.length, max_binop_len);\n    binary_ops[op_name] = precedence;\n    return this;\n  };\n  /**\n   * @method jsep.addLiteral\n   * @param {string} literal_name The name of the literal to add\n   * @param {*} literal_value The value of the literal\n   * @return jsep\n   */\n\n\n  jsep.addLiteral = function (literal_name, literal_value) {\n    literals[literal_name] = literal_value;\n    return this;\n  };\n  /**\n   * @method jsep.removeUnaryOp\n   * @param {string} op_name The name of the unary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeUnaryOp = function (op_name) {\n    delete unary_ops[op_name];\n\n    if (op_name.length === max_unop_len) {\n      max_unop_len = getMaxKeyLen(unary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllUnaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllUnaryOps = function () {\n    unary_ops = {};\n    max_unop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeBinaryOp\n   * @param {string} op_name The name of the binary op to remove\n   * @return jsep\n   */\n\n\n  jsep.removeBinaryOp = function (op_name) {\n    delete binary_ops[op_name];\n\n    if (op_name.length === max_binop_len) {\n      max_binop_len = getMaxKeyLen(binary_ops);\n    }\n\n    return this;\n  };\n  /**\n   * @method jsep.removeAllBinaryOps\n   * @return jsep\n   */\n\n\n  jsep.removeAllBinaryOps = function () {\n    binary_ops = {};\n    max_binop_len = 0;\n    return this;\n  };\n  /**\n   * @method jsep.removeLiteral\n   * @param {string} literal_name The name of the literal to remove\n   * @return jsep\n   */\n\n\n  jsep.removeLiteral = function (literal_name) {\n    delete literals[literal_name];\n    return this;\n  };\n  /**\n   * @method jsep.removeAllLiterals\n   * @return jsep\n   */\n\n\n  jsep.removeAllLiterals = function () {\n    literals = {};\n    return this;\n  }; // In desktop environments, have a way to restore the old value for `jsep`\n\n\n  if (typeof exports === 'undefined') {\n    var old_jsep = root.jsep; // The star of the show! It's a function!\n\n    root.jsep = jsep; // And a courteous function willing to move out of the way for other similarly-named objects!\n\n    jsep.noConflict = function () {\n      if (root.jsep === jsep) {\n        root.jsep = old_jsep;\n      }\n\n      return jsep;\n    };\n  } else {\n    // In Node.JS environments\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = jsep;\n    } else {\n      exports.parse = jsep;\n    }\n  }\n})(this);","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../jacdac-spec/spectool/jdspec.d.ts\" />\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../jacdac-spec/spectool/jdtest.d.ts\" />\n\nimport serviceTestData from \"../../jacdac-spec/dist/services-tests.json\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _serviceTests: jdtest.ServiceTestSpec[] = serviceTestData as any\n\n/**\n * Given a service specification, see if it has a test\n * @param spec\n */\nexport function serviceTestFromServiceClass(\n    serviceClass: number\n): jdtest.ServiceTestSpec {\n    return (\n        serviceClass !== undefined &&\n        _serviceTests.find(test => test.serviceClassIdentifier === serviceClass)\n    )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\n\nexports.default = _default;"],"sourceRoot":""}