{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/jacdac/useSelectedNodes.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/alert/SimulateDeviceAlert.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/markdown.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx","webpack://jacdac-docs/./src/components/tools/VMEditorRunner.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor-runner.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","marginLeft","spacing","NoSsrConnectAlert","props","classes","serviceClass","useContext","JacdacContext","bus","transports","devices","useChange","b","ignoreSelf","spec","serviceSpecificationFromClassIdentifier","length","name","map","transport","type","ConnectAlert","useSelectedNodes","singleSelection","nodes","useRef","Set","useState","change","setChange","selected","node","current","has","id","setSelected","value","s","delete","clear","add","hasSelection","size","toggleSelected","DeviceGroup","title","action","expanded","toggleExpanded","children","other","handleExpand","device","sectionId","useId","SimulateDeviceAlert","handleStartSimulator","provider","serviceProviderDefinitionFromServiceClass","addServiceProvider","AppContext","toggleShowDeviceHostsDialog","SRV_BUTTON","SRV_BUZZER","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","isReading","isValueOrIntensity","score","srvs","ls","services","slice","specification","filter","rs","strcmp","deviceId","defaultDeviceFilter","d","Dashboard","showConnect","showStartSimulators","deviceSort","deviceFilter","useDevices","announced","sort","useMediaQueries","mobile","splitFilter","findServiceProvider","simulators","physicals","roleManager","useRoleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","DashboardDeviceItem","variant","drawerType","breakpoints","breakpointWeight","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","c","v","DrawerType","xs","sm","md","lg","xl","IT4Functions","args","prompt","context","supportedExpressions","parseITTTMarkdownToJSON","filecontent","filename","replace","info","description","roles","registers","events","handlers","backticksType","errors","lineNo","currentHandler","handlerHeading","symbolResolver","SpecSymbolResolver","undefined","role","shortId","find","pair","serviceSpecificationFromName","serviceShortName","service","error","jsep","e","split","line","processLine","message","finishHandler","trim","m","exec","interpret","hd","cont","processCommand","commands","ret","command","root","arguments","push","guard","sym","indexOf","reset","msg","some","file","MyRoleManager","notify","_roles","_devices","on","DEVICE_ANNOUNCE","addServices","DEVICE_DISCONNECT","removeServices","key","Object","keys","k","nameMatch","shortName","getService","n1","n2","cn1","toLowerCase","cn2","getServicesFromName","addRoleService","existingInstance","values","classIdentifier","JDEventSource","VMStatus","IT4CommandEvaluator","env","gc","checkExpression","expr","JDExprEvaluator","lookup","eval","evaluate","_status","Running","inst","event","hasEvent","Completed","ev","reg","writeRegister","writeLocal","Stopped","callee","IT4CommandRunner","_eval","status","step","isWaiting","finish","cancel","IT4HandlerRunner","handler","stopped","_commandIndex","_currentCommand","unsubscribe","post_process","Ready","IT4ProgramRunner","program","_waitQueue","_running","_rm","added","_env","serviceChanged","registerRegister","registerEvent","VMEnvironment","run","_handlers","h","index","emit","CHANGE","start","refreshEnvironment","nextTime","consumeEvent","VMRunner","json","factory","useCallback","testRunner","useMemo","t","handleRun","handleCancel","running","VM_MARKDOWN_SOURCE_STORAGE_KEY","VMEditorRunner","useLocalStorage","source","setSource","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-runner-tsx-238311aba5d3741a79ee.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../../jacdac/ConnectButton\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        button: {\n            marginLeft: theme.spacing(2),\n        },\n    })\n)\n\nfunction NoSsrConnectAlert(props: { serviceClass?: number }) {\n    const classes = useStyles()\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b => b.devices({ serviceClass, ignoreSelf: true }))\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={true}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        className={classes.button}\n                        full={true}\n                        transparent={true}\n                    />\n                ))}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: { serviceClass?: number }) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { JDNode } from \"../../jacdac-ts/src/jdom/node\"\n\nexport default function useSelectedNodes<TNode extends JDNode>(singleSelection?: boolean) {\n    const nodes = useRef<Set<string>>(new Set<string>())\n    const [change, setChange] = useState(0)\n\n    const selected = (node: TNode) => nodes.current.has(node?.id)\n    const setSelected = (node: TNode, value: boolean) => {\n        if (!node) return;\n        const s = selected(node)\n        if (!!value !== s) {\n            if (!value)\n                nodes.current.delete(node.id)\n            else {\n                if (singleSelection)\n                    nodes.current.clear();\n                nodes.current.add(node.id)\n            }\n            setChange(change + 1)\n        }\n    }\n    return {\n        hasSelection: nodes.current.size > 0,\n        selected,\n        setSelected,\n        toggleSelected: (node: TNode) => {\n            setSelected(node, !selected(node))\n        },\n        clear: () => {\n            nodes.current.clear()\n            setChange(0)\n        }\n    }\n}","import { Grid } from \"@material-ui/core\";\nimport React, { } from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport DashboardDeviceItem from \"./DashboardDeviceItem\";\n\nexport default function DeviceGroup(props: {\n    title: string,\n    action?: JSX.Element,\n    devices: JDDevice[],\n    expanded?: (device: JDDevice) => boolean,\n    toggleExpanded?: (device: JDDevice) => void,\n    children?: JSX.Element | JSX.Element[]\n} & DashboardDeviceProps) {\n    const { title, action, devices, expanded, toggleExpanded, children, ...other } = props;\n    const handleExpand = (device: JDDevice) => () => toggleExpanded(device)\n    const sectionId = useId()\n\n    if (!action && !devices?.length)\n        return null\n\n    return <section id={sectionId}>\n        <Grid container spacing={1}>\n            <GridHeader title={title} action={action} />\n            {devices?.map(device => <DashboardDeviceItem\n                key={device.id}\n                device={device}\n                expanded={expanded(device)}\n                toggleExpanded={handleExpand(device)}\n                {...other} />)}\n            {children}\n        </Grid>\n    </section>\n}\n","import React, { useContext } from \"react\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport Alert from \"../ui/Alert\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\n\nexport default function SimulateDeviceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const handleStartSimulator = (serviceClass: number) => () => {\n        const provider = serviceProviderDefinitionFromServiceClass(serviceClass)\n        addServiceProvider(bus, provider)\n    }\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n\n    return (\n        <Alert severity=\"info\" closeable={true}>\n            Simulate devices (\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUTTON)}\n                title=\"button\"\n                aria-label=\"start button simulator\"\n            >\n                🔘\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_BUZZER)}\n                title=\"buzzer\"\n                aria-label=\"start buzzer simulator\"\n            >\n                🎹\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                title=\"joystick\"\n                aria-label=\"start joystick simulator\"\n            >\n                🕹️\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_LED)}\n                title=\"LED\"\n                aria-label=\"start LED simulator\"\n            >\n                💡\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                onClick={handleStartSimulator(SRV_TRAFFIC_LIGHT)}\n                title=\"traffic light\"\n                aria-label=\"start traffic light simulator\"\n            >\n                🚦\n            </IconButtonWithTooltip>\n            , ...) by clicking &nbsp;\n            <IconButtonWithTooltip\n                title=\"start simulator\"\n                onClick={toggleShowDeviceHostsDialog}\n            >\n                <AddIcon />\n            </IconButtonWithTooltip>\n            .\n        </Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useSelectedNodes from \"../../jacdac/useSelectedNodes\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../../jacdac/ConnectButtons\"\nimport useRoleManager from \"../services/useRoleManager\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport SimulateDeviceAlert from \"../alert/SimulateDeviceAlert\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    showStartSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        showConnect,\n        showStartSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({ announced: true, ignoreSelf: true })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const { mobile } = useMediaQueries()\n    const { selected, toggleSelected } = useSelectedNodes(mobile)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d => !!bus.findServiceProvider(d.deviceId)\n    )\n    const roleManager = useRoleManager()\n    const handleClearSimulators = () => {\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            <DashboardDeviceGroup\n                title=\"Simulators\"\n                action={\n                    <>\n                        {showStartSimulators && !!roleManager && (\n                            <IconButtonWithTooltip\n                                title=\"start missing simulators\"\n                                onClick={handleStartSimulators}\n                            >\n                                <DevicesIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                        <IconButtonWithTooltip\n                            title=\"clear simulators\"\n                            onClick={handleClearSimulators}\n                        >\n                            <ClearIcon />\n                        </IconButtonWithTooltip>{\" \"}\n                    </>\n                }\n                devices={simulators}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showStartSimulators && !simulators?.length && (\n                    <Grid item xs={12}>\n                        <SimulateDeviceAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons full={false} transparent={true} />\n                    )\n                }\n                devices={physicals}\n                expanded={selected}\n                toggleExpanded={toggleSelected}\n                {...other}\n            >\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","export interface IT4GuardedCommand {\n    guard?: jsep.Expression\n    command: jsep.CallExpression\n}\n\nexport interface IT4Handler {\n    description: string\n    commands: IT4GuardedCommand[]\n}\n\nexport interface IT4Role {\n    role: string\n    serviceShortName: string\n}\n\n\nexport interface IT4Program {\n    description: string\n    roles: IT4Role[]\n    registers: string[]\n    events: string[]\n    handlers: IT4Handler[]\n    errors?: jdspec.Diagnostic[]\n}\n\nexport type JDIT4Functions =\n    | \"awaitEvent\"\n    | \"awaitCondition\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"role\"\n\nexport const IT4Functions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"role\",\n        args: [\"Identifier\", \"Identifier\"],\n        prompt: `role variable {1} of service type {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n]\n","import jsep from \"jsep\"\n\nimport { SpecSymbolResolver } from \"../../jacdac-spec/spectool/jdutils\"\nimport { IT4Program, IT4Handler, IT4Functions } from \"./ir\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\nimport { SystemReg } from \"../jdom/constants\"\nimport { intOfBuffer } from \"../jdom/buffer\"\n\nconst supportedExpressions: jsep.ExpressionType[] = [\n    \"MemberExpression\",\n    \"ArrayExpression\",\n    \"BinaryExpression\",\n    \"Identifier\",\n    \"Literal\",\n    \"UnaryExpression\",\n    \"LogicalExpression\",\n]\n\nexport function parseITTTMarkdownToJSON(\n    filecontent: string,\n    filename = \"\"\n): IT4Program {\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: IT4Program = {\n        description: \"\",\n        roles: [],\n        registers: [],\n        events: [],\n        handlers: [],\n    }\n\n    let backticksType = \"\"\n    const errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let currentHandler: IT4Handler = null\n    let handlerHeading = \"\"\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        (role: string) => {\n            // lookup in roles first\n            let shortId = info.roles.find(pair => pair.role === role)\n            if (shortId) {\n                // must succeed\n                return serviceSpecificationFromName(shortId.serviceShortName)\n            } else {\n                let service = serviceSpecificationFromName(role)\n                if (!service) {\n                    error(`can't find service with shortId=${role}`)\n                    return undefined\n                }\n                return service\n            }\n        },\n        supportedExpressions,\n        jsep,\n        e => error(e)\n    )\n\n    try {\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (currentHandler) finishHandler(symbolResolver)\n\n    if (errors.length) info.errors = errors\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" ||\n            line.slice(0, 4) == \"    \" ||\n            /^\\t/.exec(line)\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                handlerHeading = \"\"\n                const [, hd, cont] = m\n                if (hd == \"#\") {\n                    if (!info.description) info.description = cont.trim()\n                    else error(\"use ## to start a handler, not #\")\n                } else if (hd == \"##\") {\n                    if (currentHandler) finishHandler(symbolResolver)\n                    handlerHeading = cont.trim()\n                }\n            }\n        } else {\n            const expanded = line.replace(/\\/\\/.*/, \"\").trim()\n            if (!expanded) return\n            processCommand(expanded)\n        }\n    }\n\n    function processCommand(expanded: string) {\n        if (!currentHandler) {\n            if (!handlerHeading)\n                error(`every handler must have a description (via ##)`)\n            currentHandler = {\n                description: handlerHeading,\n                commands: [],\n            }\n            handlerHeading = \"\"\n        }\n\n        const ret = symbolResolver.processLine(expanded, IT4Functions)\n\n        if (ret) {\n            const [command, root] = ret\n\n            if (currentHandler.commands.length === 0) {\n                if (command.id === \"role\") {\n                    // TODO: check\n                    let role = (root.arguments[0] as jsep.Identifier).name\n                    let serviceShortName = (root\n                        .arguments[1] as jsep.Identifier).name\n                    let service = serviceSpecificationFromName(serviceShortName)\n                    if (!service)\n                        error(\n                            `can't find service with shortId=${serviceShortName}`\n                        )\n                    else if (info.roles.find(pair => pair.role === role))\n                        error(`role with name ${role} already declared`)\n                    else\n                        info.roles.push({\n                            role: role,\n                            serviceShortName: serviceShortName,\n                        })\n                    return\n                } else if (\n                    command.id !== \"awaitEvent\" &&\n                    command.id !== \"awaitCondition\"\n                ) {\n                    error(\n                        `An ITTT handler must begin with call to an await function (awaitEvent | awaitCondition)`\n                    )\n                    return\n                }\n            } else {\n                if (command.id === \"role\") {\n                    error(`roles must be declared at beginning of handler`)\n                }\n            }\n\n            currentHandler.commands.push({ guard: undefined, command: root })\n        }\n    }\n\n    function finishHandler(sym: SpecSymbolResolver) {\n        if (currentHandler.commands.length > 0)\n            info.handlers.push(currentHandler)\n        sym.registers.forEach(r => { if (info.registers.indexOf(r) < 0) info.registers.push(r) })\n        sym.events.forEach(e => { if (info.events.indexOf(e) < 0) info.events.push(e) })\n        sym.reset();\n        currentHandler = null\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../src/servers/servers\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<JDService | string> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            let key = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] === \"string\" &&\n                    this.nameMatch(\n                        this._roles[k] as string,\n                        s.specification.shortName\n                    )\n            )\n            if (key && this._devices.indexOf(dev) === -1) {\n                this._roles[key] = s\n                this._devices.push(dev)\n                if (this.notify) this.notify(key, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            let key = Object.keys(this._roles).find(\n                k =>\n                    typeof this._roles[k] !== \"string\" &&\n                    dev.services().indexOf(this._roles[k] as JDService) >= 0\n            )\n            if (key) {\n                let service = this._roles[key] as JDService\n                this._roles[key] = (this._roles[\n                    key\n                ] as JDService).specification.shortName\n                if (this.notify) this.notify(key, service, false)\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        let s = this._roles[role]\n        return !s || typeof s === \"string\" ? undefined : s\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortName, root))\n    }\n\n    public addRoleService(role: string, serviceShortName: string) {\n        const s = this._roles[role]\n        if (s && typeof(s) !== \"string\") \n            return\n        let existingInstance = Object.values(this._roles).find(\n            r =>\n                (typeof r === \"string\" &&\n                    this.nameMatch(r, serviceShortName)) ||\n                (typeof r === \"object\" &&\n                    this.nameMatch(r.specification.shortName, serviceShortName))\n        )\n        this._roles[role] = serviceShortName\n        let ret = this.getServicesFromName(serviceShortName)\n        if (existingInstance || ret.length === 0) {\n            // spin up a new simulator\n            let service = serviceSpecificationFromName(serviceShortName)\n            if (service) {\n                let provider = serviceProviderDefinitionFromServiceClass(\n                    service?.classIdentifier\n                )\n                if (provider)\n                    addServiceProvider(this.bus, provider)\n            }\n        } else {\n            this._roles[role] = ret[0]\n        }\n    }\n}\n","import { IT4Program, IT4Handler, IT4GuardedCommand } from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE } from \"../jdom/constants\"\n\nexport enum VMStatus {\n    Ready,\n    Running,\n    Completed,\n    Stopped,\n}\n\ninterface Environment {\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeRegister: (e: jsep.MemberExpression | string, v: any) => boolean\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    refreshEnvironment: () => void\n    unsubscribe: () => void\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    constructor(\n        private readonly env: Environment,\n        private readonly gc: IT4GuardedCommand\n    ) {}\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier).name\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e) ? true : false\n    }\n\n    public evaluate() {\n        // console.log(unparse(this.gc.command))\n        this._status = VMStatus.Running\n        const args = this.gc.command.arguments\n        switch (this.inst) {\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                const reg = args[0] as jsep.MemberExpression\n                if (\n                    (this.inst === \"writeRegister\" &&\n                        this.env.writeRegister(reg, ev)) ||\n                    (this.inst === \"writeLocal\" && this.env.writeLocal(reg, ev))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(env: Environment, gc: IT4GuardedCommand) {\n        this._eval = new IT4CommandEvaluator(env, gc)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    reset() {\n        this.status = VMStatus.Running\n    }\n\n    step() {\n        if (this.isWaiting) {\n            this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped: boolean = false\n\n    constructor(\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        this.reset()\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this._commandIndex = undefined\n        this._currentCommand = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private post_process() {\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    // run-to-completion semantics\n    step() {\n        if (this.stopped) return\n        if (this._commandIndex === undefined) {\n            this._commandIndex = 0\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n        }\n        this._currentCommand.step()\n        this.post_process()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this._commandIndex < this.handler.commands.length - 1\n        ) {\n            this._commandIndex++\n            this._currentCommand = new IT4CommandRunner(\n                this.env,\n                this.handler.commands[this._commandIndex]\n            )\n            this._currentCommand.step()\n            this.post_process()\n        }\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[]\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _rm: MyRoleManager\n\n    constructor(private readonly program: IT4Program, bus: JDBus) {\n        super()\n        this._rm = new MyRoleManager(bus, (role, service, added) => {\n            this._env.serviceChanged(role, service, added)\n            if (added) {\n                this.program.registers.forEach(r => {\n                    let [root, reg] = r.split(\".\")\n                    if (root === role) {\n                        this._env.registerRegister(role, reg)\n                    }\n                })\n                this.program.events.forEach(e => {\n                    let [root, ev] = e.split(\".\")\n                    if (root === role) {\n                        this._env.registerEvent(role, ev)\n                    }\n                })\n            }\n        })\n        this._env = new VMEnvironment(() => {\n            this.run()\n        })\n        this._handlers = program.handlers.map(\n            (h, index) => new IT4HandlerRunner(index, this._env, h)\n        )\n        this._waitQueue = this._handlers.slice(0)\n    }\n\n    get status() {\n        const ret =\n            this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n    }\n\n    start() {\n        this.program.roles.forEach(role => {\n            this._rm.addRoleService(role.role, role.serviceShortName)\n        })\n        this._running = true\n        this.emit(CHANGE)\n        this.run()\n    }\n\n    run() {\n        if (!this._running) return\n        this._env.refreshEnvironment()\n        if (this._waitQueue.length > 0) {\n            let nextTime: IT4HandlerRunner[] = []\n            this._waitQueue.forEach(h => {\n                h.step()\n                if (h.status !== VMStatus.Stopped) {\n                    if (h.status === VMStatus.Completed) h.reset()\n                    nextTime.push(h)\n                }\n            })\n            this._waitQueue = nextTime\n            this._env.consumeEvent()\n        } else {\n            this.emit(CHANGE)\n        }\n    }\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Grid, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport { JDBus } from \"../../../jacdac-ts/src/jdom/bus\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n\nexport default function VMRunner(props: { json: IT4Program; bus: JDBus }) {\n    const { json, bus } = props\n    const factory = useCallback(\n        bus => json && new IT4ProgramRunner(json, bus),\n        [json]\n    )\n    const testRunner = useMemo(() => factory(bus), [json])\n    const status = useChange(testRunner, t => t.status)\n    const handleRun = () => testRunner.start()\n    const handleCancel = () => testRunner.cancel()\n    const running = status === VMStatus.Running\n\n    return (\n        <Button\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <LoadingProgress /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n","import React, { useMemo, useContext } from \"react\"\nimport { parseITTTMarkdownToJSON } from \"../../../jacdac-ts/src/vm/markdown\"\nimport useLocalStorage from \"../useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport { Grid } from \"@material-ui/core\"\nimport GridHeader from \"../ui/GridHeader\"\nimport Alert from \"../ui/Alert\"\nimport VMRunner from \"../vm/VMRunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DashBoard from \"../dashboard/Dashboard\"\n\nconst VM_MARKDOWN_SOURCE_STORAGE_KEY = \"jacdac:vmeditorsource:markdown\"\n\nexport default function VMEditorRunner() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [source, setSource] = useLocalStorage(\n        VM_MARKDOWN_SOURCE_STORAGE_KEY,\n        `# VM Handler program\\n\\n`\n    )\n    const json = useMemo(() => parseITTTMarkdownToJSON(source), [source])\n    return (\n        <Grid spacing={2} container>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={source}\n                    language={\"markdown\"}\n                    onChange={setSource}\n                    annotations={json?.errors}\n                />\n            </Grid>\n            <GridHeader title=\"Preview\" />\n            {json && bus && (\n                <Grid item xs={12}>\n                    <VMRunner json={json} bus={bus} />\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <DashBoard />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditorRunner from \"../../components/tools/VMEditorRunner\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>VM Editor/Runner</h1>\n            <VMEditorRunner />\n        </>\n    )\n}\n"],"sourceRoot":""}