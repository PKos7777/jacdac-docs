{"version":3,"file":"component---src-pages-clients-makecode-modules-button-mdx-2587b9163a4acb9b8b7e.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACE;;AACF;AACA;;AAEA;;AAEA;AACO,IAAMG,YAAY,GAAG,EAArB;AACP,IAAMC,WAAW,GAAG;AAClBD,EAAAA;AADkB,CAApB;AAGA,IAAME,SAAS,GAAGH,kHAAlB;AACe,SAASI,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEC,KACF;;AACD,SAAO,mDAAC,SAAD,oBAAeJ,WAAf,EAAgCI,KAAhC;AAAuC,cAAU,EAAED,UAAnD;AAA+D,WAAO,EAAC;AAAvE,MAGL;AACE,UAAM,oCADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,qCADT;AAEC,kBAAc,8CAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,uCAHK,EAuBL,+IACF;AAAI,cAAU,EAAC;AAAf,YADE,QACoC;AAAI,cAAU,EAAC;AAAf,UADpC,YAC4E;AAAI,cAAU,EAAC;AAAf,YAD5E,wBACkI;AAAI,cAAU,EAAC;AAAf,YADlI,0EAEuC;AAAI,cAAU,EAAC;AAAf,UAFvC,yDAGE;AAAI,cAAU,EAAC;AAAf,YAHF,uIAvBK,EA4BL,4FAAiC;AAAI,cAAU,EAAC;AAAf,cAAjC,QAAyE;AAAI,cAAU,EAAC;AAAf,cAAzE,YAAqH;AAAI,cAAU,EAAC;AAAf,cAArH,yEA5BK,EA8BL;AACE,UAAM,QADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,SADT;AAEC,kBAAc,kBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,WA9BK,EAkDL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,8wDAAL,CAlDK,CAAP;AAwDD;AACD;AACAD,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;CCzEA;;AACA,IAAME,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAAEH,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAwB;AAClC,sBAAO,iDAAC,2CAAD,EAAcJ,KAAd,EAAsBI,QAAtB,CAAP;AACH,CAFD;;AAIA,yDAAeD,IAAf","sources":["webpack://jacdac-docs/./src/pages/clients/makecode/modules/button.mdx","webpack://jacdac-docs/./src/components/Page.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"makecode-client-for-button-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#makecode-client-for-button-service\",\n        \"aria-label\": \"makecode client for button service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`MakeCode Client for Button Service`}</h1>\n    <p>{`The main way to work with a button is through event handlers for the events\n`}<em parentName=\"p\">{`down`}</em>{`, `}<em parentName=\"p\">{`up`}</em>{`, and `}<em parentName=\"p\">{`hold`}</em>{`. The (unbounced) `}<em parentName=\"p\">{`down`}</em>{` event is raised when the\nbutton is pressed, while the (unbounced) `}<em parentName=\"p\">{`up`}</em>{` event is raised when the button is released.\nThe `}<em parentName=\"p\">{`hold`}</em>{` event is generated if the button is held for more than 1/2 second,\nand every 1/2 second after that until the button is released.`}</p>\n    <p>{`There are three handlers (`}<em parentName=\"p\">{`onDown`}</em>{`, `}<em parentName=\"p\">{`onHold`}</em>{`, and `}<em parentName=\"p\">{`onHeld`}</em>{`) for each of\nthe three events, as shown in the small example below`}</p>\n    <h2 {...{\n      \"id\": \"events\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#events\",\n        \"aria-label\": \"events permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Events`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-blocks\"\n      }}>{`{\"source\":\"let holdCount = 0\\\\n\\\\nmodules.button1.onDown(() => {\\\\n    holdCount = 0\\\\n    basic.showString(\\\\\"D\\\\\")\\\\n})\\\\n\\\\nmodules.button1.onHold(() => {\\\\n    holdCount++\\\\n    basic.showNumber(holdCount)\\\\n})\\\\n\\\\nmodules.button1.onUp(() => {\\\\n    basic.showString(\\\\\"U\\\\\")\\\\n})\\\\n\\\\n## Registers\\\\n\\\\nThe low-level state of the button is accesible via the the \\`pressure\\` register,\\\\nwhich ranges in value from where 0 is open and 0xffff is fully pressed.\\\\n\\\\n\\`\\`\\`blocks\\\\nforever(() => {\\\\n    if (modules.button1.pressure() === 0xffff) \\\\n        basic.showString(\\\\\"D\\\\\")\\\\n    else if (modules.button1.pressure() === 0)\\\\n        basic.showString(\\\\\"U\\\\\")\\\\n    else\\\\n        basic.showString(\\\\\"x\\\\\")\\\\n})\\\\n\",\"rendered\":{\"req\":{\"code\":\"let holdCount = 0\\\\n\\\\nmodules.button1.onDown(() => {\\\\n    holdCount = 0\\\\n    basic.showString(\\\\\"D\\\\\")\\\\n})\\\\n\\\\nmodules.button1.onHold(() => {\\\\n    holdCount++\\\\n    basic.showNumber(holdCount)\\\\n})\\\\n\\\\nmodules.button1.onUp(() => {\\\\n    basic.showString(\\\\\"U\\\\\")\\\\n})\\\\n\\\\n## Registers\\\\n\\\\nThe low-level state of the button is accesible via the the \\`pressure\\` register,\\\\nwhich ranges in value from where 0 is open and 0xffff is fully pressed.\\\\n\\\\n\\`\\`\\`blocks\\\\nforever(() => {\\\\n    if (modules.button1.pressure() === 0xffff) \\\\n        basic.showString(\\\\\"D\\\\\")\\\\n    else if (modules.button1.pressure() === 0)\\\\n        basic.showString(\\\\\"U\\\\\")\\\\n    else\\\\n        basic.showString(\\\\\"x\\\\\")\\\\n})\\\\n\",\"options\":{\"pixelDensity\":1,\"package\":\"jacdac=github:microsoft/pxt-jacdac,jacdac-button=github:microsoft/pxt-jacdac/button\"},\"type\":\"renderblocks\",\"id\":\"b12d46bf0a3c07ec713ebad9e18fa69e\"},\"url\":\"/images/makecode/b12d46bf0a3c07ec713ebad9e18fa69e.png\",\"width\":1583,\"height\":1712}}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\"\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page\n"],"names":["React","mdx","DefaultLayout","_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent","Fragment","Page","children"],"sourceRoot":""}