{"version":3,"sources":["webpack:///./src/components/EnumSpecification.tsx","webpack:///./src/components/hooks/useDeviceHostFromServiceClass.ts","webpack:///./src/components/ServiceSpecification.tsx","webpack:///./src/components/dashboard/DashboardDeviceItem.tsx","webpack:///./src/templates/service-playground.tsx"],"names":["EnumSpecification","props","serviceClass","spec","serviceSpecificationFromClassIdentifier","enums","Object","values","filter","en","derived","length","map","e","name","isFlags","keys","members","toString","useDeviceHostFromServiceClass","useContext","JacdacContext","bus","useEffect","devices","def","hostDefinitionFromServiceClass","host","addHost","removeDeviceHost","DashboardServiceDevices","useChange","b","device","id","ServiceSpecification","node","service","showSource","showDevices","showDerived","shortId","classIdentifier","packets","pkt","registers","isRegister","events","isEvent","commands","isCommand","reports","r","secondary","pipeReports","isPipeReport","others","indexOf","reportOf","find","rep","isReportOf","pipeReportOf","isPipeReportOf","notes","short","extends","extend","i","serviceSpecificationFromName","long","note","group","sort","l","DashboardDeviceItem","expanded","toggleExpanded","variant","other","AppContext","drawerType","breakpoints","breakpointWeight","services","srv","dashboardServiceWeight","readingRegister","valueRegister","intensityRegister","reduce","c","v","DrawerType","None","xs","sm","md","lg","xl","Page","pageContext"],"mappings":"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","file":"component---src-templates-service-playground-tsx-2f42c80f0138d9b2b215.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n            <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n        </Fragment>)}\n    </Fragment>\n}\n","import { useContext, useEffect } from \"react\"\nimport {\n    addHost,\n    hostDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/hosts/hosts\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useDeviceHostFromServiceClass(\n    serviceClass: number\n): void {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass })\n        const def =\n            !devices.length && hostDefinitionFromServiceClass(serviceClass)\n        const host = def && addHost(bus, def)\n        return () => bus.removeDeviceHost(host)\n    }, [serviceClass])\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\"\nimport Markdown from \"./ui/Markdown\"\nimport EnumSpecification from \"./EnumSpecification\"\nimport { Box, Grid } from \"@material-ui/core\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useDeviceHostFromServiceClass from \"./hooks/useDeviceHostFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport useChange from \"../jacdac/useChange\"\nimport DashbardDeviceItem from \"./dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showSource?: boolean\n    showDevices?: boolean\n    showDerived?: boolean\n}) {\n    const { service: node, showSource, showDevices, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up host on demand\n    useDeviceHostFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <Fragment key={`servicespec${shortId}`}>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map((pkt, i) => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.name}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </Fragment>\n    )\n}\n","import { Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\";\nimport DashboardDevice from \"./DashboardDevice\";\nimport { GridBreakpoints } from \"../useGridBreakpoints\";\nimport { DashboardDeviceProps } from \"./Dashboard\";\nimport useChange from \"../../jacdac/useChange\";\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\";\nimport AppContext, { DrawerType } from \"../AppContext\";\n\nexport default function DashboardDeviceItem(props: {\n    device: JDDevice,\n    expanded?: boolean,\n    toggleExpanded?: () => void,\n    variant?: \"icon\" | \"\"\n} & DashboardDeviceProps) {\n    const { device, expanded, toggleExpanded, variant, ...other } = props;\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(device, () => {\n        const breakpointWeight = device.services()\n            .map(srv => {\n                return dashboardServiceWeight(srv)\n                    || (srv.readingRegister || srv.valueRegister || srv.intensityRegister ? 1 : 0)\n            })\n            .reduce((c: number, v) => c + v, 0);\n\n        if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n            return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 };\n        else if (breakpointWeight == 3)\n            return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 };\n        else if (breakpointWeight == 2)\n            return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 };\n        else\n            return { xs: expanded ? 12 : 6, sm: 4, md: 3, lg: 2, xl: \"auto\" };\n    }, [expanded, drawerType]);\n\n    // based on size, expanded or reduce widget size\n    return <Grid item {...breakpoints}>\n        <DashboardDevice\n            device={device}\n            expanded={expanded}\n            toggleExpanded={toggleExpanded}\n            variant={variant}\n            {...other}\n        />\n    </Grid>\n}","import React from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecification from \"../components/ServiceSpecification\"\n\nexport default function Page(props: { pageContext: { node: { classIdentifier: number } } }) {\n    const spec = serviceSpecificationFromClassIdentifier(props.pageContext.node.classIdentifier);\n    return <ServiceSpecification service={spec} />\n}\n"],"sourceRoot":""}