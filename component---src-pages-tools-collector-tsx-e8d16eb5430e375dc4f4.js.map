{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/FiberManualRecord.js","webpack:///./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack:///./node_modules/@material-ui/icons/SaveAlt.js","webpack:///./jacdac-ts/src/jdom/sensoraggregatorclient.ts","webpack:///./jacdac-ts/src/jdom/serviceclient.ts","webpack:///./src/components/EventSelect.tsx","webpack:///./src/components/DataSetGrid.tsx","webpack:///./src/pages/tools/collector.tsx","webpack:///./src/components/ReadingFieldGrid.tsx"],"names":["SensorAggregatorClient","service","registersUseAcks","setInputs","cfg","error","mapType","tp","SensorAggregatorSampleType","U8","U16","U32","I8","I16","I32","msg","Error","inputs","totalSampleSize","map","input","deviceId","serviceIndex","serviceClass","specification","serviceSpecificationFromClassIdentifier","toString","freeze","readingReg","packets","find","isReading","sampleType","undefined","sampleSize","sampleShift","fields","field","Math","abs","storage","shift","bufferConcat","fromHex","Uint8Array","jdpack","JD_SERIAL_MAX_PAYLOAD_SIZE","unshift","samplingInterval","samplesInWindow","register","SensorAggregatorReg","Inputs","sendSetAsync","bufferConcatMany","collect","numSamples","StreamingSamples","sendSetPackedAsync","subscribeSample","handler","reg","CurrentSample","mount","subscribe","REPORT_RECEIVE","bufferToArray","data","NumberFormat","Float32LE","getReg","id","f","refresh","stats","info","NumSamples","r","intValue","SampleSize","Object","keys","JDServiceClient","device","bus","JDClient","useStyles","makeStyles","theme","createStyles","formControl","minWidth","selectEmpty","marginTop","spacing","EventSelect","props","eventId","onChange","label","filter","className","useContext","JacdacContext","classes","events","useChange","arrayConcatMany","devices","services","event","selectedEvent","node","handleChange","ev","target","value","clsx","qualifiedName","friendlyName","DataSetGrid","tables","handleDeleteTable","ServiceManagerContext","fileStorage","gridBreakpoints","useGridBreakpoints","length","handleDownload","table","sep","csv","toCSV","saveText","name","handelDelete","rows","prettyDuration","duration","headers","join","root","marginBottom","grow","flexGrow","marginRight","segment","row","buttons","trend","width","vmiddle","verticalAlign","LIVE_HORIZON","createDataSet","registers","live","palette","colors","i","set","FieldDataSet","maxRows","Collector","useState","registerIdsChecked","setRegisterIdsChecked","aggregatorId","setAggregatorId","recording","setRecording","setTables","setRecordingLength","prefix","setPrefix","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","liveDataSet","setLiveDataSet","setLiveDataTimestamp","triggerEventId","setTriggerEventId","chartPalette","useChartPalette","readingRegisters","srv","isSensor","readingRegister","recordingRegisters","indexOf","aggregators","SRV_SENSOR_AGGREGATOR","aggregator","samplingIntervalDelayi","parseInt","samplingCount","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","triggerEvent","startEnabled","useEffect","un","EVENT","toggleRecording","createSensorConfig","saveConfig","sensorConfig","JSON","stringify","newDataSet","registerIds","handleRegisterCheck","splice","push","sort","stopRecording","startRecording","client","startStreamingRegisters","console","log","streamers","REPORT_UPDATE","streamer","handleSamplingIntervalChange","trim","handleSamplingDurationChange","handlePrefixChange","handleTriggerChange","handleAggregatorChecked","updateLiveData","timestamp","throttleUpdate","throttle","addRow","values","forEach","sendSetIntAsync","interval","setInterval","stopStreaming","clearInterval","startAdornment","ReadingFieldGridItem","registerChecked","deviceName","useDeviceName","handleCheck","color","colorOf","ReadingFieldGrid"],"mappings":"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","file":"component---src-pages-tools-collector-tsx-e8d16eb5430e375dc4f4.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","import { SensorAggregatorReg, SensorAggregatorSampleType } from \"../../jacdac-spec/dist/specconstants\"\nimport { bufferToArray, NumberFormat } from \"./buffer\"\nimport { JD_SERIAL_MAX_PAYLOAD_SIZE, REPORT_RECEIVE } from \"./constants\"\nimport { jdpack } from \"./pack\"\nimport { JDRegister } from \"./register\"\nimport { JDService } from \"./service\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { isReading, serviceSpecificationFromClassIdentifier } from \"./spec\"\nimport { bufferConcat, bufferConcatMany, fromHex } from \"./utils\"\n\nexport interface SensorAggregatorInputConfig {\n    serviceClass: number;\n    // if specified, also specify serviceIndex\n    deviceId?: string;\n    serviceIndex?: number;\n}\n\nexport interface SensorAggregatorConfig {\n    samplingInterval: number; // ms\n    samplesInWindow: number;\n    inputs: SensorAggregatorInputConfig[];\n}\n\nexport interface SensorAggregatorStats {\n    \"numSamples\": number;\n    \"sampleSize\": number;\n}\n\nexport class SensorAggregatorClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        this.service.registersUseAcks = true\n    }\n\n    async setInputs(cfg: SensorAggregatorConfig) {\n        function error(msg: string) {\n            throw new Error(\"Aggregator inputs: \" + msg)\n        }\n        function mapType(tp: number) {\n            switch (tp) {\n                case 1: return SensorAggregatorSampleType.U8\n                case 2: return SensorAggregatorSampleType.U16\n                case 4: return SensorAggregatorSampleType.U32\n                case -1: return SensorAggregatorSampleType.I8\n                case -2: return SensorAggregatorSampleType.I16\n                case -4: return SensorAggregatorSampleType.I32\n                default:\n                    error(\"unknown storage type\")\n            }\n        }\n\n        if (!cfg || !cfg.inputs)\n            error(\"invalid input format\");\n\n        let totalSampleSize = 0\n        const inputs = cfg.inputs?.map(input => {\n            const { deviceId, serviceIndex, serviceClass } = input\n            if (!!deviceId !== !!serviceIndex)\n                error(`deviceId and serviceIndex must be specified together`)\n            const specification = serviceSpecificationFromClassIdentifier(serviceClass)\n            if (!specification)\n                error(`missing specification from service 0x${serviceClass.toString(16)}`)\n            const freeze = !!deviceId\n            const readingReg = specification.packets.find(isReading)\n            if (!readingReg)\n                error(`service 0x${serviceClass.toString(16)} does not have a reading register`)\n            let sampleType: SensorAggregatorSampleType = undefined\n            let sampleSize = 0\n            let sampleShift = 0\n            for (const field of readingReg.fields) {\n                sampleSize += Math.abs(field.storage)\n                if (sampleType === undefined) {\n                    sampleType = mapType(field.storage)\n                    sampleShift = field.shift || 0\n                }\n                if (sampleType != mapType(field.storage) || sampleShift != (field.shift || 0))\n                    error(\"heterogenous field types\")\n            }\n            totalSampleSize += sampleSize\n            return bufferConcat(\n                freeze ? fromHex(deviceId) : new Uint8Array(8),\n                jdpack(\"u32 u8 u8 u8 i8\", [\n                    serviceClass,\n                    freeze ? serviceIndex : 0,\n                    sampleSize,\n                    sampleType,\n                    sampleShift\n                ])\n            )\n        })\n\n        if (totalSampleSize > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            error(\"samples won't fit in packet\")\n\n        // u32 is x[4]\n        inputs.unshift(jdpack(\"u16 u16 u32\", [cfg.samplingInterval, cfg.samplesInWindow, 0]))\n        await this.service.register(SensorAggregatorReg.Inputs)\n            .sendSetAsync(bufferConcatMany(inputs))\n    }\n\n    async collect(numSamples: number) {\n        await this.service.register(SensorAggregatorReg.StreamingSamples)\n            .sendSetPackedAsync(\"u32\", [numSamples]);\n    }\n\n    subscribeSample(handler: (sample: number[]) => void): () => void {\n        const reg = this.service.register(SensorAggregatorReg.CurrentSample)\n        return this.mount(reg.subscribe(REPORT_RECEIVE,\n            () => handler(bufferToArray(reg.data, NumberFormat.Float32LE))))\n    }\n\n    private async getReg(id: SensorAggregatorReg, f: (v: JDRegister) => any) {\n        const reg = this.service.register(id)\n        await reg.refresh()\n        return f(reg)\n    }\n\n    async stats(): Promise<SensorAggregatorStats> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const info: any = {\n            \"numSamples\": this.getReg(SensorAggregatorReg.NumSamples, r => r.intValue),\n            \"sampleSize\": this.getReg(SensorAggregatorReg.SampleSize, r => r.intValue),\n        }\n        for (const id of Object.keys(info)) {\n            info[id] = await info[id]\n        }\n        return info\n    }\n}\n\n","import { JDService } from \"./service\";\nimport { JDDevice } from \"./device\";\nimport { JDBus } from \"./bus\";\nimport { JDClient } from \"./client\";\n\nexport class JDServiceClient extends JDClient {\n\n    constructor(public readonly service: JDService) {\n        super()\n    }\n\n    protected get device(): JDDevice {\n        return this.service.device\n    }\n\n    protected get bus(): JDBus {\n        return this.device.bus\n    }\n\n    toString(): string {\n        return `client of ${this.service}`\n    }\n}\n","import React, { useContext } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n// tslint:disable-next-line: no-submodule-imports\nimport InputLabel from '@material-ui/core/InputLabel';\n// tslint:disable-next-line: no-submodule-imports\nimport MenuItem from '@material-ui/core/MenuItem';\n// tslint:disable-next-line: no-submodule-imports\nimport FormHelperText from '@material-ui/core/FormHelperText';\n// tslint:disable-next-line: no-submodule-imports\nimport FormControl from '@material-ui/core/FormControl';\n// tslint:disable-next-line: no-submodule-imports\nimport Select from '@material-ui/core/Select';\nimport { JDEvent } from '../../jacdac-ts/src/jdom/event';\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport useChange from '../jacdac/useChange';\nimport clsx from 'clsx';\nimport { arrayConcatMany } from '../../jacdac-ts/src/jdom/utils';\nimport { JDDevice } from '../../jacdac-ts/src/jdom/device';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\nexport default function EventSelect(props: {\n    eventId: string,\n    onChange: (eventId: string) => void,\n    label: string,\n    filter?: (event: JDEvent) => boolean,\n    className?: string\n}) {\n    const { eventId, onChange, label, filter, className } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const events: JDEvent[] = useChange(bus, () => arrayConcatMany(arrayConcatMany(\n        bus.devices().map((device: JDDevice) => device.services()\n            .map(service => service.events.filter(event => !filter || filter(event)))\n        )\n    )))\n    const selectedEvent = bus.node(eventId) as JDEvent\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string);\n    };\n\n    return (\n        <FormControl variant=\"outlined\" className={clsx(className, classes.formControl)}>\n            <InputLabel key=\"label\">{label}</InputLabel>\n            <Select\n                key=\"select\"\n                value={selectedEvent ? eventId : \"\"}\n                onChange={handleChange}\n                label={selectedEvent?.qualifiedName}>\n                <MenuItem key={\"none\"} value={\"\"}>\n                    <em>None</em>\n                </MenuItem>\n                {events.map(ev => <MenuItem key={ev.id} value={ev.id}>{ev.friendlyName}</MenuItem>)}\n            </Select>\n        </FormControl>\n    );\n}","import { Card, CardActions, CardContent, CardHeader, Grid } from \"@material-ui/core\";\nimport { Button, IconButton } from \"gatsby-theme-material-ui\";\nimport React, { useContext } from \"react\";\nimport { prettyDuration } from \"../../jacdac-ts/src/jdom/pretty\";\nimport ServiceManagerContext from \"./ServiceManagerContext\";\nimport Trend from \"./Trend\";\nimport useGridBreakpoints from './useGridBreakpoints';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FieldDataSet from \"./FieldDataSet\";\n\n\nexport default function DataSetGrid(props: {\n    tables: FieldDataSet[],\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { tables, handleDeleteTable } = props;\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const gridBreakpoints = useGridBreakpoints(tables?.length)\n\n    const handleDownload = (table: FieldDataSet) => () => {\n        const sep = ','\n        const csv = table.toCSV(sep)\n        fileStorage.saveText(`${table.name}.csv`, csv)\n    }\n    const handelDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n    return <Grid container spacing={2}>\n        {tables.map((table) =>\n            <Grid item {...gridBreakpoints} key={`result` + table.id}>\n                <Card>\n                    <CardHeader\n                        subheader={`${table.rows.length} rows, ${prettyDuration(table.duration)}`} />\n                    <CardContent>\n                        <div>{table.headers.join(', ')}</div>\n                        <Trend dataSet={table} height={8} mini={true} />\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<SaveAltIcon />}\n                            onClick={handleDownload(table)}>\n                            Save\n                        </Button>\n                        {handleDeleteTable &&\n                            <IconButton onClick={handelDelete(table)}>\n                                <DeleteIcon />\n                            </IconButton>}\n                    </CardActions>\n                </Card>\n            </Grid>)}\n    </Grid>\n}","import React, { useState, useContext, useEffect } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Button, TextField, InputAdornment, createStyles, Switch, Card, CardActions } from '@material-ui/core';\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from '@material-ui/icons/Stop';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from '@material-ui/icons/Save';\nimport useChange from '../../jacdac/useChange';\nimport { JDBus } from '../../../jacdac-ts/src/jdom/bus'\nimport FieldDataSet from '../../components/FieldDataSet';\nimport Trend from '../../components/Trend';\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../../components/ui/Alert\";\nimport EventSelect from '../../components/EventSelect';\nimport { JDEvent } from '../../../jacdac-ts/src/jdom/event';\nimport { EVENT, REPORT_UPDATE, SRV_SENSOR_AGGREGATOR } from '../../../jacdac-ts/src/jdom/constants';\nimport { arrayConcatMany, throttle } from '../../../jacdac-ts/src/jdom/utils';\nimport DataSetGrid from '../../components/DataSetGrid';\nimport { JDRegister } from '../../../jacdac-ts/src/jdom/register';\nimport ReadingFieldGrid from '../../components/ReadingFieldGrid';\nimport DeviceCardHeader from '../../components/DeviceCardHeader';\nimport { SensorAggregatorClient } from '../../../jacdac-ts/src/jdom/sensoraggregatorclient';\nimport { Link } from 'gatsby-theme-material-ui';\nimport { JDService } from '../../../jacdac-ts/src/jdom/service';\nimport ServiceManagerContext from '../../components/ServiceManagerContext';\nimport useChartPalette from '../../components/useChartPalette';\nimport { isSensor } from '../../../jacdac-ts/src/jdom/spec';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        marginBottom: theme.spacing(1)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    field: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1.5)\n    },\n    segment: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    row: {\n        marginBottom: theme.spacing(0.5)\n    },\n    buttons: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(2)\n    },\n    trend: {\n        width: theme.spacing(10)\n    },\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live)\n        set.maxRows = LIVE_HORIZON + 4\n\n    return set;\n}\n\nexport default function Collector() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles();\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [aggregatorId, setAggregatorId] = useState<string>(\"\")\n    const [recording, setRecording] = useState(false)\n    const [tables, setTables] = useState<FieldDataSet[]>([])\n    const [, setRecordingLength] = useState(0)\n    const [prefix, setPrefix] = useState(\"data\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"100\")\n    const [samplingDuration, setSamplingDuration] = useState(\"10\")\n    const [liveDataSet, setLiveDataSet] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n    const [triggerEventId, setTriggerEventId] = useState<string>(\"\")\n    const chartPalette = useChartPalette()\n    const readingRegisters = useChange(bus, bus =>\n        bus.devices().map(device => device\n            .services().find(srv => isSensor(srv.specification))\n            ?.readingRegister\n        ).filter(reg => !!reg))\n    const recordingRegisters = readingRegisters\n        .filter(reg => registerIdsChecked.indexOf(reg.id) > -1)\n    const aggregators: JDService[] = useChange(bus, bus => bus.services({ serviceClass: SRV_SENSOR_AGGREGATOR }))\n    const aggregator: JDService = aggregators.find(srv => srv.id == aggregatorId)\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(parseFloat(samplingDuration) * 1000 / samplingIntervalDelayi)\n    const errorSamplingIntervalDelay = isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const triggerEvent = bus.node(triggerEventId) as JDEvent;\n    const startEnabled = !!recordingRegisters?.length\n\n    useEffect(() => {\n        //console.log(`trigger event`, triggerEventId, triggerEvent)\n        const un = triggerEvent?.subscribe(EVENT, () => {\n            //console.log(`trigger toggle recoring`, recording)\n            toggleRecording()\n        })\n        //console.log(`mounted`, triggerEvent)\n        return () => {\n            //console.log(`unmount trigger`)\n            if (un) un()\n        }\n    }, [triggerEvent, recording, registerIdsChecked, liveDataSet])\n\n    const createSensorConfig = () => ({\n        samplingInterval: samplingIntervalDelayi,\n        samplesInWindow: 10,\n        inputs: recordingRegisters.map(reg => ({\n            serviceClass: reg.service.serviceClass\n        }))\n    })\n    const saveConfig = () => {\n        const sensorConfig = JSON.stringify(createSensorConfig(), null, 2)\n        fileStorage.saveText(`${prefix || \"jacdac\"}-sensor-config.json`, sensorConfig)\n    }\n    const newDataSet = (registerIds: string[], live: boolean) => registerIds.length\n        ? createDataSet(\n            bus,\n            readingRegisters.filter(reg => registerIds.indexOf(reg.id) > -1),\n            `${prefix || \"data\"}${tables.length}`,\n            live,\n            chartPalette)\n        : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1)\n            registerIdsChecked.splice(i, 1)\n        else\n            registerIdsChecked.push(reg.id)\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveDataSet(newDataSet(registerIdsChecked, true))\n    }\n    const stopRecording = () => {\n        if (recording) {\n            //console.log(`stop recording`, liveDataSet)\n            setTables([liveDataSet, ...tables])\n            setLiveDataSet(newDataSet(registerIdsChecked, true))\n            setRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!recording && recordingRegisters.length) {\n            setLiveDataSet(newDataSet(registerIdsChecked, false))\n            setRecording(true)\n            if (aggregator) {\n                const client = new SensorAggregatorClient(aggregator)\n                await client.setInputs(createSensorConfig())\n                client.collect(samplingCount)\n            }\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg => reg.subscribe(REPORT_UPDATE, () => { }))\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (recording)\n            stopRecording()\n        else\n            startRecording()\n    }\n    const handleSamplingIntervalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handlePrefixChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPrefix(event.target.value.trim())\n    }\n    const handleTriggerChange = (eventId: string) => setTriggerEventId(eventId)\n    const handleDeleteTable = (table: FieldDataSet) => {\n        const i = tables.indexOf(table)\n        if (i > -1) {\n            tables.splice(i, 1)\n            setTables([...tables])\n        }\n    }\n    const handleAggregatorChecked = (srv: JDService) => () => {\n        const id = srv?.id == aggregatorId ? '' : srv?.id\n        setAggregatorId(id);\n    }\n    const updateLiveData = () => {\n        setLiveDataSet(liveDataSet);\n        setRecordingLength(liveDataSet.rows.length)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveDataSet) return;\n        //console.log(values)\n        liveDataSet.addRow(values)\n        if (recording && liveDataSet.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return;\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg => reg.sendSetIntAsync(samplingIntervalDelayi));\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error || (aggregator && recording)) return undefined;\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi);\n        const stopStreaming = startStreamingRegisters()\n        return () => {\n            clearInterval(interval);\n            stopStreaming();\n        }\n    }, [recording, samplingIntervalDelayi, samplingCount, registerIdsChecked, aggregator]);\n    useEffect(() => {\n        if (aggregator) {\n            const client = new SensorAggregatorClient(aggregator)\n            return client.subscribeSample(values => addRow(values))\n        }\n        return () => { }\n    }, [recording, liveDataSet, registerIdsChecked, aggregator])\n\n    return <div className={classes.root}>\n        <h1>Data Collector</h1>\n        <p>\n            Use this page to collect streaming data from Jacdac devices into various output formats.\n        </p>\n        {!!aggregators.length && <div key=\"aggregators\">\n            <h3>(Optional) Choose a data aggregator</h3>\n            <p>A <Link to=\"/services/aggregator\">data aggregator</Link> service collects collects sensor data on the bus and returns an aggregated at regular intervals.</p>\n            <Grid container>\n                {aggregators.map(aggregator => <Grid key={'aggregate' + aggregator.id} item xs={4}>\n                    <Card>\n                        <DeviceCardHeader device={aggregator.device} showMedia={true} />\n                        <CardActions>\n                            <Switch checked={aggregatorId == aggregator.id} disabled={recording} onChange={handleAggregatorChecked(aggregator)} />\n                        </CardActions>\n                    </Card>\n                </Grid>)}\n            </Grid>\n        </div>}\n        <div key=\"sensors\">\n            <h3>Choose sensors</h3>\n            {!readingRegisters.length && <Alert className={classes.grow} severity=\"info\">Waiting for sensor...</Alert>}\n            {!!readingRegisters.length && <ReadingFieldGrid\n                readingRegisters={readingRegisters}\n                registerIdsChecked={registerIdsChecked}\n                recording={recording}\n                liveDataSet={liveDataSet}\n                handleRegisterCheck={handleRegisterCheck}\n            />}\n        </div>\n        <div key=\"record\">\n            <h3>Record data</h3>\n            {aggregator && <p>Record the sensor input configuration in order to up your ML model later on.</p>}\n            <div className={classes.buttons}>\n                <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color={recording ? \"secondary\" : \"primary\"}\n                    aria-label=\"start/stop recording\"\n                    title=\"start/stop recording\"\n                    onClick={toggleRecording}\n                    startIcon={recording ? <StopIcon /> : <PlayArrowIcon />}\n                    disabled={!startEnabled}\n                >{recording ? \"Stop\" : \"Start\"}</Button>\n                {aggregator && <Button\n                    variant=\"contained\"\n                    title=\"save sensor input configuration\"\n                    onClick={saveConfig}\n                    startIcon={<SaveIcon />}\n                    disabled={recording}>\n                    Save configuration\n                </Button>}\n            </div>\n            <div className={classes.row}>\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingIntervalDelay}\n                    disabled={recording}\n                    label=\"Sampling interval\"\n                    value={samplingIntervalDelay}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">ms</InputAdornment>,\n                    }}\n                    onChange={handleSamplingIntervalChange} />\n                <TextField\n                    className={classes.field}\n                    error={errorSamplingDuration}\n                    disabled={recording}\n                    label=\"Sampling duration\"\n                    value={samplingDuration}\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">s</InputAdornment>,\n                    }}\n                    onChange={handleSamplingDurationChange} />\n                <TextField\n                    className={classes.field}\n                    disabled={recording}\n                    label=\"File name prefix\"\n                    value={prefix}\n                    variant=\"outlined\"\n                    onChange={handlePrefixChange} />\n                <EventSelect className={classes.field} eventId={triggerEventId} onChange={handleTriggerChange} label={\"Start Event\"} />\n            </div>\n        </div>\n        {liveDataSet && <Trend key=\"trends\" height={12} dataSet={liveDataSet} horizon={LIVE_HORIZON} dot={true} gradient={true} />}\n        {\n            !!tables.length && <div key=\"recordings\">\n                <h3>Recordings</h3>\n                <DataSetGrid tables={tables} handleDeleteTable={handleDeleteTable} />\n            </div>\n        }\n    </div >;\n\n    //{liveDataSet && <DataSetTable key=\"datasettable\" className={classes.segment} dataSet={liveDataSet} maxRows={3} minRows={3} />}\n\n}\n","import { Card, CardActions, CardContent, CardHeader, createStyles, Grid, makeStyles, Switch, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\";\nimport DeviceActions from \"./DeviceActions\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FieldDataSet from \"./FieldDataSet\";\nimport useDeviceName from \"./useDeviceName\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    vmiddle: {\n        verticalAlign: \"middle\"\n    }\n}));\n\nfunction ReadingFieldGridItem(props: {\n    register: JDRegister,\n    handleRegisterCheck: (register: JDRegister) => void,\n    recording: boolean,\n    registerChecked: boolean,\n    liveDataSet?: FieldDataSet\n}) {\n    const { register, handleRegisterCheck, recording, registerChecked, liveDataSet } = props;\n    const gridBreakpoints = useGridBreakpoints();\n    const classes = useStyles();\n    const deviceName = useDeviceName(register.service.device)\n    const handleCheck = () => handleRegisterCheck(register)\n\n    return <Grid item {...gridBreakpoints} key={'source' + register.id}>\n        <Card>\n            <CardHeader subheader={register.service.name}\n                title={`${deviceName}/${register.name}`}\n                action={<DeviceActions device={register.service.device} showReset={true} />} />\n            <CardContent>\n                {register.fields.map((field) => <span key={field.id}>\n                    <FiberManualRecordIcon className={classes.vmiddle} fontSize=\"large\" style={({\n                        color: (registerChecked && liveDataSet?.colorOf(field)) || \"#ccc\"\n                    })} />\n                    {field.name}\n                </span>)}\n            </CardContent>\n            <CardActions>\n                <Switch disabled={recording} onChange={handleCheck} checked={registerChecked} />\n            </CardActions>\n        </Card>\n    </Grid>;\n}\n\nexport default function ReadingFieldGrid(props: {\n    readingRegisters: JDRegister[],\n    registerIdsChecked: string[],\n    recording?: boolean,\n    handleRegisterCheck: (register: JDRegister) => void,\n    liveDataSet?: FieldDataSet\n}) {\n    const { readingRegisters, registerIdsChecked, recording, handleRegisterCheck, liveDataSet } = props\n\n    return <Grid container spacing={2}>\n        {readingRegisters.map(register => {\n            const registerChecked = registerIdsChecked.indexOf(register.id) > -1;\n            return <ReadingFieldGridItem\n                key={register.id}\n                register={register}\n                registerChecked={registerChecked}\n                recording={recording}\n                handleRegisterCheck={handleRegisterCheck}\n                liveDataSet={liveDataSet}\n            />;\n        })}\n    </Grid>\n}"],"sourceRoot":""}