{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/VMRunner.tsx","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./src/components/vm/VMRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","MyRoleManager","notify","_roles","_devices","on","DEVICE_ANNOUNCE","dev","addServices","DEVICE_DISCONNECT","removeServices","roles","services","s","roleNeedingService","find","service","nameMatch","shortName","specification","d","rolesToUnmap","role","getService","n1","n2","cn1","slice","toLowerCase","trim","cn2","getServicesFromName","addRoleService","existingServices","values","p","ret","device","JDEventSource","VMStatus","JumpException","label","IT4CommandEvaluator","parent","env","gc","_regSaved","_changeSaved","_started","trace","context","command","evalExpression","e","expr","JDExprEvaluator","lookup","eval","checkExpression","start","callee","inst","args","arguments","evaluate","_status","Running","neededStart","a","sendCommandAsync","Completed","hasEvent","regValue","unparse","reg","writeRegisterAsync","writeLocal","Stopped","JDVMError","IT4CommandRunner","handlerId","_eval","handler","step","isWaiting","finish","status","cancel","IT4HandlerRunner","stopped","_labelToIndex","commands","c","cmd","reset","commandIndex","unsubscribe","getCommand","_commandIndex","executeCommandAsync","emit","JACDAC_VM_COMMAND_ATTEMPTED","_currentCommand","sourceId","JACDAC_VM_COMMAND_COMPLETED","Ready","IT4ProgramRunner","message","TRACE","prog","_handlers","_waitQueue","_running","_in_run","_program","compileProgram","checkProgram","regs","events","errors","handlers","debug","_rm","added","_env","serviceChanged","JACDAC_ROLE_SERVICE_BOUND","CHANGE","h","registerRegister","register","registerEvent","JACDAC_ROLE_SERVICE_UNBOUND","ERROR","VMEnvironment","run","serviceShortId","refreshRegistersAsync","nextTime","consumeEvent","ProgramError","VMRunner","runner","autoStartDefault","autoStart","disabled","useChange","t","setAutoStart","handleRun","handleCancel","running","useVMRunner","program","AppContext","setError","testRunner","setTestRunner","handleTrace","Flags","VMRoles","_","handleRoleClick","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","serviceSpecificationFromName","friendlyName","Diagnostics","xml","stringify","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","showDashboard","useLocalStorage","setXml","setSource","setProgram","handleXml","handleJSON","json","newSource","handleI4Program","newProgram","blocks","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-tsx-f1c6a5775de30331941c.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { SMap } from \"../jdom/utils\"\n\nexport class MyRoleManager extends JDEventSource {\n    private _roles: SMap<{ shortName: string; service: JDService }> = {}\n    private _devices: JDDevice[] = []\n\n    constructor(\n        private readonly bus: JDBus,\n        private readonly notify: (\n            role: string,\n            service: JDService,\n            added: boolean\n        ) => void\n    ) {\n        super()\n        this.bus.on(DEVICE_ANNOUNCE, (dev: JDDevice) => this.addServices(dev))\n        this.bus.on(DEVICE_DISCONNECT, (dev: JDDevice) =>\n            this.removeServices(dev)\n        )\n    }\n\n    roles() {\n        return this._roles\n    }\n\n    private addServices(dev: JDDevice) {\n        dev.services().forEach(s => {\n            let roleNeedingService = Object.keys(this._roles).find(\n                k =>\n                    !this._roles[k].service &&\n                    this.nameMatch(\n                        this._roles[k].shortName,\n                        s.specification.shortName\n                    )\n            )\n            if (roleNeedingService && this._devices.indexOf(dev) === -1) {\n                this._roles[roleNeedingService] = {\n                    shortName: s.specification.shortName,\n                    service: s,\n                }\n                this._devices.push(dev)\n                if (this.notify) this.notify(roleNeedingService, s, true)\n            }\n        })\n    }\n\n    private removeServices(dev: JDDevice) {\n        if (this._devices.indexOf(dev) >= 0) {\n            this._devices = this._devices.filter(d => d !== dev)\n            let rolesToUnmap = Object.keys(this._roles).filter(\n                k => dev.services().indexOf(this._roles[k].service) >= 0\n            )\n            if (rolesToUnmap.length > 0) {\n                rolesToUnmap.forEach(role => {\n                    let service = this._roles[role].service\n                    this._roles[role] = {\n                        shortName: service.specification.shortName,\n                        service: undefined,\n                    }\n                    if (this.notify) this.notify(role, service, false)\n                })\n            }\n        }\n    }\n\n    public getService(role: string): JDService {\n        return this._roles[role].service\n    }\n\n    private nameMatch(n1: string, n2: string) {\n        const cn1 = n1.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        const cn2 = n2.slice(0).toLowerCase().replace(\"_\", \" \").trim()\n        return cn1 === cn2\n    }\n\n    private getServicesFromName(root: string): JDService[] {\n        return this.bus\n            .services()\n            .filter(s => this.nameMatch(s.specification.shortName, root))\n    }\n\n    public addRoleService(role: string, shortName: string) {\n        if (role in this._roles && this._roles[role].service) return\n        this._roles[role] = { shortName, service: undefined }\n        const existingServices = Object.values(this._roles)\n            .filter(p => p.service)\n            .map(p => p.service)\n        let ret = this.getServicesFromName(shortName).filter(\n            s => existingServices.indexOf(s) === -1\n        )\n        if (ret.length > 0) {\n            this._roles[role].service = ret[0]\n            this._devices.push(ret[0].device)\n            this.notify(role, ret[0], true)\n        }\n    }\n}\n","import {\n    IT4Program,\n    IT4Handler,\n    IT4Command,\n} from \"./ir\"\nimport { MyRoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./ir\"\nimport {\n    JACDAC_ROLE_SERVICE_BOUND,\n    JACDAC_ROLE_SERVICE_UNBOUND,\n    JACDAC_VM_COMMAND_ATTEMPTED,\n    JACDAC_VM_COMMAND_COMPLETED,\n    JDVMError\n} from \"./utils\"\nimport { unparse } from \"./expr\"\nimport { SMap } from \"../jdom/utils\"\nimport { timeStamp } from \"console\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TraceContext = any\n\nexport enum VMStatus {\n    ProgramError = \"programerror\",\n    Ready = \"ready\",\n    Running = \"running\",\n    Completed = \"completed\",\n    Stopped = \"stopped\",\n}\n\ninterface Environment {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass JumpException {\n    constructor(public label:string) {}\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: IT4CommandRunner,\n        private readonly env: Environment,\n        private readonly gc: IT4Command\n    ) {}\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate() {\n        this._status = VMStatus.Running\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            this._status = VMStatus.Completed\n            return\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new JumpException((args[1] as jsep.Identifier).name)\n                }\n                this._status = VMStatus.Completed\n                break   \n            }\n            case \"jump\": {\n                this._status = VMStatus.Completed\n                throw new JumpException((args[0] as jsep.Identifier).name) \n            }\n            case \"label\": {\n                this._status = VMStatus.Completed\n                break   \n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n            default:\n                throw new JDVMError(`Unknown instruction ${this.inst}`)\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(\n        public readonly parent: IT4HandlerRunner,\n        private handlerId: number,\n        env: Environment,\n        public gc: IT4Command\n    ) {\n        this._eval = new IT4CommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n            // TODO: emit event\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    async step() {\n        if (this.isWaiting) {\n            this.trace(unparse(this.gc.command))\n            await this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        this.trace(s)\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner extends JDEventSource {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: IT4ProgramRunner,\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c,index) => {\n            const cmd = c as IT4Command\n            let id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private getCommand() {\n        let cmd =  this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new JDVMError(\"ite not compiled away\")\n        }\n        return cmd as IT4Command\n    }\n\n    private async executeCommandAsync() {\n        this.emit(JACDAC_VM_COMMAND_ATTEMPTED, this._currentCommand.gc.sourceId)\n        try {\n          await this._currentCommand.step()\n        } catch (e) {\n            if (e instanceof JumpException) {\n                const { label } = e as JumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index;\n                // since it's a label it executes successfully\n                this._currentCommand.status = VMStatus.Completed\n            } else {\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMStatus.Completed)\n            this.emit(\n                JACDAC_VM_COMMAND_COMPLETED,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new IT4CommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    // run-to-completion semantics\n    async step() {\n        // handler stopped or/ empty\n        if (this.stopped || !this.handler.commands.length) return\n        this.trace(\"step begin\")\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        await this.executeCommandAsync()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            await this.executeCommandAsync()\n        }\n        this.trace(\"step end\")\n    }\n}\n\nexport class IT4ProgramRunner extends JDEventSource {\n    private _handlers: IT4HandlerRunner[] = []\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _in_run = false\n    private _rm: MyRoleManager\n    private _program: IT4Program\n\n    trace(message: string, context: TraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    constructor(prog: IT4Program, bus: JDBus) {\n        super()\n        try {\n            this._program = compileProgram(prog)\n            const [regs, events] = checkProgram(this._program )\n            if (this._program.errors.length > 0) {\n                if (this._program.handlers.length === 0)\n                    throw(this._program.errors)\n                else\n                    console.debug(this._program.errors)\n            }\n            this._rm = new MyRoleManager(bus, (role, service, added) => {\n                try {\n                    this._env.serviceChanged(role, service, added)\n                    if (added) {\n                        this.emit(JACDAC_ROLE_SERVICE_BOUND, service)\n                        this.emit(CHANGE)\n                        this._program.handlers.forEach(h => {\n                            regs.forEach(r => {\n                                if (r.role === role) {\n                                    this._env.registerRegister(role, r.register)\n                                }\n                            })\n                            events.forEach(e => {\n                                if (e.role === role) {\n                                    this._env.registerEvent(role, e.event)\n                                }\n                            })\n                        })\n                    } else {\n                        this.emit(JACDAC_ROLE_SERVICE_UNBOUND, service)\n                        this.emit(CHANGE)\n                    }\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._env = new VMEnvironment()\n            this._env.subscribe(CHANGE, () => {\n                try {\n                    this.run()\n                } catch (e) {\n                    console.debug(e)\n                    this.emit(ERROR, e)\n                }\n            })\n            this._handlers = this._program.handlers.map(\n                (h, index) => new IT4HandlerRunner(this, index, this._env, h)\n            )\n            this._waitQueue = this._handlers.slice(0)\n        } catch (e) {\n            this._program = undefined\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get status() {\n        const ret =\n            this._program === undefined \n            ? VMStatus.ProgramError\n            : this._running === false\n            ? VMStatus.Stopped\n            : this._waitQueue.length > 0\n            ? VMStatus.Running\n            : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        if (!this._program || !this._running) return // nothing to cancel\n\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n        this.trace(\"cancelled\")\n    }\n\n    start() {\n        if (!this._program || this._running) return // already running\n        this.trace(\"start\")\n        try {\n            this._program.roles.forEach(role => {\n                this._rm.addRoleService(role.role, role.serviceShortId)\n            })\n            this._running = true\n            this._in_run = false\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    get roles() {\n        return this._program ? this._rm?.roles() : {}\n    }\n\n    async run() {\n        if (!this._program) return\n        if (!this._running) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            if (this._waitQueue.length > 0) {\n                const nextTime: IT4HandlerRunner[] = []\n                for (const h of this._waitQueue) {\n                    await h.step()\n                    if (h.status !== VMStatus.Stopped) {\n                        if (h.status === VMStatus.Completed) h.reset()\n                        nextTime.push(h)\n                    }\n                }\n                this._waitQueue = nextTime\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Button } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\n\nexport default function VMRunner(props: {\n    runner: IT4ProgramRunner\n    autoStart?: boolean\n}) {\n    const { runner, autoStart: autoStartDefault } = props\n    const disabled = !runner\n    const status = useChange(runner, t => t?.status)\n    const [autoStart, setAutoStart] = useState<boolean>(!!autoStartDefault)\n    const handleRun = () => {\n        setAutoStart(!!autoStartDefault)\n        try {\n            runner.start()\n        } catch (e) {\n            console.debug(e)\n        }\n    }\n    const handleCancel = () => {\n        setAutoStart(false)\n        runner.cancel()\n    }\n    const running = status === VMStatus.Running\n\n    // auto start\n    useEffect(() => {\n        if (autoStart && runner) runner.start()\n        return () => runner?.cancel()\n    }, [runner, autoStart])\n\n    return (\n        <Button\n            disabled={disabled}\n            variant=\"contained\"\n            onClick={running ? handleCancel : handleRun}\n            color={running ? \"default\" : \"primary\"}\n            startIcon={running ? <StopIcon /> : <PlayArrowIcon />}\n        >\n            {running ? \"Stop\" : \"Run\"}\n        </Button>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    IT4ProgramRunner,\n    TraceContext,\n} from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nexport default function useVMRunner(program: IT4Program) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [testRunner, setTestRunner] = useState<IT4ProgramRunner>()\n\n    // create runner\n    useEffect(() => {\n        const runner = program && new IT4ProgramRunner(program, bus)\n        setTestRunner(runner)\n    }, [program])\n\n    // errors\n    useEffect(() => testRunner?.subscribe(ERROR, e => setError(e)))\n    // traces\n    const handleTrace = (value: { message: string; context: TraceContext }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(() =>\n        testRunner?.subscribe<{ message: string; context: TraceContext }>(\n            TRACE,\n            handleTrace\n        )\n    )\n\n    return {\n        runner: testRunner,\n    }\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4ProgramRunner } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport AddIcon from \"@material-ui/icons/Add\"\n\nexport default function VMRoles(props: { runner: IT4ProgramRunner }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { runner } = props\n    const roles = useChange(runner, _ => {\n        const r = _?.roles\n        if (r) console.debug(`vm roles`, { roles: r })\n        return r\n    })\n    const handleRoleClick =\n        (role: string, service: JDService, specification: jdspec.ServiceSpec) =>\n        () => {\n            if (!service && specification) {\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n            } else {\n                // do nothing\n            }\n        }\n\n    return (\n        <Grid container spacing={1}>\n            {roles &&\n                Object.keys(roles)\n                    .map(role => ({\n                        role,\n                        service: roles[role].service,\n                        specification: serviceSpecificationFromName(\n                            roles[role].shortName\n                        ),\n                    }))\n                    .map(({ role, service, specification }) => (\n                        <Grid item key={role}>\n                            <Tooltip\n                                title={\n                                    service\n                                        ? `bound to ${service.device.friendlyName}`\n                                        : `start simulator`\n                                }\n                            >\n                                <Chip\n                                    label={role}\n                                    variant={service ? \"default\" : \"outlined\"}\n                                    avatar={\n                                        service ? (\n                                            <DeviceAvatar\n                                                device={service.device}\n                                            />\n                                        ) : (\n                                            <AddIcon />\n                                        )\n                                    }\n                                    onClick={handleRoleClick(\n                                        role,\n                                        service,\n                                        specification\n                                    )}\n                                />\n                            </Tooltip>\n                        </Grid>\n                    ))}\n        </Grid>\n    )\n}\n","import { Grid, NoSsr, Typography } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport Dashboard from \"../../components/dashboard/Dashboard\"\nimport Alert from \"../../components/ui/Alert\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport VMRunner from \"../../components/vm/VMRunner\"\nimport CodeBlock from \"../../components/CodeBlock\"\nimport useVMRunner from \"./useVMRunner\"\nimport VMRoles from \"./VMRoles\"\n\nfunction Diagnostics(props: {\n    program: IT4Program\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">IT4</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.it4\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: {\n    storageKey?: string\n    showDashboard?: boolean\n}) {\n    const { storageKey, showDashboard } = props\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<IT4Program>()\n    const { runner } = useVMRunner(program)\n\n    const handleXml = (xml: string) => {\n        setXml(xml)\n    }\n    const handleJSON = (json: WorkspaceJSON) => {\n        const newSource = JSON.stringify(json)\n        if (JSON.stringify(source) !== newSource) setSource(json)\n    }\n    const handleI4Program = (json: IT4Program) => {\n        const newProgram = JSON.stringify(json)\n        if (JSON.stringify(program) !== newProgram) setProgram(json)\n    }\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            {!source?.blocks?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\" closeable={true}>\n                        Start a simulator or connect a device to load the blocks\n                        automatically.\n                    </Alert>\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <NoSsr>\n                    <VMBlockEditor\n                        initialXml={xml}\n                        onXmlChange={handleXml}\n                        onJSONChange={handleJSON}\n                        onIT4ProgramChange={handleI4Program}\n                        runner={runner}\n                    />\n                </NoSsr>\n            </Grid>\n            <Grid item xs={12}>\n                <VMRunner autoStart={true} runner={runner} />\n            </Grid>\n            <Grid item xs={12}>\n                <VMRoles runner={runner} />\n            </Grid>\n            {Flags.diagnostics && (\n                <Diagnostics program={program} source={source} xml={xml} />\n            )}\n            {showDashboard && (\n                <Grid item xs={12}>\n                    <Dashboard\n                        showStartSimulators={true}\n                        showHeader={true}\n                        showAvatar={true}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor showDashboard={true} />\n}\n"],"sourceRoot":""}