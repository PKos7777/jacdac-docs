{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardAccelerometer.tsx"],"names":["CanvasWidget","lazy","valueDisplay","v","roundWithPrecision","Sliders","props","server","register","forces","useRegisterUnpackedValue","handleChangeX","event","newValue","reading","values","y","n","nz","Math","sqrt","setValues","sendGetAsync","handleChangeY","x","length","min","max","step","marks","value","lerp","v0","v1","t","DashboardAccelerometer","service","visible","AccelerometerReg","Forces","useServiceServer","color","useWidgetTheme","active","rotator","useCallback","delta","rotation","unpackedValue","undefined","z","roll","atan2","pitch","atan"],"mappings":"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","file":"106-d13f9aba9070fbef36a9.js","sourcesContent":["import React, { lazy, useCallback } from \"react\"\nimport { AccelerometerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SensorServer from \"../../../jacdac-ts/src/servers/sensorserver\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport { Grid, Mark, NoSsr } from \"@material-ui/core\"\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { Vector } from \"../widgets/threeutils\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport Suspense from \"../ui/Suspense\"\nimport SliderWithLabel from \"../ui/SliderWithLabel\"\n\nconst CanvasWidget = lazy(() => import(\"../widgets/CanvasWidget\"))\n\nconst valueDisplay = (v: number) => roundWithPrecision(v, 1)\nfunction Sliders(props: {\n    server: SensorServer<[number, number, number]>\n    register: JDRegister\n    visible?: boolean\n}) {\n    const { server, register } = props\n    const forces = useRegisterUnpackedValue<[number, number, number]>(\n        register,\n        props\n    )\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleChangeX: any = async (\n        event: unknown,\n        newValue: number | number[]\n    ) => {\n        const [, y] = server.reading.values()\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const n = (newValue as any) as number\n        const nz = -Math.sqrt(1 - (n * n + y * y))\n        server.reading.setValues([n, y, nz])\n        await register.sendGetAsync()\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleChangeY: any = async (\n        event: unknown,\n        newValue: number | number[]\n    ) => {\n        const [x] = server.reading.values()\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const n = (newValue as any) as number\n        const nz = -Math.sqrt(1 - (x * x + n * n))\n        server.reading.setValues([x, n, nz])\n        await register.sendGetAsync()\n    }\n\n    if (!forces?.length) return <LoadingProgress />\n    const [x, y] = forces\n    const min = -2\n    const max = 2\n    const step = 0.1\n    const marks: Mark[] = [\n        {\n            value: 0,\n        },\n        {\n            value: -1,\n        },\n        {\n            value: 1,\n        },\n    ]\n    return (\n        <>\n            <Grid item xs={12}>\n                <SliderWithLabel\n                    label=\"X\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={valueDisplay}\n                    aria-label=\"x\"\n                    min={min}\n                    max={max}\n                    step={step}\n                    value={x}\n                    onChange={handleChangeX}\n                    marks={marks}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <SliderWithLabel\n                    label=\"Y\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={valueDisplay}\n                    aria-label=\"y\"\n                    min={min}\n                    max={max}\n                    step={step}\n                    value={y}\n                    onChange={handleChangeY}\n                    marks={marks}\n                />\n            </Grid>\n        </>\n    )\n}\n\nfunction lerp(v0: number, v1: number, t: number) {\n    return v0 * (1 - t) + v1 * t\n}\n\nexport default function DashboardAccelerometer(props: DashboardServiceProps) {\n    const { service, visible } = props\n    const register = service.register(AccelerometerReg.Forces)\n    const server = useServiceServer<SensorServer<[number, number, number]>>(\n        service\n    )\n    const color = server ? \"secondary\" : \"primary\"\n    const { active } = useWidgetTheme(color)\n    const rotator = useCallback(\n        (delta: number, rotation: Vector) => {\n            const forces = register.unpackedValue\n            if (!forces) return undefined\n            const [x, y, z] = forces\n            const roll = Math.atan2(-y, z)\n            const pitch = Math.atan(x / (y * y + z * z))\n\n            return {\n                x: lerp(rotation.x, roll, 0.1),\n                y: 0,\n                z: lerp(rotation.z, pitch, 0.1),\n            }\n        },\n        [register]\n    )\n\n    return (\n        <Grid container direction=\"row\">\n            <Grid item>\n                <NoSsr>\n                    <Suspense>\n                        <CanvasWidget\n                            showAxes={true}\n                            color={active}\n                            rotator={rotator}\n                        />\n                    </Suspense>\n                </NoSsr>\n            </Grid>\n            {server && (\n                <Sliders server={server} register={register} visible={visible} />\n            )}\n        </Grid>\n    )\n}\n"],"sourceRoot":""}