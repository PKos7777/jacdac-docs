{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardCharacterScreen.tsx"],"names":["useStyles","makeStyles","createStyles","text","fontFamily","fontWeight","box","DashboardCharacterScreen","props","service","classes","useRegisterUnpackedValue","register","CharacterScreenReg","Message","message","Rows","rows","Columns","columns","TextDirection","textDirection","useWidgetTheme","textPrimary","background","controlBackground","undefined","cw","ch","m","mo","fs","rtl","CharacterScreenTextDirection","RightToLeft","w","h","lines","split","els","y","row","x","line","column","char","push"],"mappings":"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","file":"106-ab5ede8c2140d7616870.js","sourcesContent":["import React from \"react\"\nimport {\n    CharacterScreenReg,\n    CharacterScreenTextDirection,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        text: {\n            fontFamily: \"monospace\",\n            fontWeight: 100,\n        },\n        box: {},\n    })\n)\n\nexport default function DashboardCharacterScreen(props: DashboardServiceProps) {\n    const { service } = props\n    const classes = useStyles()\n    const [message] = useRegisterUnpackedValue<[string]>(\n        service.register(CharacterScreenReg.Message),\n        props\n    )\n    const [rows] = useRegisterUnpackedValue<[number]>(\n        service.register(CharacterScreenReg.Rows),\n        props\n    )\n    const [columns] = useRegisterUnpackedValue<[number]>(\n        service.register(CharacterScreenReg.Columns),\n        props\n    )\n    const [textDirection] = useRegisterUnpackedValue<[number]>(\n        service.register(CharacterScreenReg.TextDirection),\n        props\n    )\n    const { textPrimary, background, controlBackground } = useWidgetTheme(\n        \"primary\"\n    )\n\n    if (rows === undefined || columns === undefined) return <LoadingProgress /> // size unknown\n\n    const cw = 8\n    const ch = 10\n    const m = 1\n    const mo = 2\n    const fs = 8\n\n    const rtl = textDirection === CharacterScreenTextDirection.RightToLeft\n    const w = columns * (cw + m) - m + 2 * mo\n    const h = rows * (ch + m) - m + 2 * mo\n\n    const lines = (message || \"\").split(/\\n/g)\n    const els: JSX.Element[] = []\n\n    let y = mo\n    for (let row = 0; row < rows; ++row) {\n        let x = mo\n        const line = lines[row]\n        for (let column = 0; column < columns; ++column) {\n            const char = line?.[rtl ? columns - 1 - column : column]\n            els.push(\n                <g key={`${row}-${column}`}>\n                    <rect\n                        x={x}\n                        y={y}\n                        width={cw}\n                        height={ch}\n                        className={classes.box}\n                        fill={controlBackground}\n                    />\n                    {char && (\n                        <text\n                            x={x + cw / 2}\n                            y={y + ch - fs / 3}\n                            textAnchor=\"middle\"\n                            fontSize={fs}\n                            className={classes.text}\n                            fill={textPrimary}\n                            aria-label={char}\n                        >\n                            {char}\n                        </text>\n                    )}\n                </g>\n            )\n            x += cw + m\n        }\n\n        y += ch + m\n    }\n    return (\n        <SvgWidget\n            tabIndex={0}\n            title={`character screen displaying \"${message}\"`}\n            width={w}\n            height={h}\n        >\n            <>\n                <rect\n                    x={0}\n                    y={0}\n                    width={w}\n                    height={h}\n                    r={m / 2}\n                    fill={background}\n                />\n                {els}\n            </>\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}