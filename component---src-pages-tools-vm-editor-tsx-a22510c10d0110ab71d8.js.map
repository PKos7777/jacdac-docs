{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./jacdac-ts/src/vm/environment.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/expr.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/utils.ts","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/vmrunner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/rolemanager.ts","webpack://jacdac-docs/./src/components/vm/useRoleManager.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButton.tsx","webpack://jacdac-docs/./src/components/vm/VMSaveButton.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["VMServiceEnvironment","service","_registers","_events","registerRegister","regName","handler","pkt","specification","packets","find","isRegister","name","register","identifier","mount","subscribe","CHANGE","registerEvent","eventName","isEvent","event","EVENT","sendCommandAsync","command","values","commandName","p","isCommand","sendCmdAsync","jdpack","packFormat","writeRegisterAsync","ev","jdreg","sendSetPackedAsync","lookup","e","root","type","object","fld","undefined","property","unpackedValue","field","fields","f","value","refreshRegistersAsync","k","refresh","JDServiceClient","VMEnvironment","registers","events","_currentEvent","_envs","_locals","serviceChanged","role","unmount","forEach","r","reg","serviceEnv","getService","emit","getRootName","s","ROLE_HAS_NO_SERVICE","Object","roleName","me","local","writeLocal","consumeEvent","hasEvent","unsubscribe","vs","JDEventSource","unparse","ae","elements","map","join","caller","callee","arguments","computed","be","left","operator","right","ue","argument","raw","JDExprEvaluator","env","callEval","exprStack","tos","length","pop","eval","visitExpression","ret","push","top","Math","abs","le","val","JDVMError","id","lit","VM_ERROR","ROLE_BOUND","ROLE_UNBOUND","VM_COMMAND_ATTEMPTED","VM_COMMAND_COMPLETED","message","jacdacName","Error","errorPath","useWindowEvent","listener","passive","deps","useEffect","window","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","m","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","repo","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","createElement","style","position","bottom","width","height","body","appendChild","random","options","snippetMode","Promise","resolve","reject","handleMessage","msg","data","keys","useStyles","makeStyles","createStyles","root2","paddingTop","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","origin","URL","PACKET_SEND","PACKET_PROCESS","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","VMStatus","JumpException","label","IT4CommandEvaluator","parent","gc","_regSaved","_changeSaved","_started","trace","context","evalExpression","expr","checkExpression","start","inst","args","evaluate","_status","Running","neededStart","a","Completed","regValue","Stopped","IT4CommandRunner","handlerId","_eval","step","isWaiting","finish","status","cancel","IT4HandlerRunner","stopped","_labelToIndex","commands","c","cmd","reset","commandIndex","getCommand","_commandIndex","executeCommandAsync","_currentCommand","sourceId","Ready","IT4ProgramRunner","TRACE","roleManager","prog","_handlers","_waitQueue","_running","_in_run","_program","compileProgram","checkProgram","errors","debug","_env","handlers","h","slice","run","ERROR","addRoleService","roles","setRoles","nextTime","ProgramError","JDClient","useVMRunner","program","autoStart","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","newTestRunner","handleTrace","Flags","RoleManager","_roles","on","DEVICE_ANNOUNCE","addServices","bind","DEVICE_DISCONNECT","removeServices","devices","ignoreSelf","announced","dev","newRoles","supportedNewRoles","serviceShortId","serviceSpecificationFromName","newRole","existingRole","bindServices","unboundRoles","binding","boundRoles","services","serviceName","srv","b","selfDevice","device","useRoleManager","VMDiagnostics","xml","stringify","VMRunnerButton","disabled","useChange","t","handleRun","handleCancel","running","VMSaveButton","json","VMStartSimulatorButton","toggleShowDeviceHostsDialog","VMToolbar","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","useLocalStorage","setXml","setSource","setProgram","handleXml","handleJSON","newSource","handleI4Program","newProgram","Page"],"mappings":"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","file":"component---src-pages-tools-vm-editor-tsx-a22510c10d0110ab71d8.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { isEvent, isRegister, isCommand } from \"../jdom/spec\"\nimport { JDEvent } from \"../jdom/event\"\nimport { JDServiceClient } from \"../jdom/serviceclient\"\nimport { JDRegister } from \"../jdom/register\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDService } from \"../jdom/service\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, EVENT } from \"../jdom/constants\"\nimport { jdpack, PackedValues } from \"../jdom/pack\"\nimport { ROLE_HAS_NO_SERVICE } from \"./utils\"\nimport { RoleRegister, RoleEvent } from \"./ir\"\n\nexport class VMServiceEnvironment extends JDServiceClient {\n    private _registers: SMap<JDRegister> = {}\n    private _events: SMap<JDEvent> = {}\n\n    constructor(service: JDService) {\n        super(service)\n    }\n\n    public registerRegister(regName: string, handler: () => void) {\n        if (!this._registers[regName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isRegister(pkt) && pkt.name === regName\n            )\n            if (pkt) {\n                const register = this.service.register(pkt.identifier)\n                this._registers[regName] = register\n                this.mount(register.subscribe(CHANGE, handler))\n            }\n        }\n    }\n\n    public registerEvent(eventName: string, handler: () => void) {\n        if (!this._events[eventName]) {\n            const pkt = this.service.specification.packets.find(\n                pkt => isEvent(pkt) && pkt.name === eventName\n            )\n            if (pkt) {\n                const event = this.service.event(pkt.identifier)\n                this._events[eventName] = event\n                this.mount(event.subscribe(EVENT, handler))\n            }\n        }\n    }\n\n    public async sendCommandAsync(\n        command: jsep.Identifier,\n        values: PackedValues\n    ) {\n        const commandName = command?.name\n        const pkt = this.service.specification.packets.find(\n            p => isCommand(p) && p.name === commandName\n        )\n        if (pkt) {\n            await this.service.sendCmdAsync(\n                pkt.identifier,\n                jdpack(pkt.packFormat, values),\n                true\n            )\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async writeRegisterAsync(regName: string, ev: any) {\n        const jdreg = this._registers[regName]\n        await jdreg?.sendSetPackedAsync(\n            jdreg.specification?.packFormat,\n            [ev],\n            true\n        )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | jsep.Identifier | string): any {\n        let root =\n            typeof e === \"string\"\n                ? e\n                : e.type === \"Identifier\"\n                ? e.name\n                : (e.object as jsep.Identifier).name\n        let fld =\n            typeof e === \"string\"\n                ? undefined\n                : e.type === \"Identifier\"\n                ? undefined\n                : (e.property as jsep.Identifier).name\n        if (root in this._registers) {\n            if (!fld) return this._registers[root].unpackedValue?.[0]\n            else {\n                const field = this._registers[root].fields.find(\n                    f => f.name === fld\n                )\n                return field?.value\n            }\n        } else if (root in this._events) {\n            const field = this._events[root].fields?.find(f => f.name === fld)\n            return field?.value\n        }\n        return undefined\n    }\n\n    public async refreshRegistersAsync() {\n        for (const k in this._registers) {\n            const register = this._registers[k]\n            await register.refresh()\n        }\n    }\n}\n\nexport class VMEnvironment extends JDEventSource {\n    private _currentEvent: string = undefined\n    private _envs: SMap<VMServiceEnvironment> = {}\n    private _locals: SMap<string> = {}\n\n    constructor(private registers: RoleRegister[], private events: RoleEvent[]) {\n        super()\n    }\n\n    public serviceChanged(role: string, service: JDService) {\n        if (this._envs[role]) {\n            this._envs[role].unmount()\n            this._envs[role] = undefined\n        }\n        if (service) {\n            this._envs[role] = new VMServiceEnvironment(service)\n            this.registers.forEach(r => {\n                if (r.role === role) {\n                    this.registerRegister(role, r.register)\n                }\n            })\n            this.events.forEach(e => {\n                if (e.role === role) {\n                    this.registerEvent(role, e.event)\n                }\n            })\n        }\n    }\n\n    public registerRegister(role: string, reg: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerRegister(reg, () => {\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    public registerEvent(role: string, ev: string) {\n        const serviceEnv = this.getService(role)\n        if (serviceEnv) {\n            serviceEnv.registerEvent(ev, () => {\n                this._currentEvent = `${role}.${ev}`\n                this.emit(CHANGE)\n            })\n        }\n    }\n\n    private getRootName(e: jsep.MemberExpression | string) {\n        if (!e) return undefined\n        if (typeof e === \"string\") return e\n        if (e.type === \"MemberExpression\")\n            return (e.object as jsep.Identifier).name\n        return undefined\n    }\n\n    private getService(e: jsep.MemberExpression | string) {\n        const root = this.getRootName(e)\n        if (!root) return undefined\n        let s = this._envs[root]\n        if (!s) {\n            this.emit(ROLE_HAS_NO_SERVICE, root)\n        }\n        return s\n    }\n\n    public async refreshRegistersAsync() {\n        for (const s of Object.values(this._envs)) {\n            await s?.refreshRegistersAsync()\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async sendCommandAsync(\n        e: jsep.MemberExpression,\n        values: PackedValues\n    ) {\n        const serviceEnv = this.getService(e)\n        await serviceEnv?.sendCommandAsync(\n            e.property as jsep.Identifier,\n            values\n        )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public lookup(e: jsep.MemberExpression | string): any {\n        const roleName = this.getRootName(e)\n        if (roleName === \"$\") {\n            let me = e as jsep.MemberExpression\n            if (me.property.type === \"Identifier\") {\n                const local = (me.property as jsep.Identifier).name\n                return this._locals[local]\n            }\n            return undefined\n        }\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) {\n            return undefined\n        }\n        const me = e as jsep.MemberExpression\n        return serviceEnv.lookup(\n            me.property as jsep.Identifier | jsep.MemberExpression\n        )\n    }\n\n    public async writeRegisterAsync(\n        e: jsep.MemberExpression | string,\n        ev: any\n    ) {\n        const serviceEnv = this.getService(e)\n        const me = e as jsep.MemberExpression\n        if (serviceEnv && me.property.type === \"Identifier\") {\n            const reg = (me.property as jsep.Identifier).name\n            await serviceEnv.writeRegisterAsync(reg, ev)\n        }\n    }\n\n    public writeLocal(e: jsep.MemberExpression | string, ev: any) {\n        const roleName = this.getRootName(e)\n        if (!roleName || roleName !== \"$\") return undefined\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const local = (me.property as jsep.Identifier).name\n            this._locals[local] = ev\n            return true\n        }\n        return false\n    }\n\n    public consumeEvent() {\n        this._currentEvent = undefined\n    }\n\n    public hasEvent(e: jsep.MemberExpression | string) {\n        const roleName = this.getRootName(e)\n        const serviceEnv = this.getService(e)\n        if (!serviceEnv) return false\n        const me = e as jsep.MemberExpression\n        if (me.property.type === \"Identifier\") {\n            const event = (me.property as jsep.Identifier).name\n            return this._currentEvent === `${roleName}.${event}`\n        }\n        return false\n    }\n\n    public unsubscribe() {\n        for (const vs of Object.values(this._envs)) {\n            vs.unmount()\n        }\n    }\n}\n","import { JDVMError } from \"./utils\"\n\nexport type GetValue = (e: jsep.MemberExpression | string) => any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type StartMap = { e: jsep.Expression; v: any }[]\n\nexport type CallEvaluator = (\n    ce: jsep.CallExpression,\n    ee: JDExprEvaluator\n) => any\n\nexport function unparse(e: jsep.Expression): string {\n    switch (e.type) {\n        case \"ArrayExpression\": {\n            const ae = e as jsep.ArrayExpression\n            return `[${ae.elements.map(unparse).join(\", \")}]`\n        }\n        case \"CallExpression\": {\n            const caller = e as jsep.CallExpression\n            return `${unparse(caller.callee)}(${caller.arguments\n                .map(unparse)\n                .join(\", \")})`\n        }\n        case \"MemberExpression\": {\n            const root = e as jsep.MemberExpression\n            return root.computed\n                ? `${unparse(root.object)}[${unparse(root.property)}]`\n                : `${unparse(root.object)}.${unparse(root.property)}`\n        }\n        case \"BinaryExpression\":\n        case \"LogicalExpression\": {\n            const be = e as any\n            return `(${unparse(be.left)} ${be.operator} ${unparse(be.right)})`\n        }\n        case \"UnaryExpression\": {\n            const ue = e as jsep.UnaryExpression\n            return `${ue.operator}${unparse(ue.argument)}`\n        }\n        case \"Identifier\": {\n            return (e as jsep.Identifier).name\n        }\n        case \"Literal\": {\n            return (e as jsep.Literal).raw\n        }\n        default:\n            return \"TODO\"\n    }\n}\n\nexport class JDExprEvaluator {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private exprStack: any[] = []\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private env: GetValue, private callEval: CallEvaluator) {}\n\n    public tos() {\n        return this.exprStack[this.exprStack.length - 1]\n    }\n\n    public pop() {\n        return this.exprStack.pop()\n    }\n\n    public eval(e: jsep.Expression) {\n        this.exprStack = []\n        this.visitExpression(e)\n        return this.exprStack.pop()\n    }\n\n    public visitExpression(e: jsep.Expression) {\n        switch (e.type) {\n            case \"ArrayExpression\": {\n                // nothing to do here yet (only used for event function)\n                break\n            }\n\n            case \"CallExpression\": {\n                if (this.callEval) {\n                    let ret = this.callEval(<jsep.CallExpression>e, this)\n                    this.exprStack.push(ret)\n                } else this.exprStack.push(undefined)\n                break\n            }\n\n            case \"BinaryExpression\": {\n                const be = <jsep.BinaryExpression>e\n                this.visitExpression(be.left)\n                this.visitExpression(be.right)\n                const right = this.exprStack.pop()\n                const left = this.exprStack.pop()\n                switch (be.operator) {\n                    case \"+\":\n                        this.exprStack.push(left + right)\n                        return\n                    case \"-\":\n                        this.exprStack.push(left - right)\n                        return\n                    case \"/\":\n                        this.exprStack.push(left / right)\n                        return\n                    case \"*\":\n                        this.exprStack.push(left * right)\n                        return\n                    case \"%\":\n                        this.exprStack.push(left % right)\n                        return\n                    case \">>\":\n                        this.exprStack.push(left >> right)\n                        return\n                    case \">>>\":\n                        this.exprStack.push(left >>> right)\n                        return\n                    case \"<<\":\n                        this.exprStack.push(left << right)\n                        return\n                    case \"|\":\n                        this.exprStack.push(left | right)\n                        return\n                    case \"&\":\n                        this.exprStack.push(left & right)\n                        return\n                    case \"^\":\n                        this.exprStack.push(left ^ right)\n                        return\n                    case \"==\":\n                        this.exprStack.push(left == right)\n                        return\n                    case \"!=\":\n                        this.exprStack.push(left != right)\n                        return\n                    case \"===\":\n                        this.exprStack.push(left === right)\n                        return\n                    case \"!==\":\n                        this.exprStack.push(left !== right)\n                        return\n\n                    case \"<\":\n                        this.exprStack.push(left < right)\n                        return\n                    case \">\":\n                        this.exprStack.push(left > right)\n                        return\n                    case \"<=\":\n                        this.exprStack.push(left <= right)\n                        return\n                    case \">=\":\n                        this.exprStack.push(left >= right)\n                        return\n                }\n                break\n            }\n\n            case \"UnaryExpression\": {\n                const ue = <jsep.UnaryExpression>e\n                this.visitExpression(ue.argument)\n                const top = this.exprStack.pop()\n                switch (ue.operator) {\n                    case \"ABS\":\n                        this.exprStack.push(Math.abs(top))\n                        return\n                    case \"!\":\n                        this.exprStack.push(!top)\n                        return\n                    case \"~\":\n                        this.exprStack.push(~top)\n                        return\n                    case \"-\":\n                        this.exprStack.push(-top)\n                        return\n                    case \"+\":\n                        this.exprStack.push(+top)\n                        return\n                }\n                break\n            }\n\n            case \"LogicalExpression\": {\n                const le = <jsep.LogicalExpression>e\n                this.visitExpression(le.left)\n                switch (le.operator) {\n                    case \"||\":\n                        if (this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    case \"&&\":\n                        if (!this.tos()) return\n                        else this.visitExpression(le.right)\n                        return\n                    default:\n                }\n                break\n            }\n            case \"MemberExpression\": {\n                // for now, we don't support evaluation of obj or prop\n                // of obj.prop\n                const val = this.env(e as jsep.MemberExpression)\n                if (val === undefined) {\n                    throw new JDVMError(`lookup of ${unparse(e)} failed`)\n                }\n                this.exprStack.push(val)\n                return\n            }\n            case \"Identifier\": {\n                const id = <jsep.Identifier>e\n                const val = this.env(id.name)\n                if (val === undefined)\n                    throw new JDVMError(`lookup of ${id.name} failed`)\n                this.exprStack.push(val)\n                return\n            }\n            case \"Literal\": {\n                const lit = <jsep.Literal>e\n                this.exprStack.push(lit.value)\n                return\n            }\n            default:\n        }\n    }\n}\n","export const VM_ERROR = \"JacdacVMError\"\n\nexport const ROLE_BOUND = \"roleBound\"\nexport const ROLE_UNBOUND = \"roleUnbound\"\nexport const ROLE_HAS_NO_SERVICE = \"roleHasNoService\"\nexport const VM_COMMAND_ATTEMPTED = \"commandAttempted\"\nexport const VM_COMMAND_COMPLETED = \"commandCompleted\"\n\nexport class JDVMError extends Error {\n    constructor(message: string, readonly jacdacName?: string) {\n        super(message)\n        this.name = VM_ERROR\n    }\n}\n\nexport default function errorPath(e: JDVMError): string {\n    return (e as JDVMError)?.jacdacName\n}","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import { IT4Program, IT4Handler, IT4Command } from \"./ir\"\nimport { RoleManager } from \"./rolemanager\"\nimport { VMEnvironment } from \"./environment\"\nimport { JDExprEvaluator } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ERROR, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./ir\"\nimport {\n    ROLE_BOUND,\n    ROLE_UNBOUND,\n    VM_COMMAND_ATTEMPTED,\n    VM_COMMAND_COMPLETED,\n    JDVMError,\n} from \"./utils\"\nimport { unparse } from \"./expr\"\nimport { SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TraceContext = any\n\nexport enum VMStatus {\n    ProgramError = \"programerror\",\n    Ready = \"ready\",\n    Running = \"running\",\n    Completed = \"completed\",\n    Stopped = \"stopped\",\n}\n\ninterface Environment {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass JumpException {\n    constructor(public label: string) {}\n}\n\nclass IT4CommandEvaluator {\n    private _status: VMStatus\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: IT4CommandRunner,\n        private readonly env: Environment,\n        private readonly gc: IT4Command\n    ) {}\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate() {\n        this._status = VMStatus.Running\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new JDExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            this._status = VMStatus.Completed\n            return\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new JumpException((args[1] as jsep.Identifier).name)\n                }\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"jump\": {\n                this._status = VMStatus.Completed\n                throw new JumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    this._status = this.checkExpression(args[1])\n                        ? VMStatus.Completed\n                        : VMStatus.Running\n                }\n                break\n            }\n            case \"awaitCondition\": {\n                this._status = this.checkExpression(args[0])\n                    ? VMStatus.Completed\n                    : VMStatus.Running\n                break\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    this._status = VMStatus.Completed\n                }\n                break\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new JDExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                this._status = VMStatus.Completed\n                break\n            }\n            case \"halt\": {\n                this._status = VMStatus.Stopped\n                break\n            }\n            default:\n                throw new JDVMError(`Unknown instruction ${this.inst}`)\n        }\n    }\n}\n\nclass IT4CommandRunner {\n    private _status = VMStatus.Running\n    private _eval: IT4CommandEvaluator\n    constructor(\n        public readonly parent: IT4HandlerRunner,\n        private handlerId: number,\n        env: Environment,\n        public gc: IT4Command\n    ) {\n        this._eval = new IT4CommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMStatus) {\n        if (s != this._status) {\n            this._status = s\n            // TODO: emit event\n        }\n    }\n\n    get isWaiting(): boolean {\n        return this.status === VMStatus.Running\n    }\n\n    async step() {\n        if (this.isWaiting) {\n            this.trace(unparse(this.gc.command))\n            await this._eval.evaluate()\n            this.finish(this._eval.status)\n        }\n    }\n\n    cancel() {\n        this.finish(VMStatus.Stopped)\n    }\n\n    private finish(s: VMStatus) {\n        this.trace(s)\n        if (\n            (this.isWaiting && s === VMStatus.Completed) ||\n            s === VMStatus.Stopped\n        ) {\n            this.status = s\n        }\n    }\n}\n\nclass IT4HandlerRunner extends JDEventSource {\n    private _commandIndex: number\n    private _currentCommand: IT4CommandRunner\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: IT4ProgramRunner,\n        public readonly id: number,\n        public readonly env: Environment,\n        private readonly handler: IT4Handler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as IT4Command\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: TraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    get status() {\n        return this.stopped\n            ? VMStatus.Stopped\n            : this._currentCommand === undefined\n            ? VMStatus.Ready\n            : this._currentCommand.status\n    }\n\n    public reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new JDVMError(\"ite not compiled away\")\n        }\n        return cmd as IT4Command\n    }\n\n    private async executeCommandAsync() {\n        this.emit(VM_COMMAND_ATTEMPTED, this._currentCommand.gc.sourceId)\n        try {\n            await this._currentCommand.step()\n        } catch (e) {\n            if (e instanceof JumpException) {\n                const { label } = e as JumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                // since it's a label it executes successfully\n                this._currentCommand.status = VMStatus.Completed\n            } else {\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMStatus.Completed)\n            this.emit(VM_COMMAND_COMPLETED, this._currentCommand.gc.sourceId)\n        if (this._currentCommand.status === VMStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new IT4CommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n\n    // run-to-completion semantics\n    async step() {\n        // handler stopped or/ empty\n        if (this.stopped || !this.handler.commands.length) return\n        this.trace(\"step begin\")\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        await this.executeCommandAsync()\n        while (\n            this._currentCommand.status === VMStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            await this.executeCommandAsync()\n        }\n        this.trace(\"step end\")\n    }\n}\n\nexport class IT4ProgramRunner extends JDClient {\n    private _handlers: IT4HandlerRunner[] = []\n    private _env: VMEnvironment\n    private _waitQueue: IT4HandlerRunner[] = []\n    private _running = false\n    private _in_run = false\n    private _program: IT4Program\n\n    trace(message: string, context: TraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        prog: IT4Program\n    ) {\n        super()\n        this._program = compileProgram(prog)\n        const {registers, events} = checkProgram(this._program)\n        if (this._program.errors.length > 0) {\n            console.debug(this._program.errors)\n        }\n        // data structures for running program\n        this._env = new VMEnvironment(registers, events)\n        this._handlers = this._program.handlers.map(\n            (h, index) => new IT4HandlerRunner(this, index, this._env, h)\n        )\n        this._waitQueue = this._handlers.slice(0)\n        // run on any change to environment\n        this._env.subscribe(CHANGE, () => {\n            try {\n                this.run()\n            } catch (e) {\n                console.debug(e)\n                this.emit(ERROR, e)\n            }\n        })\n        // adding a (role,service) binding \n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        } \n        // initialize\n        this.roleManager.roles.forEach(r => {\n            addRoleService(r.role)\n        })\n        // deal with bind/unbind\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, (role: string) => {\n                console.log(`role added`, { role })\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                console.log(`role removed`, { role })\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n\n    get status() {\n        const ret =\n            this._program === undefined\n                ? VMStatus.ProgramError\n                : this._running === false\n                ? VMStatus.Stopped\n                : this._waitQueue.length > 0\n                ? VMStatus.Running\n                : VMStatus.Completed\n        return ret\n    }\n\n    cancel() {\n        if (!this._program || !this._running) return // nothing to cancel\n\n        this._running = false\n        this._waitQueue = this._handlers.slice(0)\n        this._waitQueue.forEach(h => h.reset())\n        this.emit(CHANGE)\n        this.trace(\"cancelled\")\n    }\n\n    start() {\n        if (!this._program || this._running) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._program.roles)\n            this._running = true\n            this._in_run = false\n            this.run()\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n    }\n\n    async run() {\n        if (!this._program) return\n        if (!this._running) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            if (this._waitQueue.length > 0) {\n                const nextTime: IT4HandlerRunner[] = []\n                for (const h of this._waitQueue) {\n                    await h.step()\n                    if (h.status !== VMStatus.Stopped) {\n                        if (h.status === VMStatus.Completed) h.reset()\n                        nextTime.push(h)\n                    }\n                }\n                this._waitQueue = nextTime\n                this._env.consumeEvent()\n            } else {\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            console.debug(e)\n            this.emit(ERROR, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    IT4ProgramRunner,\n    TraceContext,\n} from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: IT4Program,\n    autoStart: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<IT4ProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoStart)\n\n    const run = () => {\n        _setAutoStart(!!autoStart)\n        runner.start()\n    }\n    const cancel = () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.start()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new IT4ProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: { message: string; context: TraceContext }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: TraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, DEVICE_ANNOUNCE, DEVICE_DISCONNECT } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { ROLE_BOUND, ROLE_UNBOUND } from \"./utils\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\n\nexport interface RoleBinding {\n    role: string\n    serviceShortId: string\n    service?: JDService\n}\n\n// TODO: replicate MakeCode role manager logic\nexport class RoleManager extends JDEventSource {\n    private readonly _roles: RoleBinding[] = []\n\n    constructor(private readonly bus: JDBus) {\n        super()\n\n        this.bus.on(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        this.bus.on(DEVICE_DISCONNECT, this.removeServices.bind(this))\n\n        this.bus\n            .devices({ ignoreSelf: true, announced: true })\n            .forEach(dev => this.addServices(dev))\n\n        this.on(ROLE_UNBOUND, role => console.log(`role unbound`, { role }))\n        this.on(ROLE_BOUND, role => console.log(`role bound`, { role }))\n    }\n\n    get roles() {\n        return this._roles.slice(0)\n    }\n\n    get boundRoles() {\n        return this._roles.filter(r => !!r.service)\n    }\n\n    get unboundRoles() {\n        return this._roles.filter(r => !r.service)\n    }\n\n    setRoles(\n        newRoles: {\n            role: string\n            serviceShortId: string\n        }[]\n    ) {\n        const roles = this.roles\n\n        // remove unknown roles\n\n        const supportedNewRoles = newRoles.filter(({ serviceShortId }) =>\n            serviceSpecificationFromName(serviceShortId)\n        )\n        console.debug(`set roles`, { roles, newRoles, supportedNewRoles })\n\n        // removed roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                this._roles.push({ ...newRole })\n            } else if (existingRole.serviceShortId !== newRole.serviceShortId) {\n                // modified type, force rebinding\n                existingRole.serviceShortId = newRole.serviceShortId\n                if (existingRole.service) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, newRole.role)\n                    this.emit(CHANGE)\n                }\n            } // else unmodifed role\n        }\n\n        // bound services\n        this.bindServices()\n    }\n\n    private bindServices() {\n        this.unboundRoles.forEach(binding => {\n            const boundRoles = this.boundRoles\n            const service = this.bus\n                .services({\n                    ignoreSelf: true,\n                    serviceName: binding.serviceShortId,\n                })\n                .find(srv => !boundRoles.find(b => b.service === srv))\n            binding.service = service\n            this.emit(ROLE_BOUND, binding.role)\n            this.emit(CHANGE)\n        })\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                this.emit(CHANGE)\n            })\n    }\n\n    public getService(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    public addRoleService(role: string, serviceShortId: string) {\n        if (!serviceSpecificationFromName(serviceShortId)) return // unknown role type\n\n        let binding = this._roles.find(r => r.role === role)\n\n        // check if we already have this role\n        if (binding && serviceShortId === binding.serviceShortId) return\n\n        // new role\n        binding = { role, serviceShortId }\n        this._roles.push(binding)\n\n        const ret = this.bus\n            .services({ ignoreSelf: true, serviceName: serviceShortId })\n            .find(s => !this._roles.find(r => r.service === s))\n        if (ret) {\n            binding.service = ret\n            this.emit(ROLE_BOUND, role)\n            this.emit(CHANGE)\n        } else {\n            this.emit(ROLE_UNBOUND, role)\n            this.emit(CHANGE)\n        }\n    }\n}\n","import { useContext, useMemo } from \"react\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const roleManager = useMemo(() => new RoleManager(bus), [])\n    return roleManager\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: {\n    program: IT4Program\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">IT4</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.it4\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","import React from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { IT4ProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport useChange from \"../../jacdac/useChange\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nexport default function VMRunnerButton(props: {\n    runner: IT4ProgramRunner\n    run: () => void\n    cancel: () => void\n}) {\n    const { runner, run, cancel } = props\n    const disabled = !runner\n    const status = useChange(runner, t => t?.status)\n    const handleRun = () => run()\n    const handleCancel = () => cancel()\n    const running = status === VMStatus.Running\n\n    return (\n        <IconButtonWithTooltip\n            title={runner ? \"stop\" : \"start\"}\n            disabled={disabled}\n            onClick={running ? handleCancel : handleRun}\n        >\n            {running ? <StopIcon /> : <PlayArrowIcon />}\n        </IconButtonWithTooltip>\n    )\n}\n","import React from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\n\nexport default function VMSaveButton(props: {\n    xml: string\n    source: WorkspaceJSON\n    program: IT4Program\n}) {\n    const { xml, source, program } = props\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {\n        xml,\n    }\n    if (Flags.diagnostics) {\n        json.source = source\n        json.program = program\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { IT4ProgramRunner } from \"../../../jacdac-ts/src/vm/vmrunner\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport VMRunnerButton from \"./VMRunnerButton\"\nimport VMSaveButton from \"./VMSaveButton\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\n\nexport default function VMToolbar(props: {\n    runner: IT4ProgramRunner\n    run: () => void\n    cancel: () => void\n    xml: string\n    source: WorkspaceJSON\n    program: IT4Program\n}) {\n    const { runner, run, cancel, xml, source, program } = props\n    return (\n        <Grid container direction=\"row\" spacing={1}>\n            <Grid item>\n                <VMRunnerButton runner={runner} run={run} cancel={cancel} />\n            </Grid>\n            <Grid item>\n                <VMSaveButton xml={xml} source={source} program={program} />\n            </Grid>\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n        </Grid>\n    )\n}\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { IT4Program } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport useVMRunner from \"./useVMRunner\"\nimport useRoleManager from \"./useRoleManager\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: { storageKey?: string }) {\n    const { storageKey } = props\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<IT4Program>()\n    const roleManager = useRoleManager()\n    const autoStart = true\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    const handleXml = (xml: string) => {\n        setXml(xml)\n    }\n    const handleJSON = (json: WorkspaceJSON) => {\n        const newSource = JSON.stringify(json)\n        if (JSON.stringify(source) !== newSource) {\n            setSource(json)\n        }\n    }\n    const handleI4Program = (json: IT4Program) => {\n        if (json) roleManager.setRoles(json.roles)\n        const newProgram = JSON.stringify(json)\n        if (JSON.stringify(program) !== newProgram) setProgram(json)\n    }\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <VMToolbar\n                    runner={runner}\n                    run={run}\n                    cancel={cancel}\n                    xml={xml}\n                    source={source}\n                    program={program}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <NoSsr>\n                    <VMBlockEditor\n                        initialXml={xml}\n                        onXmlChange={handleXml}\n                        onJSONChange={handleJSON}\n                        onIT4ProgramChange={handleI4Program}\n                        runner={runner}\n                        roleManager={roleManager}\n                    />\n                </NoSsr>\n            </Grid>\n            {Flags.diagnostics && (\n                <VMDiagnostics program={program} source={source} xml={xml} />\n            )}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}