{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardCompass.tsx"],"names":["DashboardCompass","props","service","headingRegister","register","CompassReg","Heading","enabledRegister","Enabled","useRegisterUnpackedValue","heading","enabled","statusCodeRegister","status","off","host","useServiceHost","color","useWidgetTheme","background","controlBackground","active","textProps","undefined","calibrating","SystemStatusCodes","Calibrating","w","h","mw","r","sw","cx","cy","sp","pr","pri","handleChange","ev","newValue","reading","setValues","refresh","valueDisplay","angle","Math","round","toggleOff","sendSetBoolAsync"],"mappings":"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","file":"108-010b8ac7018008402b15.js","sourcesContent":["import React, { } from \"react\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport SensorServiceHost from \"../../../jacdac-ts/src/hosts/sensorservicehost\";\nimport { CompassReg, SystemStatusCodes } from \"../../../jacdac-ts/src/jdom/constants\";\nimport PowerButton from \"../widgets/PowerButton\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardCompass(props: DashboardServiceProps) {\n    const { service } = props;\n\n    const headingRegister = service.register(CompassReg.Heading);\n    const enabledRegister = service.register(CompassReg.Enabled);\n    const [heading] = useRegisterUnpackedValue<[number]>(headingRegister, props)\n    const [enabled] = useRegisterUnpackedValue<[boolean]>(enabledRegister, props)\n    const [status,] = useRegisterUnpackedValue<[SystemStatusCodes, number]>(service.statusCodeRegister, props);\n    const off = !enabled;\n\n    const host = useServiceHost<SensorServiceHost<[number]>>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textProps } = useWidgetTheme(color)\n\n    if (heading === undefined)\n        return <LoadingProgress />;\n\n    const calibrating = status === SystemStatusCodes.Calibrating;\n\n    const w = 64\n    const h = 64\n    const mw = 5\n    const r = (w >> 1) - 4;\n    const sw = 3;\n    const cx = w >> 1\n    const cy = h >> 1\n    const sp = 1;\n    const pr = 5;\n    const pri = 3;\n\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        await host?.reading.setValues([newValue as number])\n        headingRegister.refresh()\n    }\n    const valueDisplay = (angle: number) => `${Math.round(angle)}Â°`;\n    const toggleOff = () => enabledRegister.sendSetBoolAsync(off, true);\n\n    return <Grid container direction=\"column\">\n        <Grid item xs={12}>\n            <SvgWidget width={w} height={h}>\n                <circle cx={cx} cy={cy} r={r} fill={controlBackground}\n                    stroke={background} strokeWidth={sw} />\n                <g transform={`rotate(${off ? 0 : heading}, ${w >> 1}, ${h >> 1})`}>\n                    <path d={`M ${cx - mw} ${cy + sp / 2} l ${mw} ${r} l ${mw} ${-r} z`}\n                        fill={background} stroke={background} strokeWidth={sp} />\n                    <path d={`M ${cx - mw} ${cy - sp / 2} l ${mw} ${-r} l ${mw} ${r} z`}\n                        stroke={background} fill={off ? controlBackground : active} strokeWidth={sp} />\n                </g>\n                {calibrating && <circle cx={cx} cy={cy} r={r} opacity={0.9} fill={background} />}\n                {calibrating && <text x={cx} y={cy} fontSize={8} {...textProps}>calibrating</text>}\n                <PowerButton r={pr} ri={pri} cx={w - pr - 1} cy={h - pr - 1}\n                    color={color}\n                    strokeWidth={1}\n                    off={off} onClick={host && toggleOff} />\n            </SvgWidget >\n        </Grid>\n        {host && <Grid item>\n            <Slider\n                color={color}\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={valueDisplay}\n                min={0} max={360} step={1} value={heading}\n                onChange={handleChange}\n                aria-label=\"heading\"\n            />\n        </Grid>}\n    </Grid>\n}"],"sourceRoot":""}