{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardPower.tsx"],"names":["DataWidget","props","value","name","unit","undefined","isNaN","svalue","toString","DashboardPower","service","services","variant","enabledRegister","register","PowerReg","Enabled","useRegisterUnpackedValue","enabled","Overload","overload","BatteryCharge","batteryCharge","host","useServiceHost","color","useWidgetTheme","background","controlBackground","active","textProps","w","h","r","ro","ri","label","mw","bw","hw","rw","toggleEnabled","sendSetBoolAsync","refresh","Math","floor"],"mappings":"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","file":"73-7352f26b9697c3d0d13d.js","sourcesContent":["import React, { } from \"react\";\nimport { PowerReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport SvgWidget from \"../widgets/SvgWidget\";\nimport useServiceHost from \"../hooks/useServiceHost\";\nimport useWidgetSize from \"../widgets/useWidgetSize\";\nimport ReflectedLightServiceHost from \"../../../jacdac-ts/src/hosts/reflectedlightservicehost\";\nimport PowerButton from \"../widgets/PowerButton\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport useWidgetTheme from \"../widgets/useWidgetTheme\";\n\nfunction DataWidget(props: { value: number, name: string, unit: string }) {\n    const { value, name, unit } = props;\n    if (value === undefined || isNaN(value))\n        return null;\n    const svalue = value === undefined ? \"--\" : value.toString();\n    return <Grid item>\n        <Typography variant=\"caption\">{`${name}: ${svalue} ${unit}`}</Typography>\n    </Grid>\n}\n\nexport default function DashboardPower(props: DashboardServiceProps) {\n    const { service, services, variant } = props;\n\n    const enabledRegister = service.register(PowerReg.Enabled);\n    const [enabled] = useRegisterUnpackedValue<[boolean]>(enabledRegister);\n    const [overload] = useRegisterUnpackedValue<[boolean]>(service.register(PowerReg.Overload));\n    const [batteryCharge] = useRegisterUnpackedValue<[number]>(service.register(PowerReg.BatteryCharge));\n    \n    const host = useServiceHost<ReflectedLightServiceHost>(service);\n    const color = host ? \"secondary\" : \"primary\";\n    const { background, controlBackground, active, textProps } = useWidgetTheme(color);\n\n    const w = 64\n    const h = w\n    const r = (h - 4) >> 1;\n    const ro = r - 4\n    const ri = ro - 8\n    const label = overload ? \"overload\" : enabled ? \"on\" : \"off\"\n\n    const mw = 2\n    const bw = 12\n    const hw = 4\n    const rw = mw / 2\n\n    const toggleEnabled = async () => {\n        await enabledRegister.sendSetBoolAsync(!enabled);\n        enabledRegister.refresh();\n    }\n\n    return <SvgWidget width={w} height={h}>\n        <g>\n            <PowerButton\n                cx={w / 2}\n                cy={h / 2}\n                r={ro}\n                ri={ri}\n                off={!enabled}\n                color={color}\n                aria-label={label}\n                borderStroke={!!overload && \"red\"}\n                onClick={toggleEnabled}\n            />\n            {batteryCharge !== undefined && <g>\n                <title>{`battery charge ${Math.floor(batteryCharge * 100)}%`}</title>\n                <rect x={w - bw - mw} y={mw} width={bw * batteryCharge} height={hw} rx={rw} ry={rw} fill={active} />\n                <rect x={w - bw - mw} y={mw} width={bw} height={hw} rx={rw} ry={rw} fill={\"none\"} stroke={background} strokeWidth={1} />\n                <text x={w - 2 * mw} y={mw + hw / 2} {...textProps} textAnchor=\"end\" fontSize={hw * 0.6}>{Math.floor(batteryCharge * 100)}%</text>\n            </g>}\n        </g>\n    </SvgWidget>\n}"],"sourceRoot":""}