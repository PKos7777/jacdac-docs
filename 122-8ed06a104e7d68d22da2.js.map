{"version":3,"sources":["webpack:///./src/components/dashboard/DashboardRoleManager.tsx"],"names":["DashboardRoleManager","props","service","autoBindRegister","register","RoleManagerReg","AutoBind","autoBind","useRegisterBoolValue","handleChecked","ev","checked","sendSetBoolAsync","switchId","useId","labelId","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEe,SAASA,oBAAT,CAA8BC,KAA9B,EAA4D;AAAA,MAC/DC,OAD+D,GACnDD,KADmD,CAC/DC,OAD+D;AAEvE,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAR,CAAiBC,qFAAc,CAACC,QAAhC,CAAzB;AACA,MAAMC,QAAQ,GAAGC,6FAAoB,CAACL,gBAAD,CAArC;;AACA,MAAMM,aAAa;AAAA,wMAAG,iBAAOC,EAAP,EAAWC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZR,gBAAgB,CAACS,gBAAjB,CAAkCD,OAAlC,EAA2C,IAA3C,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbF,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAGA,MAAMI,QAAQ,GAAGC,uEAAK,EAAtB;AACA,MAAMC,OAAO,GAAGD,uEAAK,EAArB;AAEA,MAAIP,QAAQ,KAAKS,SAAjB,EACI,oBAAO,2DAAC,mEAAD,OAAP;AAEJ,sBACI,2DAAC,iEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,2DAAC,iEAAD;AACI,MAAE,EAAEH,QADR;AAEI,WAAO,EAAEN,QAFb;AAGI,YAAQ,EAAEE,aAHd;AAII,uBAAiBM;AAJrB,IADJ,eAOI;AAAO,MAAE,EAAEA;AAAX,yBAPJ,CADJ;AAWH,C","file":"122-8ed06a104e7d68d22da2.js","sourcesContent":["import { Grid, Switch } from \"@material-ui/core\"\nimport React from \"react\"\nimport { RoleManagerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useId } from \"react-use-id-hook\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nexport default function DashboardRoleManager(props: DashboardServiceProps) {\n    const { service } = props\n    const autoBindRegister = service.register(RoleManagerReg.AutoBind)\n    const autoBind = useRegisterBoolValue(autoBindRegister)\n    const handleChecked = async (ev, checked: boolean) => {\n        await autoBindRegister.sendSetBoolAsync(checked, true)\n    }\n    const switchId = useId()\n    const labelId = useId()\n\n    if (autoBind === undefined)\n        return <LoadingProgress />\n\n    return (\n        <Grid item xs={12}>\n            <Switch\n                id={switchId}\n                checked={autoBind}\n                onChange={handleChecked}\n                aria-labelledby={labelId}\n            />\n            <label id={labelId}>auto assign roles</label>\n        </Grid>\n    )\n}\n"],"sourceRoot":""}