{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/ListItem/ListItem.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","webpack://jacdac-docs/./src/components/hooks/useEvents.ts","webpack://jacdac-docs/./src/components/EventSelect.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/pages/tools/hid-events.tsx"],"names":["useEvents","options","services","useServices","events","arrayConcatMany","map","srv","useStyles","makeStyles","theme","createStyles","formControl","minWidth","selectEmpty","marginTop","spacing","EventSelect","props","eventId","onChange","label","className","useContext","JacdacContext","bus","classes","selectedEvent","node","handleChange","ev","target","value","clsx","qualifiedName","id","friendlyName","useChange","b","JSON","stringify","HIDEvents","useState","setEventId","handleEventChange"],"mappings":";;;;;;;;;;;;;;;;;AAA0D;AACgC;AAC3D;AACP;AAC4B;AACN;AACP;AACU;AACJ;AACC;AACR;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,0FAA0F,KAAK;AAC/F,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,2EAA2E,KAAK;AAChF,gBAAgB;;AAEhB,oEAAoE,KAAK;AACzE;AACA;AACA;AACA,KAAK;;AAEL,2EAA2E,MAAM;AACjF;AACA;AACA;AACA,KAAK;;AAEL,mEAAmE,KAAK;AACxE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE;AACA;AACA;AACA,wDAAwD,4CAAe,GAAG,kDAAqB;AAC/F;AACA;AACA;;AAEA,4BAA4B,6CAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA,uBAAuB,oGAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC,gBAAgB,6CAAgB,CAAC,+DAAW;AAC5C;AACA;AACA;AACA;AACA,oBAAoB,yCAAY;AAChC;AACA;AACA;AACA;AACA,OAAO,UAAU,KAAqC,EAAE,EAEjD;AACP;AACA,GAAG;AACH,iBAAiB,mDAAsB;AACvC,8CAA8C,qEAAY;AAC1D,qBAAqB,8CAAiB;AACtC;AACA,0BAA0B,kDAAoB;AAC9C,GAAG;AACH,kBAAkB,mEAAU;;AAE5B,uBAAuB,oFAAQ;AAC/B,eAAe,sDAAI;AACnB;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,2CAA2C,sDAAI;AAC/C,gBAAgB,yDAAU;AAC1B;;AAEA;AACA;AACA,gFAAgF;;AAEhF;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,wBAAwB,gDAAmB,CAAC,iFAAoB;AAChE;AACA,KAAK,eAAe,gDAAmB,qBAAqB,oFAAQ;AACpE,iBAAiB,sDAAI;AACrB;AACA,KAAK,gCAAgC,gDAAmB;AACxD;;AAEA,sBAAsB,gDAAmB,CAAC,iFAAoB;AAC9D;AACA,GAAG,eAAe,gDAAmB,YAAY,oFAAQ;AACzD;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,WAAW,E;;;;;;;;;;;;;;;;ACrM8E;AAClB;AACd;AAC3B;AACP;AACsB;AACX;AAC5B;AACP;AACA;AACA,UAAU,oFAAQ,GAAG,0BAA0B,2FAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA,8DAA8D,MAAM;AACpE,eAAe;;AAEf,wDAAwD,KAAK;AAC7D,gBAAgB;;AAEhB;AACA,WAAW,oFAAQ,GAAG;AACtB;AACA,KAAK;AACL;AACA;AACA,4BAA4B,6CAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oGAAwB;;AAEtC;;AAEA;AACA;AACA;;AAEA,sBAAsB,gDAAmB,CAAC,uDAAQ,EAAE,oFAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAQ;AACrB;AACA,KAAK;AACL,eAAe,sDAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,oEAAU;AACzB;AACA,CAAC,WAAW,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEZ;AACA;AAEe,SAASA,SAAT,CAAmBC,OAAnB,EAIZ;AACC,MAAMC,QAAQ,GAAGC,8BAAW,CAACF,OAAD,CAA5B;AACA,MAAMG,MAAM,GAAGC,iCAAe,CAACH,QAAQ,CAACI,GAAT,CAAa,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACH,MAAR;AAAA,GAAhB,CAAD,CAA9B;AACA,SAAOA,MAAP;AACH,C;;CCVD;;CAEA;;CAEA;;CAEA;;CAEA;;AACA;AAEA;AACA;AACA;AAEA,IAAMI,SAAS,GAAGC,6BAAU,CAAC,UAACC,KAAD;AAAA,SACzBC,+BAAY,CAAC;AACTC,eAAW,EAAE;AACTC,cAAQ,EAAE;AADD,KADJ;AAITC,eAAW,EAAE;AACTC,eAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADF;AAJJ,GAAD,CADa;AAAA,CAAD,CAA5B;AAWe,SAASC,WAAT,CAAqBC,KAArB,EAKZ;AAAA,MACSC,OADT,GACiDD,KADjD,CACSC,OADT;AAAA,MACkBC,QADlB,GACiDF,KADjD,CACkBE,QADlB;AAAA,MAC4BC,KAD5B,GACiDH,KADjD,CAC4BG,KAD5B;AAAA,MACmCC,SADnC,GACiDJ,KADjD,CACmCI,SADnC;;AAAA,oBAEiBC,oBAAU,CAAqBC,sBAArB,CAF3B;AAAA,MAESC,GAFT,eAESA,GAFT;;AAGC,MAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,MAAMJ,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAM2B,aAAa,GAAGF,GAAG,CAACG,IAAJ,CAAST,OAAT,CAAtB;;AAEA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAA+C;AAChEV,YAAQ,CAACU,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,0BAAD;AACI,WAAO,EAAC,UADZ;AAEI,aAAS,EAAEC,yBAAI,CAACX,SAAD,EAAYI,OAAO,CAACd,WAApB;AAFnB,kBAII,oBAAC,yBAAD;AAAY,OAAG,EAAC;AAAhB,KAAyBS,KAAzB,CAJJ,eAKI,oBAAC,qBAAD;AACI,OAAG,EAAC,QADR;AAEI,SAAK,EAAEM,aAAa,GAAGR,OAAH,GAAa,EAFrC;AAGI,YAAQ,EAAEU,YAHd;AAII,SAAK,EAAEF,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEO;AAJ1B,kBAMI,oBAAC,uBAAD;AAAU,OAAG,EAAE,MAAf;AAAuB,SAAK,EAAE;AAA9B,kBACI,uCADJ,CANJ,EASK9B,MAAM,CAACE,GAAP,CAAW,UAAAwB,EAAE;AAAA,wBACV,oBAAC,uBAAD;AAAU,SAAG,EAAEA,EAAE,CAACK,EAAlB;AAAsB,WAAK,EAAEL,EAAE,CAACK;AAAhC,OACKL,EAAE,CAACM,YADR,CADU;AAAA,GAAb,CATL,CALJ,CADJ;AAuBH,C;;;;;;;;;;;;;;AClED;AACA;AACA;AAEe,SAASjC,WAAT,CAAqBF,OAArB,EAIZ;AAAA,oBACiBsB,iDAAU,CAAqBC,6DAArB,CAD3B;AAAA,MACSC,GADT,eACSA,GADT;;AAEC,MAAMvB,QAAQ,GAAGmC,mEAAS,CAACZ,GAAD,EAAM,UAAAa,CAAC;AAAA,WAAIA,CAAC,CAACpC,QAAF,CAAWD,OAAX,CAAJ;AAAA,GAAP,EAAgC,CACtDsC,IAAI,CAACC,SAAL,CAAevC,OAAf,CADsD,CAAhC,CAA1B;AAGA,SAAOC,QAAP;AACH,C;;;;;;;;;;;;;;;ACdD;AACA;AACA;AAEe,SAASuC,SAAT,GAAqB;AAAA,oBAChBlB,iDAAU,CAAqBC,6DAArB,CADM;AAAA,MACxBC,GADwB,eACxBA,GADwB;;AAAA,kBAEFiB,+CAAQ,CAAC,EAAD,CAFN;AAAA,MAEzBvB,OAFyB;AAAA,MAEhBwB,UAFgB;;AAIhC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,EAAD;AAAA,WAAgBQ,UAAU,CAACR,EAAD,CAA1B;AAAA,GAA1B;;AAEA,sBACI,iHACI,yEADJ,eAEI,2EACI,iDAAC,qEAAD;AACI,WAAO,EAAEhB,OADb;AAEI,YAAQ,EAAEyB,iBAFd;AAGI,SAAK,EAAC;AAHV,IADJ,CAFJ,CADJ;AAYH,C","file":"component---src-pages-tools-hid-events-tsx-55f0c3659f00b9f7d8a9.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"./useServices\"\n\nexport default function useEvents(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n}) {\n    const services = useServices(options)\n    const events = arrayConcatMany(services.map(srv => srv.events))\n    return events\n}\n","import React, { useContext } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport InputLabel from \"@material-ui/core/InputLabel\"\n// tslint:disable-next-line: no-submodule-imports\nimport MenuItem from \"@material-ui/core/MenuItem\"\n// tslint:disable-next-line: no-submodule-imports\nimport FormControl from \"@material-ui/core/FormControl\"\n// tslint:disable-next-line: no-submodule-imports\nimport Select from \"@material-ui/core/Select\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport clsx from \"clsx\"\nimport useEvents from \"./hooks/useEvents\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    })\n)\n\nexport default function EventSelect(props: {\n    eventId: string\n    onChange: (eventId: string) => void\n    label: string\n    className?: string\n}) {\n    const { eventId, onChange, label, className } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const classes = useStyles()\n    const events = useEvents()\n    const selectedEvent = bus.node(eventId) as JDEvent\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        onChange(ev.target.value as string)\n    }\n\n    return (\n        <FormControl\n            variant=\"outlined\"\n            className={clsx(className, classes.formControl)}\n        >\n            <InputLabel key=\"label\">{label}</InputLabel>\n            <Select\n                key=\"select\"\n                value={selectedEvent ? eventId : \"\"}\n                onChange={handleChange}\n                label={selectedEvent?.qualifiedName}\n            >\n                <MenuItem key={\"none\"} value={\"\"}>\n                    <em>None</em>\n                </MenuItem>\n                {events.map(ev => (\n                    <MenuItem key={ev.id} value={ev.id}>\n                        {ev.friendlyName}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    )\n}\n","import { useContext } from \"react\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: {\n    serviceName?: string\n    serviceClass?: number\n    specification?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import React, { useContext, useState } from \"react\"\nimport EventSelect from \"../../components/EventSelect\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function HIDEvents() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [eventId, setEventId] = useState(\"\")\n\n    const handleEventChange = (id: string) => setEventId(id)\n\n    return (\n        <>\n            <h1>HID Event</h1>\n            <div>\n                <EventSelect\n                    eventId={eventId}\n                    onChange={handleEventChange}\n                    label=\"Choose an event\"\n                />\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}