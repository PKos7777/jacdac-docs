{"version":3,"file":"141-2cf3ba1abcbade6a45b6.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardWifi.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Switch,\n    TextField,\n    Typography,\n} from \"@material-ui/core\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { useId } from \"react-use-id-hook\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Button } from \"gatsby-material-ui-components\"\nimport CmdButton from \"../CmdButton\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport {\n    WifiCmd,\n    WifiReg,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\n\nfunction ConnectDialog(props: {\n    open: boolean\n    setOpen: (v: boolean) => void\n    service: JDService\n}) {\n    const { open, setOpen, service } = props\n    const [ap, setAp] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const apId = useId()\n    const passwordId = useId()\n    const handleCancel = () => {\n        setAp(\"\")\n        setOpen(false)\n    }\n    const handleApChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setAp(event.target.value)\n    }\n    const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value)\n    }\n    const handleOk = async () => {\n        await service.sendCmdPackedAsync<[string, string]>(\n            WifiCmd.Connect,\n            [ap, password],\n            true\n        )\n        setAp(\"\")\n        setPassword(\"\")\n        setOpen(false)\n    }\n    return (\n        <Dialog open={open} fullWidth={true} maxWidth={\"lg\"}>\n            <DialogContent>\n                <DialogTitle>Wifi</DialogTitle>\n                <TextField\n                    id={apId}\n                    value={ap}\n                    label=\"Network\"\n                    fullWidth={true}\n                    type=\"text\"\n                    onChange={handleApChange}\n                />\n                <TextField\n                    id={passwordId}\n                    value={password}\n                    label=\"Password\"\n                    fullWidth={true}\n                    type=\"password\"\n                    onChange={handlePasswordChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={handleCancel}>\n                    Cancel\n                </Button>\n                <CmdButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleOk}\n                >\n                    Connect\n                </CmdButton>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default function DashboardWifi(props: DashboardServiceProps) {\n    const { service } = props\n    const [open, setOpen] = useState(false)\n    const connectId = useId()\n\n    const color = \"primary\"\n    const { textPrimary } = useWidgetTheme(color)\n    const connectedRegister = service.register(WifiReg.Connected)\n    const connected = useRegisterBoolValue(connectedRegister, props)\n    const handleConnectionClick = () => setOpen(true)\n    return (\n        <>\n            <Grid\n                container\n                spacing={1}\n                style={{ color: textPrimary, minWidth: \"16rem\" }}\n            >\n                <Grid item xs={12}>\n                    <Typography component=\"span\" variant=\"subtitle2\">\n                        Wifi\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Switch checked={connected} aria-labelledby={connectId} />\n                    <label className=\".no-pointer-events\" id={connectId}>\n                        {connected ? \"connected\" : \"...\"}\n                    </label>\n                    <IconButtonWithTooltip\n                        title=\"Connect to wifi\"\n                        onClick={handleConnectionClick}\n                    >\n                        <SettingsIcon />\n                    </IconButtonWithTooltip>\n                </Grid>\n            </Grid>\n            <ConnectDialog open={open} setOpen={setOpen} service={service} />\n        </>\n    )\n}\n"],"names":["React","useState","Dialog","DialogActions","DialogContent","DialogTitle","Grid","Switch","TextField","Typography","useWidgetTheme","useId","SettingsIcon","IconButtonWithTooltip","Button","CmdButton","useRegisterBoolValue","WifiCmd","WifiReg","ConnectDialog","props","open","setOpen","service","ap","setAp","password","setPassword","apId","passwordId","handleCancel","handleApChange","event","target","value","handlePasswordChange","handleOk","sendCmdPackedAsync","Connect","DashboardWifi","connectId","color","textPrimary","connectedRegister","register","Connected","connected","handleConnectionClick","minWidth"],"sourceRoot":""}