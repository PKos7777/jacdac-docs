{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./jacdac-ts/src/vm/VMir.ts","webpack://jacdac-docs/./src/components/hooks/toneContext.ts","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoteField.tsx","webpack://jacdac-docs/./src/components/vm/fields/KeyboardKeyField.tsx","webpack://jacdac-docs/./src/components/widgets/svg.ts","webpack://jacdac-docs/./src/components/vm/fields/ReactImageField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDMatrixField.tsx","webpack://jacdac-docs/./src/components/vm/fields/SliderField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ServoAngleField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDColorField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ReactInlineField.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoServiceAlert.tsx","webpack://jacdac-docs/./src/components/vm/fields/PointerBoundary.tsx","webpack://jacdac-docs/./src/components/vm/fields/TwinField.tsx","webpack://jacdac-docs/./src/components/vm/fields/JDomTreeField.tsx","webpack://jacdac-docs/./src/components/vm/fields/WatchValueField.tsx","webpack://jacdac-docs/./src/components/vm/fields/fields.ts","webpack://jacdac-docs/./src/components/vm/useToolbox.ts","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/vm/VMBlockEditor.tsx"],"names":["getServiceFromRole","info","role","shortId","roles","find","pair","def","serviceSpecificationFromName","serviceShortId","assert","service","toIdentifier","id","type","name","toMemberExpression","root","field","object","property","computed","handlerVisitor","handler","visitITE","visitCommand","commands","forEach","visitBase","base","ite","else","then","compileProgram","prog","newProgram","slice","handlers","map","h","removeIfThenElse","errors","newSequence","labels","labelId","time","end","push","command","callee","arguments","expr","length","pop","cmd","checkProgram","allErrors","goodHandlers","currentId","undefined","errorFun","e","sourceId","message","symbolResolver","SpecSymbolResolver","checker","VMChecker","_","errorCount","c","checkCommand","VMFunctions","registers","s","split","fld","register","events","event","args","prompt","context","VOLUME_GAIN","createToneContext","defaultVolume","console","log","ctx","window","AudioContext","webkitAudioContext","buffer","createBuffer","source","createBufferSource","connect","destination","start","volume","createGain","gain","value","setVolume","v","isNaN","playTone","frequency","duration","tone","createOscillator","stop","currentTime","debug","close","state","warn","useServices","options","useContext","JacdacContext","bus","services","useChange","b","JSON","stringify","PaperBox","props","children","padding","elevation","bgcolor","others","theme","useTheme","spacing","PianoWidget","lazy","NoteField","fromJson","on","UNMOUNT","toneContext","getText_","renderField","handlePlayTone","newFrequency","ReactField","KEY","SHADOW","toShadowDefinition","KeyboardKeyInput","KeyboardKeyField","selector","modifiers","renderKeyboardKey","handleChange","newSelector","newModifiers","mkTitle","txt","t","elt","textContent","title","el","appendChild","hydrate","k","setAttributeNS","document","createElementNS","child","parent","ReactImageField","width","height","setSize","size_","Blockly","img","view","setAttribute","updateView","imgUri","renderValue","getText","initCustomView","fieldGroup_","alt","LEDMatrixWidget","LEDMatrixField","VALUE_CHANGE","rows","columns","leds","columnspadded","ledsBytes","fromHex","cvs","createElement","pw","ph","w","getContext","fillStyle","fillRect","x","y","bitindex","byte","bit","dataUri","toDataURL","onChange","newLeds","toHex","Uint8Array","FieldWithSlider","ValueContext","onValueChange","ev","nv","newValue","Math","round","SliderField","renderWidget","ServoWidget","ServiceFieldWidget","ServoAngleField","LEDWidget","LEDColorFieldWidget","LEDColorField","r","cx","cy","strokeWidth","stroke","rgbToHtmlColor","circle","ReactInlineField","createContainer","style","display","minWidth","fo","container","resizeObserver","ResizeObserver","entries","entry","contentRect","forceRerender","observe","ReactDOM","renderBlock","dispose","disconnect","renderInlineField","bindEvents_","getClickTarget_","NoServiceAlert","WorkspaceContext","roleService","roleServiceShortId","flyout","spec","handleStartSimulator","startServiceProviderFromServiceClass","classIdentifier","PointerBoundary","className","onPointerStopPropagation","stopPropagation","cursor","TwinWidget","TwinField","EDITABLE","JDomServiceTreeView","JDomTreeWidget","JDomTreeField","WatchValueWidget","runner","useState","lookupWatch","setValue","useEffect","subscribe","VM_WATCH_CHANGE","watchSourceId","valueNumber","step","ceil","abs","precision","log10","roundWithPrecision","palette","background","paper","text","primary","WatchValueField","reactFieldShadows","registerFields","registerType","fieldType","key","fieldTypes","fieldShadows","highlighted","rendered","addSelect","removeSelect","isBooleanField","isStringField","toBlocklyType","isNumericType","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_SETTINGS","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","JoystickReg","get","createBlockTheme","sensorColor","success","main","otherColor","commandColor","warning","debuggerColor","grey","serviceColor","isSensor","loadBlocks","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","SRV_BUZZER","BuzzerCmd","lookupCustomShadow","cs","serviceHelp","withPrefix","fieldsSupported","pkt","fields","every","fieldName","reg","fieldToShadow","unit","test","defaultValue","min","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","humanify","camelName","toLowerCase","fieldVariable","variable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","join","isEnabledRegister","customMessage","m","allServices","serviceSpecifications","filter","status","indexOf","resolveService","cls","arrayConcatMany","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","SRV_HID_KEYBOARD","message0","args0","colour","inputsInline","previousStatement","nextStatement","tooltip","helpUrl","expression","template","SRV_LED","values","color","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","eventBlocks","eventFieldBlocks","output","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","Object","keys","members","member","registerNumericsGetBlocks","re","f","registerSetBlocks","commandBlocks","serviceBlocks","shadowBlocks","colourOptions","runtimeBlocks","WAIT_BLOCK","CONNECTION_BLOCK","CONNECTED_BLOCK","SET_STATUS_LIGHT_BLOCK","TWIN_BLOCK","INSPECT_BLOCK","WATCH_BLOCK","REPEAT_EVERY_BLOCK","mathBlocks","extensions","blocks","block","jacdacDefinition","init","jsonInit","jdBlocks","uniqueMap","patchCategoryJSONtoXML","cat","button","contents","unshift","node","exists","Flags","blockxml","useToolbox","program","useMemo","blockServices","variables","liveServices","specification","usedEvents","Set","definition","resolveServiceBlockDefinition","eventName","inputs","toolboxServices","srvid","sort","l","localeCompare","servicesCategories","has","callbackKey","commandsCategory","interval","modulesCategory","logicCategory","A","B","BOOL","mathCategory","NUM","variablesCategory","custom","toolboxConfiguration","newProjectXml","NEW_PROJET_XML","useToolboxButtons","workspace","buttons","btn","registerButtonCallback","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","ADD","MULTIPLY","DIVIDE","MINUS","BUILTIN_TYPES","workspaceJSONToVMProgram","EmptyExpression","Error","blockToExpression","blockIn","blockToExpressionInner","raw","argument","op","operator","prefix","left","right","d","makeVMBase","processErrors","makeWait","blockToCommand","thenHandler","elseHandler","addCommands","exprErrors","ifThenElse","concat","serviceCommand","exprsErrors","a","p","flatMap","nop","top","topEvent","topErrors","toString","useStyles","makeStyles","createStyles","editor","fontFamily","typography","fontWeight","VMBlockEditor","onXmlChange","onJSONChange","onVMProgramChange","initialXml","roleManager","workspaceRef","classes","DarkModeContext","darkMode","AppContext","setError","setSource","setProgram","DarkTheme","Theme","gridColor","blocklyRef","useRef","useBlocklyWorkspace","ref","workspaceConfiguration","collapse","disable","comments","css","trashcan","sounds","grid","snap","renderer","oneBasedIndex","move","scrollbars","vertical","horizontal","media","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","onImportXmlError","xml","current","ws","jacdacServices","WorkspaceServices","useBlocklyPlugins","useBlocklyEvents","isDragging","newSource","domToJSON","error","getAllBlocks","setWarningText","observer","resize","clsx"],"mappings":"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","file":"f46badf6a1e485aca95f38418db0645a3911806b-446ae398db9d9caa6f22.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    VMChecker,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    errors?: VMError[]\n}\n\nexport interface VMRole {\n    role: string\n    serviceShortId: string\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram(prog: VMProgram) {\n    let newProgram: VMProgram = { roles: prog.roles.slice(0), handlers: [] }\n    newProgram.handlers = prog.handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[],\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    let currentId: string = undefined\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: currentId, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach((h) => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors\n    }\n}\n\nexport type JDVMFunctions =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"watch\"\n\nexport const VMFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n]\n","const VOLUME_GAIN = 0.4\n\nexport interface ToneContext {\n    close: () => void\n    playTone: (frequency: number, duration: number) => void\n    setVolume: (vol: number) => void\n}\n\nexport function createToneContext(defaultVolume?: number): ToneContext {\n    try {\n        console.log(`create tone context`)\n        const ctx = new (window.AudioContext ||\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (window as any).webkitAudioContext)()\n\n        // play silence sound within onlick to unlock it\n        const buffer = ctx.createBuffer(1, 1, 22050)\n        const source = ctx.createBufferSource()\n        source.buffer = buffer\n        source.connect(ctx.destination)\n        source.start()\n\n        // output node with volume\n        const volume = ctx.createGain()\n        volume.connect(ctx.destination)\n        volume.gain.value =\n            (defaultVolume !== undefined ? defaultVolume : 0.2) * VOLUME_GAIN\n\n        const setVolume = (v: number) => {\n            if (volume && !isNaN(v)) {\n                volume.gain.value = v * VOLUME_GAIN\n            }\n        }\n\n        const playTone = (frequency: number, duration: number) => {\n            try {\n                const tone = ctx.createOscillator()\n                tone.type = \"sawtooth\"\n                tone.connect(volume)\n                tone.frequency.value = frequency // update frequency\n                tone.start() // start and stop\n                tone.stop(ctx.currentTime + duration / 1000)\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n\n        const close = () => {\n            try {\n                if (ctx.state === \"running\") ctx.close()\n            } catch (e) {\n                console.warn(e)\n            }\n        }\n\n        console.log(`tone context created`)\n\n        return {\n            setVolume,\n            playTone,\n            close,\n        }\n    } catch (e) {\n        return undefined\n    }\n}\n","import { useContext } from \"react\";\nimport { DeviceFilter, ServiceFilter } from \"../../../jacdac-ts/src/jdom/bus\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import React, { lazy, ReactNode } from \"react\"\nimport { createToneContext, ToneContext } from \"../../hooks/toneContext\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, {\n    ReactFieldJSON,\n    toShadowDefinition,\n    UNMOUNT,\n} from \"./ReactField\"\nconst PianoWidget = lazy(() => import(\"../../widgets/PianoWidget\"))\n\nexport default class NoteField extends ReactField<number> {\n    static KEY = \"jacdac_field_note\"\n    static SHADOW = toShadowDefinition(NoteField)\n    toneContext: ToneContext\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NoteField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options)\n        this.events.on(UNMOUNT, () => {\n            this.toneContext?.close()\n            this.toneContext = undefined\n        })\n    }\n\n    get defaultValue() {\n        return 440\n    }\n\n    getText_() {\n        return (this.value | 0) + \"\"\n    }\n\n    renderField(): ReactNode {\n        const handlePlayTone = async (newFrequency: number) => {\n            this.value = newFrequency\n            if (!this.toneContext) this.toneContext = createToneContext()\n            this.toneContext?.playTone(newFrequency, 400)\n        }\n        return (\n            <Suspense>\n                <PianoWidget playTone={handlePlayTone} />\n            </Suspense>\n        )\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { HidKeyboardModifiers } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport ReactField, { ReactFieldJSON } from \"./ReactField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { renderKeyboardKey } from \"../../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst KeyboardKeyInput = lazy(() => import(\"../../ui/KeyboardKeyInput\"))\n\nexport interface KeyboardFieldValue {\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nexport default class KeyboardKeyField extends ReactField<KeyboardFieldValue> {\n    static KEY = \"jacdac_field_keyboard_key\"\n\n    static fromJson(options: ReactFieldJSON) {\n        return new KeyboardKeyField(options?.value, undefined, options)\n    }\n\n    get defaultValue() {\n        return { selector: 4, modifiers: 0 }\n    }\n\n    getText_() {\n        const { selector, modifiers } = this.value\n        return renderKeyboardKey(selector, modifiers, true)\n    }\n\n    renderField(): ReactNode {\n        const { selector, modifiers } = this.value\n        const handleChange = (\n            newSelector: number,\n            newModifiers: HidKeyboardModifiers\n        ) => {\n            this.value = { selector: newSelector, modifiers: newModifiers }\n        }\n        return (\n            <Suspense>\n                <KeyboardKeyInput\n                    initialSelector={selector}\n                    initialModifiers={modifiers}\n                    onChange={handleChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction mkTitle(txt: string): SVGTitleElement {\n    const t = <SVGTitleElement>elt(\"title\")\n    t.textContent = txt\n    return t\n}\nexport function title(el: SVGElement, txt: string): SVGTitleElement {\n    const t = mkTitle(txt)\n    el.appendChild(t)\n    return t\n}\n\nexport function hydrate(el: SVGElement, props: any) {\n    for (const k in props) {\n        if (k == \"title\") {\n            title(el, props[k])\n        } else el.setAttributeNS(null, k, props[k])\n    }\n}\n\nexport function elt(name: string, props?: any): SVGElement {\n    const el = document.createElementNS(\"http://www.w3.org/2000/svg\", name)\n    if (props) hydrate(el, props)\n    return el\n}\n\nexport function child(parent: Element, name: string, props?: any): SVGElement {\n    const el = elt(name, props)\n    parent.appendChild(el)\n    return el\n}\n","import ReactField from \"./ReactField\"\nimport Blockly from \"blockly\"\nimport { child } from \"../../widgets/svg\"\n\nexport default class ReactImageField<T> extends ReactField<T> {\n    constructor(value: string, width = 32, height = 32) {\n        super(value, undefined, undefined, { width, height })\n    }\n\n    setSize(width: number, height: number) {\n        this.size_ = new Blockly.utils.Size(width, height)\n        const img = this.view as SVGImageElement\n        if (img) {\n            img.setAttribute(\"width\", width + \"\")\n            img.setAttribute(\"height\", height + \"\")\n        }\n    }\n\n    protected updateView() {\n        const imgUri = this.renderValue()\n        const img = this.view as SVGImageElement\n        if (imgUri) {\n            img?.setAttributeNS(\n                \"http://www.w3.org/1999/xlink\",\n                \"xlink:href\",\n                imgUri\n            )\n            img?.setAttribute(\"alt\", this.getText())\n        }\n    }\n\n    /**\n     * Renders the value to a data uri string\n     */\n    protected renderValue(): string {\n        return undefined\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        return child(this.fieldGroup_, \"image\", {\n            height,\n            width,\n            alt: this.getText(),\n        }) as SVGImageElement\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { fromHex, toHex } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, VALUE_CHANGE } from \"./ReactField\"\nimport ReactImageField from \"./ReactImageField\"\nconst LEDMatrixWidget = lazy(() => import(\"../../widgets/LEDMatrixWidget\"))\n\nexport interface LEDMatrixFieldValue {\n    // hex data\n    leds: string\n    rows: number\n    columns: number\n}\n\nexport default class LEDMatrixField extends ReactImageField<LEDMatrixFieldValue> {\n    static KEY = \"jacdac_field_led_matrix\"\n\n    constructor(value: string) {\n        super(value)\n\n        this.events.on(VALUE_CHANGE, () => {\n            const { rows, columns } = this.value\n            this.setSize(32, (32 / columns) * rows)    \n        })\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDMatrixField(options?.value)\n    }\n\n    get defaultValue() {\n        return {\n            leds: toHex(new Uint8Array(4)),\n            rows: 5,\n            columns: 5,\n        }\n    }\n\n    getText_() {\n        const { leds, rows, columns } = this.value\n        return `${leds} (${rows}x${columns})`\n    }\n\n    renderValue(): string {\n        const { leds, rows, columns } = this.value\n        // render current state to LEDmatrix field\n        const columnspadded = columns + (8 - (columns % 8))\n        const ledsBytes = fromHex(leds)\n        const cvs = document.createElement(\"canvas\")\n        const b = 3\n        const pw = 8\n        const ph = 8\n        const w = rows * pw + (rows - 1) * b\n        const h = columns * ph + (columns - 1) * b\n        cvs.width = w + 2 * b\n        cvs.height = h + 2 * b\n        const ctx = cvs.getContext(\"2d\")\n        ctx.fillStyle = \"#444\"\n        ctx.fillRect(b, b, w, h)\n        ctx.fillStyle = \"blue\"\n        for (let x = 0; x < columns; ++x) {\n            for (let y = 0; y < rows; ++y) {\n                const bitindex = y * columnspadded + x\n                const byte = ledsBytes[bitindex >> 3]\n                const bit = bitindex % 8\n                const on = 1 === ((byte >> bit) & 1)\n                ctx.fillStyle = on ? \"#ffc400\" : \"#000\"\n                ctx.fillRect(x * (pw + b) + b, y * (ph + b) + b, pw, ph)\n            }\n        }\n        const dataUri = cvs.toDataURL(\"image/png\")\n        return dataUri\n    }\n\n    renderField(): ReactNode {\n        const { leds, rows, columns } = this.value\n        const ledsBytes = fromHex(leds)\n        const onChange = (newLeds: Uint8Array) =>\n            (this.value = {\n                leds: toHex(newLeds),\n                rows,\n                columns,\n            })\n        return (\n            <Suspense>\n                <LEDMatrixWidget\n                    color=\"secondary\"\n                    brightness={1}\n                    leds={ledsBytes}\n                    rows={rows}\n                    columns={columns}\n                    onChange={onChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","import { Grid, Slider } from \"@material-ui/core\"\nimport React, { ReactNode, useContext } from \"react\"\nimport ReactField from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nfunction FieldWithSlider(props: { children: ReactNode }) {\n    const { children } = props\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    const handleChange = async (ev: unknown, nv: number | number[]) => {\n        const newValue = nv as number\n        onValueChange(newValue)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n            <Grid item xs={12}>\n                <Slider\n                    color=\"secondary\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={`${Math.round(value)}°`}\n                    min={-90}\n                    max={90}\n                    step={5}\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"angle\"\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class SliderField extends ReactField<number> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(value: string, options?: any) {\n        super(value, undefined, options)\n    }\n\n    get defaultValue() {\n        return 0\n    }\n\n    getText_() {\n        return this.value + \"\"\n    }\n\n    renderField(): ReactNode {\n        return <FieldWithSlider>{this.renderWidget()}</FieldWithSlider>\n    }\n\n    renderWidget(): ReactNode {\n        return null\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport SliderField from \"./SliderField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst ServoWidget = lazy(() => import(\"../../widgets/ServoWidget\"))\n\nfunction ServiceFieldWidget() {\n    const { value } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <ServoWidget\n                angle={value}\n                offset={0}\n                color=\"secondary\"\n                enabled={true}\n            />\n        </Suspense>\n    )\n}\n\nexport default class ServoAngleField extends SliderField {\n    static KEY = \"jacdac_field_servo_angle\"\n    static SHADOW = toShadowDefinition(ServoAngleField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ServoAngleField(options?.value, options)\n    }\n\n    getText_() {\n        return this.value + \"°\"\n    }\n\n    renderWidget(): ReactNode {\n        return <ServiceFieldWidget />\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport { rgbToHtmlColor } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { child } from \"../../widgets/svg\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst LEDWidget = lazy(() => import(\"../../widgets/LEDWidget\"))\n\nfunction LEDColorFieldWidget() {\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <LEDWidget\n                value={value}\n                onChange={onValueChange}\n                ledCount={3}\n                color=\"secondary\"\n            />\n        </Suspense>\n    )\n}\n\nexport default class LEDColorField extends ReactField<number> {\n    static KEY = \"jacdac_field_led_color\"\n    static SHADOW = toShadowDefinition(LEDColorField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDColorField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 28, height: 28 })\n    }\n\n    protected initCustomView() {\n        const { width } = this.size_\n        const r = width >> 1\n        return child(this.fieldGroup_, \"circle\", {\n            r: width >> 1,\n            cx: r,\n            cy: r,\n            strokeWidth: 2,\n            stroke: \"#777\",\n        }) as SVGCircleElement\n    }\n\n    updateView() {\n        const c = rgbToHtmlColor(this.value)\n        const circle = this.view as SVGCircleElement\n        if (c) {\n            circle?.setAttribute(\"fill\", c)\n        }\n    }\n\n    getText_() {\n        return rgbToHtmlColor(this.value)\n    }\n\n    renderField(): ReactNode {\n        return <LEDColorFieldWidget />\n    }\n}\n","import React, { ReactNode } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactField from \"./ReactField\"\nimport { child } from \"../../widgets/svg\"\nimport DarkModeProvider from \"../../ui/DarkModeProvider\"\nimport { IdProvider } from \"react-use-id-hook\"\nimport JacdacProvider from \"../../../jacdac/Provider\"\nimport AppTheme from \"../../ui/AppTheme\"\nimport Blockly, { Block } from \"blockly\"\nimport { WorkspaceProvider } from \"../WorkspaceContext\"\n\nexport default class ReactInlineField extends ReactField<unknown> {\n    protected container: HTMLDivElement\n    protected resizeObserver: ResizeObserver\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 1, height: 1 })\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"14rem\"\n        return c\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        const fo = child(this.fieldGroup_, \"foreignObject\", {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        }) as SVGForeignObjectElement\n\n        this.container = this.createContainer()\n        fo.appendChild(this.container)\n\n        this.resizeObserver = new ResizeObserver(\n            (entries: ResizeObserverEntry[]) => {\n                const entry = entries[0]\n                const { contentRect } = entry\n                this.size_.width = contentRect.width\n                this.size_.height = contentRect.height\n                fo.setAttribute(\"width\", this.size_.width + \"\")\n                fo.setAttribute(\"height\", this.size_.height + \"\")\n                this.forceRerender()\n            }\n        )\n        this.resizeObserver.observe(this.container)\n\n        ReactDOM.render(this.renderBlock(), this.container)\n        return fo\n    }\n\n    dispose() {\n        if (this.container) {\n            ReactDOM.unmountComponentAtNode(this.container)\n            this.container = undefined\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect()\n            this.resizeObserver = undefined\n        }\n        super.dispose()\n    }\n\n    renderField(): ReactNode {\n        return <div>not used</div>\n    }\n\n    renderInlineField(): ReactNode {\n        return null\n    }\n\n    renderBlock(): ReactNode {\n        return (\n            <WorkspaceProvider field={this}>\n                <DarkModeProvider fixedDarkMode=\"dark\">\n                    <IdProvider>\n                        <JacdacProvider>\n                            <AppTheme>{this.renderInlineField()}</AppTheme>\n                        </JacdacProvider>\n                    </IdProvider>\n                </DarkModeProvider>\n            </WorkspaceProvider>\n        )\n    }\n\n    getText_() {\n        return \"...\"\n    }\n\n    // don't bind any mouse event\n    bindEvents_() {\n        Blockly.Tooltip.bindMouseEvents(this.getClickTarget_())\n    }\n}\n","import React, { useContext } from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { startServiceProviderFromServiceClass } from \"../../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport { serviceSpecificationFromName } from \"../../../../jacdac-ts/src/jdom/spec\"\nimport { Alert } from \"@material-ui/lab\"\n\nexport default function NoServiceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { roleService, roleServiceShortId, flyout } =\n        useContext(WorkspaceContext)\n    const spec = serviceSpecificationFromName(roleServiceShortId)\n    const handleStartSimulator = () =>\n        startServiceProviderFromServiceClass(bus, spec.classIdentifier)\n\n    // nothing to do here\n    if (roleService || flyout) return null\n\n    // unresolved, unknown service\n    if (!roleService && !roleServiceShortId) return null\n\n    // unknown spec\n    if (!spec) return <Alert severity=\"warning\">Unknown service</Alert>\n\n    return (\n        <Button\n            variant=\"outlined\"\n            color=\"default\"\n            startIcon={<AddIcon />}\n            onClick={handleStartSimulator}\n        >\n            start {spec.name}\n        </Button>\n    )\n}\n","import React, { PointerEvent, ReactNode } from \"react\"\n\nexport function PointerBoundary(props: {\n    className?: string\n    children: ReactNode\n}) {\n    const { className, children } = props\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n    return (\n        <div\n            className={className}\n            style={{ cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {children}\n        </div>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Grid } from \"@material-ui/core\"\nimport DashboardServiceWidget from \"../../dashboard/DashboardServiceWidget\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport NoServiceAlert from \"./NoServiceAlert\"\nimport { PointerBoundary } from \"./PointerBoundary\"\n\nfunction TwinWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"center\"\n            justify=\"center\"\n            spacing={1}\n        >\n            <Grid item>\n                <PointerBoundary>\n                    <DashboardServiceWidget\n                        service={roleService}\n                        visible={true}\n                        variant=\"icon\"\n                    />\n                </PointerBoundary>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class TwinField extends ReactInlineField {\n    static KEY = \"jacdac_field_twin\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new TwinField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <TwinWidget />\n    }\n}\n","import React, { lazy, useContext, PointerEvent } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport Suspense from \"../../ui/Suspense\"\nimport NoServiceAlert from \"./NoServiceAlert\"\n\nconst JDomServiceTreeView = lazy(\n    () => import(\"../../tools/JDomServiceTreeView\")\n)\n\nfunction JDomTreeWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <div\n            style={{ minWidth: \"12rem\", cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {roleService && (\n                <Suspense>\n                    <JDomServiceTreeView\n                        service={roleService}\n                        defaultExpanded={[roleService.id]}\n                    />\n                </Suspense>\n            )}\n        </div>\n    )\n}\n\nexport default class JDomTreeField extends ReactInlineField {\n    static KEY = \"jacdac_jdom_service_tree\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new JDomTreeField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <JDomTreeWidget />\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Box, Grid, Switch, Typography, useTheme } from \"@material-ui/core\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport { WatchValueType } from \"../../../../jacdac-ts/src/vm/VMrunner\"\nimport { VM_WATCH_CHANGE } from \"../../../../jacdac-ts/src/vm/VMutils\"\nimport { roundWithPrecision } from \"../../../../jacdac-ts/src/jdom/utils\"\n\nfunction WatchValueWidget() {\n    const { runner, sourceId } = useContext(WorkspaceContext)\n    const theme = useTheme()\n\n    // track changes\n    const [value, setValue] = useState<WatchValueType>(\n        runner?.lookupWatch(sourceId)\n    )\n    useEffect(() => {\n        setValue(undefined)\n        return runner?.subscribe(VM_WATCH_CHANGE, watchSourceId => {\n            if (watchSourceId === sourceId) {\n                const newValue = runner.lookupWatch(sourceId)\n                setValue(newValue)\n            }\n        })\n    }, [runner, sourceId])\n\n    let valueNumber = typeof value === \"number\" ? (value as number) : undefined\n    if (!isNaN(valueNumber)) {\n        const step = Math.ceil(Math.abs(valueNumber)) / 10\n        const precision = step < 1 ? Math.ceil(-Math.log10(step)) : 0\n        valueNumber = roundWithPrecision(valueNumber, precision)\n    }\n\n    return (\n        <Box\n            bgcolor={theme.palette.background.paper}\n            borderRadius={theme.spacing(1)}\n            color={theme.palette.text.primary}\n        >\n            <Grid\n                container\n                alignItems=\"flex-end\"\n                alignContent=\"center\"\n                justify=\"center\"\n                spacing={1}\n            >\n                <Grid item>\n                    <PointerBoundary>\n                        {!isNaN(valueNumber) ? (\n                            <Typography variant=\"body1\">\n                                {valueNumber}\n                            </Typography>\n                        ) : typeof value === \"boolean\" ? (\n                            <Switch value={!!value} />\n                        ) : (\n                            <Typography variant=\"body1\">\n                                {value === undefined ? \"...\" : value + \"\"}\n                            </Typography>\n                        )}\n                    </PointerBoundary>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default class WatchValueField extends ReactInlineField {\n    static KEY = \"jacdac_watch_value\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new WatchValueField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"4rem\"\n        return c\n    }\n\n    renderInlineField() {\n        return <WatchValueWidget />\n    }\n}\n","import Blockly from \"blockly\"\nimport NoteField from \"./NoteField\"\nimport KeyboardKeyField from \"./KeyboardKeyField\"\nimport LEDMatrixField from \"./LEDMatrixField\"\nimport ServoAngleField from \"./ServoAngleField\"\nimport { BlockDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport LEDColorField from \"./LEDColorField\"\nimport TwinField from \"./TwinField\"\nimport JDomTreeField from \"./JDomTreeField\"\nimport WatchValueField from \"./WatchValueField\"\n\nlet reactFieldShadows: BlockDefinition[]\nexport function registerFields() {\n    if (reactFieldShadows) return\n\n    reactFieldShadows = []\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const registerType = (fieldType: any) => {\n        const key = fieldType.KEY\n        assert(!!key)\n        Blockly.fieldRegistry.unregister(key) // hot reload issues\n        Blockly.fieldRegistry.register(key, fieldType)\n        if (fieldType.SHADOW) reactFieldShadows.push(fieldType.SHADOW)\n    }\n    const fieldTypes = [\n        KeyboardKeyField,\n        NoteField,\n        LEDMatrixField,\n        ServoAngleField,\n        LEDColorField,\n        TwinField,\n        JDomTreeField,\n        WatchValueField,\n    ]\n    fieldTypes.forEach(registerType)\n}\n\nexport function fieldShadows() {\n    registerFields()\n    return reactFieldShadows.slice(0)\n}\n","import Blockly from \"blockly\"\nimport { useEffect, useMemo } from \"react\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecifications,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"../hooks/useServices\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { Theme, useTheme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby-link\"\nimport { fieldShadows, registerFields } from \"./fields/fields\"\nimport KeyboardKeyField from \"./fields/KeyboardKeyField\"\nimport LEDMatrixField from \"./fields/LEDMatrixField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    ButtonDefinition,\n    CategoryDefinition,\n    ColorInputDefnition,\n    CommandBlockDefinition,\n    CONNECTED_BLOCK,\n    CONNECTION_BLOCK,\n    CustomBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    INSPECT_BLOCK,\n    NEW_PROJET_XML,\n    NumberInputDefinition,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    REPEAT_EVERY_BLOCK,\n    resolveServiceBlockDefinition,\n    SeparatorDefinition,\n    ServiceBlockDefinition,\n    ServiceBlockDefinitionFactory,\n    SET_STATUS_LIGHT_BLOCK,\n    ToolboxConfiguration,\n    TWIN_BLOCK,\n    WAIT_BLOCK,\n    WATCH_BLOCK,\n} from \"./toolbox\"\nimport NoteField from \"./fields/NoteField\"\nimport ServoAngleField from \"./fields/ServoAngleField\"\nimport LEDColorField from \"./fields/LEDColorField\"\nimport TwinField from \"./fields/TwinField\"\nimport JDomTreeField from \"./fields/JDomTreeField\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport WatchValueField from \"./fields/WatchValueField\"\n\n// overrides blockly emboss filter for svg elements\nBlockly.BlockSvg.prototype.setHighlighted = function (highlighted) {\n    if (!this.rendered) {\n        return\n    }\n    if (highlighted) {\n        this.addSelect()\n    } else {\n        this.removeSelect()\n    }\n}\n\ntype CachedBlockDefinitions = {\n    blocks: BlockDefinition[]\n    serviceBlocks: ServiceBlockDefinition[]\n    eventFieldBlocks: EventFieldDefinition[]\n    services: jdspec.ServiceSpec[]\n}\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return isBooleanField(field)\n        ? \"Boolean\"\n        : isStringField(field)\n        ? \"String\"\n        : isNumericType(field)\n        ? \"Number\"\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nfunction createBlockTheme(theme: Theme) {\n    const sensorColor = theme.palette.success.main\n    const otherColor = theme.palette.info.main\n    const commandColor = theme.palette.warning.main\n    const debuggerColor = theme.palette.grey[600]\n    const serviceColor = (srv: jdspec.ServiceSpec) =>\n        isSensor(srv) ? sensorColor : otherColor\n    return {\n        serviceColor,\n        sensorColor,\n        commandColor,\n        debuggerColor,\n        otherColor,\n    }\n}\n\nfunction loadBlocks(\n    serviceColor: (srv: jdspec.ServiceSpec) => string,\n    commandColor: string,\n    debuggerColor: string\n): CachedBlockDefinitions {\n    // blocks\n    const customShadows = [\n        {\n            serviceClass: SRV_SERVO,\n            kind: \"rw\",\n            identifier: ServoReg.Angle,\n            field: \"_\",\n            shadow: <BlockDefinition>{\n                kind: \"block\",\n                type: ServoAngleField.SHADOW.type,\n            },\n        },\n        {\n            serviceClass: SRV_BUZZER,\n            kind: \"command\",\n            identifier: BuzzerCmd.PlayNote,\n            field: \"frequency\",\n            shadow: <BlockDefinition>{\n                kind: \"block\",\n                type: NoteField.SHADOW.type,\n            },\n        },\n    ]\n    const lookupCustomShadow = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ) =>\n        customShadows.find(\n            cs =>\n                cs.serviceClass === service.classIdentifier &&\n                cs.kind == info.kind &&\n                cs.identifier === info.identifier &&\n                cs.field == field.name\n        )?.shadow\n\n    const serviceHelp = (service: jdspec.ServiceSpec) =>\n        withPrefix(`/services/${service.shortId}`)\n    const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n        pkt.fields.every(toBlocklyType)\n    const fieldName = (reg: jdspec.PacketInfo, field: jdspec.PacketMember) =>\n        field.name === \"_\" ? reg.name : field.name\n    const fieldToShadow = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ): BlockReference =>\n        lookupCustomShadow(service, info, field) ||\n        (isBooleanField(field)\n            ? { kind: \"block\", type: \"jacdac_on_off\" }\n            : isStringField(field)\n            ? { kind: \"block\", type: \"text\" }\n            : field.unit === \"°\"\n            ? {\n                  kind: \"block\",\n                  type: \"jacdac_angle\",\n              }\n            : field.unit === \"/\"\n            ? { kind: \"block\", type: \"jacdac_ratio\" }\n            : /^%/.test(field.unit)\n            ? { kind: \"block\", type: \"jacdac_percent\" }\n            : field.type === \"u8\"\n            ? { kind: \"block\", type: \"jacdac_byte\" }\n            : {\n                  kind: \"block\",\n                  type: \"math_number\",\n                  value: field.defaultValue || 0,\n                  min: field.typicalMin || field.absoluteMin,\n                  max: field.typicalMax || field.absoluteMax,\n              })\n    const variableName = (srv: jdspec.ServiceSpec) =>\n        `${humanify(srv.camelName).toLowerCase()} 1`\n    const fieldVariable = (service: jdspec.ServiceSpec): InputDefinition => ({\n        type: \"field_variable\",\n        name: \"role\",\n        variable: variableName(service),\n        variableTypes: [service.shortId],\n        defaultType: service.shortId,\n    })\n    const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n        info.fields.map(field => ({\n            type: \"input_value\",\n            name: fieldName(info, field),\n            check: toBlocklyType(field),\n        }))\n    const fieldsToValues = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo\n    ) =>\n        toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n            info.fields,\n            field => fieldName(info, field),\n            field => fieldToShadow(service, info, field)\n        )\n    const fieldsToMessage = (info: jdspec.PacketInfo) =>\n        info.fields\n            .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n            .join(\" \")\n    const isEnabledRegister = (info: jdspec.PacketInfo) =>\n        info.fields.length === 1 &&\n        info.fields[0].type === \"bool\" &&\n        info.name === \"enabled\"\n    const customMessage = (\n        srv: jdspec.ServiceSpec,\n        reg: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ) =>\n        customMessages.find(\n            m =>\n                m.service === srv.classIdentifier &&\n                m.register === reg.identifier &&\n                m.field === field.name\n        )\n\n    const allServices = serviceSpecifications()\n        .filter(\n            service =>\n                !/^_/.test(service.shortId) && service.status !== \"deprecated\"\n        )\n        .filter(service => ignoredServices.indexOf(service.classIdentifier) < 0)\n    const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n        allServices.filter(srv => srv.classIdentifier === cls)\n    const registers = arrayConcatMany(\n        allServices.map(service =>\n            service.packets\n                .filter(\n                    pkt =>\n                        isRegister(pkt) &&\n                        !pkt.lowLevel &&\n                        includedRegisters.indexOf(pkt.identifier) > -1\n                )\n                .map(register => ({\n                    service,\n                    register,\n                }))\n        )\n    )\n    const events = allServices\n        .map(service => ({\n            service,\n            events: service.packets.filter(\n                pkt =>\n                    isEvent(pkt) &&\n                    !pkt.lowLevel &&\n                    ignoredEvents.indexOf(pkt.identifier) < 0\n            ),\n        }))\n        .filter(kv => !!kv.events.length)\n    const commands = arrayConcatMany(\n        allServices.map(service =>\n            service.packets\n                .filter(\n                    pkt =>\n                        isCommand(pkt) && !pkt.lowLevel && fieldsSupported(pkt)\n                )\n                .map(pkt => ({\n                    service,\n                    command: pkt,\n                }))\n        )\n    )\n\n    const customBlockDefinitions: CustomBlockDefinition[] = [\n        ...resolveService(SRV_HID_KEYBOARD).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `key`,\n                    message0: `send %1 key %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: KeyboardKeyField.KEY,\n                            name: \"combo\",\n                        },\n                    ],\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: null,\n                    nextStatement: null,\n                    tooltip: `Send a keyboard key combo`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    expression: `role.key(combo.selectors, combo.modifiers)`,\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_LED).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `fade`,\n                    message0: `fade %1 to %2 at speed %3`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: \"input_value\",\n                            name: \"color\",\n                            check: \"Number\",\n                        },\n                        {\n                            type: \"input_value\",\n                            name: \"speed\",\n                            check: \"Number\",\n                        },\n                    ],\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                        speed: {\n                            kind: \"block\",\n                            type: \"jacdac_ratio\",\n                            shadow: true,\n                        },\n                    },\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: null,\n                    nextStatement: null,\n                    tooltip: `Fade LED color`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `set_digits`,\n                    message0: `set %1 digits to %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: \"input_value\",\n                            name: \"digits\",\n                            check: \"Number\",\n                        },\n                    ],\n                    values: {\n                        digits: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: null,\n                    nextStatement: null,\n                    tooltip: `Display a number of the screen`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    // encode digits\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_LED_MATRIX).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `_show_leds`,\n                    message0: `show %1 leds %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: LEDMatrixField.KEY,\n                            name: \"leds\",\n                        },\n                    ],\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: null,\n                    nextStatement: null,\n                    tooltip: `Display LEDs on the LED matrix`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    // encode digits\n                    template: \"custom\",\n                }\n        ),\n    ].map(def => {\n        def.type = `jacdac_custom_${def.service.shortId}_${def.type}`\n        return def\n    })\n\n    const eventBlocks = events.map<EventBlockDefinition>(\n        ({ service, events }) => ({\n            kind: \"block\",\n            type: `jacdac_events_${service.shortId}`,\n            message0: `on %1 %2`,\n            args0: [\n                fieldVariable(service),\n                <InputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"event\",\n                    options: events.map(event => [\n                        humanify(event.name),\n                        event.name,\n                    ]),\n                },\n            ],\n            colour: serviceColor(service),\n            inputsInline: true,\n            nextStatement: null,\n            tooltip: `Events for the ${service.name} service`,\n            helpUrl: serviceHelp(service),\n            service,\n            events,\n            template: \"event\",\n        })\n    )\n\n    // generate accessor blocks for event data with numbers\n    const eventFieldBlocks = arrayConcatMany(\n        events.map(({ service, events }) =>\n            events\n                .filter(event => event.fields.filter(isNumericType).length > 0)\n                .map(event => ({ service, event }))\n                .map(\n                    ({ service, event }) =>\n                        <EventFieldDefinition>{\n                            kind: \"block\",\n                            type: `jacdac_event_field_${service.shortId}_${event.name}`,\n                            message0: `${event.name} %1`,\n                            args0: [\n                                <InputDefinition>{\n                                    type: \"field_dropdown\",\n                                    name: \"field\",\n                                    options: event.fields.map(field => [\n                                        humanify(field.name),\n                                        field.name,\n                                    ]),\n                                },\n                            ],\n                            colour: serviceColor(service),\n                            inputsInline: true,\n                            tooltip: `Data fields of the ${event.name} event`,\n                            helpUrl: serviceHelp(service),\n                            service,\n                            event,\n                            output: \"Number\",\n                            template: \"event_field\",\n                        }\n                )\n        )\n    )\n\n    const registerChangeByEventBlocks = registers\n        .filter(\n            ({ service }) =>\n                !service.packets.some(\n                    pkt =>\n                        isEvent(pkt) &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                )\n        )\n        .filter(\n            ({ register }) =>\n                register.fields.length === 1 &&\n                isNumericType(register.fields[0]) &&\n                register.identifier !== SystemReg.Intensity\n        )\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n            message0: `when %1 ${humanify(register.name)} change by %2`,\n            args0: [\n                fieldVariable(service),\n                ...fieldsToFieldInputs(register),\n            ].filter(v => !!v),\n            values: fieldsToValues(service, register),\n            inputsInline: true,\n            nextStatement: null,\n            colour: serviceColor(service),\n            tooltip: `Event raised when ${register.name} changes`,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n\n            template: \"register_change_event\",\n        }))\n\n    const [registerSimples, registerComposites] = splitFilter(\n        registers,\n        reg => reg.register.fields.length == 1\n    )\n    const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n        registerSimples,\n        ({ register }) => !!toBlocklyType(register.fields[0])\n    )\n    const registerSimplesGetBlocks =\n        registerSimpleTypes.map<RegisterBlockDefinition>(\n            ({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                message0:\n                    customMessage(service, register, register.fields[0])?.get ||\n                    `%1 ${humanify(register.name)}`,\n                args0: [fieldVariable(service)],\n                inputsInline: true,\n                output: toBlocklyType(register.fields[0]),\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field: register.fields[0],\n\n                template: \"register_get\",\n            })\n        )\n    const registerSimpleEnumTypes = registerSimpleOthers\n        .filter(\n            ({ service, register }) => !!enumInfo(service, register.fields[0])\n        )\n        .map(({ service, register }) => ({\n            service,\n            register,\n            field: register.fields[0],\n            einfo: enumInfo(service, register.fields[0]),\n        }))\n    const registerCompositeEnumTypes = arrayConcatMany(\n        registerComposites.map(({ service, register }) =>\n            register.fields\n                .map(field => ({\n                    service,\n                    register,\n                    field,\n                    einfo: enumInfo(service, field),\n                }))\n                .filter(({ einfo }) => !!einfo)\n        )\n    )\n    const registerEnumGetBlocks = [\n        ...registerSimpleEnumTypes,\n        ...registerCompositeEnumTypes,\n    ].map<RegisterBlockDefinition>(({ service, register, field, einfo }) => ({\n        kind: \"block\",\n        type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n        message0:\n            customMessage(service, register, field)?.get ||\n            `%1 ${humanify(register.name)}${\n                field.name === \"_\" ? \"\" : ` ${field.name}`\n            } %2`,\n        args0: [\n            fieldVariable(service),\n            <OptionsInputDefinition>{\n                type: \"field_dropdown\",\n                name: field.name,\n                options: Object.keys(einfo.members).map(member => [\n                    humanify(member),\n                    member,\n                ]),\n            },\n        ],\n        inputsInline: true,\n        output: \"Boolean\",\n        colour: serviceColor(service),\n        tooltip: register.description,\n        helpUrl: serviceHelp(service),\n        service,\n        register,\n        field,\n\n        template: \"register_get\",\n    }))\n\n    const registerNumericsGetBlocks = registerComposites\n        .filter(re => re.register.fields.some(isNumericType))\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n            message0: `%1 ${humanify(register.name)}${\n                register.fields.length > 1 ? ` %2` : \"\"\n            }`,\n            args0: [\n                fieldVariable(service),\n                register.fields.length > 1\n                    ? <OptionsInputDefinition>{\n                          type: \"field_dropdown\",\n                          name: \"field\",\n                          options: register.fields\n                              .filter(f => isNumericType(f))\n                              .map(field => [\n                                  humanify(field.name),\n                                  fieldName(register, field),\n                              ]),\n                      }\n                    : undefined,\n            ].filter(v => !!v),\n            inputsInline: true,\n            output: \"Number\",\n            colour: serviceColor(service),\n            tooltip: register.description,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n\n            template: \"register_get\",\n        }))\n\n    const registerSetBlocks = registers\n        .filter(({ register }) => register.kind === \"rw\")\n        .filter(({ register }) => fieldsSupported(register))\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_set_${service.shortId}_${register.name}`,\n            message0: isEnabledRegister(register)\n                ? `set %1 %2`\n                : `set %1 ${register.name} to ${\n                      register.fields.length === 1\n                          ? \"%2\"\n                          : fieldsToMessage(register)\n                  }`,\n            args0: [fieldVariable(service), ...fieldsToFieldInputs(register)],\n            values: fieldsToValues(service, register),\n            inputsInline: true,\n            colour: serviceColor(service),\n            tooltip: register.description,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n            previousStatement: null,\n            nextStatement: null,\n\n            template: \"register_set\",\n        }))\n\n    const commandBlocks = commands.map<CommandBlockDefinition>(\n        ({ service, command }) => ({\n            kind: \"block\",\n            type: `jacdac_command_${service.shortId}_${command.name}`,\n            message0: !command.fields.length\n                ? `${humanify(command.name)} %1`\n                : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                      command\n                  )}`,\n            args0: [fieldVariable(service), ...fieldsToFieldInputs(command)],\n            values: fieldsToValues(service, command),\n            inputsInline: true,\n            colour: serviceColor(service),\n            tooltip: command.description,\n            helpUrl: serviceHelp(service),\n            service,\n            command,\n            previousStatement: null,\n            nextStatement: null,\n\n            template: \"command\",\n        })\n    )\n\n    const serviceBlocks: ServiceBlockDefinition[] = [\n        ...eventBlocks,\n        ...registerChangeByEventBlocks,\n        ...registerSimplesGetBlocks,\n        ...registerEnumGetBlocks,\n        ...registerNumericsGetBlocks,\n        ...registerSetBlocks,\n        ...customBlockDefinitions,\n        ...commandBlocks,\n    ]\n\n    const shadowBlocks: BlockDefinition[] = [\n        ...fieldShadows(),\n        {\n            kind: \"block\",\n            type: `jacdac_on_off`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"enabled\", \"on\"],\n                        [\"disabled\", \"off\"],\n                    ],\n                },\n            ],\n            style: \"logic_blocks\",\n            output: \"Boolean\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_time_picker`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"0.1\", \"0.1\"],\n                        [\"1\", \"1\"],\n                        [\"5\", \"5\"],\n                        [\"30\", \"30\"],\n                        [\"60\", \"60\"],\n                    ],\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_angle`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_angle\",\n                    name: \"value\",\n                    min: 0,\n                    max: 360,\n                    precision: 10,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_percent`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 100,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_byte`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 255,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_ratio`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 1,\n                    precision: 0.1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_color`,\n            message0: `%1`,\n            args0: [\n                <ColorInputDefnition>{\n                    type: \"field_colour\",\n                    name: \"col\",\n                    colour: \"#ff0000\",\n                    colourOptions: [\n                        \"#ff0000\",\n                        \"#ff8000\",\n                        \"#ffff00\",\n                        \"#ff9da5\",\n                        \"#00ff00\",\n                        \"#b09eff\",\n                        \"#00ffff\",\n                        \"#007fff\",\n                        \"#65471f\",\n                        \"#0000ff\",\n                        \"#7f00ff\",\n                        \"#ff0080\",\n                        \"#ff00ff\",\n                        \"#ffffff\",\n                        \"#999999\",\n                        \"#000000\",\n                    ],\n                    columns: 4,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Color\",\n        },\n    ]\n\n    const runtimeBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                {\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: null,\n            nextStatement: null,\n            colour: commandColor,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: CONNECTION_BLOCK,\n            message0: \"when %1 %2\",\n            args0: [\n                {\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"any\",\n                    variableTypes: [\n                        \"client\",\n                        ...allServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"event\",\n                    options: [\n                        [\"connected\", \"connected\"],\n                        [\"disconnected\", \"disconnected\"],\n                    ],\n                },\n            ],\n            inputsInline: true,\n            nextStatement: null,\n            colour: commandColor,\n            tooltip: \"Runs code when a role is connected or disconnected\",\n            helpUrl: \"\",\n            template: \"connection\",\n        },\n        {\n            kind: \"block\",\n            type: CONNECTED_BLOCK,\n            message0: \"%1 connected\",\n            args0: [\n                {\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"any\",\n                    variableTypes: [\n                        \"client\",\n                        ...allServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n            ],\n            output: \"Boolean\",\n            inputsInline: true,\n            colour: commandColor,\n            tooltip: \"Runs code when a role is connected or disconnected\",\n            helpUrl: \"\",\n            template: \"connected\",\n        },\n        {\n            kind: \"block\",\n            type: SET_STATUS_LIGHT_BLOCK,\n            message0: \"set %1 status light to %2\",\n            args0: [\n                {\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"all\",\n                    variableTypes: [\n                        \"client\",\n                        ...allServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"color\",\n                    check: \"Number\",\n                },\n            ],\n            values: {\n                color: {\n                    kind: \"block\",\n                    type: LEDColorField.SHADOW.type,\n                },\n            },\n            inputsInline: true,\n            previousStatement: null,\n            nextStatement: null,\n            colour: commandColor,\n            tooltip: \"Sets the color on the status light\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                {\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...allServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"twin\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                {\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...allServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"twin\",\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"Number\", \"Boolean\", \"String\"],\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n            template: \"watch\",\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour: commandColor,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            template: \"every\",\n            nextStatement: null,\n        },\n    ]\n\n    const mathBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                {\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                {\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                {\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random_range\",\n            message0: \"random from %1 to %2\",\n            args0: [\n                {\n                    type: \"input_value\",\n                    name: \"min\",\n                    check: \"Number\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"max\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            inputsInline: true,\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                {\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                {\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ]\n\n    const blocks: BlockDefinition[] = [\n        ...serviceBlocks,\n        ...eventFieldBlocks,\n        ...runtimeBlocks,\n        ...shadowBlocks,\n        ...mathBlocks,\n    ]\n\n    // register field editors\n    registerFields()\n    // re-register blocks with blocklys\n    blocks.forEach(\n        block =>\n            (Blockly.Blocks[block.type] = <ServiceBlockDefinitionFactory>{\n                jacdacDefinition: block,\n                init: function () {\n                    this.jsonInit(block)\n                },\n            })\n    )\n\n    // final mapping\n    const jdBlocks = serviceBlocks.filter(block => !!block.service)\n    const services = uniqueMap(\n        jdBlocks,\n        block => block.service.shortId,\n        block => block.service\n    )\n\n    console.debug(\"vmblocks\", { blocks, serviceBlocks, services })\n    return {\n        blocks,\n        serviceBlocks,\n        eventFieldBlocks,\n        services,\n    }\n}\n\nfunction patchCategoryJSONtoXML(cat: CategoryDefinition): CategoryDefinition {\n    if (cat.button) {\n        if (!cat.contents) cat.contents = []\n        cat.contents.unshift(cat.button)\n    }\n    cat.contents\n        ?.filter(node => node.kind === \"block\")\n        .map(node => <BlockReference>node)\n        .filter(block => {\n            const exists = Blockly.Blocks[block.type]\n            if (!exists && Flags.diagnostics)\n                console.warn(\n                    `block type '${block.type}' not found, consider refreshing page...`\n                )\n            return !!block.values && exists\n        }) // avoid broken blocks\n        .forEach(block => {\n            // yup, this suck but we have to go through it\n            block.blockxml = `<block type=\"${block.type}\">${Object.keys(\n                block.values\n            )\n                .map(name => {\n                    const { type } = block.values[name]\n                    return `<value name=\"${name}\"><shadow type=\"${type}\" /></value>`\n                })\n                .join(\"\\n\")}</block>`\n            delete block.type\n        })\n    return cat\n}\n\nexport default function useToolbox(props: {\n    blockServices?: string[]\n    serviceClass?: number\n    source?: WorkspaceJSON\n    program?: VMProgram\n}): {\n    serviceBlocks: BlockDefinition[]\n    toolboxConfiguration: ToolboxConfiguration\n    newProjectXml: string\n} {\n    const { serviceClass, source, program } = props\n\n    const theme = useTheme()\n    const { serviceColor, commandColor, debuggerColor } =\n        createBlockTheme(theme)\n    const { serviceBlocks, eventFieldBlocks, services } = useMemo(\n        () => loadBlocks(serviceColor, commandColor, debuggerColor),\n        [theme]\n    )\n    const blockServices =\n        program?.roles.map(r => r.serviceShortId) ||\n        source?.variables.map(v => v.type) ||\n        []\n    const liveServices = useServices({ specification: true })\n    const usedEvents: Set<jdspec.PacketInfo> = new Set(\n        source?.blocks\n            ?.map(block => ({\n                block,\n                definition: resolveServiceBlockDefinition(block.type),\n            }))\n            .filter(({ definition }) => definition.template === \"event\")\n            .map(({ block, definition }) => {\n                const eventName = block.inputs[0].fields[\"event\"]\n                    .value as string\n                return (definition as EventBlockDefinition).events.find(\n                    ev => ev.name === eventName\n                )\n            })\n            .filter(ev => !!ev)\n    )\n\n    const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n        Flags.diagnostics\n            ? services\n            : [\n                  ...blockServices\n                      .map(srvid =>\n                          services.find(service => service.shortId === srvid)\n                      )\n                      .filter(srv => !!srv),\n                  ...liveServices.map(srv => srv.specification),\n              ].filter(\n                  srv => !serviceClass || srv.classIdentifier === serviceClass\n              ),\n        srv => srv.shortId,\n        srv => srv\n    )\n        .filter(srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0)\n        .sort((l, r) => l.name.localeCompare(r.name))\n\n    const servicesCategories: CategoryDefinition[] = toolboxServices\n        .map(service => ({\n            service,\n            serviceBlocks: serviceBlocks.filter(\n                block => block.service === service\n            ),\n        }))\n        .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n            kind: \"category\",\n            name: service.name,\n            colour: serviceColor(service),\n            contents: [\n                ...serviceBlocks.map<BlockDefinition>(block => ({\n                    kind: \"block\",\n                    type: block.type,\n                    values: block.values,\n                })),\n                ...eventFieldBlocks\n                    .filter(\n                        ev => ev.service === service && usedEvents.has(ev.event)\n                    )\n                    .map<BlockDefinition>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n            ],\n            button: {\n                kind: \"button\",\n                text: `Add ${service.name} role`,\n                callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                service,\n            },\n        }))\n        .filter(cat => !!cat.contents?.length)\n\n    const commandsCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Commands\",\n        colour: commandColor,\n        contents: [\n            <BlockDefinition>{\n                kind: \"block\",\n                type: REPEAT_EVERY_BLOCK,\n                values: {\n                    interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                },\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: WAIT_BLOCK,\n                values: {\n                    time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                },\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: CONNECTION_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: CONNECTED_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n            },\n        ].filter(b => !!b),\n    }\n\n    const modulesCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Tools\",\n        colour: debuggerColor,\n        contents: [\n            <BlockDefinition>{\n                kind: \"block\",\n                type: WATCH_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: TWIN_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: INSPECT_BLOCK,\n            },\n        ].filter(b => !!b),\n    }\n\n    const logicCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Logic\",\n        colour: \"%{BKY_LOGIC_HUE}\",\n        contents: [\n            {\n                kind: \"block\",\n                type: \"dynamic_if\",\n            },\n            {\n                kind: \"block\",\n                type: \"logic_compare\",\n                values: {\n                    A: { kind: \"block\", type: \"math_number\" },\n                    B: { kind: \"block\", type: \"math_number\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_operation\",\n                values: {\n                    A: { kind: \"block\", type: \"logic_boolean\" },\n                    B: { kind: \"block\", type: \"logic_boolean\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_negate\",\n                values: {\n                    BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_boolean\",\n            },\n        ],\n    }\n\n    const mathCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Math\",\n        colour: \"%{BKY_MATH_HUE}\",\n        contents: [\n            {\n                kind: \"block\",\n                type: \"jacdac_math_arithmetic\",\n                values: {\n                    A: { kind: \"block\", type: \"math_number\" },\n                    B: { kind: \"block\", type: \"math_number\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"jacdac_math_single\",\n                values: {\n                    NUM: {\n                        kind: \"block\",\n                        type: \"math_number\",\n                    },\n                },\n            },\n            { kind: \"block\", type: \"jacdac_math_random\" },\n            { kind: \"block\", type: \"jacdac_math_random_range\" },\n            { kind: \"block\", type: \"jacdac_math_map\" },\n            { kind: \"block\", type: \"math_number\" },\n        ],\n    }\n\n    const variablesCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Variables\",\n        colour: \"%{BKY_VARIABLES_HUE}\",\n        custom: \"VARIABLE\",\n    }\n\n    const toolboxConfiguration: ToolboxConfiguration = {\n        kind: \"categoryToolbox\",\n        contents: [\n            ...servicesCategories,\n            servicesCategories?.length &&\n                <SeparatorDefinition>{\n                    kind: \"sep\",\n                },\n            commandsCategory,\n            logicCategory,\n            mathCategory,\n            variablesCategory,\n            <SeparatorDefinition>{\n                kind: \"sep\",\n            },\n            modulesCategory,\n        ]\n            .filter(cat => !!cat)\n            .map(node =>\n                node.kind === \"category\"\n                    ? patchCategoryJSONtoXML(node as CategoryDefinition)\n                    : node\n            ),\n    }\n\n    return {\n        serviceBlocks,\n        toolboxConfiguration,\n        newProjectXml: NEW_PROJET_XML,\n    }\n}\n\nexport function useToolboxButtons(\n    workspace: Blockly.WorkspaceSvg,\n    toolboxConfiguration: ToolboxConfiguration\n) {\n    // track workspace changes and update callbacks\n    useEffect(() => {\n        if (!workspace) return\n\n        // collect buttons\n        const buttons: ButtonDefinition[] = toolboxConfiguration?.contents\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(cat => (cat as CategoryDefinition).button)\n            .filter(btn => !!btn)\n        buttons?.forEach(button =>\n            workspace.registerButtonCallback(button.callbackKey, () =>\n                Blockly.Variables.createVariableButtonHandler(\n                    workspace,\n                    null,\n                    button.service.shortId\n                )\n            )\n        )\n    }, [workspace, JSON.stringify(toolboxConfiguration)])\n}\n","import { BlockJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    toMemberExpression,\n    toIdentifier,\n    VMIfThenElse,\n    RoleEvent,\n    VMError,\n    VMCommand,\n} from \"../../../jacdac-ts/src/vm/VMir\"\nimport { assert } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    CommandBlockDefinition,\n    EventFieldDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    WAIT_BLOCK,\n} from \"./toolbox\"\nimport Blockly from \"blockly\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nconst BUILTIN_TYPES = [\"\", \"Boolean\", \"Number\", \"String\"]\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON\n): VMProgram {\n    console.debug(`compile vm`, { workspace })\n\n    const roles: VMRole[] = workspace.variables\n        .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n        .map(v => ({ role: v.name, serviceShortId: v.type }))\n\n    type ExpressionWithErrors = {\n        expr: jsep.Expression\n        errors: VMError[]\n    }\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            switch (type) {\n                case \"jacdac_math_single\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    const op = inputs[0].fields[\"op\"].value as string\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"jacdac_math_arithmetic\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_operation\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_negate\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"logic_compare\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                default: {\n                    const def = resolveServiceBlockDefinition(type)\n                    if (!def) {\n                        console.warn(`unknown block ${type}`, {\n                            type,\n                            ev,\n                            block,\n                            d: Blockly.Blocks[type],\n                        })\n                    } else {\n                        const { template } = def\n                        console.log(\"get\", { type, def, template })\n                        switch (template) {\n                            case \"register_get\": {\n                                const { register } =\n                                    def as RegisterBlockDefinition\n                                const { value: role } = inputs[0].fields[\"role\"]\n                                const field = inputs[0].fields[\"field\"]\n                                return toMemberExpression(\n                                    role as string,\n                                    field\n                                        ? toMemberExpression(\n                                              register.name,\n                                              field.value as string\n                                          )\n                                        : register.name\n                                )\n                            }\n                            case \"event_field\": {\n                                const { event } = def as EventFieldDefinition\n                                if (ev.event !== event.name) {\n                                    errors.push({\n                                        sourceId: block.id,\n                                        message: `Event ${event.name} is not available in this handler.`,\n                                    })\n                                }\n                                const field = inputs[0].fields[\"field\"]\n                                return toMemberExpression(\n                                    ev.role,\n                                    toMemberExpression(\n                                        ev.event,\n                                        field.value as string\n                                    )\n                                )\n                            }\n                            case \"shadow\": {\n                                const field = inputs[0].fields[\"value\"]\n                                const { value } = field\n                                return <jsep.Literal>{\n                                    type: \"Literal\",\n                                    value: value,\n                                    raw: value + \"\",\n                                }\n                            }\n                            default: {\n                                console.warn(\n                                    `unsupported block template ${template} for ${type}`,\n                                    { ev, block }\n                                )\n                                break\n                            }\n                        }\n                        break\n                    }\n                }\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    type CmdWithErrors = {\n        cmd: VMBase\n        errors: VMError[]\n    }\n\n    const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n        return {\n            sourceId: block.id,\n            type: \"cmd\",\n            command,\n        } as VMBase\n    }\n\n    const processErrors = (block: BlockJSON, errors: VMError[]) => {\n        return errors.map((e: VMError) => {\n            return {\n                sourceId: e.sourceId ? e.sourceId : block.id,\n                message: e.message,\n            }\n        })\n    }\n\n    const makeWait = (event: RoleEvent, block: BlockJSON) => {\n        const { inputs } = block\n        {\n            const { expr: time, errors } = blockToExpression(\n                event,\n                inputs[0].child\n            )\n            return {\n                cmd: makeVMBase(block, {\n                    type: \"CallExpression\",\n                    arguments: [time],\n                    callee: toIdentifier(\"wait\"),\n                }),\n                errors: processErrors(block, errors),\n            }\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case WAIT_BLOCK: \n                return makeWait(event, block)\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const def = resolveServiceBlockDefinition(type)\n                if (def) {\n                    const { template } = def\n                    switch (template) {\n                        case \"register_set\": {\n                            const { register } = def as RegisterBlockDefinition\n                            const { expr, errors } = blockToExpression(\n                                event,\n                                inputs[0].child\n                            )\n                            const { value: role } = inputs[0].fields.role\n                            return {\n                                cmd: makeVMBase(block, {\n                                    type: \"CallExpression\",\n                                    arguments: [\n                                        toMemberExpression(\n                                            role as string,\n                                            register.name\n                                        ),\n                                        expr,\n                                    ],\n                                    callee: toIdentifier(\"writeRegister\"),\n                                }),\n                                errors: processErrors(block, errors),\n                            }\n                        }\n                        case \"command\": {\n                            const { command: serviceCommand } =\n                                def as CommandBlockDefinition\n                            const { value: role } = inputs[0].fields.role\n                            const exprsErrors = inputs.map(a =>\n                                blockToExpression(event, a.child)\n                            )\n                            return {\n                                cmd: makeVMBase(block, {\n                                    type: \"CallExpression\",\n                                    arguments: exprsErrors.map(p => p.expr),\n                                    callee: toMemberExpression(\n                                        role as string,\n                                        serviceCommand.name\n                                    ),\n                                }),\n                                errors: processErrors(\n                                    block,\n                                    exprsErrors.flatMap(p => p.errors)\n                                ),\n                            }\n                        }\n                        default: {\n                            console.warn(\n                                `unsupported block template ${template} for ${type}`,\n                                { block }\n                            )\n                            return {\n                                cmd: undefined,\n                                errors: [],\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks?.forEach(child => {\n            if (child) {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child)\n                    if (cmd) handler.commands.push(cmd)\n                    errors.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    }\n                }\n            }\n        })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks.map(top => {\n        const { type, inputs } = top\n        let command: jsep.CallExpression = undefined\n        let topEvent: RoleEvent = undefined\n        let topErrors: VMError[] = []\n        const def = resolveServiceBlockDefinition(type)\n        assert(!!def)\n        const { template } = def\n        try {\n            switch (template) {\n                case \"twin\":\n                    break // ignore\n                case \"every\": {\n                    const { cmd, errors} = makeWait(undefined, top)\n                    command = (cmd as VMCommand).command\n                    topErrors = errors\n                    break\n                }\n                case \"event\": {\n                    const { value: role } = inputs[0].fields[\"role\"]\n                    const { value: eventName } = inputs[0].fields[\"event\"]\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    }\n                    topEvent = {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    }\n                    break\n                }\n                case \"register_change_event\": {\n                    const { value: role } = inputs[0].fields[\"role\"]\n                    const { register } = def as RegisterBlockDefinition\n                    const { expr, errors } = blockToExpression(\n                        undefined,\n                        inputs[0].child\n                    )\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    }\n                    topErrors = errors\n                    break\n                }\n                case \"watch\": {\n                    const { expr, errors } = blockToExpression(\n                        undefined,\n                        inputs[0].child\n                    )\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [expr],\n                        callee: toIdentifier(\"watch\"),\n                    }\n                    topErrors = errors\n                    break\n                }\n                default: {\n                    console.warn(\n                        `unsupported handler template ${template} for ${type}`,\n                        { top }\n                    )\n                    break\n                }\n            }\n        } catch (e) {\n            if (e instanceof EmptyExpression) {\n                command = nop\n                topErrors = []\n            } else {\n                throw e\n            }\n        }\n\n        const handler: VMHandler = {\n            commands: [\n                {\n                    sourceId: top.id,\n                    type: \"cmd\",\n                    command,\n                } as VMBase,\n            ],\n            errors: topErrors,\n        }\n\n        addCommands(topEvent, top.children, handler)\n\n        return handler\n    })\n\n    return {\n        roles,\n        handlers,\n    }\n}\n","import React, {\n    MutableRefObject,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport { useBlocklyWorkspace } from \"react-blockly\"\nimport { WorkspaceSvg } from \"blockly\"\nimport Theme from \"@blockly/theme-modern\"\nimport DarkTheme from \"@blockly/theme-dark\"\nimport useToolbox, { useToolboxButtons } from \"./useToolbox\"\nimport BlocklyModalDialogs from \"./BlocklyModalDialogs\"\nimport { domToJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/VMir\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport AppContext from \"../AppContext\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/VMrunner\"\nimport useBlocklyEvents from \"./useBlocklyEvents\"\nimport useBlocklyPlugins from \"./useBlocklyPlugins\"\nimport {\n    BlocklyWorkspaceWithServices,\n    WorkspaceServices,\n} from \"./WorkspaceContext\"\nimport { RoleManager } from \"../../../jacdac-ts/src/vm/rolemanager\"\nimport { arrayConcatMany, toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { withPrefix } from \"gatsby\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        editor: {\n            height: \"calc(100vh - 10rem)\",\n            \"& .blocklyTreeLabel\": {\n                fontFamily: theme.typography.fontFamily,\n            },\n            \"& .blocklyText\": {\n                fontWeight: `normal !important`,\n                fontFamily: `${theme.typography.fontFamily} !important`,\n            },\n        },\n    })\n)\n\nexport default function VMBlockEditor(props: {\n    className?: string\n    initialXml?: string\n    onXmlChange?: (xml: string) => void\n    onJSONChange?: (json: WorkspaceJSON) => void\n    onVMProgramChange?: (program: VMProgram) => void\n    runner?: VMProgramRunner\n    roleManager?: RoleManager\n    serviceClass?: number\n    workspaceRef?: MutableRefObject<WorkspaceSvg>\n}) {\n    const {\n        className,\n        onXmlChange,\n        onJSONChange,\n        onVMProgramChange,\n        initialXml,\n        serviceClass,\n        runner,\n        roleManager,\n        workspaceRef,\n    } = props\n    const classes = useStyles()\n    const { darkMode } = useContext(DarkModeContext)\n    const { setError } = useContext(AppContext)\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const { toolboxConfiguration, newProjectXml } = useToolbox({\n        serviceClass,\n        source,\n        program,\n    })\n    const theme = darkMode === \"dark\" ? DarkTheme : Theme\n    const gridColor = darkMode === \"dark\" ? \"#555\" : \"#ccc\"\n\n    // ReactBlockly\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const blocklyRef = useRef(null)\n    const { workspace, xml } = useBlocklyWorkspace({\n        ref: blocklyRef,\n        toolboxConfiguration,\n        workspaceConfiguration: {\n            collapse: false,\n            disable: false,\n            comments: false,\n            css: true,\n            trashcan: false,\n            sounds: false,\n            grid: {\n                spacing: 25,\n                length: 1,\n                colour: gridColor,\n                snap: true,\n            },\n            renderer: \"zelos\",\n            theme,\n            oneBasedIndex: false,\n            move: {\n                scrollbars: {\n                    vertical: true,\n                    horizontal: true,\n                },\n            },\n            media: withPrefix(\"blockly/media/\"),\n            zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.1,\n                scaleSpeed: 1.2,\n                pinch: true,\n            },\n        },\n        initialXml: initialXml || newProjectXml,\n        onImportXmlError: () => setError(\"Error loading blocks...\"),\n    }) as { workspace: WorkspaceSvg; xml: string }\n\n    // store ref\n    useEffect(() => {\n        if (workspaceRef) {\n            workspaceRef.current = workspace\n            return () => (workspaceRef.current = undefined)\n        }\n    }, [workspace, workspaceRef])\n\n    // surface state to react\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        if (ws) ws.jacdacServices = new WorkspaceServices()\n    }, [workspace])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.roleManager = roleManager\n        }\n    }, [workspace, roleManager])\n\n    // plugins\n    useBlocklyPlugins(workspace)\n    useBlocklyEvents(workspace)\n    useToolboxButtons(workspace, toolboxConfiguration)\n\n    // blockly did a change\n    useEffect(() => {\n        if (!workspace || workspace.isDragging()) return\n\n        onXmlChange?.(xml)\n\n        // save json\n        if (onJSONChange || onVMProgramChange) {\n            // emit json\n            const newSource = domToJSON(workspace)\n            if (JSON.stringify(newSource) !== JSON.stringify(source)) {\n                setSource(newSource)\n                onJSONChange?.(newSource)\n                if (onVMProgramChange) {\n                    try {\n                        const newProgram = workspaceJSONToVMProgram(newSource)\n                        if (\n                            JSON.stringify(newProgram) !==\n                            JSON.stringify(program)\n                        ) {\n                            setProgram(newProgram)\n                            onVMProgramChange(newProgram)\n                        }\n                    } catch (e) {\n                        console.error(e)\n                        onVMProgramChange(undefined)\n                    }\n                }\n            }\n        }\n    }, [workspace, xml])\n\n    // apply errors\n    useEffect(() => {\n        if (!workspace) return\n        const allErrors = toMap(\n            arrayConcatMany(\n                program?.handlers.map(h => h.errors?.filter(e => !!e.sourceId))\n            ) || [],\n            e => e.sourceId,\n            e => e.message\n        )\n        workspace\n            .getAllBlocks(false)\n            .forEach(b => b.setWarningText(allErrors[b.id] || null))\n    }, [workspace, program])\n\n    // resize blockly\n    useEffect(() => {\n        const observer = new ResizeObserver(() => workspace?.resize())\n        observer.observe(blocklyRef.current)\n        return () => observer.disconnect()\n    }, [workspace, blocklyRef.current])\n\n    return (\n        <>\n            <div className={clsx(classes.editor, className)} ref={blocklyRef} />\n            <BlocklyModalDialogs />\n        </>\n    )\n}\n"],"sourceRoot":""}