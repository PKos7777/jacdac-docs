{"version":3,"sources":["webpack:///./src/components/DeviceDTDLSnippet.tsx","webpack:///./src/components/DeviceSpecificationSource.tsx","webpack:///./src/components/DeviceSpecification.tsx","webpack:///./src/templates/device.mdx","webpack:///./src/components/Page.tsx","webpack:///./src/components/IDChip.tsx","webpack:///./src/components/ServiceSpecificationStatusAlert.tsx","webpack:///./src/components/ServiceSpecificationCard.tsx","webpack:///./src/components/firmware/FirmwareCard.tsx"],"names":["DeviceDTDLSnippet","props","dev","inlineServices","dtdl","useMemo","JSON","stringify","deviceSpecificationToDTDL","name","useStyles","makeStyles","theme","createStyles","root","flexGrow","backgroundColor","palette","background","paper","marginBottom","spacing","pre","margin","padding","whiteSpec","DeviceSpecificationSource","deviceSpecification","showSpecification","showDTDL","showJSON","classes","useState","tab","setTab","spec","handleTabChange","event","newValue","index","filter","n","map","i","a11yProps","DeviceSpecification","device","showSource","gridBreakpoints","useGridBreakpoints","imageUrl","useDeviceImage","link","identifierToUrlPath","escapeDeviceIdentifier","company","description","repo","firmwares","length","firmware","toString","services","sc","serviceSpecificationFromClassIdentifier","shortId","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","deviceSpecificationFromIdentifier","pageContext","node","id","isMDXComponent","Page","children","IDChip","className","useContext","PacketsContext","packetFilter","setPacketFilter","setFilter","AppContext","setDrawerType","ids","undefined","filtered","indexOf","handleFilterClick","replace","trim","DrawerType","Packets","icon","title","StatusAlert","specification","status","ServiceSpecificationStatusAlert","React","memo","ServiceSpecificationCard","JacdacContext","bus","serviceClass","showReleaseStatus","showServiceClass","classIdentifier","srv","hostDefinition","hostDefinitionFromServiceClass","handleSimulatorClick","addHost","navigate","VIRTUAL_DEVICE_NODE_NAME","notes","split","FirmwareCard","slug","useLatestReleases","releases","response","downloading","setDownloading","error","setError","release","setRelease","firmwaresExpanded","setFirmwaresExpanded","useFirmwareBlob","setFirmwareFile","firmwareBlobs","tag","tag_name","disabled","version","updateAvailable","slice","substr","downloadColor","downloadVariant","useEffect","handleReleaseChange","ev","v","target","value","rel","find","r","handleGitHubReleaseDownload","fetchReleaseBinary","handleClear","blob","firmwareIdentifier"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEO,SAASA,iBAAT,CAA2BC,KAA3B,EAAwF;AAAA,MACnFC,GADmF,GAC3DD,KAD2D,CACnFC,GADmF;AAAA,MAC9EC,cAD8E,GAC3DF,KAD2D,CAC9EE,cAD8E;AAG3F,MAAMC,IAAI,GAAGC,wBAAO,CAChB;AAAA,WAAMC,IAAI,CAACC,SAAL,CAAeC,2DAAyB,CAACN,GAAD,EAAM;AAAEC,oBAAc,EAAdA;AAAF,KAAN,CAAxC,EAAmE,IAAnE,EAAyE,CAAzE,CAAN;AAAA,GADgB,EAEhB,CAACD,GAAD,CAFgB,CAApB;AAIA,sBAAO,8BAAC,0BAAD;AAAS,SAAK,EAAEE,IAAhB;AAAsB,QAAI,EAAC,MAA3B;AAAkC,YAAQ,EAAKF,GAAG,CAACO,IAAT,UAA1C;AACH,WAAO,eAAE,2EAAE,8BAAC,gCAAD;AAAM,QAAE,EAAC;AAAT,cAAF;AADN,IAAP;AAEH,C;;CCbD;;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,SAAS,GAAGC,qCAAU,CAAC,UAACC,KAAD;AAAA,SAAkBC,uCAAY,CAAC;AACxDC,QAAI,EAAE;AACFC,cAAQ,EAAE,CADR;AAEFC,qBAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,KAFxC;AAGFC,kBAAY,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AAHZ,KADkD;AAMxDC,OAAG,EAAE;AACDC,YAAM,EAAE,GADP;AAEDC,aAAO,EAAE,GAFR;AAGDR,qBAAe,EAAE,aAHhB;AAIDS,eAAS,EAAE;AAJV;AANmD,GAAD,CAA9B;AAAA,CAAD,CAA5B;AAce,SAASC,yBAAT,CAAmCzB,KAAnC,EAKZ;AAAA,MACS0B,mBADT,GACwE1B,KADxE,CACS0B,mBADT;AAAA,MAC8BC,iBAD9B,GACwE3B,KADxE,CAC8B2B,iBAD9B;AAAA,MACiDC,QADjD,GACwE5B,KADxE,CACiD4B,QADjD;AAAA,MAC2DC,QAD3D,GACwE7B,KADxE,CAC2D6B,QAD3D;AAEC,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;;AAFD,kBAGuBsB,yBAAQ,CAAC,CAAD,CAH/B;AAAA,MAGQC,GAHR;AAAA,MAGaC,MAHb;;AAIC,MAAMC,IAAI,GAAGR,mBAAb;;AAEA,MAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAoCC,QAApC,EAAyD;AAC7EJ,UAAM,CAACI,QAAD,CAAN;AACH,GAFD;;AAIA,MAAIC,KAAK,GAAG,CAAZ;AACA,sBACI;AAAK,aAAS,EAAER,OAAO,CAACjB;AAAxB,kBACI,8BAAC,wBAAD;AAAO,UAAM;AAAb,kBACI,8BAAC,uBAAD;AAAM,SAAK,EAAEmB,GAAb;AAAkB,YAAQ,EAAEG,eAA5B;AAA6C,kBAAW;AAAxD,KACK,CACGR,iBAAiB,IAAI,eADxB,EAEGE,QAAQ,IAAI,MAFf,EAGGD,QAAQ,IAAI,aAHf,EAICW,MAJD,CAIQ,UAAAC,CAAC;AAAA,WAAI,CAAC,CAACA,CAAN;AAAA,GAJT,EAKIC,GALJ,CAKQ,UAACD,CAAD,EAAIE,CAAJ;AAAA,wBAAU,8BAAC,sBAAD;AAAK,SAAG,EAAEF,CAAV;AAAa,WAAK,EAAEA;AAApB,OAA2BG,qCAAS,CAACD,CAAD,CAApC,EAAV;AAAA,GALR,CADL,CADJ,EASKf,iBAAiB,iBAAI,8BAAC,2BAAD;AAAU,OAAG,EAAC,MAAd;AAAqB,SAAK,EAAEK,GAA5B;AAAiC,SAAK,EAAEM,KAAK;AAA7C,kBAClB,8BAAC,mBAAD;AAAqB,UAAM,EAAEJ;AAA7B,IADkB,CAT1B,EAYKL,QAAQ,iBAAI,8BAAC,2BAAD;AAAU,OAAG,YAAb;AAA2B,SAAK,EAAEG,GAAlC;AAAuC,SAAK,EAAEM,KAAK;AAAnD,kBACT,8BAAC,0BAAD;AAAS,SAAK,EAAEjC,IAAI,CAACC,SAAL,CAAe4B,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAhB;AAA+C,QAAI,EAAE;AAArD,IADS,CAZjB,EAeKN,QAAQ,iBAAI,8BAAC,2BAAD;AAAU,OAAG,EAAC,MAAd;AAAqB,SAAK,EAAEI,GAA5B;AAAiC,SAAK,EAAEM,KAAK;AAA7C,kBACT,8BAAC,iBAAD;AAAmB,OAAG,EAAEZ;AAAxB,IADS,CAfjB,CADJ,CADJ;AAuBH,C;;;;;;;;;;;AChED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkB,mBAAT,CAA6B5C,KAA7B,EAAwF;AAAA,MAC3F6C,MAD2F,GACpE7C,KADoE,CAC3F6C,MAD2F;AAAA,MACnFC,UADmF,GACpE9C,KADoE,CACnF8C,UADmF;AAEnG,MAAMC,eAAe,GAAGC,6CAAkB,EAA1C;AACA,MAAMC,QAAQ,GAAGC,yCAAc,CAACL,MAAD,CAA/B;AAEA,sBAAO,2EACH;AAAI,OAAG,EAAC;AAAR,kBACI,8BAAC,gCAAD;AAAM,MAAE,EAAEA,MAAM,CAACM;AAAjB,KAAwBN,MAAM,CAACrC,IAA/B,CADJ,CADG,eAIH,8BAAC,6BAAD;AAAY,WAAO,EAAC;AAApB,yBAAmC,8BAAC,gCAAD;AAAM,MAAE,gBAAc4C,gDAAmB,CAACC,gDAAsB,CAACR,MAAM,CAACS,OAAR,CAAvB;AAAzC,KAAsFT,MAAM,CAACS,OAA7F,CAAnC,CAJG,eAKF;AAAK,OAAG,EAAC,qBAAT;AAA+B,OAAG,EAAEL,QAApC;AAA8C,WAAO,EAAC;AAAtD,IALE,EAMFJ,MAAM,CAACU,WAAP,iBAAsB,8BAAC,2BAAD;AAAU,UAAM,EAAEV,MAAM,CAACU;AAAzB,IANpB,EAOFV,MAAM,CAACW,IAAP,iBAAe,8BAAC,+BAAD;AAAc,QAAI,EAAEX,MAAM,CAACW;AAA3B,IAPb,EAQF,CAAC,CAACX,MAAM,CAACY,SAAP,CAAiBC,MAAnB,iBAA6B,2EAAE,iEAAF,eAC1B,0CACKb,MAAM,CAACY,SAAP,CAAiBhB,GAAjB,CAAqB,UAAAkB,QAAQ;AAAA,wBAAI;AAAI,SAAG,EAAEA;AAAT,oBAAmB,8BAAC,yBAAD;AAAQ,QAAE,EAAEA,QAAZ;AAAsB,YAAM,YAAUA,QAAQ,CAACC,QAAT,CAAkB,EAAlB;AAAtC,MAAnB,CAAJ;AAAA,GAA7B,CADL,CAD0B,CAR3B,eAYH,qDAZG,eAaH,8BAAC,uBAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE;AAAzB,KACKf,MAAM,CAACgB,QAAP,CAAgBpB,GAAhB,CAAoB,UAAAqB,EAAE;AAAA,WAAIC,oEAAuC,CAACD,EAAD,CAA3C;AAAA,GAAtB,EACIrB,GADJ,CACQ,UAAAP,IAAI;AAAA,wBAAI,8BAAC,uBAAD;AAAM,UAAI,MAAV;AAAW,SAAG,EAAEA,IAAI,CAAC8B;AAArB,OAAkCjB,eAAlC,gBACT,8BAAC,2CAAD;AAA0B,mBAAa,EAAEb;AAAzC,MADS,CAAJ;AAAA,GADZ,CADL,CAbG,EAmBFY,UAAU,iBAAI,2EACX,0DADW,eAEX,8BAAC,yBAAD;AAA2B,uBAAmB,EAAED,MAAhD;AACI,YAAQ,EAAE,IADd;AACoB,YAAQ,EAAE;AAD9B,IAFW,CAnBZ,CAAP;AAyBH,C;;;AC3CD;AACE;;AACF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACO,IAAMoB,YAAY,GAAG,EAArB;AACP,IAAMC,WAAW,GAAG;AAClBD,cAAY,EAAZA;AADkB,CAApB;AAGA,IAAME,SAAS,GAAGC,uBAAlB;AACe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEtE,KACF;;AACD,SAAO,mBAAC,SAAD,oBAAekE,WAAf,EAAgClE,KAAhC;AAAuC,cAAU,EAAEsE,UAAnD;AAA+D,WAAO,EAAC;AAAvE,MAKL,mBAAC,mBAAD;AAAqB,UAAM,EAAEC,8DAAiC,CAACvE,KAAK,CAACwE,WAAN,CAAkBC,IAAlB,CAAuBC,EAAxB,CAA9D;AAA2F,WAAO,EAAC;AAAnG,IALK,EAML;AACE,UAAM,UADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,WADT;AAEC,kBAAc,oBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,aANK,EA0BL,+BACE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ;AADQ,yBAApB,CADF,EAIE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ;AADQ,2BAApB,CAJF,CA1BK,CAAP;AAoCD;AACD;AACAL,UAAU,CAACM,cAAX,GAA4B,IAA5B,C;;;;;;;;AC1DA;AAAA;CAEA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA,MAAtB5E,KAAsB,QAAtBA,KAAsB;AAAA,MAAf6E,QAAe,QAAfA,QAAe;AAClC,sBAAO,2DAAC,8CAAD,EAAc7E,KAAd,EAAsB6E,QAAtB,CAAP;AACH,CAFD;;AAIeD,6DAAf,E;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CACA;;AACA;AACA;AACA;AACA;AACA;AAEe,SAASE,MAAT,CAAgB9E,KAAhB,EAAqF;AAAA,MACxF0E,EADwF,GAC9D1E,KAD8D,CACxF0E,EADwF;AAAA,MACpFK,SADoF,GAC9D/E,KAD8D,CACpF+E,SADoF;AAAA,MACzExC,MADyE,GAC9DvC,KAD8D,CACzEuC,MADyE;;AAAA,oBAEnCyC,wDAAU,CAACC,+DAAD,CAFyB;AAAA,MAEhFC,YAFgF,eAExF3C,MAFwF;AAAA,MAEvD4C,eAFuD,eAElEC,SAFkE;;AAAA,qBAGtEJ,wDAAU,CAACK,2DAAD,CAH4D;AAAA,MAGxFC,aAHwF,gBAGxFA,aAHwF;;AAKhG,MAAMC,GAAG,GAAG,OAAOb,EAAP,KAAc,QAAd,GAAyBA,EAAzB,WAAmCA,EAAE,KAAKc,SAAP,GAAoBd,EAAD,CAAed,QAAf,CAAwB,EAAxB,CAAnB,GAAiD,KAApF,CAAZ;AACA,MAAM6B,QAAQ,GAAGP,YAAY,IAAIA,YAAY,CAACQ,OAAb,CAAqBnD,MAArB,IAA+B,CAAC,CAAjE;;AACA,MAAMoD,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC5B,QAAIF,QAAJ,EACIN,eAAe,CAACD,YAAD,aAACA,YAAD,gDAACA,YAAY,CAAEU,OAAd,CAAsBrD,MAAtB,EAA8B,EAA9B,CAAD,0DAAC,sBAAmCsD,IAAnC,EAAD,CAAf,CADJ,KAGIV,eAAe,CAAC,CAAAD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEW,IAAd,MAAuB,GAAvB,GAA6BtD,MAA9B,CAAf;AACJ+C,iBAAa,CAACQ,8DAAU,CAACC,OAAZ,CAAb;AACH,GAND;;AAOA,MAAMC,IAAI,gBAAG,2DAAC,qEAAD,OAAb;AACA,MAAMC,KAAK,GAAGR,QAAQ,sBAAoBlD,MAApB,mBAA6CA,MAAnE;AACA,MAAIA,MAAJ,EACI,oBAAO,2DAAC,2DAAD;AAAS,SAAK,EAAEkD,QAAQ,sBAAoBlD,MAApB,mBAA6CA;AAArE,kBACH,sFACI,2DAAC,iEAAD;AAAM,aAAS,EAAEwC,SAAjB;AAA4B,QAAI,EAAC,OAAjC;AAAyC,QAAI,eACzC,2DAAC,iEAAD;AAAY,oBAAYkB,KAAxB;AAA+B,aAAO,EAAEN;AAAxC,OACKK,IADL,CADJ;AAIE,SAAK,EAAET;AAJT,IADJ,CADG,CAAP,CADJ,KAWI,oBAAO,2DAAC,iEAAD;AAAM,kBAAYU,KAAlB;AAAyB,aAAS,EAAElB,SAApC;AAA+C,QAAI,EAAC,OAApD;AAA4D,QAAI,EAAEiB,IAAlE;AAAwE,SAAK,kBAAgBT,GAA7F;AAAoG,SAAK,EAAEA;AAA3G,IAAP;AACP,C;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AACA;AAEO,SAASW,WAAT,CAAqBlG,KAArB,EAAmE;AAAA,MAC9DmG,aAD8D,GAC5CnG,KAD4C,CAC9DmG,aAD8D;;AAGtE,UAAQA,aAAR,aAAQA,aAAR,uBAAQA,aAAa,CAAEC,MAAvB;AACI,SAAK,YAAL;AAAmB,0BAAO,2DAAC,yDAAD;AAAO,gBAAQ,EAAC;AAAhB,sBAAP;;AACnB,SAAK,cAAL;AAAqB,0BAAO,2DAAC,yDAAD;AAAO,gBAAQ,EAAC;AAAhB,wBAAP;;AACrB;AAAS,aAAO,IAAP;AAHb;AAKH;AAED,IAAMC,+BAA+B,gBAAGC,4CAAK,CAACC,IAAN,CAAWL,WAAX,CAAxC;AAEeG,wFAAf,E;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASG,wBAAT,CAAkCxG,KAAlC,EAKZ;AAAA;;AAAA,oBACiBgF,wDAAU,CAAqByB,gEAArB,CAD3B;AAAA,MACSC,GADT,eACSA,GADT;;AAAA,MAESC,YAFT,GAE8E3G,KAF9E,CAES2G,YAFT;AAAA,MAEuBR,aAFvB,GAE8EnG,KAF9E,CAEuBmG,aAFvB;AAAA,MAEsCS,iBAFtC,GAE8E5G,KAF9E,CAEsC4G,iBAFtC;AAAA,MAEyDC,gBAFzD,GAE8E7G,KAF9E,CAEyD6G,gBAFzD;AAGC,MAAI3E,IAAI,GAAGiE,aAAX;AACA,MAAI,CAACjE,IAAD,IAASyE,YAAY,KAAKnB,SAA9B,EACItD,IAAI,GAAG6B,gHAAuC,CAAC4C,YAAD,CAA9C;AACJ,MAAM7C,EAAE,GAAG,UAAA5B,IAAI,UAAJ,sCAAM4E,eAAN,KAAyBH,YAApC;AACA,MAAMI,GAAG,GAAG,WAAA7E,IAAI,UAAJ,wCAAM8B,OAAN,MAAiBF,EAAjB,aAAiBA,EAAjB,uBAAiBA,EAAE,CAAEF,QAAJ,CAAa,EAAb,CAAjB,CAAZ;AACA,MAAMoD,cAAc,GAAGC,0GAA8B,CAACnD,EAAD,CAArD;;AACA,MAAMoD,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BC,uFAAO,CAACT,GAAD,EAAMM,cAAc,CAACnD,QAAf,EAAN,EAAiCmD,cAAc,CAACxG,IAAhD,CAAP;AACA4G,4DAAQ,CAAC,aAAD,CAAR;AACH,GAHD;;AAKA,sBAAO,2DAAC,iEAAD,qBACH,2DAAC,iEAAD;AACI,SAAK,EAAE,WAAAlF,IAAI,UAAJ,wCAAM1B,IAAN,KAAc,KADzB;AAEI,aAAS,EAAEqG,gBAAgB,IAAIE,GAApB,iBAA2B,2DAAC,uDAAD;AAAQ,QAAE,EAAEjD,EAAZ;AAAgB,YAAM,WAASiD;AAA/B,MAF1C;AAGI,UAAM,eAAE,wHACHC,cAAc,iBAAI,2DAAC,iEAAD;AAAM,UAAI,EAAC,OAAX;AACf,aAAO,EAAEE,oBADM;AAEf,YAAM,eAAE,2DAAC,0DAAD;AAAU,YAAI,EAAEG,gGAAwBA;AAAxC,QAFO;AAGf,oBAAW,oCAHI;AAIf,WAAK,EAAC;AAJS,MADf;AAHZ,IADG,eAaH,2DAAC,iEAAD,QACK,WAAAnF,IAAI,UAAJ,wCAAMoF,KAAN,CAAY,OAAZ,mBACG,2DAAC,iEAAD;AAAY,WAAO,EAAC,OAApB;AAA4B,aAAS,EAAC;AAAtC,kBACI,2DAAC,6DAAD;AAAU,UAAM,EAAE,WAAApF,IAAI,UAAJ,wCAAMoF,KAAN,CAAY,OAAZ,EAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,EAAmC,CAAnC,KAAwC;AAA1D,IADJ,CAFR,EAMKX,iBAAiB,iBAAI,2DAAC,iFAAD;AAAiC,iBAAa,EAAE1E;AAAhD,IAN1B,CAbG,EAqBFA,IAAI,iBAAI,2DAAC,iEAAD,qBACL,2DAAC,+DAAD;AAAQ,WAAO,EAAC,UAAhB;AAA2B,oCAA4BA,IAAI,CAAC8B,OAAjC,UAA3B;AAA4E,MAAE,iBAAe9B,IAAI,CAAC8B,OAApB;AAA9E,eADK,CArBN,CAAP;AAyBH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwD,YAAT,CAAsBxH,KAAtB,EAA+C;AAAA,MAClDyH,IADkD,GACzCzH,KADyC,CAClDyH,IADkD;;AAAA,2BAE3BC,0EAAiB,CAACD,IAAD,CAFU;AAAA,MAExCE,QAFwC,sBAElDC,QAFkD;;AAAA,kBAGpB7F,sDAAQ,CAAC,KAAD,CAHY;AAAA,MAGnD8F,WAHmD;AAAA,MAGtCC,cAHsC;;AAAA,mBAIhC/F,sDAAQ,CAAC,EAAD,CAJwB;AAAA,MAInDgG,KAJmD;AAAA,MAI5CC,QAJ4C;;AAAA,mBAK5BjG,sDAAQ,CAACyD,SAAD,CALoB;AAAA,MAKnDyC,OALmD;AAAA,MAK1CC,UAL0C;;AAAA,mBAMRnG,sDAAQ,CAAC,KAAD,CANA;AAAA,MAMnDoG,iBANmD;AAAA,MAMhCC,oBANgC;;AAAA,yBAOfC,kFAAe,CAACZ,IAAD,CAPA;AAAA,MAOlDa,eAPkD,oBAOlDA,eAPkD;AAAA,MAOjCC,aAPiC,oBAOjCA,aAPiC;;AAQ1D,MAAMC,GAAG,GAAG,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,QAAT,KAAqB,EAAjC;AACA,MAAMC,QAAQ,GAAGb,WAAjB;AACA,MAAMc,OAAO,GAAGJ,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAG,CAAH,CAAb,CAAmBI,OAAnC;AACA,MAAMC,eAAe,GAAG,CAAC,CAACJ,GAAF,IAAS,CAAC,CAACG,OAAX,IAAsBH,GAAG,CAACK,KAAJ,CAAU,CAAV,MAAiBF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkBN,GAAG,CAAC9E,MAAJ,GAAa,CAA/B,CAA/D;AACA,MAAMqF,aAAa,GAAGH,eAAe,GAAG,SAAH,GAAe,SAApD;AACA,MAAMI,eAAe,GAAGJ,eAAe,GAAG,WAAH,GAAiB,MAAxD,CAb0D,CAe1D;;AACAK,yDAAS,CAAC,YAAM;AACZ,QAAItB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAEjE,MAAV,IAAoB,CAACuE,OAAzB,EACIC,UAAU,CAACP,QAAQ,CAAC,CAAD,CAAT,CAAV;AACP,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;;AAKA,MAAMuB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAAyD;AACjF,QAAMC,CAAC,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAApB;AACA,QAAMC,GAAG,GAAG5B,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAE6B,IAAV,CAAe,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAAChB,QAAF,KAAeW,CAAnB;AAAA,KAAhB,CAAZ;AACAlB,cAAU,CAACqB,GAAD,CAAV;AACH,GAJD;;AAKA,MAAMG,2BAA2B;AAAA,wMAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5B1B,sBAAQ,CAAC,EAAD,CAAR;AACAF,4BAAc,CAAC,IAAD,CAAd;AAH4B;AAAA,qBAIL6B,2EAAkB,CAAClC,IAAD,EAAOe,GAAP,CAJb;;AAAA;AAItB7E,sBAJsB;AAK5B,kBAAIA,QAAJ,EACI2E,eAAe,CAACE,GAAD,EAAM7E,QAAN,CAAf;;AANwB;AAAA;AAS5BmE,4BAAc,CAAC,KAAD,CAAd;AAT4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA3B4B,2BAA2B;AAAA;AAAA;AAAA,KAAjC;;AAYA,MAAME,WAAW;AAAA,yMAAG;AAAA;AAAA;AAAA;AAAA;AAChB,kBAAI;AACA5B,wBAAQ,CAAC,EAAD,CAAR;AACAF,8BAAc,CAAC,IAAD,CAAd;AACAQ,+BAAe,CAACE,GAAD,EAAMhD,SAAN,CAAf;AACH,eAJD,SAKQ;AACJsC,8BAAc,CAAC,KAAD,CAAd;AACH;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAX8B,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAWA,sBAAO,2DAAC,iEAAD,qBACH,2DAAC,4EAAD;AAA4B,QAAI,EAAEnC;AAAlC,IADG,eAEH,2DAAC,iEAAD,QACKM,KAAK,iBAAI,2DAAC,0DAAD;AAAO,YAAQ,EAAC;AAAhB,KAAyBA,KAAzB,CADd,EAEK,CAAC,EAACQ,aAAD,aAACA,aAAD,eAACA,aAAa,CAAE7E,MAAhB,CAAD,iBAA2B,2DAAC,iEAAD;AAAK,MAAE,EAAE;AAAT,kBAAY,2DAAC,iEAAD;AAAW,YAAQ,EAAEyE,iBAArB;AAAwC,YAAQ,EAAE;AAAA,aAAMC,oBAAoB,CAAC,CAACD,iBAAF,CAA1B;AAAA;AAAlD,kBACpC,2DAAC,iEAAD;AAAkB,cAAU,eAAE,2DAAC,qEAAD;AAA9B,kBACI,2DAAC,iEAAD;AAAY,WAAO,EAAC;AAApB,kBACI,8EAAQQ,OAAR,CADJ,eAEI,+EAASJ,aAAa,CAAC7E,MAAvB,gBAFJ,CADJ,CADoC,eAOpC,2DAAC,iEAAD,qBACI,2DAAC,kEAAD;AAAM,SAAK;AAAX,KACK6E,aAAa,CAAC9F,GAAd,CAAkB,UAAAoH,IAAI;AAAA,wBAAI,2DAAC,kEAAD;AAAU,SAAG,EAAEA,IAAI,CAACC;AAApB,oBACvB,2DAAC,kEAAD;AAAc,aAAO,EAAED,IAAI,CAACrJ,IAA5B;AACI,eAAS,eAAE,2DAAC,8DAAD;AAAM,UAAE,oBAAkBqJ,IAAI,CAACC,kBAAL,CAAwBlG,QAAxB,CAAiC,EAAjC;AAA1B,gBACDiG,IAAI,CAACC,kBAAL,CAAwBlG,QAAxB,CAAiC,EAAjC,CADC;AADf,MADuB,CAAJ;AAAA,GAAtB,CADL,CADJ,CAPoC,CAAZ,CAFhC,EAoBK,CAAA+D,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEjE,MAAV,MAAqB,CAArB,iBAA0B,2DAAC,0DAAD;AAAO,YAAQ,EAAC;AAAhB,0BApB/B,EAqBK,CAAC,EAACiE,QAAD,aAACA,QAAD,eAACA,QAAQ,CAAEjE,MAAX,CAAD,iBAAsB,2DAAC,oEAAD;AAAiB,aAAS,EAAE,IAA5B;AAAkC,cAAU,EAAC,kBAA7C;AAAgE,SAAK,EAAE8E,GAAvE;AAA4E,YAAQ,EAAEU;AAAtF,KAClBvB,QADkB,aAClBA,QADkB,uBAClBA,QAAQ,CAAElF,GAAV,CAAc,UAAA8G,GAAG;AAAA,wBAAI,2DAAC,kEAAD;AAAU,SAAG,EAAEA,GAAG,CAACd,QAAnB;AAA6B,WAAK,EAAEc,GAAG,CAACd;AAAxC,OAAmDc,GAAG,CAACd,QAAvD,CAAJ;AAAA,GAAjB,CADkB,CArB3B,CAFG,eA2BH,2DAAC,kEAAD,QACK,CAACZ,WAAD,IAAgBI,OAAhB,iBAA2B,2DAAC,kEAAD;AAAQ,YAAQ,EAAEJ,WAAlB;AAA+B,SAAK,EAAEkB,aAAtC;AAAqD,WAAO,EAAEC,eAA9D;AAA+E,kDAA0CvB,IAAzH;AAAiI,WAAO,EAAEiC;AAA1I,gBADhC,EAIK,CAAC7B,WAAD,KAAgBU,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAE7E,MAA/B,kBAAyC,2DAAC,kEAAD;AAAQ,YAAQ,EAAEgF,QAAlB;AAA4B,WAAO,EAAC,MAApC;AAA2C,mBAAa,OAAxD;AAAiE,WAAO,EAAEkB;AAA1E,aAJ9C,EAOK/B,WAAW,iBAAI,2DAAC,oEAAD,OAPpB,CA3BG,CAAP;AAqCH,C","file":"component---src-templates-device-mdx-d39da8d98f7096941151.js","sourcesContent":["import { Link } from \"gatsby-theme-material-ui\";\nimport React, { useMemo } from \"react\";\nimport { deviceSpecificationToDTDL } from \"../../jacdac-ts/src/azure-iot/dtdl\";\nimport Snippet from \"./ui/Snippet\";\n\nexport function DeviceDTDLSnippet(props: { dev: jdspec.DeviceSpec, inlineServices?: boolean }) {\n    const { dev, inlineServices } = props;\n\n    const dtdl = useMemo<string>(\n        () => JSON.stringify(deviceSpecificationToDTDL(dev, { inlineServices }), null, 2),\n        [dev]);\n\n    return <Snippet value={dtdl} mode=\"json\" download={`${dev.name}.json`}\n        caption={<><Link to=\"/dtmi\">DTDL</Link> is an open source modelling language developed by Microsoft Azure.</>} />\n}","import React, {  useState } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport Tabs from '@material-ui/core/Tabs';\n// tslint:disable-next-line: no-submodule-imports\nimport Tab from '@material-ui/core/Tab';\nimport { Paper, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport TabPanel, { a11yProps } from './ui/TabPanel';\nimport Snippet from './ui/Snippet';\nimport DeviceSpecification from './DeviceSpecification';\nimport { DeviceDTDLSnippet } from './DeviceDTDLSnippet';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        marginBottom: theme.spacing(1)\n    },\n    pre: {\n        margin: \"0\",\n        padding: \"0\",\n        backgroundColor: \"transparent\",\n        whiteSpec: \"pre-wrap\"\n    }\n}));\n\nexport default function DeviceSpecificationSource(props: {\n    deviceSpecification?: jdspec.DeviceSpec,\n    showSpecification?: boolean,\n    showDTDL?: boolean,\n    showJSON?: boolean\n}) {\n    const { deviceSpecification, showSpecification, showDTDL, showJSON } = props;\n    const classes = useStyles();\n    const [tab, setTab] = useState(0);\n    const spec = deviceSpecification\n\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        setTab(newValue);\n    };\n\n    let index = 0;\n    return (\n        <div className={classes.root}>\n            <Paper square>\n                <Tabs value={tab} onChange={handleTabChange} aria-label=\"View specification formats\">\n                    {[\n                        showSpecification && \"Specification\",\n                        showJSON && \"JSON\",\n                        showDTDL && \"Device Twin\",\n                    ].filter(n => !!n)\n                        .map((n, i) => <Tab key={n} label={n} {...a11yProps(i)} />)}\n                </Tabs>\n                {showSpecification && <TabPanel key=\"spec\" value={tab} index={index++}>\n                    <DeviceSpecification device={spec} />\n                </TabPanel>}\n                {showJSON && <TabPanel key={`convjson`} value={tab} index={index++}>\n                    <Snippet value={JSON.stringify(spec, null, 2)} mode={\"json\"} />\n                </TabPanel>}\n                {showDTDL && <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                    <DeviceDTDLSnippet dev={deviceSpecification} />\n                </TabPanel>}\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\"\nimport IDChip from \"./IDChip\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { identifierToUrlPath, serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecificationCard from \"./ServiceSpecificationCard\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\nimport Markdown from \"./ui/Markdown\";\nimport DeviceSpecificationSource from \"./DeviceSpecificationSource\";\nimport FirmwareCard from \"./firmware/FirmwareCard\"\nimport { escapeDeviceIdentifier } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport useDeviceImage from \"./devices/useDeviceImage\";\n\nexport default function DeviceSpecification(props: { device: jdspec.DeviceSpec, showSource?: string }) {\n    const { device, showSource } = props;\n    const gridBreakpoints = useGridBreakpoints();\n    const imageUrl = useDeviceImage(device);\n\n    return <>\n        <h2 key=\"title\">\n            <Link to={device.link}>{device.name}</Link>\n        </h2>\n        <Typography variant=\"subtitle1\">by <Link to={`/devices/${identifierToUrlPath(escapeDeviceIdentifier(device.company))}`}>{device.company}</Link></Typography>\n        {<img alt=\"image of the device\" src={imageUrl} loading=\"lazy\" />}\n        {device.description && <Markdown source={device.description} />}\n        {device.repo && <FirmwareCard slug={device.repo} />}\n        {!!device.firmwares.length && <><h3>Firmware identifiers</h3>\n            <ul>\n                {device.firmwares.map(firmware => <li key={firmware}><IDChip id={firmware} filter={`fw:0x${firmware.toString(16)}`} /></li>)}\n            </ul></>}\n        <h3>Services</h3>\n        <Grid container spacing={2}>\n            {device.services.map(sc => serviceSpecificationFromClassIdentifier(sc))\n                .map(spec => <Grid item key={spec.shortId} {...gridBreakpoints}>\n                    <ServiceSpecificationCard specification={spec} />\n                </Grid>)}\n        </Grid>\n        {showSource && <>\n            <h2>Specification</h2>\n            <DeviceSpecificationSource deviceSpecification={device}\n                showJSON={true} showDTDL={true} />\n        </>}\n    </>\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { deviceSpecificationFromIdentifier } from \"../../jacdac-ts/src/jdom/spec\";\nimport DeviceSpecification from \"../components/DeviceSpecification\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <DeviceSpecification device={deviceSpecificationFromIdentifier(props.pageContext.node.id)} mdxType=\"DeviceSpecification\" />\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See Also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/reference/device-definition/\"\n        }}>{`device definition`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/tools/device-registration/\"\n        }}>{`device registration`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\";\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page;","import React, { useContext } from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { Chip, IconButton } from '@material-ui/core';\nimport PacketsContext from \"./PacketsContext\";\nimport AppContext, { DrawerType } from \"./AppContext\";\nimport Tooltip from \"./ui/Tooltip\";\n\nexport default function IDChip(props: { id: number | string, className?: string, filter?: string }) {\n    const { id, className, filter } = props\n    const { filter: packetFilter, setFilter: setPacketFilter } = useContext(PacketsContext);\n    const { setDrawerType } = useContext(AppContext)\n\n    const ids = typeof id === \"string\" ? id : `0x${id !== undefined ? (id as number).toString(16) : \"???\"}`\n    const filtered = packetFilter && packetFilter.indexOf(filter) > -1\n    const handleFilterClick = () => {\n        if (filtered)\n            setPacketFilter(packetFilter?.replace(filter, '')?.trim())\n        else\n            setPacketFilter(packetFilter?.trim() + ' ' + filter)\n        setDrawerType(DrawerType.Packets)\n    }\n    const icon = <FingerprintIcon />;\n    const title = filtered ? `remove filter ${filter}` : `add filter ${filter}`;\n    if (filter)\n        return <Tooltip title={filtered ? `remove filter ${filter}` : `add filter ${filter}`}>\n            <span>\n                <Chip className={className} size=\"small\" icon={\n                    <IconButton aria-label={title} onClick={handleFilterClick}>\n                        {icon}\n                    </IconButton>\n                } label={ids} />\n            </span>\n        </Tooltip>\n    else\n        return <Chip aria-label={title} className={className} size=\"small\" icon={icon} title={`identifier ${ids}`} label={ids} />;\n}","import React from \"react\";\nimport Alert from \"./ui/Alert\";\n\nexport function StatusAlert(props: { specification: jdspec.ServiceSpec }) {\n    const { specification } = props;\n\n    switch (specification?.status) {\n        case \"deprecated\": return <Alert severity=\"warning\">Deprecated</Alert>\n        case \"experimental\": return <Alert severity=\"info\">Experimental</Alert>\n        default: return null;\n    }\n}\n\nconst ServiceSpecificationStatusAlert = React.memo(StatusAlert);\n\nexport default ServiceSpecificationStatusAlert;","import React, { useContext } from \"react\"\nimport { Card, CardActions, CardContent, CardHeader, CardMedia, Chip, createStyles, Grid, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\";\nimport IDChip from \"./IDChip\";\nimport { Button } from \"gatsby-theme-material-ui\";\nimport Markdown from \"./ui/Markdown\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport { addHost, hostDefinitionFromServiceClass } from \"../../jacdac-ts/src/hosts/hosts\";\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\";\nimport KindIcon from \"./KindIcon\";\nimport { VIRTUAL_DEVICE_NODE_NAME } from \"../../jacdac-ts/src/jdom/constants\";\nimport { navigate } from \"gatsby\"\n\nexport default function ServiceSpecificationCard(props: {\n    serviceClass?: number,\n    specification?: jdspec.ServiceSpec,\n    showReleaseStatus?: boolean,\n    showServiceClass?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { serviceClass, specification, showReleaseStatus, showServiceClass } = props;\n    let spec = specification;\n    if (!spec && serviceClass !== undefined)\n        spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const sc = spec?.classIdentifier || serviceClass;\n    const srv = spec?.shortId || sc?.toString(16);\n    const hostDefinition = hostDefinitionFromServiceClass(sc)\n    const handleSimulatorClick = () => {\n        addHost(bus, hostDefinition.services(), hostDefinition.name)\n        navigate(\"/dashboard/\")\n    }\n\n    return <Card>\n        <CardHeader\n            title={spec?.name || \"???\"}\n            subheader={showServiceClass && srv && <IDChip id={sc} filter={`srv:${srv}`} />}\n            action={<>\n                {hostDefinition && <Chip size=\"small\"\n                    onClick={handleSimulatorClick}\n                    avatar={<KindIcon kind={VIRTUAL_DEVICE_NODE_NAME} />}\n                    aria-label=\"start simulator and open dashboard\"\n                    label=\"simulator\" />}\n            </>\n            }\n        />\n        <CardContent>\n            {spec?.notes[\"short\"] &&\n                <Typography variant=\"body2\" component=\"div\">\n                    <Markdown source={spec?.notes[\"short\"].split(\".\", 1)[0] + \".\"} />\n                </Typography>\n            }\n            {showReleaseStatus && <ServiceSpecificationStatusAlert specification={spec} />}\n        </CardContent>\n        {spec && <CardActions>\n            <Button variant=\"outlined\" aria-label={`open service ${spec.shortId} page`} to={`/services/${spec.shortId}/`}>More...</Button>\n        </CardActions>}\n    </Card>\n}","import React, { ChangeEvent, useEffect, useState } from \"react\"\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Card, CardActions, CardContent, CircularProgress, Collapse, List, ListItem, ListItemText, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { fetchReleaseBinary, useLatestReleases } from \"../github\";\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\";\nimport GithubRepositoryCardHeader from \"../GithubRepositoryCardHeader\";\nimport Alert from \"../ui/Alert\";\nimport { Link } from \"gatsby-theme-material-ui\";\nimport SelectWithLabel from \"../ui/SelectWithLabel\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function FirmwareCard(props: { slug: string }) {\n    const { slug } = props\n    const { response: releases } = useLatestReleases(slug);\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [release, setRelease] = useState(undefined)\n    const [firmwaresExpanded, setFirmwaresExpanded] = useState(false)\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const tag = release?.tag_name || \"\";\n    const disabled = downloading;\n    const version = firmwareBlobs?.[0].version\n    const updateAvailable = !!tag && !!version && tag.slice(1) !== version.substr(0, tag.length - 1)\n    const downloadColor = updateAvailable ? \"primary\" : \"inherit\"\n    const downloadVariant = updateAvailable ? \"contained\" : \"text\"\n\n    // initialize with latest release\n    useEffect(() => {\n        if (releases?.length && !release)\n            setRelease(releases[0]);\n    }, [releases])\n\n    const handleReleaseChange = (ev: ChangeEvent<{ name?: string; value: unknown; }>) => {\n        const v = ev.target.value as string;\n        const rel = releases?.find(r => r.tag_name === v);\n        setRelease(rel);\n    }\n    const handleGitHubReleaseDownload = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            const firmware = await fetchReleaseBinary(slug, tag);\n            if (firmware)\n                setFirmwareFile(tag, firmware)\n        }\n        finally {\n            setDownloading(false)\n        }\n    }\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(tag, undefined)\n        }\n        finally {\n            setDownloading(false)\n        }\n    }\n\n    return <Card>\n        <GithubRepositoryCardHeader slug={slug} />\n        <CardContent>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            {!!firmwareBlobs?.length && <Box mb={1}><Accordion expanded={firmwaresExpanded} onChange={() => setFirmwaresExpanded(!firmwaresExpanded)}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"body2\">\n                        <code>v{version}</code>\n                        <span> ({firmwareBlobs.length} firmwares)</span>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <List dense>\n                        {firmwareBlobs.map(blob => <ListItem key={blob.firmwareIdentifier}>\n                            <ListItemText primary={blob.name}\n                                secondary={<Link to={`/firmwares/0x${blob.firmwareIdentifier.toString(16)}`}>\n                                    {`0x${blob.firmwareIdentifier.toString(16)}`}\n                                </Link>} />\n                        </ListItem>)}\n                    </List>\n                </AccordionDetails>\n            </Accordion></Box>}\n            {releases?.length === 0 && <Alert severity=\"warning\">No releases found.</Alert>}\n            {!!releases?.length && <SelectWithLabel fullWidth={true} helperText=\"choose a version\" value={tag} onChange={handleReleaseChange}>\n                {releases?.map(rel => <MenuItem key={rel.tag_name} value={rel.tag_name}>{rel.tag_name}</MenuItem>)}\n            </SelectWithLabel>}\n        </CardContent>\n        <CardActions>\n            {!downloading && release && <Button disabled={downloading} color={downloadColor} variant={downloadVariant} aria-label={`Download last release from ${slug}`} onClick={handleGitHubReleaseDownload}>\n                Download\n            </Button>}\n            {!downloading && firmwareBlobs?.length && <Button disabled={disabled} variant=\"text\" arial-label={\"Clear\"} onClick={handleClear}>\n                Clear\n            </Button>}\n            {downloading && <LoadingProgress />}\n        </CardActions>\n    </Card>\n}"],"sourceRoot":""}