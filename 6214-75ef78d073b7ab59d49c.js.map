{"version":3,"file":"6214-75ef78d073b7ab59d49c.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRainGauge.tsx"],"sourcesContent":["import React from \"react\"\nimport { RainGaugeReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport RainGaugeServer from \"../../../jacdac-ts/src/servers/RainGaugeServer\"\nimport useChange from \"../../jacdac/useChange\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { useId } from \"react-use-id-hook\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { roundWithPrecision } from \"../../../jacdac-ts/src/jdom/utils\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst TILT = 15\n\nexport default function DashbaordRainGauge(props: DashboardServiceProps) {\n    const { service } = props\n\n    const precipitationRegister = useRegister(\n        service,\n        RainGaugeReg.Precipitation\n    )\n    const [precipitation] = useRegisterUnpackedValue<[number]>(\n        precipitationRegister,\n        props\n    )\n    const clipId = useId()\n    const server = useServiceServer<RainGaugeServer>(service)\n    const tiltCount = useChange(server, h => h?.tiltCount)\n    const level = useChange(server, h => h?.level)\n    const tiltAngle =\n        tiltCount !== undefined ? (tiltCount % 2 ? -TILT : TILT) : 0\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, active, textPrimary } = useWidgetTheme(color)\n    const a = useThrottledValue(tiltAngle, 45)\n    const l = useThrottledValue(level !== undefined ? level : 0.5, 1)\n    const clickeable = !!server\n    const handleClick = async (event: React.PointerEvent<SVGRectElement>) => {\n        event.preventDefault()\n        event.stopPropagation()\n        await server?.rain(0.25)\n        await precipitationRegister.refresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(\n        `rain level ${Math.round(25 + level * 100)}%`,\n        handleClick\n    )\n\n    const w = 128\n    const h = 64\n    const bw = w / 2\n    const bh = h / 3\n    const bx = (w - bw) / 2\n    const by = h - bh - 24\n    const sw = 1\n    const ty = h - 4\n    const fs = 8\n\n    if (tiltAngle === undefined) return <LoadingProgress />\n\n    return (\n        <SvgWidget width={w} height={h}>\n            <defs>\n                <clipPath id={clipId}>\n                    <rect\n                        transform={`rotate(${-a}, ${w / 2}, ${by + bh})`}\n                        x={0}\n                        y={by + bh * (1 - l)}\n                        width={w}\n                        height={h}\n                    />\n                </clipPath>\n            </defs>\n            <g transform={`rotate(${a}, ${w / 2}, ${by + bh})`}>\n                <rect\n                    x={bx}\n                    y={by}\n                    tabIndex={0}\n                    width={bw}\n                    height={bh}\n                    strokeWidth={sw}\n                    stroke={active}\n                    fill={background}\n                    {...buttonProps}\n                    className={clickeable ? \"clickeable\" : undefined}\n                    role={clickeable ? \"button\" : undefined}\n                />\n                <rect\n                    x={bx}\n                    y={by}\n                    width={bw}\n                    height={bh}\n                    stroke={active}\n                    fill={active}\n                    aria-label={\"water\"}\n                    clipPath={`url(#${clipId})`}\n                    pointerEvents=\"none\"\n                    style={{ userSelect: \"none\" }}\n                />\n            </g>\n            <text\n                x={w / 2}\n                y={ty}\n                fontSize={fs}\n                textAnchor=\"middle\"\n                fill={textPrimary}\n                aria-label={`precipitation ${roundWithPrecision(\n                    precipitation || 0,\n                    1\n                )} millimeters`}\n            >\n                {roundWithPrecision(precipitation || 0, 1)}mm\n            </text>\n        </SvgWidget>\n    )\n}\n"],"names":["React","RainGaugeReg","SvgWidget","useWidgetTheme","useServiceServer","useThrottledValue","useChange","useRegisterUnpackedValue","useId","useSvgButtonProps","roundWithPrecision","LoadingProgress","useRegister","TILT","DashbaordRainGauge","props","service","precipitationRegister","Precipitation","precipitation","clipId","server","tiltCount","h","level","tiltAngle","undefined","color","background","active","textPrimary","a","l","clickeable","handleClick","event","preventDefault","stopPropagation","rain","refresh","buttonProps","Math","round","w","bw","bh","bx","by","sw","ty","fs","userSelect"],"sourceRoot":""}