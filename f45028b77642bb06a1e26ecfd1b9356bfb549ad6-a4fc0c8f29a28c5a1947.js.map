{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/ExpandLess.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/ExpandMore.js","webpack://jacdac-docs/./src/components/services/useServiceRole.ts","webpack://jacdac-docs/./src/components/services/ServiceRole.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidgetItem.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceDetails.tsx","webpack://jacdac-docs/./src/components/hooks/useIntersectionObserver.ts","webpack://jacdac-docs/./src/components/dashboard/DashboardDevice.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardButton.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServo.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardRotaryEncoder.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardSwitch.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardServiceWidget.tsx","webpack://jacdac-docs/./src/components/services/useRoleManager.ts"],"names":["useServiceRole","service","useState","role","setRole","useEffect","subscribe","ROLE_CHANGE","console","log","ServiceRole","props","useContext","AppContext","showSelectRoleDialog","roleManager","useRoleManager","handleClick","hasRoleForService","useChange","_","DashboardServiceWidgetItem","useRegisterUnpackedValue","register","SystemReg","instanceName","float","ignoreRegisters","collapsedRegisters","DashboardServiceDetails","expanded","specification","spec","registers","useMemo","packets","ids","filter","pkt","isRegister","map","identifier","id","indexOf","slice","reg","length","useIntersectionObserver","elementRef","options","entry","setEntry","threshold","root","rootMargin","freezeOnceVisible","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","ignoredServices","SRV_CTRL","SRV_LOGGER","DashboardDevice","device","toggleExpanded","variant","showAvatar","showHeader","name","useDeviceName","services","serviceClass","useDeviceSpecification","theme","useTheme","mobile","useMediaQuery","breakpoints","down","MOBILE_BREAKPOINT","serviceGridRef","useRef","intersection","visible","ServiceWidgets","useCallback","dependencyId","padding","paddingBottom","paddingTop","serviceIndex","DashboardButton","pressed","setPressed","pressedRegister","ButtonReg","REPORT_UPDATE","unpackedValue","b","undefined","downEvent","event","ButtonEvent","EVENT","upEvent","server","useServiceServer","color","label","handleDown","handleUp","up","widgetSize","useActualAngle","ServoReg","angle","responseSpeed","rotationalSpeed","SG90_RESPONSE_SPEED","actualAngle","useThrottledValue","DashboardServo","enabledRegister","enabled","useRegisterBoolValue","off","angleRegister","offset","useWidgetTheme","background","controlBackground","active","textPrimary","cx","cy","a","transform","h","w","pr","pri","text","Math","round","toggleOff","sendSetBoolAsync","DashboardRotaryEncoder","positionRegister","RotaryEncoderReg","position","clicksPerTurnRegister","clicksPerTurn","textProps","r","fs","max","handleChange","ev","newValue","reading","setValues","refresh","throttled","min","floor","ceil","DashboardSwitch","labelId","useId","on","SwitchReg","switchVariant","handleToggle","toggle","SwitchVariant","DashboardAccelerometer","lazy","DashboardBuzzer","DashboardLEDPixel","DashboardRoleManager","DashboardTrafficLight","DashboardCharacterScreen","DashboardRainGauge","DashboardLEDMatrix","DashboardArcadeGamepad","DashboardWindDirection","DashboardMatrixKeypad","DashboardReflectedLight","DashboardPower","DashboardSpeechSynthesis","DashboardSoilMoisture","DashboardRealTimeClock","DashboardLED","DashboardJoystick","DashboardSevenSegmentDisplay","DashboardMotion","DashboardWaterLevel","DashboardColor","DashboardSoundPlayer","DashboardAnalogButton","DashboardSoundLevel","DashboardSoundSpectrum","DashboardRandomNumberGenerator","DashboardCompass","DashboardGyroscope","DashboardSolenoid","DashboardBitRadio","serviceViews","SRV_ROLE_MANAGER","component","weight","SRV_BUZZER","SRV_LED_PIXEL","SRV_ACCELEROMETER","SRV_ROTARY_ENCODER","bundled","SRV_BUTTON","SRV_SERVO","SRV_SWITCH","SRV_TRAFFIC_LIGHT","SRV_CHARACTER_SCREEN","SRV_RAIN_GAUGE","SRV_LED_MATRIX","SRV_ARCADE_GAMEPAD","SRV_WIND_DIRECTION","SRV_MATRIX_KEYPAD","SRV_REFLECTED_LIGHT","SRV_POWER","SRV_SPEECH_SYNTHESIS","SRV_SOIL_MOISTURE","SRV_REAL_TIME_CLOCK","SRV_LED","SRV_JOYSTICK","SRV_SEVEN_SEGMENT_DISPLAY","SRV_MOTION","SRV_WATER_LEVEL","SRV_COLOR","SRV_SOUND_PLAYER","SRV_ANALOG_BUTTON","SRV_SOUND_LEVEL","SRV_RNG","SRV_COMPASS","SRV_GYROSCOPE","SRV_SOUND_SPECTRUM","SRV_SOLENOID","SRV_BIT_RADIO","ValueWidget","valueRegister","intensityRegister","others","intensity","hasIntensity","IntensityWidget","DefaultWidget","rspec","find","DashboardServiceWidget","classIdentifier","createElement","dashboardServiceWeight","view","JacdacContext","bus","mgr","setMgr","ROLE_MANAGER_CHANGE"],"mappings":"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","file":"f45028b77642bb06a1e26ecfd1b9356bfb549ad6-a4fc0c8f29a28c5a1947.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { useEffect, useState } from \"react\"\nimport { ROLE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useServiceRole(service: JDService) {\n    const [role, setRole] = useState<string>(service?.role);\n    useEffect(() => service?.subscribe(ROLE_CHANGE, () => {\n        console.log(\"role change\", { service })\n        setRole(service.role)\n    }), [service])\n    return role;\n}","import { Button } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useChange from \"../../jacdac/useChange\"\nimport AppContext from \"../AppContext\"\nimport useRoleManager from \"./useRoleManager\"\nimport useServiceRole from \"./useServiceRole\"\n\nexport default function ServiceRole(props: { service: JDService }) {\n    const { service } = props\n    const { showSelectRoleDialog } = useContext(AppContext)\n    const roleManager = useRoleManager()\n    const role = useServiceRole(service)\n    const handleClick = () => showSelectRoleDialog(service)\n\n    const hasRoleForService = useChange(roleManager, _ => _?.hasRoleForService(service))\n    // hide if no role manager or role not compatible with required roles\n    if (!hasRoleForService)\n        return null;\n\n    return <Button size=\"small\" onClick={handleClick}>{role || \"...\"}</Button>\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport DashboardServiceWidget, {\n    DashboardServiceProps,\n} from \"./DashboardServiceWidget\"\nimport ServiceRole from \"../services/ServiceRole\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { SystemReg } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function DashboardServiceWidgetItem(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const [instanceName] = useRegisterUnpackedValue<[number]>(\n        service.register(SystemReg.InstanceName),\n        props\n    )\n\n    return (\n        <Grid item>\n            <ServiceRole service={service} />\n            {instanceName && (\n                <Typography\n                    className=\"no-pointer-events\"\n                    variant=\"caption\"\n                    component=\"span\"\n                    style={{ float: \"right\" }}\n                >\n                    {instanceName}\n                </Typography>\n            )}\n            <DashboardServiceWidget {...props} />\n        </Grid>\n    )\n}\n","import React, { useMemo } from \"react\";\nimport { BaseReg, SystemReg } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useChange from \"../../jacdac/useChange\";\nimport RegisterInput from \"../RegisterInput\";\nimport { isIntegerType, isRegister } from \"../../../jacdac-ts/src/jdom/spec\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport { Grid } from \"@material-ui/core\";\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\";\n\n// filter out common registers\nconst ignoreRegisters = [\n    SystemReg.StatusCode,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.StreamingInterval\n]\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity\n]\n\nexport default function DashboardServiceDetails(props: DashboardServiceProps) {\n    const { service, expanded } = props;\n    const specification = useChange(service, spec => spec.specification);\n    const registers: JDRegister[] = useMemo(() => {\n        const packets = specification?.packets;\n        let ids = packets\n            ?.filter(pkt => isRegister(pkt))\n            ?.map(pkt => pkt.identifier) || []\n        ids = ids.filter(id => ignoreRegisters.indexOf(id) < 0)\n        if (!expanded) // grab the first interresting register\n            ids = ids.filter(id => collapsedRegisters.indexOf(id) > -1)\n                .slice(0, 1);\n        return ids.map(id => service.register(id))\n            .filter(reg => !!reg);\n    }, [specification, expanded])\n\n    if (!registers?.length)  // nothing to see here\n        return null;\n\n    return <>\n        {registers.map(register => {\n            return <Grid key={register.id} item xs={true}><RegisterInput\n                register={register}\n                showServiceName={true}\n                showRegisterName={true}\n                hideMissingValues={false}\n                showTrend={false}\n            /></Grid>\n        })}\n    </>\n}\n","import { useEffect, useState, RefObject } from 'react'\n\nexport interface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport default function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  options?: { freezeOnceVisible?: boolean } & IntersectionObserverInit\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible } = options || {};\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    //console.log(`observe`, { node })\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n  }, [elementRef, threshold, root, rootMargin, frozen])\n\n  return entry\n}\n","import {\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Paper,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@material-ui/core\"\nimport React, { useCallback, useRef } from \"react\"\nimport { SRV_CTRL, SRV_LOGGER } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useChange from \"../../jacdac/useChange\"\nimport DeviceName from \"../devices/DeviceName\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport DashboardServiceWidgetItem from \"./DashboardServiceWidgetItem\"\nimport DeviceActions from \"../DeviceActions\"\nimport DashboardServiceDetails from \"./DashboardServiceDetails\"\nimport { MOBILE_BREAKPOINT } from \"../layout\"\nimport useDeviceName from \"../devices/useDeviceName\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/node\"\n\nconst ignoredServices = [SRV_CTRL, SRV_LOGGER]\n\nexport default function DashboardDevice(\n    props: {\n        device: JDDevice\n        expanded?: boolean\n        toggleExpanded?: () => void\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const {\n        device,\n        expanded,\n        toggleExpanded,\n        variant,\n        showAvatar,\n        showHeader,\n    } = props\n    const name = useDeviceName(device)\n    const services = useChange(device, () =>\n        device\n            .services()\n            .filter(\n                service =>\n                    ignoredServices.indexOf(service.serviceClass) < 0 &&\n                    !!service.specification\n            )\n    )\n    const specification = useDeviceSpecification(device)\n    const theme = useTheme()\n    const mobile = useMediaQuery(theme.breakpoints.down(MOBILE_BREAKPOINT))\n    const serviceGridRef = useRef<HTMLDivElement>()\n    const intersection = useIntersectionObserver(serviceGridRef)\n    const visible = !!intersection?.isIntersecting\n\n    const ServiceWidgets = useCallback(() => (\n        <Grid\n            ref={serviceGridRef}\n            component=\"div\"\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"flex-end\"\n            alignContent=\"space-between\"\n        >\n            {services?.map(service => (\n                <DashboardServiceWidgetItem\n                    key={service.id}\n                    service={service}\n                    expanded={expanded}\n                    services={services}\n                    variant={variant}\n                    visible={visible}\n                />\n            ))}\n        </Grid>\n    ), [dependencyId(services), expanded, variant, visible])\n\n    if (!showHeader)\n        return (\n            <Paper style={{ padding: \"0.25em\" }} variant=\"outlined\">\n                <ServiceWidgets />\n            </Paper>\n        )\n\n    return (\n        <Card aria-live=\"polite\" aria-label={`device ${name} started`}>\n            <CardHeader\n                style={{ paddingBottom: 0 }}\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showStopHost={expanded && !mobile}\n                        hideIdentity={true}\n                        showReset={expanded && !mobile}\n                    >\n                        {toggleExpanded && (\n                            <IconButtonWithTooltip\n                                onClick={toggleExpanded}\n                                title={expanded ? \"Collapse\" : \"Expand\"}\n                            >\n                                {expanded ? (\n                                    <ExpandLessIcon />\n                                ) : (\n                                    <ExpandMoreIcon />\n                                )}\n                            </IconButtonWithTooltip>\n                        )}\n                    </DeviceActions>\n                }\n                title={<DeviceName showShortId={false} device={device} />}\n                subheader={\n                    <>\n                        {!mobile && specification && (\n                            <Typography variant=\"caption\" gutterBottom>\n                                {specification.name}\n                            </Typography>\n                        )}\n                    </>\n                }\n            />\n            <CardContent style={{ paddingTop: 0 }}>\n                <ServiceWidgets />\n                {expanded && (\n                    <Grid\n                        container\n                        direction=\"column\"\n                        spacing={1}\n                        alignContent=\"stretch\"\n                    >\n                        {services?.map(service => (\n                            <DashboardServiceDetails\n                                key={\"details\" + service.serviceIndex}\n                                service={service}\n                                expanded={expanded}\n                            />\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ButtonEvent, ButtonReg, EVENT, REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\";\nimport ButtonServer from \"../../../jacdac-ts/src/servers/buttonserver\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport useServiceServer from \"../hooks/useServiceServer\";\nimport LoadingProgress from \"../ui/LoadingProgress\"\n\nexport default function DashboardButton(props: DashboardServiceProps) {\n    const { service, visible } = props;\n    const [pressed, setPressed] = useState<boolean>(false)\n    const pressedRegister = service.register(ButtonReg.Pressed);\n    // track register\n    useEffect(() => visible && pressedRegister?.subscribe(REPORT_UPDATE, () => {\n        const [b] = pressedRegister?.unpackedValue || [];\n        if (b !== undefined)\n            setPressed(b)\n    }), [pressedRegister, visible])\n    // track event up/down events\n    const downEvent = service.event(ButtonEvent.Down);\n    useEffect(() => downEvent.subscribe(EVENT, () => setPressed(true)), [downEvent])\n    const upEvent = service.event(ButtonEvent.Up);\n    useEffect(() => upEvent.subscribe(EVENT, () => setPressed(false)), [upEvent])\n\n    const server = useServiceServer<ButtonServer>(service);\n    const color = server ? \"secondary\" : \"primary\";\n    const label = `button ${pressed ? `down` : `up`}`\n    const handleDown = () => server?.down();\n    const handleUp = () => server?.up();\n    const widgetSize = `clamp(3rem, 10vw, 16vw)`\n\n    if (pressed === undefined)\n        return <LoadingProgress />;\n    \n    return <ButtonWidget\n        checked={!!pressed}\n        color={color}\n        onDown={server && handleDown}\n        onUp={server && handleUp}\n        label={label}\n        size={widgetSize}\n    />\n}","import React from \"react\"\nimport { ServoReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport { SG90_RESPONSE_SPEED } from \"../../../jacdac-ts/src/servers/servers\"\nimport { Grid } from \"@material-ui/core\"\nimport ServoServer from \"../../../jacdac-ts/src/servers/servoserver\"\nimport RegisterInput from \"../RegisterInput\"\nimport PowerButton from \"../widgets/PowerButton\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nfunction useActualAngle(service: JDService, visible: boolean) {\n    const [angle] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.Angle),\n        { visible }\n    )\n    // sec/60deg\n    const [responseSpeed] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.ResponseSpeed),\n        { visible }\n    )\n    const rotationalSpeed = 60 / (responseSpeed || SG90_RESPONSE_SPEED)\n    const actualAngle = useThrottledValue(angle || 0, rotationalSpeed)\n\n    return actualAngle\n}\n\nexport default function DashboardServo(props: DashboardServiceProps) {\n    const { service, visible } = props\n\n    const enabledRegister = service.register(ServoReg.Enabled)\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const off = !enabled\n    const angleRegister = service.register(ServoReg.Angle)\n    const angle = useActualAngle(service, visible)\n    const [offset] = useRegisterUnpackedValue<[number]>(\n        service.register(ServoReg.Offset),\n        props\n    )\n\n    const server = useServiceServer<ServoServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const {\n        background,\n        controlBackground,\n        active,\n        textPrimary,\n    } = useWidgetTheme(color)\n\n    const cx = 78\n    const cy = 55\n\n    const a = enabled ? angle + (offset || 0) : 0\n    const transform = `rotate(${-a}, ${cx}, ${cy})`\n    const h = 111.406\n    const w = 158.50195\n    const pr = 14\n    const pri = 6\n    const text = enabled ? `${Math.round(a)}°` : \"off\"\n\n    const toggleOff = () => enabledRegister.sendSetBoolAsync(!enabled, true)\n\n    return (\n        <Grid container alignContent=\"center\">\n            <Grid item xs={12}>\n                <SvgWidget\n                    tabIndex={0}\n                    title={`servo at angle ${angle}`}\n                    width={w}\n                    height={h}\n                >\n                    <path\n                        fill={background}\n                        d=\"M158.502 10.687H0v89.75h158.502z\"\n                    />\n                    <path\n                        fill={controlBackground}\n                        d=\"M125.545 55.641c0-24.994-20.26-45.256-45.254-45.256-17.882.016-34.077 9.446-41.328 25.79-2.655.024-4.192.076-6.35.07-11.158 0-20.204 9.046-20.204 20.204 0 11.158 9.046 20.203 20.203 20.203 2.389-.005 4.354-.332 6.997-.256 7.56 15.59 23.356 24.485 40.682 24.5 24.992 0 45.254-20.264 45.254-45.256z\"\n                    />\n                    <path\n                        fill={enabled ? active : background}\n                        stroke={active}\n                        transform={transform}\n                        d=\"M93.782 55.623c-.032-3.809-.19-6.403-.352-7.023h-.002c-.93-3.558-6.621-6.73-14.793-6.73-8.17 0-14.649 3.016-14.795 6.73-.25 6.419-4.049 62.795 13.561 62.806 14.308.008 16.52-39.277 16.38-55.783zm-8.05.08a7.178 7.178 0 010 .012 7.178 7.178 0 01-7.179 7.176 7.178 7.178 0 01-7.177-7.176 7.178 7.178 0 017.177-7.178 7.178 7.178 0 017.178 7.166z\"\n                    />\n                    <text\n                        x={w / 2}\n                        y={30}\n                        textAnchor=\"middle\"\n                        fill={textPrimary}\n                    >\n                        {text}\n                    </text>\n                    <PowerButton\n                        r={pr}\n                        ri={pri}\n                        cx={w - pr - 4}\n                        cy={pr + 14}\n                        color={color}\n                        strokeWidth={1.5}\n                        off={off}\n                        onClick={toggleOff}\n                    />\n                </SvgWidget>\n            </Grid>\n            <Grid item xs={12}>\n                <RegisterInput register={angleRegister} visible={visible} />\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport { RotaryEncoderReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport RotaryEncoderServer from \"../../../jacdac-ts/src/servers/rotaryencoderserver\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { Grid, Slider } from \"@material-ui/core\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\n\nexport default function DashboardRotaryEncoder(props: DashboardServiceProps) {\n    const { service } = props\n    const positionRegister = service.register(RotaryEncoderReg.Position)\n    const [position = 0] = useRegisterUnpackedValue<[number]>(\n        positionRegister,\n        props\n    )\n    const clicksPerTurnRegister = service.register(\n        RotaryEncoderReg.ClicksPerTurn\n    )\n    const [clicksPerTurn = 12] = useRegisterUnpackedValue<[number]>(\n        clicksPerTurnRegister,\n        props\n    )\n    const server = useServiceServer<RotaryEncoderServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground, active, textProps } = useWidgetTheme(\n        color\n    )\n    const label = \"\" + position\n    const widgetSize = `clamp(6rem, 15vw, 20vw)`\n\n    const w = 37.794\n    const r = 0.06\n    const fs = Math.max(0.2, 0.5 - label.length * 0.1)\n\n    const handleChange = async (ev: unknown, newValue: number | number[]) => {\n        server?.reading.setValues([newValue as number])\n        positionRegister.refresh()\n        clicksPerTurnRegister.refresh()\n    }\n\n    const throttled = useThrottledValue(position, clicksPerTurn)\n    const angle = (throttled / clicksPerTurn) * 360\n\n    const min = Math.floor(position / clicksPerTurn - 1) * clicksPerTurn\n    const max = Math.ceil(position / clicksPerTurn + 1) * clicksPerTurn\n\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <SvgWidget\n                    title={`rotary encoder at position ${position}`}\n                    size={widgetSize}\n                    width={w}\n                    height={w}\n                    viewBox={\"0 0 1 1\"}\n                >\n                    <g transform={`rotate(${angle}, 0.5, 0.5)`}>\n                        <path\n                            fill={background}\n                            d=\"M.67.029a.037.037 0 01-.072-.02A.5.5 0 00.538 0a.037.037 0 01-.075 0 .5.5 0 00-.061.008.038.038 0 01-.073.02.5.5 0 00-.056.025.037.037 0 01-.064.04A.5.5 0 00.16.13.037.037 0 01.11.186a.5.5 0 00-.035.05.037.037 0 01-.035.066.5.5 0 00-.02.058.037.037 0 01-.016.074A.5.5 0 000 .495.037.037 0 01.005.57a.5.5 0 00.013.06.038.038 0 01.025.07.5.5 0 00.028.056.037.037 0 01.043.06.5.5 0 00.042.046.037.037 0 01.058.047.5.5 0 00.053.032.037.037 0 01.069.03.5.5 0 00.059.016.037.037 0 01.074.01.5.5 0 00.062 0 .037.037 0 01.074-.01.5.5 0 00.06-.016.037.037 0 01.068-.03.5.5 0 00.053-.032.037.037 0 01.058-.047.5.5 0 00.042-.045.037.037 0 01.043-.061A.5.5 0 00.957.7.037.037 0 01.982.63.5.5 0 00.995.57.037.037 0 011 .495.5.5 0 00.996.434.038.038 0 01.98.36.5.5 0 00.96.302.037.037 0 01.925.236.5.5 0 00.89.186.037.037 0 01.839.13.5.5 0 00.79.092.037.037 0 01.727.053.5.5 0 00.671.03z\"\n                        />\n                        <path\n                            fill={controlBackground}\n                            d=\"M.1.499a.4.4 0 10.8 0 .4.4 0 10-.8 0z\"\n                        />\n                        <circle cx={0.5} cy={0.19} r={r} fill={active} />\n                    </g>\n                    <text x={0.5} y={0.5} fontSize={fs} {...textProps}>\n                        {label}\n                    </text>\n                </SvgWidget>\n            </Grid>\n            {server && (\n                <Grid item>\n                    <Slider\n                        color={color}\n                        min={min}\n                        max={max}\n                        step={1}\n                        value={position}\n                        valueLabelDisplay=\"off\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { SwitchReg, SwitchVariant } from \"../../../jacdac-ts/src/jdom/constants\";\nimport { useRegisterBoolValue, useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\";\nimport useServiceServer from \"../hooks/useServiceServer\";\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\";\nimport SwitchServer from \"../../../jacdac-ts/src/servers/switchserver\"\nimport React from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport { useId } from \"react-use-id-hook\"\nimport ButtonWidget from \"../widgets/ButtonWidget\";\nimport LoadingProgress from \"../ui/LoadingProgress\";\n\nexport default function DashboardSwitch(props: DashboardServiceProps) {\n    const { service } = props;\n\n    const labelId = useId();\n    const on = useRegisterBoolValue(service.register(SwitchReg.Active), props)\n    const [switchVariant] = useRegisterUnpackedValue<[SwitchVariant]>(service.register(SwitchReg.Variant), props);\n    const server = useServiceServer<SwitchServer>(service);\n    const color = server ? \"secondary\" : \"primary\";\n    const widgetSize = `clamp(5em, 25vw, 100%)`\n\n    const handleToggle = () => server?.toggle();\n\n    if (on === undefined)\n        return <LoadingProgress />;\n\n    switch (switchVariant) {\n        case SwitchVariant.PushButton:\n            return <ButtonWidget\n                checked={on}\n                color={color}\n                label={on ? \"on\" : \"off\"}\n                onDown={server && handleToggle}\n                size={widgetSize} />\n        default:\n            return <>\n                <Switch aria-labelledby={labelId} color={color} checked={on} onChange={server && handleToggle} />\n                <label id={labelId}>{on ? \"on\" : \"off\"}</label>\n            </>\n    }\n}","import React, {\n    createElement,\n    FunctionComponent,\n    lazy,\n    useMemo,\n    Suspense,\n} from \"react\"\nimport {\n    SRV_ACCELEROMETER,\n    SRV_ANALOG_BUTTON,\n    SRV_ARCADE_GAMEPAD,\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_CHARACTER_SCREEN,\n    SRV_COLOR,\n    SRV_COMPASS,\n    SRV_GYROSCOPE,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LED_PIXEL,\n    SRV_MATRIX_KEYPAD,\n    SRV_MOTION,\n    SRV_POWER,\n    SRV_RAIN_GAUGE,\n    SRV_REAL_TIME_CLOCK,\n    SRV_REFLECTED_LIGHT,\n    SRV_RNG,\n    SRV_ROLE_MANAGER,\n    SRV_ROTARY_ENCODER,\n    SRV_SERVO,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SRV_SOIL_MOISTURE,\n    SRV_SOLENOID,\n    SRV_SOUND_LEVEL,\n    SRV_SOUND_PLAYER,\n    SRV_SOUND_SPECTRUM,\n    SRV_SPEECH_SYNTHESIS,\n    SRV_SWITCH,\n    SRV_TRAFFIC_LIGHT,\n    SRV_WATER_LEVEL,\n    SRV_WIND_DIRECTION,\n    SRV_BIT_RADIO,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { isRegister } from \"../../../jacdac-ts/src/jdom/spec\"\nimport RegisterInput from \"../RegisterInput\"\nimport { JDRegister } from \"../../../jacdac-ts/src/jdom/register\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport { CircularProgress, NoSsr } from \"@material-ui/core\"\n\n// bundled\nimport DashboardButton from \"./DashboardButton\"\nimport DashboardServo from \"./DashboardServo\"\nimport DashboardRotaryEncoder from \"./DashboardRotaryEncoder\"\nimport DashboardSwitch from \"./DashboardSwitch\"\nimport useServiceServer from \"../hooks/useServiceServer\"\n\n// lazy devices\nconst DashboardAccelerometer = lazy(() => import(\"./DashboardAccelerometer\"))\nconst DashboardBuzzer = lazy(() => import(\"./DashboardBuzzer\"))\nconst DashboardLEDPixel = lazy(() => import(\"./DashboardLEDPixel\"))\nconst DashboardRoleManager = lazy(() => import(\"./DashboardRoleManager\"))\nconst DashboardTrafficLight = lazy(() => import(\"./DashboardTrafficLight\"))\nconst DashboardCharacterScreen = lazy(\n    () => import(\"./DashboardCharacterScreen\")\n)\nconst DashboardRainGauge = lazy(() => import(\"./DashboardRainGauge\"))\nconst DashboardLEDMatrix = lazy(() => import(\"./DashboardLEDMatrix\"))\nconst DashboardArcadeGamepad = lazy(() => import(\"./DashboardArcadeGamepad\"))\nconst DashboardWindDirection = lazy(() => import(\"./DashboardWindDirection\"))\nconst DashboardMatrixKeypad = lazy(() => import(\"./DashboardMatrixKeypad\"))\nconst DashboardReflectedLight = lazy(() => import(\"./DashboardReflectedLight\"))\nconst DashboardPower = lazy(() => import(\"./DashboardPower\"))\nconst DashboardSpeechSynthesis = lazy(\n    () => import(\"./DashboardSpeechSynthesis\")\n)\nconst DashboardSoilMoisture = lazy(() => import(\"./DashboardSoilMoisture\"))\nconst DashboardRealTimeClock = lazy(() => import(\"./DashboardRealTimeClock\"))\nconst DashboardLED = lazy(() => import(\"./DashboardLED\"))\nconst DashboardJoystick = lazy(() => import(\"./DashboardJoystick\"))\nconst DashboardSevenSegmentDisplay = lazy(\n    () => import(\"./DashboardSevenSegmentDisplay\")\n)\nconst DashboardMotion = lazy(() => import(\"./DashboardMotion\"))\nconst DashboardWaterLevel = lazy(() => import(\"./DashboardWaterLevel\"))\nconst DashboardColor = lazy(() => import(\"./DashboardColor\"))\nconst DashboardSoundPlayer = lazy(() => import(\"./DashboardSoundPlayer\"))\nconst DashboardAnalogButton = lazy(() => import(\"./DashboardAnalogButton\"))\nconst DashboardSoundLevel = lazy(() => import(\"./DashboardSoundLevel\"))\nconst DashboardSoundSpectrum = lazy(() => import(\"./DashboardSoundSpectrum\"))\nconst DashboardRandomNumberGenerator = lazy(\n    () => import(\"./DashboardRandomNumberGenerator\")\n)\nconst DashboardCompass = lazy(() => import(\"./DashboardCompass\"))\nconst DashboardGyroscope = lazy(() => import(\"./DashboardGyroscope\"))\nconst DashboardSolenoid = lazy(() => import(\"./DashboardSolenoid\"))\nconst DashboardBitRadio = lazy(() => import(\"./DashboardBitRadio\"))\n\nexport interface DashboardServiceProps {\n    service: JDService\n    expanded?: boolean\n    // all widget services\n    services?: JDService[]\n    variant?: \"icon\" | \"\"\n    // the dashboard html element is in the view\n    visible?: boolean\n}\nexport type DashboardServiceComponent = FunctionComponent<DashboardServiceProps>\n\nconst serviceViews: {\n    [serviceClass: number]: {\n        component: DashboardServiceComponent\n        bundled?: boolean\n        weight?: (service: JDService) => number\n    }\n} = {\n    [SRV_ROLE_MANAGER]: {\n        component: DashboardRoleManager,\n        weight: () => 2,\n    },\n    [SRV_BUZZER]: {\n        component: DashboardBuzzer,\n        weight: () => 2,\n    },\n    [SRV_LED_PIXEL]: {\n        component: DashboardLEDPixel,\n        weight: () => 2,\n    },\n    [SRV_ACCELEROMETER]: {\n        component: DashboardAccelerometer,\n        weight: () => 3,\n    },\n    [SRV_ROTARY_ENCODER]: {\n        component: DashboardRotaryEncoder,\n        bundled: true,\n        weight: () => 2,\n    },\n    [SRV_BUTTON]: {\n        component: DashboardButton,\n        bundled: true,\n    },\n    [SRV_SERVO]: {\n        component: DashboardServo,\n        bundled: true,\n    },\n    [SRV_SWITCH]: {\n        component: DashboardSwitch,\n        bundled: true,\n    },\n    [SRV_TRAFFIC_LIGHT]: {\n        component: DashboardTrafficLight,\n    },\n    [SRV_CHARACTER_SCREEN]: {\n        component: DashboardCharacterScreen,\n        weight: () => 3,\n    },\n    [SRV_RAIN_GAUGE]: {\n        component: DashboardRainGauge,\n    },\n    [SRV_LED_MATRIX]: {\n        component: DashboardLEDMatrix,\n        weight: () => 3,\n    },\n    [SRV_ARCADE_GAMEPAD]: {\n        component: DashboardArcadeGamepad,\n        weight: () => 3,\n    },\n    [SRV_WIND_DIRECTION]: {\n        component: DashboardWindDirection,\n    },\n    [SRV_MATRIX_KEYPAD]: {\n        component: DashboardMatrixKeypad,\n    },\n    [SRV_REFLECTED_LIGHT]: {\n        component: DashboardReflectedLight,\n    },\n    [SRV_POWER]: {\n        component: DashboardPower,\n    },\n    [SRV_SPEECH_SYNTHESIS]: {\n        component: DashboardSpeechSynthesis,\n    },\n    [SRV_SOIL_MOISTURE]: {\n        component: DashboardSoilMoisture,\n    },\n    [SRV_REAL_TIME_CLOCK]: {\n        component: DashboardRealTimeClock,\n    },\n    [SRV_LED]: {\n        component: DashboardLED,\n    },\n    [SRV_JOYSTICK]: {\n        component: DashboardJoystick,\n    },\n    [SRV_SEVEN_SEGMENT_DISPLAY]: {\n        component: DashboardSevenSegmentDisplay,\n    },\n    [SRV_MOTION]: {\n        component: DashboardMotion,\n    },\n    [SRV_WATER_LEVEL]: {\n        component: DashboardWaterLevel,\n    },\n    [SRV_COLOR]: {\n        component: DashboardColor,\n        weight: () => 2,\n    },\n    [SRV_SOUND_PLAYER]: {\n        component: DashboardSoundPlayer,\n        weight: () => 2,\n    },\n    [SRV_ANALOG_BUTTON]: {\n        component: DashboardAnalogButton,\n    },\n    [SRV_SOUND_LEVEL]: {\n        component: DashboardSoundLevel,\n        weight: () => 2,\n    },\n    [SRV_RNG]: {\n        component: DashboardRandomNumberGenerator,\n    },\n    [SRV_COMPASS]: {\n        component: DashboardCompass,\n    },\n    [SRV_GYROSCOPE]: {\n        component: DashboardGyroscope,\n        weight: () => 3,\n    },\n    [SRV_SOUND_SPECTRUM]: {\n        component: DashboardSoundSpectrum,\n        weight: () => 2,\n    },\n    [SRV_SOLENOID]: {\n        component: DashboardSolenoid,\n    },\n    [SRV_BIT_RADIO]: {\n        component: DashboardBitRadio,\n        weight: () => 6,\n    },\n}\n\nconst collapsedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nfunction ValueWidget(\n    props: {\n        valueRegister: JDRegister\n        intensityRegister: JDRegister\n    } & DashboardServiceProps\n) {\n    const { valueRegister, intensityRegister, ...others } = props\n    const { visible } = others\n    const intensity = useRegisterBoolValue(intensityRegister, others)\n    const hasIntensity = intensity !== undefined\n    const off = hasIntensity ? !intensity : undefined\n    const toggleOff = async () => {\n        await intensityRegister.sendSetBoolAsync(off, true)\n    }\n\n    return (\n        <RegisterInput\n            register={valueRegister}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            off={off}\n            toggleOff={hasIntensity ? toggleOff : undefined}\n            visible={visible}\n        />\n    )\n}\n\nfunction IntensityWidget(\n    props: { intensityRegister: JDRegister } & DashboardServiceProps\n) {\n    const { intensityRegister, ...others } = props\n    const { visible } = others\n    const [intensity] = useRegisterUnpackedValue<[number | boolean]>(\n        intensityRegister,\n        others\n    )\n    const off = intensity !== undefined && !intensity\n\n    return (\n        <RegisterInput\n            register={intensityRegister}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            off={off}\n            visible={visible}\n        />\n    )\n}\n\nfunction DefaultWidget(props: DashboardServiceProps) {\n    const { service, visible } = props\n    const { specification } = service\n    const register = useMemo(() => {\n        const rspec = specification?.packets.find(\n            pkt =>\n                isRegister(pkt) &&\n                collapsedRegisters.indexOf(pkt.identifier) > -1\n        )\n        return service.register(rspec?.identifier)\n    }, [service])\n\n    if (!register)\n        // nothing to see here\n        return null\n\n    // if register is value, disable if enabled is 0.\n    if (register.specification.identifier == SystemReg.Value) {\n        const intensityRegister = register.service.register(SystemReg.Intensity)\n        return (\n            <ValueWidget\n                valueRegister={register}\n                intensityRegister={intensityRegister}\n                {...props}\n            />\n        )\n    }\n\n    // case of no streaming,value just intensity, like a relay\n    if (register.specification.identifier === SystemReg.Intensity)\n        return <IntensityWidget intensityRegister={register} {...props} />\n\n    return (\n        <RegisterInput\n            register={register}\n            variant={\"widget\"}\n            showServiceName={false}\n            showRegisterName={false}\n            hideMissingValues={true}\n            visible={visible}\n        />\n    )\n}\n\nexport default function DashboardServiceWidget(\n    props: React.Attributes & DashboardServiceProps\n): JSX.Element {\n    const { service } = props\n    const { specification } = service\n    const { component, bundled } =\n        serviceViews[specification.classIdentifier] || {}\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    // no special support\n    if (!component) return createElement(DefaultWidget, props)\n\n    // precompiled\n    if (bundled) return createElement(component, props)\n\n    // lazy loading\n    return (\n        <NoSsr>\n            <Suspense\n                fallback={\n                    <CircularProgress\n                        color={color}\n                        disableShrink={true}\n                        variant={\"indeterminate\"}\n                        size={\"3em\"}\n                    />\n                }\n            >\n                {createElement(component, props)}\n            </Suspense>\n        </NoSsr>\n    )\n}\n\nexport function dashboardServiceWeight(service: JDService) {\n    const view = serviceViews[service.serviceClass]\n    return view?.weight?.(service)\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { ROLE_MANAGER_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { RoleManagerClient } from \"../../../jacdac-ts/src/jdom/rolemanagerclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nexport default function useRoleManager(): RoleManagerClient {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [mgr, setMgr] = useState<RoleManagerClient>(bus.roleManager)\n    useEffect(() =>\n        bus.subscribe(ROLE_MANAGER_CHANGE, () => setMgr(bus.roleManager))\n    )\n    return mgr\n}\n"],"sourceRoot":""}