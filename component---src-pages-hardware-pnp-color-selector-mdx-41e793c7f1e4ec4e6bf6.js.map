{"version":3,"file":"component---src-pages-hardware-pnp-color-selector-mdx-41e793c7f1e4ec4e6bf6.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACE;;AACF;AACA;;AAEA;;AAEA;AACO,IAAMG,YAAY,GAAG,EAArB;AACP,IAAMC,WAAW,GAAG;AAClBD,EAAAA;AADkB,CAApB;AAGA,IAAME,SAAS,GAAGH,kHAAlB;AACe,SAASI,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEC,KACF;;AACD,SAAO,mDAAC,SAAD,oBAAeJ,WAAf,EAAgCI,KAAhC;AAAuC,cAAU,EAAED,UAAnD;AAA+D,WAAO,EAAC;AAAvE,MAGL;AACE,UAAM,iCADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,kCADT;AAEC,kBAAc,2CAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,sCAHK,EAuBL,0NAvBK,EA0BL,uGAA4C;AAAG,cAAU,EAAC,GAAd;AACxC,YAAQ;AADgC,sBAA5C,qCAG2B;AAAG,cAAU,EAAC,GAAd;AACvB,YAAQ;AADe,6BAH3B,mDAOE;AAAG,cAAU,EAAC,GAAd;AACE,YAAQ;AADV,8BAPF,6CA1BK,EAqCL,4PArCK,EAwCL,8DAAG;AAAK,cAAU,EAAC,GAAhB;AACC,WAAO,oEADR;AAEC,WAAO;AAFR,IAAH,CAxCK,EA4CL,oZA5CK,EAgDL,sLAhDK,EAkDL,8DAAG;AAAK,cAAU,EAAC,GAAhB;AACC,WAAO,uEADR;AAEC,WAAO;AAFR,IAAH,CAlDK,EAsDL,wKAtDK,EAwDL,8DAAG;AAAK,cAAU,EAAC,GAAhB;AACC,WAAO,iEADR;AAEC,WAAO;AAFR,IAAH,CAxDK,EA4DL,kLA5DK,CAAP;AAgED;AACD;AACAD,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;CCjFA;;AACA,IAAME,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAAEH,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAwB;AAClC,sBAAO,iDAAC,2CAAD,EAAcJ,KAAd,EAAsBI,QAAtB,CAAP;AACH,CAFD;;AAIA,yDAAeD,IAAf","sources":["webpack://jacdac-docs/./src/pages/hardware/pnp/colorSelector.mdx","webpack://jacdac-docs/./src/components/Page.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"color-selector-composite-module\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#color-selector-composite-module\",\n        \"aria-label\": \"color selector composite module permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Color Selector (Composite) Module`}</h1>\n    <p>{`The following pictures show the power of the plug-and-play paradigm\nfor microcontrollers.  Our scenario is to allow the\nend-user to create a RGB color.`}</p>\n    <p>{`For this scenario, we will use three `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/devices/microsoft/research/jmslider49v11\"\n      }}>{`JM Slider v1.1`}</a>{`\nmodules, which implement the `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/services/potentiometer/\"\n      }}>{`potentiometer service`}</a>{`, to adjust\nthe R, G, and B values and\none `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/devices/microsoft/research/jmsinglergbled42v01\"\n      }}>{`JM Single RGB LED v0.1`}</a>{` module\nto display the resulting color.`}</p>\n    <p>{`Because Jacdac is a true bus, there are multiple ways to wire this composite module from\nthe atomic components. Our first version of the module uses a passive Jacdac hub as shown\nbelow:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/jacdac-docs/static/hubModule-0503fdaf35a712386982828541870d3c.jpg\",\n        \"alt\": \"wiring color selector with hub\"\n      }}></img></p>\n    <p>{`In the above network, the cable with the white end points provides the interface to the\nrest of the system (including the brain module, with the logic to compute the RGB color\nfrom the positions of the sliders, and set the RGB LED appropriately whenever the slider\npositions change).  So we have a total of five cables for this module. `}</p>\n    <p>{`To make the above network into a module, we use some cardboard and masking tape,\nwith the hub taped on the backside:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/jacdac-docs/static/hubCardboard-b86ee29bdb077e22fae83bbd58ff1186.jpg\",\n        \"alt\": \"color selector on cardboard\"\n      }}></img></p>\n    <p>{`Other wirings are possible, as shown in the linear arrangement below, which only\nrequires four cables:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/jacdac-docs/static/linear-7c130fb897d52f00bfa89b0f44f1bcc0.jpg\",\n        \"alt\": \"color selector on cardboard\"\n      }}></img></p>\n    <p>{`It's important to note that no code changes are needed between the different\nways to wire up the color selector.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\"\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page\n"],"names":["React","mdx","DefaultLayout","_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent","Fragment","Page","children"],"sourceRoot":""}