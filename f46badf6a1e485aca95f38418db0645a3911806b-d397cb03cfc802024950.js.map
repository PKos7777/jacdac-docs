{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/core-js/internals/add-to-unscopables.js","webpack://jacdac-docs/./node_modules/core-js/internals/array-species-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/flatten-into-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/function-bind-context.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/is-array.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./node_modules/core-js/internals/to-object.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.flat-map.js","webpack://jacdac-docs/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://jacdac-docs/./jacdac-ts/src/azure-iot/dtdl.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/compile.ts","webpack://jacdac-docs/./src/components/hooks/toneContext.ts","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoteField.tsx","webpack://jacdac-docs/./src/components/vm/fields/KeyboardKeyField.tsx","webpack://jacdac-docs/./src/components/widgets/svg.ts","webpack://jacdac-docs/./src/components/vm/fields/ReactImageField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDMatrixField.tsx","webpack://jacdac-docs/./src/components/vm/fields/SliderField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ServoAngleField.tsx","webpack://jacdac-docs/./src/components/vm/fields/LEDColorField.tsx","webpack://jacdac-docs/./src/components/vm/fields/ReactInlineField.tsx","webpack://jacdac-docs/./src/components/vm/fields/NoServiceAlert.tsx","webpack://jacdac-docs/./src/components/vm/fields/PointerBoundary.tsx","webpack://jacdac-docs/./src/components/vm/fields/TwinField.tsx","webpack://jacdac-docs/./src/components/vm/fields/JDomTreeField.tsx","webpack://jacdac-docs/./src/components/vm/fields/WatchValueField.tsx","webpack://jacdac-docs/./src/components/vm/fields/fields.ts","webpack://jacdac-docs/./src/components/vm/useToolbox.ts","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/vm/VMBlockEditor.tsx"],"names":["DTDL_REFERENCE_URL","DTDL_NAME","DTDL_CONTEXT","objectSchema","schemas","fields","arraySchema","schema","elementSchema","escapeName","name","trim","replace","test","toLowerCase","slice","escapeDisplayName","DTDLUnits","sort","VMFunctions","id","args","prompt","context","toIdentifier","type","toMemberExpression","root","field","object","property","computed","handlerVisitor","handler","visitITE","visitCommand","commands","forEach","visitBase","base","ite","else","then","compileProgram","prog","newProgram","roles","handlers","map","h","removeIfThenElse","errors","newSequence","labels","labelId","time","end","push","command","callee","arguments","expr","length","assert","pop","cmd","getServiceFromRole","info","role","shortId","find","pair","def","serviceSpecificationFromName","serviceShortId","service","checkProgram","allErrors","goodHandlers","currentId","undefined","errorFun","e","sourceId","message","symbolResolver","SpecSymbolResolver","checker","VMChecker","_","errorCount","c","checkCommand","registers","s","split","fld","register","events","event","VOLUME_GAIN","createToneContext","defaultVolume","console","log","ctx","window","AudioContext","webkitAudioContext","buffer","createBuffer","source","createBufferSource","connect","destination","start","volume","createGain","gain","value","setVolume","v","isNaN","playTone","frequency","duration","tone","createOscillator","stop","currentTime","debug","close","state","warn","useServices","options","useContext","JacdacContext","bus","services","useChange","b","JSON","stringify","PaperBox","props","children","padding","elevation","bgcolor","others","theme","useTheme","spacing","PianoWidget","lazy","NoteField","fromJson","on","UNMOUNT","toneContext","getText_","renderField","handlePlayTone","newFrequency","ReactField","KEY","SHADOW","toShadowDefinition","KeyboardKeyInput","KeyboardKeyField","selector","modifiers","renderKeyboardKey","handleChange","newSelector","newModifiers","mkTitle","txt","t","elt","textContent","title","el","appendChild","hydrate","k","setAttributeNS","document","createElementNS","child","parent","ReactImageField","width","height","setSize","size_","Blockly","img","view","setAttribute","updateView","imgUri","renderValue","getText","initCustomView","fieldGroup_","alt","LEDMatrixWidget","LEDMatrixField","VALUE_CHANGE","rows","columns","leds","columnspadded","ledsBytes","fromHex","cvs","createElement","pw","ph","w","getContext","fillStyle","fillRect","x","y","bitindex","byte","bit","dataUri","toDataURL","onChange","newLeds","toHex","Uint8Array","FieldWithSlider","ValueContext","onValueChange","ev","nv","newValue","Math","round","SliderField","renderWidget","ServoWidget","ServiceFieldWidget","ServoAngleField","LEDWidget","LEDColorFieldWidget","LEDColorField","r","cx","cy","strokeWidth","stroke","rgbToHtmlColor","circle","ReactInlineField","createContainer","style","display","minWidth","fo","container","resizeObserver","ResizeObserver","entries","entry","contentRect","forceRerender","observe","ReactDOM","renderBlock","dispose","disconnect","renderInlineField","bindEvents_","getClickTarget_","NoServiceAlert","WorkspaceContext","roleService","roleServiceShortId","flyout","spec","handleStartSimulator","startServiceProviderFromServiceClass","classIdentifier","PointerBoundary","className","onPointerStopPropagation","stopPropagation","cursor","TwinWidget","TwinField","EDITABLE","JDomServiceTreeView","JDomTreeWidget","JDomTreeField","WatchValueWidget","runner","useState","lookupWatch","setValue","useEffect","subscribe","VM_WATCH_CHANGE","watchSourceId","valueNumber","step","ceil","abs","precision","log10","roundWithPrecision","palette","background","paper","text","primary","WatchValueField","reactFieldShadows","registerFields","registerType","fieldType","key","fieldTypes","fieldShadows","highlighted","rendered","addSelect","removeSelect","isBooleanField","isStringField","toBlocklyType","isNumericType","enumInfo","srv","enums","ignoredServices","SRV_CONTROL","SRV_LOGGER","SRV_ROLE_MANAGER","SRV_PROTO_TEST","SRV_SETTINGS","SRV_BOOTLOADER","ignoredEvents","SystemEvent","includedRegisters","SystemReg","customMessages","SRV_JOYSTICK","JoystickReg","get","createBlockTheme","sensorColor","success","main","otherColor","commandColor","warning","debuggerColor","grey","azureIoTHubColor","error","deviceTwinColor","light","serviceColor","isSensor","codeStatementType","deviceTwinContentType","deviceTwinCommonOptionType","deviceTwinPropertyOptionType","deviceTwinStatementType","deviceTwinCommonOptionStatementType","deviceTwinPropertyOptionStatementType","loadBlocks","customShadows","serviceClass","SRV_SERVO","kind","identifier","ServoReg","shadow","SRV_BUZZER","BuzzerCmd","lookupCustomShadow","cs","serviceHelp","withPrefix","fieldsSupported","pkt","every","fieldName","reg","fieldToShadow","unit","defaultValue","min","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","humanify","camelName","fieldVariable","variable","variableTypes","defaultType","fieldsToFieldInputs","check","fieldsToValues","toMap","fieldsToMessage","i","join","isEnabledRegister","customMessage","m","allServices","serviceSpecifications","supportedServices","filter","status","indexOf","resolveService","cls","arrayConcatMany","packets","isRegister","lowLevel","isEvent","kv","isCommand","customBlockDefinitions","message0","args0","colour","inputsInline","previousStatement","nextStatement","tooltip","helpUrl","template","SRV_HID_KEYBOARD","expression","SRV_LED","values","color","speed","SRV_SEVEN_SEGMENT_DISPLAY","digits","SRV_LED_MATRIX","eventBlocks","eventFieldBlocks","output","registerChangeByEventBlocks","some","splitFilter","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimplesGetBlocks","description","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","registerEnumGetBlocks","Object","keys","members","member","registerNumericsGetBlocks","re","f","registerSetBlocks","commandBlocks","serviceBlocks","shadowBlocks","colourOptions","runtimeBlocks","WAIT_BLOCK","CONNECTION_BLOCK","CONNECTED_BLOCK","SET_STATUS_LIGHT_BLOCK","TWIN_BLOCK","INSPECT_BLOCK","WATCH_BLOCK","REPEAT_EVERY_BLOCK","mathBlocks","extensions","azureIoTHubBlocks","deviceTwinsBlocks","DEVICE_TWIN_DEFINITION_BLOCK","DEVICE_TWIN_PROPERTY_BLOCK","DEVICE_TWIN_PROPERTY_TYPE","DEVICE_TWIN_VALUE_TYPE","blocks","block","jacdacDefinition","init","jsonInit","jdBlocks","uniqueMap","patchCategoryJSONtoXML","cat","button","contents","unshift","node","exists","Flags","blockxml","useToolbox","program","useMemo","blockServices","variables","liveServices","specification","usedEvents","Set","definition","resolveServiceBlockDefinition","eventName","inputs","toolboxServices","srvid","l","localeCompare","servicesCategories","has","callbackKey","commandsCategory","interval","LOG_BLOCK","toolsCategory","logicCategory","A","B","BOOL","mathCategory","NUM","variablesCategory","custom","azureIoTHubCategory","deviceTwinsCategory","toolboxConfiguration","newProjectXml","NEW_PROJET_XML","useToolboxButtons","workspace","buttons","btn","registerButtonCallback","ops","AND","OR","EQ","NEQ","LT","GT","LTE","GTE","NEG","ADD","MULTIPLY","DIVIDE","MINUS","BUILTIN_TYPES","workspaceJSONToVMProgram","EmptyExpression","Error","blockToExpression","blockIn","blockToExpressionInner","raw","argument","op","operator","prefix","left","right","d","makeVMBase","processErrors","makeWait","blockToCommand","thenHandler","elseHandler","addCommands","exprErrors","ifThenElse","concat","serviceCommand","exprsErrors","a","p","flatMap","nop","top","topEvent","topErrors","toString","useStyles","makeStyles","createStyles","editor","fontFamily","typography","fontWeight","VMBlockEditor","onXmlChange","onJSONChange","onVMProgramChange","initialXml","roleManager","workspaceRef","classes","DarkModeContext","darkMode","AppContext","setError","setSource","setProgram","DarkTheme","Theme","gridColor","blocklyRef","useRef","useBlocklyWorkspace","ref","workspaceConfiguration","collapse","disable","comments","css","trashcan","sounds","grid","snap","renderer","oneBasedIndex","move","scrollbars","vertical","horizontal","media","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","onImportXmlError","xml","current","ws","jacdacServices","WorkspaceServices","useBlocklyPlugins","useBlocklyEvents","isDragging","newSource","domToJSON","getAllBlocks","setWarningText","observer","resize","clsx"],"mappings":"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","file":"f46badf6a1e485aca95f38418db0645a3911806b-d397cb03cfc802024950.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","/***\n *  DTDL specification: https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md.\n */\nexport const DTDL_REFERENCE_URL =\n    \"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\"\nexport const DTDL_NAME = \"Digital Twins Definition Language\"\nexport const DTDL_CONTEXT = \"dtmi:dtdl:context;2\"\n\n// warps fields into an object\nexport function objectSchema(schemas: DTDLSchema[]): DTDLSchema {\n    return {\n        \"@type\": \"Object\",\n        fields: schemas,\n    }\n}\n\n// wraps a schema into an array\nexport function arraySchema(schema: string | DTDLSchema): DTDLSchema {\n    return {\n        \"@type\": \"Array\",\n        elementSchema: schema,\n    }\n}\n\nexport interface DTDLNode {\n    \"@type\"?: string\n    \"@id\"?: string\n    // 1-64 characters\n    // ^[a-zA-Z](?:[a-zA-Z0-9_]*[a-zA-Z0-9])?$\n    name?: string\n    displayName?: string\n    description?: string\n}\n\nexport interface DTDLSchema extends DTDLNode {\n    fields?: DTDLSchema[]\n    schema?: string | DTDLSchema\n    elementSchema?: string | DTDLSchema\n}\n\nexport interface DTDLContent extends DTDLNode {\n    \"@type\": \"Property\" | \"Command\" | \"Component\" | \"Interface\"\n    unit?: string\n    schema?: string | DTDLSchema\n}\n\nexport interface DTDLInterface extends DTDLContent {\n    contents: DTDLContent[]\n    extends?: string | string[]\n    schemas?: (DTDLSchema | DTDLInterface)[]\n    \"@context\"?: string\n}\n\nexport function escapeName(name: string) {\n    name = name.trim().replace(/[^a-zA-Z0-9_]/g, \"_\")\n    if (!/^[a-zA-Z]/.test(name)) name = \"a\" + name\n    name = name[0].toLowerCase() + name.slice(1)\n    return name.slice(0, 64)\n}\n\nexport function escapeDisplayName(name: string) {\n    return name.slice(0, 64)\n}\n\nexport function DTDLUnits() {\n    return [\n        \"metrePerSecondSquared\",\n        \"centimetrePerSecondSquared\",\n        \"gForce\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radianPerSecondSquared\",\n        \"radianPerSecond\",\n        \"degreePerSecond\",\n        \"revolutionPerSecond\",\n        \"revolutionPerMinute\",\n        \"squareMetre\",\n        \"squareCentimetre\",\n        \"squareMillimetre\",\n        \"squareKilometre\",\n        \"hectare\",\n        \"squareFoot\",\n        \"squareInch\",\n        \"acre\",\n        \"farad\",\n        \"millifarad\",\n        \"microfarad\",\n        \"nanofarad\",\n        \"picofarad\",\n        \"ampere\",\n        \"microampere\",\n        \"milliampere\",\n        \"bitPerSecond\",\n        \"kibibitPerSecond\",\n        \"mebibitPerSecond\",\n        \"gibibitPerSecond\",\n        \"tebibitPerSecond\",\n        \"exbibitPerSecond\",\n        \"zebibitPerSecond\",\n        \"yobibitPerSecond\",\n        \"bytePerSecond\",\n        \"kibibytePerSecond\",\n        \"mebibytePerSecond\",\n        \"gibibytePerSecond\",\n        \"tebibytePerSecond\",\n        \"exbibytePerSecond\",\n        \"zebibytePerSecond\",\n        \"yobibytePerSecond\",\n        \"bit\",\n        \"kibibit\",\n        \"mebibit\",\n        \"gibibit\",\n        \"tebibit\",\n        \"exbibit\",\n        \"zebibit\",\n        \"yobibit\",\n        \"byte\",\n        \"kibibyte\",\n        \"mebibyte\",\n        \"gibibyte\",\n        \"tebibyte\",\n        \"exbibyte\",\n        \"zebibyte\",\n        \"yobibyte\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"coulomb\",\n        \"joule\",\n        \"kilojoule\",\n        \"megajoule\",\n        \"gigajoule\",\n        \"electronvolt\",\n        \"megaelectronvolt\",\n        \"kilowattHour\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"hertz\",\n        \"kilohertz\",\n        \"megahertz\",\n        \"gigahertz\",\n        \"kilogramPerCubicMetre\",\n        \"gramPerCubicMetre\",\n        \"lux\",\n        \"footcandle\",\n        \"henry\",\n        \"millihenry\",\n        \"microhenry\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"radian\",\n        \"degreeOfArc\",\n        \"minuteOfArc\",\n        \"secondOfArc\",\n        \"turn\",\n        \"metre\",\n        \"centimetre\",\n        \"millimetre\",\n        \"micrometre\",\n        \"nanometre\",\n        \"kilometre\",\n        \"foot\",\n        \"inch\",\n        \"mile\",\n        \"nauticalMile\",\n        \"astronomicalUnit\",\n        \"candelaPerSquareMetre\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"lumen\",\n        \"candela\",\n        \"weber\",\n        \"maxwell\",\n        \"tesla\",\n        \"kilogram\",\n        \"gram\",\n        \"milligram\",\n        \"microgram\",\n        \"tonne\",\n        \"slug\",\n        \"gramPerSecond\",\n        \"kilogramPerSecond\",\n        \"gramPerHour\",\n        \"kilogramPerHour\",\n        \"watt\",\n        \"microwatt\",\n        \"milliwatt\",\n        \"kilowatt\",\n        \"megawatt\",\n        \"gigawatt\",\n        \"horsepower\",\n        \"kilowattHourPerYear\",\n        \"pascal\",\n        \"kilopascal\",\n        \"bar\",\n        \"millibar\",\n        \"millimetresOfMercury\",\n        \"poundPerSquareInch\",\n        \"inchesOfMercury\",\n        \"inchesOfWater\",\n        \"unity percent\",\n        \"ohm\",\n        \"milliohm\",\n        \"kiloohm\",\n        \"megaohm\",\n        \"decibel\",\n        \"bel\",\n        \"kelvin\",\n        \"degreeCelsius\",\n        \"degreeFahrenheit\",\n        \"newton\",\n        \"pound\",\n        \"ounce\",\n        \"ton\",\n        \"second\",\n        \"millisecond\",\n        \"microsecond\",\n        \"nanosecond\",\n        \"minute\",\n        \"hour\",\n        \"day\",\n        \"year\",\n        \"newtonMetre\",\n        \"metrePerSecond\",\n        \"centimetrePerSecond\",\n        \"kilometrePerSecond\",\n        \"metrePerHour\",\n        \"kilometrePerHour\",\n        \"milePerHour\",\n        \"milePerSecond\",\n        \"knot\",\n        \"volt\",\n        \"millivolt\",\n        \"microvolt\",\n        \"kilovolt\",\n        \"megavolt\",\n        \"cubicMetre\",\n        \"cubicCentimetre\",\n        \"litre\",\n        \"millilitre\",\n        \"cubicFoot\",\n        \"cubicInch\",\n        \"fluidOunce\",\n        \"gallon\",\n        \"litrePerSecond\",\n        \"millilitrePerSecond\",\n        \"litrePerHour\",\n        \"millilitrePerHour\",\n    ].sort()\n}\n","export interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    roles?: string[]\n    errors?: VMError[]\n}\n\nexport interface VMRole {\n    role: string\n    serviceShortId: string\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport type VMFunctionNames =\n    | \"awaitEvent\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitCondition\"\n    | \"wait\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"halt\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"watch\"\n\nexport const VMFunctions: jdtest.TestFunctionDescription[] = [\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleConnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is connected`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleDisconnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is disconnected`,\n        context: \"command\",\n    },\n]\n","import { serviceSpecificationFromName } from \"../jdom/spec\"\nimport {\n    VMBase,\n    VMCommand,\n    VMError,\n    VMHandler,\n    VMIfThenElse,\n    VMProgram,\n    VMFunctions\n} from \"./ir\"\nimport {\n    VMChecker,\n    SpecSymbolResolver,\n} from \"../../jacdac-spec/spectool/jdutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram(prog: VMProgram) {\n    let newProgram: VMProgram = { roles: prog.roles.slice(0), handlers: [] }\n    newProgram.handlers = prog.handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    const shortId = info.roles.find(pair => pair.role === role)\n    if (shortId) {\n        // must succeed\n        const def = serviceSpecificationFromName(shortId.serviceShortId)\n        assert(!!def, `service ${shortId.serviceShortId} not resolved`)\n        return def\n    } else {\n        const service = serviceSpecificationFromName(role)\n        return service\n    }\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[]\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    let currentId: string = undefined\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: currentId, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        symbolResolver.roles = []\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            h.roles = symbolResolver.roles\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors,\n    }\n}\n","const VOLUME_GAIN = 0.4\n\nexport interface ToneContext {\n    close: () => void\n    playTone: (frequency: number, duration: number) => void\n    setVolume: (vol: number) => void\n}\n\nexport function createToneContext(defaultVolume?: number): ToneContext {\n    try {\n        console.log(`create tone context`)\n        const ctx = new (window.AudioContext ||\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (window as any).webkitAudioContext)()\n\n        // play silence sound within onlick to unlock it\n        const buffer = ctx.createBuffer(1, 1, 22050)\n        const source = ctx.createBufferSource()\n        source.buffer = buffer\n        source.connect(ctx.destination)\n        source.start()\n\n        // output node with volume\n        const volume = ctx.createGain()\n        volume.connect(ctx.destination)\n        volume.gain.value =\n            (defaultVolume !== undefined ? defaultVolume : 0.2) * VOLUME_GAIN\n\n        const setVolume = (v: number) => {\n            if (volume && !isNaN(v)) {\n                volume.gain.value = v * VOLUME_GAIN\n            }\n        }\n\n        const playTone = (frequency: number, duration: number) => {\n            try {\n                const tone = ctx.createOscillator()\n                tone.type = \"sawtooth\"\n                tone.connect(volume)\n                tone.frequency.value = frequency // update frequency\n                tone.start() // start and stop\n                tone.stop(ctx.currentTime + duration / 1000)\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n\n        const close = () => {\n            try {\n                if (ctx.state === \"running\") ctx.close()\n            } catch (e) {\n                console.warn(e)\n            }\n        }\n\n        console.log(`tone context created`)\n\n        return {\n            setVolume,\n            playTone,\n            close,\n        }\n    } catch (e) {\n        return undefined\n    }\n}\n","import { useContext } from \"react\";\nimport { DeviceFilter, ServiceFilter } from \"../../../jacdac-ts/src/jdom/bus\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useChange from '../../jacdac/useChange';\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, b => b.services(options), [\n        JSON.stringify(options),\n    ])\n    return services\n}","import { Box, BoxProps, Paper, PaperProps, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function PaperBox(props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps) {\n    const { children, padding, elevation, bgcolor, ...others } = props;\n    const theme = useTheme();\n\n    return <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n        <Paper square elevation={elevation}>\n            {padding !== 0 && <Box p={theme.spacing(padding || 0.25)}>\n                {children}\n            </Box>}\n            {padding === 0 && children}\n        </Paper>\n    </Box>\n}","import React, { lazy, ReactNode } from \"react\"\nimport { createToneContext, ToneContext } from \"../../hooks/toneContext\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, {\n    ReactFieldJSON,\n    toShadowDefinition,\n    UNMOUNT,\n} from \"./ReactField\"\nconst PianoWidget = lazy(() => import(\"../../widgets/PianoWidget\"))\n\nexport default class NoteField extends ReactField<number> {\n    static KEY = \"jacdac_field_note\"\n    static SHADOW = toShadowDefinition(NoteField)\n    toneContext: ToneContext\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NoteField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options)\n        this.events.on(UNMOUNT, () => {\n            this.toneContext?.close()\n            this.toneContext = undefined\n        })\n    }\n\n    get defaultValue() {\n        return 440\n    }\n\n    getText_() {\n        return (this.value | 0) + \"\"\n    }\n\n    renderField(): ReactNode {\n        const handlePlayTone = async (newFrequency: number) => {\n            this.value = newFrequency\n            if (!this.toneContext) this.toneContext = createToneContext()\n            this.toneContext?.playTone(newFrequency, 400)\n        }\n        return (\n            <Suspense>\n                <PianoWidget playTone={handlePlayTone} />\n            </Suspense>\n        )\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { HidKeyboardModifiers } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport ReactField, { ReactFieldJSON } from \"./ReactField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { renderKeyboardKey } from \"../../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst KeyboardKeyInput = lazy(() => import(\"../../ui/KeyboardKeyInput\"))\n\nexport interface KeyboardFieldValue {\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nexport default class KeyboardKeyField extends ReactField<KeyboardFieldValue> {\n    static KEY = \"jacdac_field_keyboard_key\"\n\n    static fromJson(options: ReactFieldJSON) {\n        return new KeyboardKeyField(options?.value, undefined, options)\n    }\n\n    get defaultValue() {\n        return { selector: 4, modifiers: 0 }\n    }\n\n    getText_() {\n        const { selector, modifiers } = this.value\n        return renderKeyboardKey(selector, modifiers, true)\n    }\n\n    renderField(): ReactNode {\n        const { selector, modifiers } = this.value\n        const handleChange = (\n            newSelector: number,\n            newModifiers: HidKeyboardModifiers\n        ) => {\n            this.value = { selector: newSelector, modifiers: newModifiers }\n        }\n        return (\n            <Suspense>\n                <KeyboardKeyInput\n                    initialSelector={selector}\n                    initialModifiers={modifiers}\n                    onChange={handleChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction mkTitle(txt: string): SVGTitleElement {\n    const t = <SVGTitleElement>elt(\"title\")\n    t.textContent = txt\n    return t\n}\nexport function title(el: SVGElement, txt: string): SVGTitleElement {\n    const t = mkTitle(txt)\n    el.appendChild(t)\n    return t\n}\n\nexport function hydrate(el: SVGElement, props: any) {\n    for (const k in props) {\n        if (k == \"title\") {\n            title(el, props[k])\n        } else el.setAttributeNS(null, k, props[k])\n    }\n}\n\nexport function elt(name: string, props?: any): SVGElement {\n    const el = document.createElementNS(\"http://www.w3.org/2000/svg\", name)\n    if (props) hydrate(el, props)\n    return el\n}\n\nexport function child(parent: Element, name: string, props?: any): SVGElement {\n    const el = elt(name, props)\n    parent.appendChild(el)\n    return el\n}\n","import ReactField from \"./ReactField\"\nimport Blockly from \"blockly\"\nimport { child } from \"../../widgets/svg\"\n\nexport default class ReactImageField<T> extends ReactField<T> {\n    constructor(value: string, width = 32, height = 32) {\n        super(value, undefined, undefined, { width, height })\n    }\n\n    setSize(width: number, height: number) {\n        this.size_ = new Blockly.utils.Size(width, height)\n        const img = this.view as SVGImageElement\n        if (img) {\n            img.setAttribute(\"width\", width + \"\")\n            img.setAttribute(\"height\", height + \"\")\n        }\n    }\n\n    protected updateView() {\n        const imgUri = this.renderValue()\n        const img = this.view as SVGImageElement\n        if (imgUri) {\n            img?.setAttributeNS(\n                \"http://www.w3.org/1999/xlink\",\n                \"xlink:href\",\n                imgUri\n            )\n            img?.setAttribute(\"alt\", this.getText())\n        }\n    }\n\n    /**\n     * Renders the value to a data uri string\n     */\n    protected renderValue(): string {\n        return undefined\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        return child(this.fieldGroup_, \"image\", {\n            height,\n            width,\n            alt: this.getText(),\n        }) as SVGImageElement\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { fromHex, toHex } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, VALUE_CHANGE } from \"./ReactField\"\nimport ReactImageField from \"./ReactImageField\"\nconst LEDMatrixWidget = lazy(() => import(\"../../widgets/LEDMatrixWidget\"))\n\nexport interface LEDMatrixFieldValue {\n    // hex data\n    leds: string\n    rows: number\n    columns: number\n}\n\nexport default class LEDMatrixField extends ReactImageField<LEDMatrixFieldValue> {\n    static KEY = \"jacdac_field_led_matrix\"\n\n    constructor(value: string) {\n        super(value)\n\n        this.events.on(VALUE_CHANGE, () => {\n            const { rows, columns } = this.value\n            this.setSize(32, (32 / columns) * rows)    \n        })\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDMatrixField(options?.value)\n    }\n\n    get defaultValue() {\n        return {\n            leds: toHex(new Uint8Array(4)),\n            rows: 5,\n            columns: 5,\n        }\n    }\n\n    getText_() {\n        const { leds, rows, columns } = this.value\n        return `${leds} (${rows}x${columns})`\n    }\n\n    renderValue(): string {\n        const { leds, rows, columns } = this.value\n        // render current state to LEDmatrix field\n        const columnspadded = columns + (8 - (columns % 8))\n        const ledsBytes = fromHex(leds)\n        const cvs = document.createElement(\"canvas\")\n        const b = 3\n        const pw = 8\n        const ph = 8\n        const w = rows * pw + (rows - 1) * b\n        const h = columns * ph + (columns - 1) * b\n        cvs.width = w + 2 * b\n        cvs.height = h + 2 * b\n        const ctx = cvs.getContext(\"2d\")\n        ctx.fillStyle = \"#444\"\n        ctx.fillRect(b, b, w, h)\n        ctx.fillStyle = \"blue\"\n        for (let x = 0; x < columns; ++x) {\n            for (let y = 0; y < rows; ++y) {\n                const bitindex = y * columnspadded + x\n                const byte = ledsBytes[bitindex >> 3]\n                const bit = bitindex % 8\n                const on = 1 === ((byte >> bit) & 1)\n                ctx.fillStyle = on ? \"#ffc400\" : \"#000\"\n                ctx.fillRect(x * (pw + b) + b, y * (ph + b) + b, pw, ph)\n            }\n        }\n        const dataUri = cvs.toDataURL(\"image/png\")\n        return dataUri\n    }\n\n    renderField(): ReactNode {\n        const { leds, rows, columns } = this.value\n        const ledsBytes = fromHex(leds)\n        const onChange = (newLeds: Uint8Array) =>\n            (this.value = {\n                leds: toHex(newLeds),\n                rows,\n                columns,\n            })\n        return (\n            <Suspense>\n                <LEDMatrixWidget\n                    color=\"secondary\"\n                    brightness={1}\n                    leds={ledsBytes}\n                    rows={rows}\n                    columns={columns}\n                    onChange={onChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","import { Grid, Slider } from \"@material-ui/core\"\nimport React, { ReactNode, useContext } from \"react\"\nimport ReactField from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nfunction FieldWithSlider(props: { children: ReactNode }) {\n    const { children } = props\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    const handleChange = async (ev: unknown, nv: number | number[]) => {\n        const newValue = nv as number\n        onValueChange(newValue)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n            <Grid item xs={12}>\n                <Slider\n                    color=\"secondary\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={`${Math.round(value)}°`}\n                    min={-90}\n                    max={90}\n                    step={5}\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"angle\"\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class SliderField extends ReactField<number> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(value: string, options?: any) {\n        super(value, undefined, options)\n    }\n\n    get defaultValue() {\n        return 0\n    }\n\n    getText_() {\n        return this.value + \"\"\n    }\n\n    renderField(): ReactNode {\n        return <FieldWithSlider>{this.renderWidget()}</FieldWithSlider>\n    }\n\n    renderWidget(): ReactNode {\n        return null\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport SliderField from \"./SliderField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst ServoWidget = lazy(() => import(\"../../widgets/ServoWidget\"))\n\nfunction ServiceFieldWidget() {\n    const { value } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <ServoWidget\n                angle={value}\n                offset={0}\n                color=\"secondary\"\n                enabled={true}\n            />\n        </Suspense>\n    )\n}\n\nexport default class ServoAngleField extends SliderField {\n    static KEY = \"jacdac_field_servo_angle\"\n    static SHADOW = toShadowDefinition(ServoAngleField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ServoAngleField(options?.value, options)\n    }\n\n    getText_() {\n        return this.value + \"°\"\n    }\n\n    renderWidget(): ReactNode {\n        return <ServiceFieldWidget />\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport { rgbToHtmlColor } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { child } from \"../../widgets/svg\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst LEDWidget = lazy(() => import(\"../../widgets/LEDWidget\"))\n\nfunction LEDColorFieldWidget() {\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <LEDWidget\n                ledColor={value}\n                onLedColorChange={onValueChange}\n                ledCount={3}\n                color=\"secondary\"\n            />\n        </Suspense>\n    )\n}\n\nexport default class LEDColorField extends ReactField<number> {\n    static KEY = \"jacdac_field_led_color\"\n    static SHADOW = toShadowDefinition(LEDColorField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDColorField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 28, height: 28 })\n    }\n\n    protected initCustomView() {\n        const { width } = this.size_\n        const r = width >> 1\n        return child(this.fieldGroup_, \"circle\", {\n            r: width >> 1,\n            cx: r,\n            cy: r,\n            strokeWidth: 2,\n            stroke: \"#777\",\n        }) as SVGCircleElement\n    }\n\n    updateView() {\n        const c = rgbToHtmlColor(this.value)\n        const circle = this.view as SVGCircleElement\n        if (c) {\n            circle?.setAttribute(\"fill\", c)\n        }\n    }\n\n    getText_() {\n        return rgbToHtmlColor(this.value)\n    }\n\n    renderField(): ReactNode {\n        return <LEDColorFieldWidget />\n    }\n}\n","import React, { ReactNode } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactField from \"./ReactField\"\nimport { child } from \"../../widgets/svg\"\nimport DarkModeProvider from \"../../ui/DarkModeProvider\"\nimport { IdProvider } from \"react-use-id-hook\"\nimport JacdacProvider from \"../../../jacdac/Provider\"\nimport AppTheme from \"../../ui/AppTheme\"\nimport Blockly, { Block } from \"blockly\"\nimport { WorkspaceProvider } from \"../WorkspaceContext\"\n\nexport default class ReactInlineField extends ReactField<unknown> {\n    protected container: HTMLDivElement\n    protected resizeObserver: ResizeObserver\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 1, height: 1 })\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"14rem\"\n        return c\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        const fo = child(this.fieldGroup_, \"foreignObject\", {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        }) as SVGForeignObjectElement\n\n        this.container = this.createContainer()\n        fo.appendChild(this.container)\n\n        this.resizeObserver = new ResizeObserver(\n            (entries: ResizeObserverEntry[]) => {\n                const entry = entries[0]\n                const { contentRect } = entry\n                this.size_.width = contentRect.width\n                this.size_.height = contentRect.height\n                fo.setAttribute(\"width\", this.size_.width + \"\")\n                fo.setAttribute(\"height\", this.size_.height + \"\")\n                this.forceRerender()\n            }\n        )\n        this.resizeObserver.observe(this.container)\n\n        ReactDOM.render(this.renderBlock(), this.container)\n        return fo\n    }\n\n    dispose() {\n        if (this.container) {\n            ReactDOM.unmountComponentAtNode(this.container)\n            this.container = undefined\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect()\n            this.resizeObserver = undefined\n        }\n        super.dispose()\n    }\n\n    renderField(): ReactNode {\n        return <div>not used</div>\n    }\n\n    renderInlineField(): ReactNode {\n        return null\n    }\n\n    renderBlock(): ReactNode {\n        return (\n            <WorkspaceProvider field={this}>\n                <DarkModeProvider fixedDarkMode=\"dark\">\n                    <IdProvider>\n                        <JacdacProvider>\n                            <AppTheme>{this.renderInlineField()}</AppTheme>\n                        </JacdacProvider>\n                    </IdProvider>\n                </DarkModeProvider>\n            </WorkspaceProvider>\n        )\n    }\n\n    getText_() {\n        return \"...\"\n    }\n\n    // don't bind any mouse event\n    bindEvents_() {\n        Blockly.Tooltip.bindMouseEvents(this.getClickTarget_())\n    }\n}\n","import React, { useContext } from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { startServiceProviderFromServiceClass } from \"../../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport { serviceSpecificationFromName } from \"../../../../jacdac-ts/src/jdom/spec\"\nimport { Alert } from \"@material-ui/lab\"\n\nexport default function NoServiceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { roleService, roleServiceShortId, flyout } =\n        useContext(WorkspaceContext)\n    const spec = serviceSpecificationFromName(roleServiceShortId)\n    const handleStartSimulator = () =>\n        startServiceProviderFromServiceClass(bus, spec.classIdentifier)\n\n    // nothing to do here\n    if (roleService || flyout) return null\n\n    // unresolved, unknown service\n    if (!roleService && !roleServiceShortId) return null\n\n    // unknown spec\n    if (!spec) return <Alert severity=\"warning\">Unknown service</Alert>\n\n    return (\n        <Button\n            variant=\"outlined\"\n            color=\"default\"\n            startIcon={<AddIcon />}\n            onClick={handleStartSimulator}\n        >\n            start {spec.name}\n        </Button>\n    )\n}\n","import React, { PointerEvent, ReactNode } from \"react\"\n\nexport function PointerBoundary(props: {\n    className?: string\n    children: ReactNode\n}) {\n    const { className, children } = props\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n    return (\n        <div\n            className={className}\n            style={{ cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {children}\n        </div>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Grid } from \"@material-ui/core\"\nimport DashboardServiceWidget from \"../../dashboard/DashboardServiceWidget\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport NoServiceAlert from \"./NoServiceAlert\"\nimport { PointerBoundary } from \"./PointerBoundary\"\n\nfunction TwinWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"center\"\n            justify=\"center\"\n            spacing={1}\n        >\n            <Grid item>\n                <PointerBoundary>\n                    <DashboardServiceWidget\n                        service={roleService}\n                        visible={true}\n                        variant=\"icon\"\n                    />\n                </PointerBoundary>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class TwinField extends ReactInlineField {\n    static KEY = \"jacdac_field_twin\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new TwinField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <TwinWidget />\n    }\n}\n","import React, { lazy, useContext, PointerEvent } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport Suspense from \"../../ui/Suspense\"\nimport NoServiceAlert from \"./NoServiceAlert\"\n\nconst JDomServiceTreeView = lazy(\n    () => import(\"../../tools/JDomServiceTreeView\")\n)\n\nfunction JDomTreeWidget() {\n    const { roleService, flyout } = useContext(WorkspaceContext)\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <div\n            style={{ minWidth: \"12rem\", cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {roleService && (\n                <Suspense>\n                    <JDomServiceTreeView\n                        service={roleService}\n                        defaultExpanded={[roleService.id]}\n                    />\n                </Suspense>\n            )}\n        </div>\n    )\n}\n\nexport default class JDomTreeField extends ReactInlineField {\n    static KEY = \"jacdac_jdom_service_tree\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new JDomTreeField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <JDomTreeWidget />\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Box, Grid, Switch, Typography, useTheme } from \"@material-ui/core\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport { WatchValueType } from \"../../../../jacdac-ts/src/vm/runner\"\nimport { VM_WATCH_CHANGE } from \"../../../../jacdac-ts/src/vm/utils\"\nimport { roundWithPrecision } from \"../../../../jacdac-ts/src/jdom/utils\"\n\nfunction WatchValueWidget() {\n    const { runner, sourceId } = useContext(WorkspaceContext)\n    const theme = useTheme()\n\n    // track changes\n    const [value, setValue] = useState<WatchValueType>(\n        runner?.lookupWatch(sourceId)\n    )\n    useEffect(() => {\n        setValue(undefined)\n        return runner?.subscribe(VM_WATCH_CHANGE, watchSourceId => {\n            if (watchSourceId === sourceId) {\n                const newValue = runner.lookupWatch(sourceId)\n                setValue(newValue)\n            }\n        })\n    }, [runner, sourceId])\n\n    let valueNumber = typeof value === \"number\" ? (value as number) : undefined\n    if (!isNaN(valueNumber)) {\n        const step = Math.ceil(Math.abs(valueNumber)) / 10\n        const precision = step < 1 ? Math.ceil(-Math.log10(step)) : 0\n        valueNumber = roundWithPrecision(valueNumber, precision)\n    }\n\n    return (\n        <Box\n            bgcolor={theme.palette.background.paper}\n            borderRadius={theme.spacing(1)}\n            color={theme.palette.text.primary}\n        >\n            <Grid\n                container\n                alignItems=\"flex-end\"\n                alignContent=\"center\"\n                justify=\"center\"\n                spacing={1}\n            >\n                <Grid item>\n                    <PointerBoundary>\n                        {!isNaN(valueNumber) ? (\n                            <Typography variant=\"body1\">\n                                {valueNumber}\n                            </Typography>\n                        ) : typeof value === \"boolean\" ? (\n                            <Switch value={!!value} />\n                        ) : (\n                            <Typography variant=\"body1\">\n                                {value === undefined ? \"...\" : value + \"\"}\n                            </Typography>\n                        )}\n                    </PointerBoundary>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default class WatchValueField extends ReactInlineField {\n    static KEY = \"jacdac_watch_value\"\n    static EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new WatchValueField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"4rem\"\n        return c\n    }\n\n    renderInlineField() {\n        return <WatchValueWidget />\n    }\n}\n","import Blockly from \"blockly\"\nimport NoteField from \"./NoteField\"\nimport KeyboardKeyField from \"./KeyboardKeyField\"\nimport LEDMatrixField from \"./LEDMatrixField\"\nimport ServoAngleField from \"./ServoAngleField\"\nimport { BlockDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport LEDColorField from \"./LEDColorField\"\nimport TwinField from \"./TwinField\"\nimport JDomTreeField from \"./JDomTreeField\"\nimport WatchValueField from \"./WatchValueField\"\n\nlet reactFieldShadows: BlockDefinition[]\nexport function registerFields() {\n    if (reactFieldShadows) return\n\n    reactFieldShadows = []\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const registerType = (fieldType: any) => {\n        const key = fieldType.KEY\n        assert(!!key)\n        Blockly.fieldRegistry.unregister(key) // hot reload issues\n        Blockly.fieldRegistry.register(key, fieldType)\n        if (fieldType.SHADOW) reactFieldShadows.push(fieldType.SHADOW)\n    }\n    const fieldTypes = [\n        KeyboardKeyField,\n        NoteField,\n        LEDMatrixField,\n        ServoAngleField,\n        LEDColorField,\n        TwinField,\n        JDomTreeField,\n        WatchValueField,\n    ]\n    fieldTypes.forEach(registerType)\n}\n\nexport function fieldShadows() {\n    registerFields()\n    return reactFieldShadows.slice(0)\n}\n","import Blockly from \"blockly\"\nimport { useEffect, useMemo } from \"react\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_HID_KEYBOARD,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_LED_MATRIX,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SystemEvent,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    humanify,\n    isNumericType,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    isSensor,\n    serviceSpecifications,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"../hooks/useServices\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { Theme, useTheme } from \"@material-ui/core\"\nimport { withPrefix } from \"gatsby-link\"\nimport { fieldShadows, registerFields } from \"./fields/fields\"\nimport KeyboardKeyField from \"./fields/KeyboardKeyField\"\nimport LEDMatrixField from \"./fields/LEDMatrixField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    ButtonDefinition,\n    CategoryDefinition,\n    ColorInputDefnition,\n    CommandBlockDefinition,\n    CONNECTED_BLOCK,\n    CONNECTION_BLOCK,\n    CustomBlockDefinition,\n    DEVICE_TWIN_DEFINITION_BLOCK,\n    DEVICE_TWIN_PROPERTY_BLOCK,\n    DEVICE_TWIN_PROPERTY_TYPE,\n    DEVICE_TWIN_VALUE_TYPE,\n    DummyInputDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    INSPECT_BLOCK,\n    LOG_BLOCK,\n    NEW_PROJET_XML,\n    NumberInputDefinition,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    REPEAT_EVERY_BLOCK,\n    resolveServiceBlockDefinition,\n    SeparatorDefinition,\n    ServiceBlockDefinition,\n    ServiceBlockDefinitionFactory,\n    SET_STATUS_LIGHT_BLOCK,\n    StatementInputDefinition,\n    TextInputDefinition,\n    ToolboxConfiguration,\n    TWIN_BLOCK,\n    ValueInputDefinition,\n    VariableInputDefinition,\n    WAIT_BLOCK,\n    WATCH_BLOCK,\n} from \"./toolbox\"\nimport NoteField from \"./fields/NoteField\"\nimport ServoAngleField from \"./fields/ServoAngleField\"\nimport LEDColorField from \"./fields/LEDColorField\"\nimport TwinField from \"./fields/TwinField\"\nimport JDomTreeField from \"./fields/JDomTreeField\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport WatchValueField from \"./fields/WatchValueField\"\nimport { DTDLUnits } from \"../../../jacdac-ts/src/azure-iot/dtdl\"\n\n// overrides blockly emboss filter for svg elements\nBlockly.BlockSvg.prototype.setHighlighted = function (highlighted) {\n    if (!this.rendered) {\n        return\n    }\n    if (highlighted) {\n        this.addSelect()\n    } else {\n        this.removeSelect()\n    }\n}\n\ntype CachedBlockDefinitions = {\n    blocks: BlockDefinition[]\n    serviceBlocks: ServiceBlockDefinition[]\n    eventFieldBlocks: EventFieldDefinition[]\n    azureIoTHubBlocks: BlockDefinition[]\n    deviceTwinsBlocks: BlockDefinition[]\n    services: jdspec.ServiceSpec[]\n}\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return isBooleanField(field)\n        ? \"Boolean\"\n        : isStringField(field)\n        ? \"String\"\n        : isNumericType(field)\n        ? \"Number\"\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n]\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\nconst includedRegisters = [\n    SystemReg.Reading,\n    SystemReg.Value,\n    SystemReg.Intensity,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\nfunction createBlockTheme(theme: Theme) {\n    const sensorColor = theme.palette.success.main\n    const otherColor = theme.palette.info.main\n    const commandColor = theme.palette.warning.main\n    const debuggerColor = theme.palette.grey[600]\n    const azureIoTHubColor = theme.palette.error.main\n    const deviceTwinColor = theme.palette.error.light\n    const serviceColor = (srv: jdspec.ServiceSpec) =>\n        isSensor(srv) ? sensorColor : otherColor\n    return {\n        serviceColor,\n        sensorColor,\n        commandColor,\n        debuggerColor,\n        otherColor,\n        azureIoTHubColor,\n        deviceTwinColor,\n    }\n}\n\nconst codeStatementType = \"Code\"\nconst deviceTwinContentType = \"DeviceTwinContent\"\nconst deviceTwinCommonOptionType = \"DeviceTwinCommonOption\"\nconst deviceTwinPropertyOptionType = \"DeviceTwinPropertyOption\"\nconst deviceTwinStatementType = [deviceTwinContentType]\nconst deviceTwinCommonOptionStatementType = [deviceTwinCommonOptionType]\nconst deviceTwinPropertyOptionStatementType = [\n    deviceTwinPropertyOptionType,\n    ...deviceTwinCommonOptionStatementType,\n]\n\nfunction loadBlocks(\n    serviceColor: (srv: jdspec.ServiceSpec) => string,\n    commandColor: string,\n    debuggerColor: string,\n    azureIoTHubColor: string,\n    deviceTwinColor: string\n): CachedBlockDefinitions {\n    // blocks\n    const customShadows = [\n        {\n            serviceClass: SRV_SERVO,\n            kind: \"rw\",\n            identifier: ServoReg.Angle,\n            field: \"_\",\n            shadow: <BlockDefinition>{\n                kind: \"block\",\n                type: ServoAngleField.SHADOW.type,\n            },\n        },\n        {\n            serviceClass: SRV_BUZZER,\n            kind: \"command\",\n            identifier: BuzzerCmd.PlayNote,\n            field: \"frequency\",\n            shadow: <BlockDefinition>{\n                kind: \"block\",\n                type: NoteField.SHADOW.type,\n            },\n        },\n    ]\n    const lookupCustomShadow = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ) =>\n        customShadows.find(\n            cs =>\n                cs.serviceClass === service.classIdentifier &&\n                cs.kind == info.kind &&\n                cs.identifier === info.identifier &&\n                cs.field == field.name\n        )?.shadow\n\n    const serviceHelp = (service: jdspec.ServiceSpec) =>\n        withPrefix(`/services/${service.shortId}`)\n    const fieldsSupported = (pkt: jdspec.PacketInfo) =>\n        pkt.fields.every(toBlocklyType)\n    const fieldName = (reg: jdspec.PacketInfo, field: jdspec.PacketMember) =>\n        field.name === \"_\" ? reg.name : field.name\n    const fieldToShadow = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ): BlockReference =>\n        lookupCustomShadow(service, info, field) ||\n        (isBooleanField(field)\n            ? { kind: \"block\", type: \"jacdac_on_off\" }\n            : isStringField(field)\n            ? { kind: \"block\", type: \"text\" }\n            : field.unit === \"°\"\n            ? {\n                  kind: \"block\",\n                  type: \"jacdac_angle\",\n              }\n            : field.unit === \"/\"\n            ? { kind: \"block\", type: \"jacdac_ratio\" }\n            : /^%/.test(field.unit)\n            ? { kind: \"block\", type: \"jacdac_percent\" }\n            : field.type === \"u8\"\n            ? { kind: \"block\", type: \"jacdac_byte\" }\n            : {\n                  kind: \"block\",\n                  type: \"math_number\",\n                  value: field.defaultValue || 0,\n                  min: field.typicalMin || field.absoluteMin,\n                  max: field.typicalMax || field.absoluteMax,\n              })\n    const variableName = (srv: jdspec.ServiceSpec) =>\n        `${humanify(srv.camelName).toLowerCase()} 1`\n    const fieldVariable = (\n        service: jdspec.ServiceSpec\n    ): VariableInputDefinition => ({\n        type: \"field_variable\",\n        name: \"role\",\n        variable: variableName(service),\n        variableTypes: [service.shortId],\n        defaultType: service.shortId,\n    })\n    const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n        info.fields.map(field => ({\n            type: \"input_value\",\n            name: fieldName(info, field),\n            check: toBlocklyType(field),\n        }))\n    const fieldsToValues = (\n        service: jdspec.ServiceSpec,\n        info: jdspec.PacketInfo\n    ) =>\n        toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n            info.fields,\n            field => fieldName(info, field),\n            field => fieldToShadow(service, info, field)\n        )\n    const fieldsToMessage = (info: jdspec.PacketInfo) =>\n        info.fields\n            .map((field, i) => `${humanify(field.name)} %${2 + i}`)\n            .join(\" \")\n    const isEnabledRegister = (info: jdspec.PacketInfo) =>\n        info.fields.length === 1 &&\n        info.fields[0].type === \"bool\" &&\n        info.name === \"enabled\"\n    const customMessage = (\n        srv: jdspec.ServiceSpec,\n        reg: jdspec.PacketInfo,\n        field: jdspec.PacketMember\n    ) =>\n        customMessages.find(\n            m =>\n                m.service === srv.classIdentifier &&\n                m.register === reg.identifier &&\n                m.field === field.name\n        )\n\n    const allServices = serviceSpecifications()\n    const supportedServices = allServices\n        .filter(\n            service =>\n                !/^_/.test(service.shortId) && service.status !== \"deprecated\"\n        )\n        .filter(service => ignoredServices.indexOf(service.classIdentifier) < 0)\n    const resolveService = (cls: number): jdspec.ServiceSpec[] =>\n        allServices.filter(srv => srv.classIdentifier === cls)\n    const registers = arrayConcatMany(\n        supportedServices.map(service =>\n            service.packets\n                .filter(\n                    pkt =>\n                        isRegister(pkt) &&\n                        !pkt.lowLevel &&\n                        includedRegisters.indexOf(pkt.identifier) > -1\n                )\n                .map(register => ({\n                    service,\n                    register,\n                }))\n        )\n    )\n    const events = supportedServices\n        .map(service => ({\n            service,\n            events: service.packets.filter(\n                pkt =>\n                    isEvent(pkt) &&\n                    !pkt.lowLevel &&\n                    ignoredEvents.indexOf(pkt.identifier) < 0\n            ),\n        }))\n        .filter(kv => !!kv.events.length)\n    const commands = arrayConcatMany(\n        supportedServices.map(service =>\n            service.packets\n                .filter(\n                    pkt =>\n                        isCommand(pkt) && !pkt.lowLevel && fieldsSupported(pkt)\n                )\n                .map(pkt => ({\n                    service,\n                    command: pkt,\n                }))\n        )\n    )\n\n    const customBlockDefinitions: CustomBlockDefinition[] = [\n        ...resolveService(SRV_LOGGER).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `log`, // do not rename\n                    message0: `log %1 with value %2`,\n                    args0: [\n                        <TextInputDefinition>{\n                            type: \"field_input\",\n                            name: \"message\",\n                        },\n                        <ValueInputDefinition>{\n                            type: \"input_value\",\n                            name: \"value\",\n                        },\n                    ],\n                    colour: commandColor,\n                    inputsInline: true,\n                    previousStatement: codeStatementType,\n                    nextStatement: codeStatementType,\n                    tooltip: `Logs a message and an optional value to the logger`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_HID_KEYBOARD).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `key`,\n                    message0: `send %1 key %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: KeyboardKeyField.KEY,\n                            name: \"combo\",\n                        },\n                    ],\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: codeStatementType,\n                    nextStatement: codeStatementType,\n                    tooltip: `Send a keyboard key combo`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    expression: `role.key(combo.selectors, combo.modifiers)`,\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_LED).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `fade`,\n                    message0: `fade %1 to %2 at speed %3`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: \"input_value\",\n                            name: \"color\",\n                            check: \"Number\",\n                        },\n                        {\n                            type: \"input_value\",\n                            name: \"speed\",\n                            check: \"Number\",\n                        },\n                    ],\n                    values: {\n                        color: {\n                            kind: \"block\",\n                            type: LEDColorField.SHADOW.type,\n                        },\n                        speed: {\n                            kind: \"block\",\n                            type: \"jacdac_ratio\",\n                            shadow: true,\n                        },\n                    },\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: codeStatementType,\n                    nextStatement: codeStatementType,\n                    tooltip: `Fade LED color`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    expression: `role.animate((color >> 16) & 0xff, (color >> 8) & 0xff, (color >> 0) & 0xff, speed * 0xff)`,\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_SEVEN_SEGMENT_DISPLAY).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `set_digits`,\n                    message0: `set %1 digits to %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: \"input_value\",\n                            name: \"digits\",\n                            check: \"Number\",\n                        },\n                    ],\n                    values: {\n                        digits: {\n                            kind: \"block\",\n                            type: \"math_number\",\n                        },\n                    },\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: codeStatementType,\n                    nextStatement: codeStatementType,\n                    tooltip: `Display a number of the screen`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    // encode digits\n                    template: \"custom\",\n                }\n        ),\n        ...resolveService(SRV_LED_MATRIX).map(\n            service =>\n                <CustomBlockDefinition>{\n                    kind: \"block\",\n                    type: `_show_leds`,\n                    message0: `show %1 leds %2`,\n                    args0: [\n                        fieldVariable(service),\n                        {\n                            type: LEDMatrixField.KEY,\n                            name: \"leds\",\n                        },\n                    ],\n                    colour: serviceColor(service),\n                    inputsInline: true,\n                    previousStatement: codeStatementType,\n                    nextStatement: codeStatementType,\n                    tooltip: `Display LEDs on the LED matrix`,\n                    helpUrl: serviceHelp(service),\n                    service,\n                    // encode digits\n                    template: \"custom\",\n                }\n        ),\n    ].map(def => {\n        def.type = `jacdac_custom_${def.service.shortId.toLowerCase()}_${\n            def.type\n        }`\n        return def\n    })\n\n    console.log(\"custom blocks\", customBlockDefinitions)\n\n    const eventBlocks = events.map<EventBlockDefinition>(\n        ({ service, events }) => ({\n            kind: \"block\",\n            type: `jacdac_events_${service.shortId}`,\n            message0: `on %1 %2`,\n            args0: [\n                fieldVariable(service),\n                <InputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"event\",\n                    options: events.map(event => [\n                        humanify(event.name),\n                        event.name,\n                    ]),\n                },\n            ],\n            colour: serviceColor(service),\n            inputsInline: true,\n            nextStatement: codeStatementType,\n            tooltip: `Events for the ${service.name} service`,\n            helpUrl: serviceHelp(service),\n            service,\n            events,\n            template: \"event\",\n        })\n    )\n\n    // generate accessor blocks for event data with numbers\n    const eventFieldBlocks = arrayConcatMany(\n        events.map(({ service, events }) =>\n            events\n                .filter(event => event.fields.filter(isNumericType).length > 0)\n                .map(event => ({ service, event }))\n                .map(\n                    ({ service, event }) =>\n                        <EventFieldDefinition>{\n                            kind: \"block\",\n                            type: `jacdac_event_field_${service.shortId}_${event.name}`,\n                            message0: `${event.name} %1`,\n                            args0: [\n                                <InputDefinition>{\n                                    type: \"field_dropdown\",\n                                    name: \"field\",\n                                    options: event.fields.map(field => [\n                                        humanify(field.name),\n                                        field.name,\n                                    ]),\n                                },\n                            ],\n                            colour: serviceColor(service),\n                            inputsInline: true,\n                            tooltip: `Data fields of the ${event.name} event`,\n                            helpUrl: serviceHelp(service),\n                            service,\n                            event,\n                            output: \"Number\",\n                            template: \"event_field\",\n                        }\n                )\n        )\n    )\n\n    const registerChangeByEventBlocks = registers\n        .filter(\n            ({ service }) =>\n                !service.packets.some(\n                    pkt =>\n                        isEvent(pkt) &&\n                        ignoredEvents.indexOf(pkt.identifier) < 0\n                )\n        )\n        .filter(\n            ({ register }) =>\n                register.fields.length === 1 &&\n                isNumericType(register.fields[0]) &&\n                register.identifier !== SystemReg.Intensity\n        )\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_change_by_events_${service.shortId}_${register.name}`,\n            message0: `on %1 ${humanify(register.name)} change by %2`,\n            args0: [\n                fieldVariable(service),\n                ...fieldsToFieldInputs(register),\n            ].filter(v => !!v),\n            values: fieldsToValues(service, register),\n            inputsInline: true,\n            nextStatement: codeStatementType,\n            colour: serviceColor(service),\n            tooltip: `Event raised when ${register.name} changes`,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n\n            template: \"register_change_event\",\n        }))\n\n    const [registerSimples, registerComposites] = splitFilter(\n        registers,\n        reg => reg.register.fields.length == 1\n    )\n    const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n        registerSimples,\n        ({ register }) => !!toBlocklyType(register.fields[0])\n    )\n    const registerSimplesGetBlocks =\n        registerSimpleTypes.map<RegisterBlockDefinition>(\n            ({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_simple_${service.shortId}_${register.name}`,\n                message0:\n                    customMessage(service, register, register.fields[0])?.get ||\n                    `%1 ${humanify(register.name)}`,\n                args0: [fieldVariable(service)],\n                inputsInline: true,\n                output: toBlocklyType(register.fields[0]),\n                colour: serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field: register.fields[0],\n\n                template: \"register_get\",\n            })\n        )\n    const registerSimpleEnumTypes = registerSimpleOthers\n        .filter(\n            ({ service, register }) => !!enumInfo(service, register.fields[0])\n        )\n        .map(({ service, register }) => ({\n            service,\n            register,\n            field: register.fields[0],\n            einfo: enumInfo(service, register.fields[0]),\n        }))\n    const registerCompositeEnumTypes = arrayConcatMany(\n        registerComposites.map(({ service, register }) =>\n            register.fields\n                .map(field => ({\n                    service,\n                    register,\n                    field,\n                    einfo: enumInfo(service, field),\n                }))\n                .filter(({ einfo }) => !!einfo)\n        )\n    )\n    const registerEnumGetBlocks = [\n        ...registerSimpleEnumTypes,\n        ...registerCompositeEnumTypes,\n    ].map<RegisterBlockDefinition>(({ service, register, field, einfo }) => ({\n        kind: \"block\",\n        type: `jacdac_get_enum_${service.shortId}_${register.name}_${field.name}`,\n        message0:\n            customMessage(service, register, field)?.get ||\n            `%1 ${humanify(register.name)}${\n                field.name === \"_\" ? \"\" : ` ${field.name}`\n            } %2`,\n        args0: [\n            fieldVariable(service),\n            <OptionsInputDefinition>{\n                type: \"field_dropdown\",\n                name: field.name,\n                options: Object.keys(einfo.members).map(member => [\n                    humanify(member),\n                    member,\n                ]),\n            },\n        ],\n        inputsInline: true,\n        output: \"Boolean\",\n        colour: serviceColor(service),\n        tooltip: register.description,\n        helpUrl: serviceHelp(service),\n        service,\n        register,\n        field,\n\n        template: \"register_get\",\n    }))\n\n    const registerNumericsGetBlocks = registerComposites\n        .filter(re => re.register.fields.some(isNumericType))\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_get_numerics_${service.shortId}_${register.name}`,\n            message0: `%1 ${humanify(register.name)}${\n                register.fields.length > 1 ? ` %2` : \"\"\n            }`,\n            args0: [\n                fieldVariable(service),\n                register.fields.length > 1\n                    ? <OptionsInputDefinition>{\n                          type: \"field_dropdown\",\n                          name: \"field\",\n                          options: register.fields\n                              .filter(f => isNumericType(f))\n                              .map(field => [\n                                  humanify(field.name),\n                                  fieldName(register, field),\n                              ]),\n                      }\n                    : undefined,\n            ].filter(v => !!v),\n            inputsInline: true,\n            output: \"Number\",\n            colour: serviceColor(service),\n            tooltip: register.description,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n\n            template: \"register_get\",\n        }))\n\n    const registerSetBlocks = registers\n        .filter(({ register }) => register.kind === \"rw\")\n        .filter(({ register }) => fieldsSupported(register))\n        .map<RegisterBlockDefinition>(({ service, register }) => ({\n            kind: \"block\",\n            type: `jacdac_set_${service.shortId}_${register.name}`,\n            message0: isEnabledRegister(register)\n                ? `set %1 %2`\n                : `set %1 ${register.name} to ${\n                      register.fields.length === 1\n                          ? \"%2\"\n                          : fieldsToMessage(register)\n                  }`,\n            args0: [fieldVariable(service), ...fieldsToFieldInputs(register)],\n            values: fieldsToValues(service, register),\n            inputsInline: true,\n            colour: serviceColor(service),\n            tooltip: register.description,\n            helpUrl: serviceHelp(service),\n            service,\n            register,\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n\n            template: \"register_set\",\n        }))\n\n    const commandBlocks = commands.map<CommandBlockDefinition>(\n        ({ service, command }) => ({\n            kind: \"block\",\n            type: `jacdac_command_${service.shortId}_${command.name}`,\n            message0: !command.fields.length\n                ? `${humanify(command.name)} %1`\n                : `${humanify(command.name)} %1 with ${fieldsToMessage(\n                      command\n                  )}`,\n            args0: [fieldVariable(service), ...fieldsToFieldInputs(command)],\n            values: fieldsToValues(service, command),\n            inputsInline: true,\n            colour: serviceColor(service),\n            tooltip: command.description,\n            helpUrl: serviceHelp(service),\n            service,\n            command,\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n\n            template: \"command\",\n        })\n    )\n\n    const serviceBlocks: ServiceBlockDefinition[] = [\n        ...eventBlocks,\n        ...registerChangeByEventBlocks,\n        ...registerSimplesGetBlocks,\n        ...registerEnumGetBlocks,\n        ...registerNumericsGetBlocks,\n        ...registerSetBlocks,\n        ...customBlockDefinitions,\n        ...commandBlocks,\n    ]\n\n    const shadowBlocks: BlockDefinition[] = [\n        ...fieldShadows(),\n        {\n            kind: \"block\",\n            type: `jacdac_on_off`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"enabled\", \"on\"],\n                        [\"disabled\", \"off\"],\n                    ],\n                },\n            ],\n            style: \"logic_blocks\",\n            output: \"Boolean\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_yes_no`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"yes\", \"on\"],\n                        [\"no\", \"off\"],\n                    ],\n                },\n            ],\n            style: \"logic_blocks\",\n            output: \"Boolean\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_time_picker`,\n            message0: `%1`,\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"value\",\n                    options: [\n                        [\"0.1\", \"0.1\"],\n                        [\"1\", \"1\"],\n                        [\"5\", \"5\"],\n                        [\"30\", \"30\"],\n                        [\"60\", \"60\"],\n                    ],\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_angle`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_angle\",\n                    name: \"value\",\n                    min: 0,\n                    max: 360,\n                    precision: 10,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_percent`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 100,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_byte`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 255,\n                    precision: 1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_ratio`,\n            message0: `%1`,\n            args0: [\n                <NumberInputDefinition>{\n                    type: \"field_slider\",\n                    name: \"value\",\n                    min: 0,\n                    max: 1,\n                    precision: 0.1,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Number\",\n        },\n        {\n            kind: \"block\",\n            type: `jacdac_color`,\n            message0: `%1`,\n            args0: [\n                <ColorInputDefnition>{\n                    type: \"field_colour\",\n                    name: \"col\",\n                    colour: \"#ff0000\",\n                    colourOptions: [\n                        \"#ff0000\",\n                        \"#ff8000\",\n                        \"#ffff00\",\n                        \"#ff9da5\",\n                        \"#00ff00\",\n                        \"#b09eff\",\n                        \"#00ffff\",\n                        \"#007fff\",\n                        \"#65471f\",\n                        \"#0000ff\",\n                        \"#7f00ff\",\n                        \"#ff0080\",\n                        \"#ff00ff\",\n                        \"#ffffff\",\n                        \"#999999\",\n                        \"#000000\",\n                    ],\n                    columns: 4,\n                },\n            ],\n            style: \"math_blocks\",\n            output: \"Color\",\n        },\n    ]\n\n    const runtimeBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: WAIT_BLOCK,\n            message0: \"wait %1 s\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"time\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n            colour: commandColor,\n            tooltip: \"Wait the desired time\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: CONNECTION_BLOCK,\n            message0: \"on %1 %2\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"any\",\n                    variableTypes: [\n                        \"client\",\n                        ...supportedServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"event\",\n                    options: [\n                        [\"connected\", \"connected\"],\n                        [\"disconnected\", \"disconnected\"],\n                    ],\n                },\n            ],\n            inputsInline: true,\n            nextStatement: codeStatementType,\n            colour: commandColor,\n            tooltip: \"Runs code when a role is connected or disconnected\",\n            helpUrl: \"\",\n            template: \"connection\",\n        },\n        {\n            kind: \"block\",\n            type: CONNECTED_BLOCK,\n            message0: \"%1 connected\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"any\",\n                    variableTypes: [\n                        \"client\",\n                        ...supportedServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n            ],\n            output: \"Boolean\",\n            inputsInline: true,\n            colour: commandColor,\n            tooltip: \"Runs code when a role is connected or disconnected\",\n            helpUrl: \"\",\n            template: \"connected\",\n        },\n        {\n            kind: \"block\",\n            type: SET_STATUS_LIGHT_BLOCK,\n            message0: \"set %1 status light to %2\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"all\",\n                    variableTypes: [\n                        \"client\",\n                        ...supportedServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"color\",\n                    check: \"Number\",\n                },\n            ],\n            values: {\n                color: {\n                    kind: \"block\",\n                    type: LEDColorField.SHADOW.type,\n                },\n            },\n            inputsInline: true,\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n            colour: commandColor,\n            tooltip: \"Sets the color on the status light\",\n            helpUrl: \"\",\n        },\n        {\n            kind: \"block\",\n            type: TWIN_BLOCK,\n            message0: `view %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...supportedServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: TwinField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: false,\n            tooltip: `Twin of the selected service`,\n            helpUrl: \"\",\n            template: \"twin\",\n        },\n        {\n            kind: \"block\",\n            type: INSPECT_BLOCK,\n            message0: `inspect %1 %2 %3`,\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"role\",\n                    variable: \"none\",\n                    variableTypes: [\n                        \"client\",\n                        ...supportedServices.map(service => service.shortId),\n                    ],\n                    defaultType: \"client\",\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <InputDefinition>{\n                    type: JDomTreeField.KEY,\n                    name: \"twin\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: false,\n            tooltip: `Inspect a service`,\n            helpUrl: \"\",\n            template: \"twin\",\n        },\n        {\n            kind: \"block\",\n            type: WATCH_BLOCK,\n            message0: `watch %1 %2`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"Number\", \"Boolean\", \"String\"],\n                },\n                <InputDefinition>{\n                    type: WatchValueField.KEY,\n                    name: \"watch\",\n                },\n            ],\n            colour: debuggerColor,\n            inputsInline: true,\n            tooltip: `Watch a value in the editor`,\n            helpUrl: \"\",\n            template: \"watch\",\n        },\n        {\n            kind: \"block\",\n            type: REPEAT_EVERY_BLOCK,\n            message0: `repeat every %1s`,\n            args0: [\n                <InputDefinition>{\n                    type: \"input_value\",\n                    name: \"interval\",\n                    check: \"Number\",\n                },\n            ],\n            colour: commandColor,\n            inputsInline: true,\n            tooltip: `Repeats code at a given interval in seconds`,\n            helpUrl: \"\",\n            template: \"every\",\n            nextStatement: codeStatementType,\n        },\n    ]\n\n    const mathBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: \"jacdac_math_arithmetic\",\n            message0: \"%1 %2 %3\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"A\",\n                    check: \"Number\",\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"%{BKY_MATH_ADDITION_SYMBOL}\", \"ADD\"],\n                        [\"%{BKY_MATH_SUBTRACTION_SYMBOL}\", \"MINUS\"],\n                        [\"%{BKY_MATH_MULTIPLICATION_SYMBOL}\", \"MULTIPLY\"],\n                        [\"%{BKY_MATH_DIVISION_SYMBOL}\", \"DIVIDE\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"B\",\n                    check: \"Number\",\n                },\n            ],\n            inputsInline: true,\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_ARITHMETIC_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_single\",\n            message0: \"%1 %2\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"OP\",\n                    options: [\n                        [\"-\", \"NEG\"],\n                        [\"%{BKY_MATH_SINGLE_OP_ABSOLUTE}\", \"ABS\"],\n                    ],\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"NUM\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            helpUrl: \"%{BKY_MATH_SINGLE_HELPURL}\",\n            extensions: [\"math_op_tooltip\"],\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random\",\n            message0: \"random\",\n            args0: [],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_random_range\",\n            message0: \"random from %1 to %2\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"min\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"max\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n            inputsInline: true,\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_clamp\",\n            message0: \"clamp %1 in [%2, %3]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"minInclusive\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"maxInclusive\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n        {\n            kind: \"block\",\n            type: \"jacdac_math_map\",\n            message0: \"map %1 from [%2, %3] to [%4, %5]\",\n            args0: [\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"fromMax\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMin\",\n                    check: \"Number\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"toMax\",\n                    check: \"Number\",\n                },\n            ],\n            output: \"Number\",\n            style: \"math_blocks\",\n        },\n    ]\n\n    const azureIoTHubBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: \"device_twin_receive_telemetry\",\n            message0: \"on receive cloud-to-device message\",\n            args0: [],\n            nextStatement: codeStatementType,\n            colour: azureIoTHubColor,\n        },\n        {\n            kind: \"block\",\n            type: \"device_twin_receive_telemetry_number\",\n            message0: \"received number %1\",\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                    text: \"value\",\n                },\n            ],\n            output: \"Number\",\n            colour: azureIoTHubColor,\n        },\n        {\n            kind: \"block\",\n            type: \"device_twin_receive_telemetry_string\",\n            message0: \"received string %1\",\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                    text: \"value\",\n                },\n            ],\n            output: \"String\",\n            colour: azureIoTHubColor,\n        },\n        {\n            kind: \"block\",\n            type: \"device_twin_send_telemetry\",\n            message0: \"send device-to-cloud message %1 %2\",\n            args0: [\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                <StatementInputDefinition>{\n                    type: \"input_statement\",\n                    name: \"fields\",\n                },\n            ],\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n            colour: azureIoTHubColor,\n        },\n        {\n            kind: \"block\",\n            type: \"device_twin_send_telemetry_value\",\n            message0: \"with %1 = %2\",\n            args0: [\n                <TextInputDefinition>{\n                    type: \"field_input\",\n                    name: \"name\",\n                    text: \"value\",\n                },\n                <ValueInputDefinition>{\n                    type: \"input_value\",\n                    name: \"value\",\n                    check: [\"String\", \"Boolean\", \"Number\"],\n                },\n            ],\n            previousStatement: codeStatementType,\n            nextStatement: codeStatementType,\n            colour: azureIoTHubColor,\n        },\n    ]\n\n    const deviceTwinsBlocks: BlockDefinition[] = [\n        {\n            kind: \"block\",\n            type: DEVICE_TWIN_DEFINITION_BLOCK,\n            message0: \"device twin id\",\n            args0: [],\n            inputsInline: true,\n            nextStatement: deviceTwinStatementType,\n            template: \"dtdl\",\n            colour: deviceTwinColor,\n        },\n        {\n            kind: \"block\",\n            type: DEVICE_TWIN_PROPERTY_BLOCK,\n            message0: \"property %1 %2 %3\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"name\",\n                    variable: \"property 1\",\n                    variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                    defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                },\n                {\n                    type: \"input_dummy\",\n                },\n                <StatementInputDefinition>{\n                    type: \"input_statement\",\n                    name: \"options\",\n                    check: deviceTwinPropertyOptionStatementType,\n                },\n            ],\n            previousStatement: deviceTwinStatementType,\n            nextStatement: deviceTwinStatementType,\n            template: \"dtdl\",\n            colour: deviceTwinColor,\n            inputsInline: false,\n        },\n        // options\n        {\n            kind: \"block\",\n            type: \"device_twin_option_property_field\",\n            message0: \"field %1 %2 %3\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"variable\",\n                    variable: \"value 1\",\n                    variableTypes: [DEVICE_TWIN_VALUE_TYPE],\n                    defaultType: DEVICE_TWIN_VALUE_TYPE,\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    name: \"unit\",\n                    options: DTDLUnits().map(unit => [unit, unit]),\n                },\n                {\n                    type: \"input_value\",\n                    name: \"value\",\n                },\n            ],\n            previousStatement: deviceTwinCommonOptionStatementType,\n            nextStatement: deviceTwinCommonOptionStatementType,\n            template: \"dtdlOption\",\n            colour: deviceTwinColor,\n            inputsInline: false,\n        },\n        // events\n        {\n            kind: \"block\",\n            type: \"device_twin_property_change\",\n            message0: \"on property %1 change\",\n            args0: [\n                <VariableInputDefinition>{\n                    type: \"field_variable\",\n                    name: \"name\",\n                    variable: \"property 1\",\n                    variableTypes: [DEVICE_TWIN_PROPERTY_TYPE],\n                    defaultType: DEVICE_TWIN_PROPERTY_TYPE,\n                },\n            ],\n            nextStatement: codeStatementType,\n            colour: deviceTwinColor,\n        },\n    ]\n\n    const blocks: BlockDefinition[] = [\n        ...serviceBlocks,\n        ...eventFieldBlocks,\n        ...runtimeBlocks,\n        ...shadowBlocks,\n        ...mathBlocks,\n        ...azureIoTHubBlocks,\n        ...deviceTwinsBlocks,\n    ]\n\n    // register field editors\n    registerFields()\n    // re-register blocks with blocklys\n    blocks.forEach(\n        block =>\n            (Blockly.Blocks[block.type] = <ServiceBlockDefinitionFactory>{\n                jacdacDefinition: block,\n                init: function () {\n                    this.jsonInit(block)\n                },\n            })\n    )\n\n    // final mapping\n    const jdBlocks = serviceBlocks.filter(block => !!block.service)\n    const services = uniqueMap(\n        jdBlocks,\n        block => block.service.shortId,\n        block => block.service\n    )\n\n    console.debug(\"vmblocks\", { blocks, serviceBlocks, services })\n    return {\n        blocks,\n        serviceBlocks,\n        eventFieldBlocks,\n        azureIoTHubBlocks,\n        deviceTwinsBlocks,\n        services,\n    }\n}\n\nfunction patchCategoryJSONtoXML(cat: CategoryDefinition): CategoryDefinition {\n    if (cat.button) {\n        if (!cat.contents) cat.contents = []\n        cat.contents.unshift(cat.button)\n    }\n    cat.contents\n        ?.filter(node => node.kind === \"block\")\n        .map(node => <BlockReference>node)\n        .filter(block => {\n            const exists = Blockly.Blocks[block.type]\n            if (!exists && Flags.diagnostics)\n                console.warn(\n                    `block type '${block.type}' not found, consider refreshing page...`\n                )\n            return !!block.values && exists\n        }) // avoid broken blocks\n        .forEach(block => {\n            // yup, this suck but we have to go through it\n            block.blockxml = `<block type=\"${block.type}\">${Object.keys(\n                block.values\n            )\n                .map(name => {\n                    const { type } = block.values[name]\n                    return `<value name=\"${name}\"><shadow type=\"${type}\" /></value>`\n                })\n                .join(\"\\n\")}</block>`\n            delete block.type\n        })\n    return cat\n}\n\nexport default function useToolbox(props: {\n    blockServices?: string[]\n    serviceClass?: number\n    source?: WorkspaceJSON\n    program?: VMProgram\n}): {\n    serviceBlocks: BlockDefinition[]\n    toolboxConfiguration: ToolboxConfiguration\n    newProjectXml: string\n} {\n    const { serviceClass, source, program } = props\n\n    const theme = useTheme()\n    const {\n        serviceColor,\n        commandColor,\n        debuggerColor,\n        azureIoTHubColor,\n        deviceTwinColor,\n    } = createBlockTheme(theme)\n    const {\n        serviceBlocks,\n        eventFieldBlocks,\n        azureIoTHubBlocks,\n        deviceTwinsBlocks,\n        services,\n    } = useMemo(\n        () =>\n            loadBlocks(\n                serviceColor,\n                commandColor,\n                debuggerColor,\n                azureIoTHubColor,\n                deviceTwinColor\n            ),\n        [theme]\n    )\n    const blockServices =\n        program?.roles.map(r => r.serviceShortId) ||\n        source?.variables.map(v => v.type) ||\n        []\n    const liveServices = useServices({ specification: true })\n    const usedEvents: Set<jdspec.PacketInfo> = new Set(\n        source?.blocks\n            ?.map(block => ({\n                block,\n                definition: resolveServiceBlockDefinition(block.type),\n            }))\n            .filter(({ definition }) => definition.template === \"event\")\n            .map(({ block, definition }) => {\n                const eventName = block.inputs[0].fields[\"event\"]\n                    .value as string\n                return (definition as EventBlockDefinition).events.find(\n                    ev => ev.name === eventName\n                )\n            })\n            .filter(ev => !!ev)\n    )\n\n    const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n        Flags.diagnostics\n            ? services\n            : [\n                  ...blockServices\n                      .map(srvid =>\n                          services.find(service => service.shortId === srvid)\n                      )\n                      .filter(srv => !!srv),\n                  ...liveServices.map(srv => srv.specification),\n              ].filter(\n                  srv => !serviceClass || srv.classIdentifier === serviceClass\n              ),\n        srv => srv.shortId,\n        srv => srv\n    )\n        .filter(srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0)\n        .sort((l, r) => l.name.localeCompare(r.name))\n\n    const servicesCategories: CategoryDefinition[] = toolboxServices\n        .map(service => ({\n            service,\n            serviceBlocks: serviceBlocks.filter(\n                block => block.service === service\n            ),\n        }))\n        .map<CategoryDefinition>(({ service, serviceBlocks }) => ({\n            kind: \"category\",\n            name: service.name,\n            colour: serviceColor(service),\n            contents: [\n                ...serviceBlocks.map<BlockDefinition>(block => ({\n                    kind: \"block\",\n                    type: block.type,\n                    values: block.values,\n                })),\n                ...eventFieldBlocks\n                    .filter(\n                        ev => ev.service === service && usedEvents.has(ev.event)\n                    )\n                    .map<BlockDefinition>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n            ],\n            button: {\n                kind: \"button\",\n                text: `Add ${service.name} role`,\n                callbackKey: `jacdac_add_role_callback_${service.shortId}`,\n                service,\n            },\n        }))\n        .filter(cat => !!cat.contents?.length)\n\n    const commandsCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Commands\",\n        colour: commandColor,\n        contents: [\n            <BlockDefinition>{\n                kind: \"block\",\n                type: REPEAT_EVERY_BLOCK,\n                values: {\n                    interval: { kind: \"block\", type: \"jacdac_time_picker\" },\n                },\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: WAIT_BLOCK,\n                values: {\n                    time: { kind: \"block\", type: \"jacdac_time_picker\" },\n                },\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: CONNECTION_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: CONNECTED_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: SET_STATUS_LIGHT_BLOCK,\n                values: {\n                    color: {\n                        kind: \"block\",\n                        type: LEDColorField.SHADOW.type,\n                    },\n                },\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: LOG_BLOCK,\n            },\n        ].filter(b => !!b),\n    }\n\n    const toolsCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Tools\",\n        colour: debuggerColor,\n        contents: [\n            <BlockDefinition>{\n                kind: \"block\",\n                type: WATCH_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: TWIN_BLOCK,\n            },\n            <BlockDefinition>{\n                kind: \"block\",\n                type: INSPECT_BLOCK,\n            },\n        ].filter(b => !!b),\n    }\n\n    const logicCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Logic\",\n        colour: \"%{BKY_LOGIC_HUE}\",\n        contents: [\n            {\n                kind: \"block\",\n                type: \"dynamic_if\",\n            },\n            {\n                kind: \"block\",\n                type: \"logic_compare\",\n                values: {\n                    A: { kind: \"block\", type: \"math_number\" },\n                    B: { kind: \"block\", type: \"math_number\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_operation\",\n                values: {\n                    A: { kind: \"block\", type: \"logic_boolean\" },\n                    B: { kind: \"block\", type: \"logic_boolean\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_negate\",\n                values: {\n                    BOOL: { kind: \"block\", type: \"logic_boolean\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"logic_boolean\",\n            },\n        ],\n    }\n\n    const mathCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Math\",\n        colour: \"%{BKY_MATH_HUE}\",\n        contents: [\n            {\n                kind: \"block\",\n                type: \"jacdac_math_arithmetic\",\n                values: {\n                    A: { kind: \"block\", type: \"math_number\" },\n                    B: { kind: \"block\", type: \"math_number\" },\n                },\n            },\n            {\n                kind: \"block\",\n                type: \"jacdac_math_single\",\n                values: {\n                    NUM: {\n                        kind: \"block\",\n                        type: \"math_number\",\n                    },\n                },\n            },\n            { kind: \"block\", type: \"jacdac_math_random\" },\n            { kind: \"block\", type: \"jacdac_math_random_range\" },\n            { kind: \"block\", type: \"jacdac_math_map\" },\n            { kind: \"block\", type: \"math_number\" },\n        ],\n    }\n\n    const variablesCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Variables\",\n        colour: \"%{BKY_VARIABLES_HUE}\",\n        custom: \"VARIABLE\",\n    }\n\n    const azureIoTHubCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Azure IoT Hub\",\n        colour: azureIoTHubColor,\n        contents: [\n            ...azureIoTHubBlocks.map(\n                ({ type }) =>\n                    <BlockDefinition>{\n                        kind: \"block\",\n                        type,\n                    }\n            ),\n        ],\n    }\n    const deviceTwinsCategory: CategoryDefinition = {\n        kind: \"category\",\n        name: \"Device Twin\",\n        colour: deviceTwinColor,\n        contents: [\n            ...deviceTwinsBlocks.map(\n                ({ type }) =>\n                    <BlockDefinition>{\n                        kind: \"block\",\n                        type,\n                    }\n            ),\n        ],\n    }\n\n    const toolboxConfiguration: ToolboxConfiguration = {\n        kind: \"categoryToolbox\",\n        contents: [\n            ...servicesCategories,\n            !!serviceSpecifications.length &&\n                <SeparatorDefinition>{\n                    kind: \"sep\",\n                },\n            commandsCategory,\n            logicCategory,\n            mathCategory,\n            variablesCategory,\n            <SeparatorDefinition>{\n                kind: \"sep\",\n            },\n            azureIoTHubCategory,\n            deviceTwinsCategory,\n            <SeparatorDefinition>{\n                kind: \"sep\",\n            },\n            toolsCategory,\n        ]\n            .filter(cat => !!cat)\n            .map(node =>\n                node.kind === \"category\"\n                    ? patchCategoryJSONtoXML(node as CategoryDefinition)\n                    : node\n            ),\n    }\n\n    return {\n        serviceBlocks,\n        toolboxConfiguration,\n        newProjectXml: NEW_PROJET_XML,\n    }\n}\n\nexport function useToolboxButtons(\n    workspace: Blockly.WorkspaceSvg,\n    toolboxConfiguration: ToolboxConfiguration\n) {\n    // track workspace changes and update callbacks\n    useEffect(() => {\n        if (!workspace) return\n\n        // collect buttons\n        const buttons: ButtonDefinition[] = toolboxConfiguration?.contents\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(cat => (cat as CategoryDefinition).button)\n            .filter(btn => !!btn)\n        buttons?.forEach(button =>\n            workspace.registerButtonCallback(button.callbackKey, () =>\n                Blockly.Variables.createVariableButtonHandler(\n                    workspace,\n                    null,\n                    button.service.shortId\n                )\n            )\n        )\n    }, [workspace, JSON.stringify(toolboxConfiguration)])\n}\n","import { BlockJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    VMIfThenElse,\n    VMError,\n    VMCommand,\n} from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    toMemberExpression,\n    toIdentifier,\n    RoleEvent,\n} from \"../../../jacdac-ts/src/vm/compile\"\n\nimport { assert } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    CommandBlockDefinition,\n    EventFieldDefinition,\n    RegisterBlockDefinition,\n    resolveServiceBlockDefinition,\n    WAIT_BLOCK,\n} from \"./toolbox\"\nimport Blockly from \"blockly\"\n\nconst ops = {\n    AND: \"&&\",\n    OR: \"||\",\n    EQ: \"===\",\n    NEQ: \"!==\",\n    LT: \"<\",\n    GT: \">\",\n    LTE: \"<=\",\n    GTE: \">=\",\n    NEG: \"-\",\n    ADD: \"+\",\n    MULTIPLY: \"*\",\n    DIVIDE: \"/\",\n    MINUS: \"-\",\n}\n\nconst BUILTIN_TYPES = [\"\", \"Boolean\", \"Number\", \"String\"]\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON\n): VMProgram {\n    console.debug(`compile vm`, { workspace })\n\n    const roles: VMRole[] = workspace.variables\n        .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n        .map(v => ({ role: v.name, serviceShortId: v.type }))\n\n    type ExpressionWithErrors = {\n        expr: jsep.Expression\n        errors: VMError[]\n    }\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            switch (type) {\n                case \"jacdac_math_single\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    const op = inputs[0].fields[\"op\"].value as string\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: ops[op] || op,\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"jacdac_math_arithmetic\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_operation\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.LogicalExpression>{\n                        type: \"LogicalExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                case \"logic_negate\": {\n                    const argument = blockToExpressionInner(ev, inputs[0].child)\n                    return <jsep.UnaryExpression>{\n                        type: \"UnaryExpression\",\n                        operator: \"!\",\n                        argument,\n                        prefix: false, // TODO:?\n                    }\n                }\n                case \"logic_compare\": {\n                    const left = blockToExpressionInner(ev, inputs[0].child)\n                    const right = blockToExpressionInner(ev, inputs[1].child)\n                    const op = inputs[1].fields[\"op\"].value as string\n                    return <jsep.BinaryExpression>{\n                        type: \"BinaryExpression\",\n                        operator: ops[op] || op,\n                        left,\n                        right,\n                    }\n                }\n                default: {\n                    const def = resolveServiceBlockDefinition(type)\n                    if (!def) {\n                        console.warn(`unknown block ${type}`, {\n                            type,\n                            ev,\n                            block,\n                            d: Blockly.Blocks[type],\n                        })\n                    } else {\n                        const { template } = def\n                        console.log(\"get\", { type, def, template })\n                        switch (template) {\n                            case \"register_get\": {\n                                const { register } =\n                                    def as RegisterBlockDefinition\n                                const { value: role } = inputs[0].fields[\"role\"]\n                                const field = inputs[0].fields[\"field\"]\n                                return toMemberExpression(\n                                    role as string,\n                                    field\n                                        ? toMemberExpression(\n                                              register.name,\n                                              field.value as string\n                                          )\n                                        : register.name\n                                )\n                            }\n                            case \"event_field\": {\n                                const { event } = def as EventFieldDefinition\n                                if (ev.event !== event.name) {\n                                    errors.push({\n                                        sourceId: block.id,\n                                        message: `Event ${event.name} is not available in this handler.`,\n                                    })\n                                }\n                                const field = inputs[0].fields[\"field\"]\n                                return toMemberExpression(\n                                    ev.role,\n                                    toMemberExpression(\n                                        ev.event,\n                                        field.value as string\n                                    )\n                                )\n                            }\n                            case \"shadow\": {\n                                const field = inputs[0].fields[\"value\"]\n                                const { value } = field\n                                return <jsep.Literal>{\n                                    type: \"Literal\",\n                                    value: value,\n                                    raw: value + \"\",\n                                }\n                            }\n                            default: {\n                                console.warn(\n                                    `unsupported block template ${template} for ${type}`,\n                                    { ev, block }\n                                )\n                                break\n                            }\n                        }\n                        break\n                    }\n                }\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    type CmdWithErrors = {\n        cmd: VMBase\n        errors: VMError[]\n    }\n\n    const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n        return {\n            sourceId: block.id,\n            type: \"cmd\",\n            command,\n        } as VMBase\n    }\n\n    const processErrors = (block: BlockJSON, errors: VMError[]) => {\n        return errors.map((e: VMError) => {\n            return {\n                sourceId: e.sourceId ? e.sourceId : block.id,\n                message: e.message,\n            }\n        })\n    }\n\n    const makeWait = (event: RoleEvent, block: BlockJSON) => {\n        const { inputs } = block\n        {\n            const { expr: time, errors } = blockToExpression(\n                event,\n                inputs[0].child\n            )\n            return {\n                cmd: makeVMBase(block, {\n                    type: \"CallExpression\",\n                    arguments: [time],\n                    callee: toIdentifier(\"wait\"),\n                }),\n                errors: processErrors(block, errors),\n            }\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        switch (type) {\n            case WAIT_BLOCK: \n                return makeWait(event, block)\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const def = resolveServiceBlockDefinition(type)\n                if (def) {\n                    const { template } = def\n                    switch (template) {\n                        case \"register_set\": {\n                            const { register } = def as RegisterBlockDefinition\n                            const { expr, errors } = blockToExpression(\n                                event,\n                                inputs[0].child\n                            )\n                            const { value: role } = inputs[0].fields.role\n                            return {\n                                cmd: makeVMBase(block, {\n                                    type: \"CallExpression\",\n                                    arguments: [\n                                        toMemberExpression(\n                                            role as string,\n                                            register.name\n                                        ),\n                                        expr,\n                                    ],\n                                    callee: toIdentifier(\"writeRegister\"),\n                                }),\n                                errors: processErrors(block, errors),\n                            }\n                        }\n                        case \"command\": {\n                            const { command: serviceCommand } =\n                                def as CommandBlockDefinition\n                            const { value: role } = inputs[0].fields.role\n                            const exprsErrors = inputs.map(a =>\n                                blockToExpression(event, a.child)\n                            )\n                            return {\n                                cmd: makeVMBase(block, {\n                                    type: \"CallExpression\",\n                                    arguments: exprsErrors.map(p => p.expr),\n                                    callee: toMemberExpression(\n                                        role as string,\n                                        serviceCommand.name\n                                    ),\n                                }),\n                                errors: processErrors(\n                                    block,\n                                    exprsErrors.flatMap(p => p.errors)\n                                ),\n                            }\n                        }\n                        default: {\n                            console.warn(\n                                `unsupported block template ${template} for ${type}`,\n                                { block }\n                            )\n                            return {\n                                cmd: undefined,\n                                errors: [],\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks?.forEach(child => {\n            if (child) {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child)\n                    if (cmd) handler.commands.push(cmd)\n                    errors.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    }\n                }\n            }\n        })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks.map(top => {\n        const { type, inputs } = top\n        let command: jsep.CallExpression = undefined\n        let topEvent: RoleEvent = undefined\n        let topErrors: VMError[] = []\n        const def = resolveServiceBlockDefinition(type)\n        assert(!!def)\n        const { template } = def\n        try {\n            switch (template) {\n                case \"twin\":\n                    break // ignore\n                case \"every\": {\n                    const { cmd, errors} = makeWait(undefined, top)\n                    command = (cmd as VMCommand).command\n                    topErrors = errors\n                    break\n                }\n                case \"event\": {\n                    const { value: role } = inputs[0].fields[\"role\"]\n                    const { value: eventName } = inputs[0].fields[\"event\"]\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(\n                                role.toString(),\n                                eventName.toString()\n                            ),\n                        ],\n                        callee: toIdentifier(\"awaitEvent\"),\n                    }\n                    topEvent = {\n                        role: role.toString(),\n                        event: eventName.toString(),\n                    }\n                    break\n                }\n                case \"register_change_event\": {\n                    const { value: role } = inputs[0].fields[\"role\"]\n                    const { register } = def as RegisterBlockDefinition\n                    const { expr, errors } = blockToExpression(\n                        undefined,\n                        inputs[0].child\n                    )\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    }\n                    topErrors = errors\n                    break\n                }\n                case \"watch\": {\n                    const { expr, errors } = blockToExpression(\n                        undefined,\n                        inputs[0].child\n                    )\n                    command = {\n                        type: \"CallExpression\",\n                        arguments: [expr],\n                        callee: toIdentifier(\"watch\"),\n                    }\n                    topErrors = errors\n                    break\n                }\n                default: {\n                    console.warn(\n                        `unsupported handler template ${template} for ${type}`,\n                        { top }\n                    )\n                    break\n                }\n            }\n        } catch (e) {\n            if (e instanceof EmptyExpression) {\n                command = nop\n                topErrors = []\n            } else {\n                throw e\n            }\n        }\n\n        const handler: VMHandler = {\n            commands: [\n                {\n                    sourceId: top.id,\n                    type: \"cmd\",\n                    command,\n                } as VMBase,\n            ],\n            errors: topErrors,\n        }\n\n        addCommands(topEvent, top.children, handler)\n\n        return handler\n    })\n\n    return {\n        roles,\n        handlers,\n    }\n}\n","import React, {\n    MutableRefObject,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport { useBlocklyWorkspace } from \"react-blockly\"\nimport { WorkspaceSvg } from \"blockly\"\nimport Theme from \"@blockly/theme-modern\"\nimport DarkTheme from \"@blockly/theme-dark\"\nimport useToolbox, { useToolboxButtons } from \"./useToolbox\"\nimport BlocklyModalDialogs from \"./BlocklyModalDialogs\"\nimport { domToJSON, WorkspaceJSON } from \"./jsongenerator\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport workspaceJSONToVMProgram from \"./VMgenerator\"\nimport AppContext from \"../AppContext\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport useBlocklyEvents from \"./useBlocklyEvents\"\nimport useBlocklyPlugins from \"./useBlocklyPlugins\"\nimport {\n    BlocklyWorkspaceWithServices,\n    WorkspaceServices,\n} from \"./WorkspaceContext\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport { arrayConcatMany, toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { withPrefix } from \"gatsby\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        editor: {\n            height: \"calc(100vh - 10rem)\",\n            \"& .blocklyTreeLabel\": {\n                fontFamily: theme.typography.fontFamily,\n            },\n            \"& .blocklyText\": {\n                fontWeight: `normal !important`,\n                fontFamily: `${theme.typography.fontFamily} !important`,\n            },\n        },\n    })\n)\n\nexport default function VMBlockEditor(props: {\n    className?: string\n    initialXml?: string\n    onXmlChange?: (xml: string) => void\n    onJSONChange?: (json: WorkspaceJSON) => void\n    onVMProgramChange?: (program: VMProgram) => void\n    runner?: VMProgramRunner\n    roleManager?: RoleManager\n    serviceClass?: number\n    workspaceRef?: MutableRefObject<WorkspaceSvg>\n}) {\n    const {\n        className,\n        onXmlChange,\n        onJSONChange,\n        onVMProgramChange,\n        initialXml,\n        serviceClass,\n        runner,\n        roleManager,\n        workspaceRef,\n    } = props\n    const classes = useStyles()\n    const { darkMode } = useContext(DarkModeContext)\n    const { setError } = useContext(AppContext)\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const { toolboxConfiguration, newProjectXml } = useToolbox({\n        serviceClass,\n        source,\n        program,\n    })\n    const theme = darkMode === \"dark\" ? DarkTheme : Theme\n    const gridColor = darkMode === \"dark\" ? \"#555\" : \"#ccc\"\n\n    // ReactBlockly\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const blocklyRef = useRef(null)\n    const { workspace, xml } = useBlocklyWorkspace({\n        ref: blocklyRef,\n        toolboxConfiguration,\n        workspaceConfiguration: {\n            collapse: false,\n            disable: false,\n            comments: false,\n            css: true,\n            trashcan: false,\n            sounds: false,\n            grid: {\n                spacing: 25,\n                length: 1,\n                colour: gridColor,\n                snap: true,\n            },\n            renderer: \"zelos\",\n            theme,\n            oneBasedIndex: false,\n            move: {\n                scrollbars: {\n                    vertical: true,\n                    horizontal: true,\n                },\n            },\n            media: withPrefix(\"blockly/media/\"),\n            zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.1,\n                scaleSpeed: 1.2,\n                pinch: true,\n            },\n        },\n        initialXml: initialXml || newProjectXml,\n        onImportXmlError: () => setError(\"Error loading blocks...\"),\n    }) as { workspace: WorkspaceSvg; xml: string }\n\n    // store ref\n    useEffect(() => {\n        if (workspaceRef) {\n            workspaceRef.current = workspace\n            return () => (workspaceRef.current = undefined)\n        }\n    }, [workspace, workspaceRef])\n\n    // surface state to react\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        if (ws) ws.jacdacServices = new WorkspaceServices()\n    }, [workspace])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.runner = runner\n        }\n    }, [workspace, runner])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const ws = workspace as any as BlocklyWorkspaceWithServices\n        const services = ws?.jacdacServices\n        if (services) {\n            services.roleManager = roleManager\n        }\n    }, [workspace, roleManager])\n\n    // plugins\n    useBlocklyPlugins(workspace)\n    useBlocklyEvents(workspace)\n    useToolboxButtons(workspace, toolboxConfiguration)\n\n    // blockly did a change\n    useEffect(() => {\n        if (!workspace || workspace.isDragging()) return\n\n        onXmlChange?.(xml)\n\n        // save json\n        if (onJSONChange || onVMProgramChange) {\n            // emit json\n            const newSource = domToJSON(workspace)\n            if (JSON.stringify(newSource) !== JSON.stringify(source)) {\n                setSource(newSource)\n                onJSONChange?.(newSource)\n                if (onVMProgramChange) {\n                    try {\n                        const newProgram = workspaceJSONToVMProgram(newSource)\n                        if (\n                            JSON.stringify(newProgram) !==\n                            JSON.stringify(program)\n                        ) {\n                            setProgram(newProgram)\n                            onVMProgramChange(newProgram)\n                        }\n                    } catch (e) {\n                        console.error(e)\n                        onVMProgramChange(undefined)\n                    }\n                }\n            }\n        }\n    }, [workspace, xml])\n\n    // apply errors\n    useEffect(() => {\n        if (!workspace) return\n        const allErrors = toMap(\n            arrayConcatMany(\n                program?.handlers.map(h => h.errors?.filter(e => !!e.sourceId))\n            ) || [],\n            e => e.sourceId,\n            e => e.message\n        )\n        workspace\n            .getAllBlocks(false)\n            .forEach(b => b.setWarningText(allErrors[b.id] || null))\n    }, [workspace, program])\n\n    // resize blockly\n    useEffect(() => {\n        const observer = new ResizeObserver(() => workspace?.resize())\n        observer.observe(blocklyRef.current)\n        return () => observer.disconnect()\n    }, [workspace, blocklyRef.current])\n\n    return (\n        <>\n            <div className={clsx(classes.editor, className)} ref={blocklyRef} />\n            <BlocklyModalDialogs />\n        </>\n    )\n}\n"],"sourceRoot":""}