{"version":3,"sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardReflectedLight.tsx"],"names":["DashboardReflectedLight","props","service","services","variant","brighessRegister","useRegister","ReflectedLightReg","variantRegister","useRegisterUnpackedValue","brightness","sensorVariant","server","useServiceServer","color","useWidgetTheme","background","controlBackground","widgetSize","useWidgetSize","length","maxValue","handleDown","reading","setValues","refresh","buttonProps","useSvgButtonProps","actualBrightness","useThrottledValue","w","h","m","sw","ReflectedLightVariant","dx","x","sh","dark","bright","userSelect","pointerEvents"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEe,SAASA,uBAAT,CAAiCC,KAAjC,EAA+D;AAC1E,MAAQC,OAAR,GAAuCD,KAAvC,CAAQC,OAAR;AAAA,MAAiBC,QAAjB,GAAuCF,KAAvC,CAAiBE,QAAjB;AAAA,MAA2BC,OAA3B,GAAuCH,KAAvC,CAA2BG,OAA3B;AAEA,MAAMC,gBAAgB,GAAGC,oEAAW,CAACJ,OAAD,EAAUK,6GAAV,CAApC;AACA,MAAMC,eAAe,GAAGF,oEAAW,CAACJ,OAAD,EAAUK,uGAAV,CAAnC;;AAEA,8BAAqBE,4FAAwB,CACzCJ,gBADyC,EAEzCJ,KAFyC,CAA7C;AAAA,MAAOS,UAAP;;AAIA,+BAAwBD,4FAAwB,CAC5CD,eAD4C,EAE5CP,KAF4C,CAAhD;AAAA,MAAOU,aAAP;;AAKA,MAAMC,MAAM,GAAGC,yEAAgB,CAAuBX,OAAvB,CAA/B;AACA,MAAMY,KAAK,GAAGF,MAAM,GAAG,WAAH,GAAiB,SAArC;;AACA,wBAA0CG,yEAAc,CAACD,KAAD,CAAxD;AAAA,MAAQE,UAAR,mBAAQA,UAAR;AAAA,MAAoBC,iBAApB,mBAAoBA,iBAApB;;AACA,MAAMC,UAAU,GAAGC,wEAAa,CAACf,OAAD,EAAUD,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEiB,MAApB,CAAhC;AAEA,MAAMC,QAAQ,GAAG,GAAjB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBV,UAAM,CAACW,OAAP,CAAeC,SAAf,CAAyB,CAACd,UAAU,GAAG,CAAb,GAAiB,CAAjB,GAAqB,GAAtB,CAAzB;AACAL,oBAAgB,CAACoB,OAAjB;AACH,GAHD;;AAIA,MAAMC,WAAW,GAAGC,0EAAiB,CACjC,eADiC,EAEjCf,MAAM,IAAIU,UAFuB,CAArC;AAKA,MAAMM,gBAAgB,GAAGC,0EAAiB,CAACnB,UAAU,IAAI,CAAf,EAAkBW,QAAQ,IAAI,CAA9B,CAA1C;AAEA,MAAMS,CAAC,GAAG,EAAV;AACA,MAAMC,CAAC,GAAG,EAAV;AACA,MAAMC,CAAC,GAAG,CAAV;AACA,MAAMC,EAAE,GAAGtB,aAAa,KAAKuB,yHAAlB,GAAyD,EAAzD,GAA8D,EAAzE;AACA,MAAMC,EAAE,GAAGL,CAAC,IAAI,CAAhB;AACA,MAAMM,CAAC,GAAG,CAACN,CAAC,GAAGG,EAAJ,GAASE,EAAV,IAAgB,CAAhB,GAAqBP,gBAAgB,GAAGP,QAApB,GAAgCc,EAA9D;AACA,MAAME,EAAE,GAAG,EAAX;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,MAAM,GAAG,MAAf;AAEA,sBACI,iDAAC,gEAAD;AAAW,SAAK,EAAET,CAAlB;AAAqB,UAAM,EAAEC,CAA7B;AAAgC,QAAI,EAAEb;AAAtC,kBACI;AACI,KAAC,EAAE,CADP;AAEI,KAAC,EAAE,CAFP;AAGI,SAAK,EAAEY,CAAC,IAAI,CAHhB;AAII,UAAM,EAAEC,CAJZ;AAKI,QAAI,EAAEO,IALV;AAMI,kBAAW;AANf,IADJ,eASI;AACI,KAAC,EAAER,CAAC,IAAI,CADZ;AAEI,KAAC,EAAE,CAFP;AAGI,SAAK,EAAEA,CAAC,IAAI,CAHhB;AAII,UAAM,EAAEC,CAJZ;AAKI,QAAI,EAAEQ,MALV;AAMI,kBAAW;AANf,IATJ,eAiBI;AAAG,aAAS,iBAAeH,CAAf,WAAqBL,CAAC,GAAGC,CAAJ,GAAQK,EAA7B;AAAZ,kBACI;AACI,KAAC,EAAE,CADP;AAEI,KAAC,EAAE,CAFP;AAGI,SAAK,EAAEJ,EAHX;AAII,UAAM,EAAEI,EAJZ;AAKI,QAAI,EAAErB;AALV,KAMQU,WANR,EADJ,eASI;AACI,MAAE,EAAEO,EAAE,IAAI,CADd;AAEI,MAAE,EAAEI,EAAE,GAAG,CAFb;AAGI,KAAC,EAAEJ,EAAE,GAAG,CAAL,GAAS,CAHhB;AAII,QAAI,EAAEK,IAJV;AAKI,UAAM,EAAErB,iBALZ;AAMI,eAAW,EAAE,CANjB;AAOI,SAAK,EAAE;AAAEuB,gBAAU,EAAE,MAAd;AAAsBC,mBAAa,EAAE;AAArC;AAPX,IATJ,eAkBI;AACI,MAAE,EAAER,EAAE,IAAI,CADd;AAEI,MAAE,EAAGI,EAAE,GAAG,CAAN,GAAW,CAFnB;AAGI,KAAC,EAAEJ,EAAE,GAAG,CAAL,GAAS,CAHhB;AAII,QAAI,EAAEM,MAJV;AAKI,UAAM,EAAEtB,iBALZ;AAMI,eAAW,EAAE,CANjB;AAOI,SAAK,EAAE;AAAEuB,gBAAU,EAAE,MAAd;AAAsBC,mBAAa,EAAE;AAArC;AAPX,IAlBJ,CAjBJ,CADJ;AAgDH,C","file":"5149-6bd45986542dab4fd0a4.js","sourcesContent":["import React from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport ReflectedLightServer from \"../../../jacdac-ts/src/servers/reflectedlightserver\"\nimport {\n    ReflectedLightReg,\n    ReflectedLightVariant,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardReflectedLight(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const brighessRegister = useRegister(service, ReflectedLightReg.Brightness)\n    const variantRegister = useRegister(service, ReflectedLightReg.Variant)\n\n    const [brightness] = useRegisterUnpackedValue<[number]>(\n        brighessRegister,\n        props\n    )\n    const [sensorVariant] = useRegisterUnpackedValue<[ReflectedLightVariant]>(\n        variantRegister,\n        props\n    )\n\n    const server = useServiceServer<ReflectedLightServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground } = useWidgetTheme(color)\n    const widgetSize = useWidgetSize(variant, services?.length)\n\n    const maxValue = 1.0\n    const handleDown = () => {\n        server.reading.setValues([brightness > 0 ? 0 : 1.0])\n        brighessRegister.refresh()\n    }\n    const buttonProps = useSvgButtonProps<SVGRectElement>(\n        \"line detector\",\n        server && handleDown\n    )\n\n    const actualBrightness = useThrottledValue(brightness || 0, maxValue << 2)\n\n    const w = 64\n    const h = 64\n    const m = 4\n    const sw = sensorVariant === ReflectedLightVariant.InfraredAnalog ? 32 : 16\n    const dx = w >> 1\n    const x = (w - sw - dx) / 2 + (actualBrightness / maxValue) * dx\n    const sh = 32\n    const dark = \"#000\"\n    const bright = \"#ddd\"\n\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                width={w >> 1}\n                height={h}\n                fill={dark}\n                aria-label=\"dark area\"\n            />\n            <rect\n                x={w >> 1}\n                y={0}\n                width={w >> 1}\n                height={h}\n                fill={bright}\n                aria-label=\"bright area\"\n            />\n            <g transform={`translate(${x}, ${h - m - sh})`}>\n                <rect\n                    x={0}\n                    y={0}\n                    width={sw}\n                    height={sh}\n                    fill={background}\n                    {...buttonProps}\n                />\n                <circle\n                    cx={sw >> 1}\n                    cy={sh / 3}\n                    r={sw / 2 - 4}\n                    fill={dark}\n                    stroke={controlBackground}\n                    strokeWidth={2}\n                    style={{ userSelect: \"none\", pointerEvents: \"none\" }}\n                />\n                <circle\n                    cx={sw >> 1}\n                    cy={(sh * 2) / 3}\n                    r={sw / 2 - 4}\n                    fill={bright}\n                    stroke={controlBackground}\n                    strokeWidth={2}\n                    style={{ userSelect: \"none\", pointerEvents: \"none\" }}\n                />\n            </g>\n        </SvgWidget>\n    )\n}\n"],"sourceRoot":""}