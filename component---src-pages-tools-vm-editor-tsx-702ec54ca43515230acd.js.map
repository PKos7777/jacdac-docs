{"version":3,"sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/BugReport.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/GetApp.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Launch.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Pause.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayForWork.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Save.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Stop.js","webpack://jacdac-docs/./src/components/hooks/useWindowEvent.ts","webpack://jacdac-docs/./src/components/makecode/useMakeCodeRenderer.ts","webpack://jacdac-docs/./src/components/makecode/MakeCodeSimulator.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeSnippet.tsx","webpack://jacdac-docs/./src/components/CodeBlock.tsx","webpack://jacdac-docs/./src/components/ImportButton.tsx","webpack://jacdac-docs/./jacdac-ts/src/vm/runner.ts","webpack://jacdac-docs/./src/components/vm/useVMRunner.ts","webpack://jacdac-docs/./jacdac-ts/src/servers/rolemanager.ts","webpack://jacdac-docs/./src/components/vm/useRoleManager.ts","webpack://jacdac-docs/./src/components/vm/VMDiagnostics.tsx","webpack://jacdac-docs/./src/components/vm/VMRoles.tsx","webpack://jacdac-docs/./src/components/vm/VMRunnerButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMStartSimulatorButton.tsx","webpack://jacdac-docs/./src/components/vm/VMFileButtons.tsx","webpack://jacdac-docs/./src/components/vm/VMToolbar.tsx","webpack://jacdac-docs/./src/components/vm/VMEditor.tsx","webpack://jacdac-docs/./src/pages/tools/vm-editor.tsx"],"names":["useWindowEvent","type","listener","passive","deps","useEffect","window","undefined","addEventListener","removeEventListener","concat","parseMakeCodeSnippet","source","ghost","code","meta","dependencies","test","front","parts","replace","split","length","m","name","value","push","snippet","mkcds","makeCodeServices","filter","info","src","indexOf","client","qName","default","map","repo","forEach","dep","unique","useMakeCodeRenderer","useContext","MakeCodeSnippetContext","target","rendererUrl","lang","iframeId","pendingRequests","useMemo","sendRequest","req","iframe","document","getElementById","dataset","ready","contentWindow","postMessage","render","console","log","f","createElement","id","style","position","left","bottom","width","height","body","appendChild","Math","random","options","snippetMode","Promise","resolve","reject","handleMessage","ev","msg","data","Object","keys","k","r","useStyles","makeStyles","createStyles","root","root2","paddingTop","top","border","MakeCodeSimulator","props","simUrl","JacdacContext","bus","frameRef","useRef","classes","url","encodeURIComponent","join","origin","URL","subscribe","PACKET_SEND","PACKET_PROCESS","pkt","packetSent","channel","broadcast","toBuffer","sender","current","MakeCodeSnippet","renderedSource","JSON","parse","rendered","tabs","editor","setEditor","useState","tab","setTab","handleTabChange","event","newValue","withPrefix","TraceSnippet","lazy","CodeSandboxButton","HighlightedCode","children","codeSandbox","className","downloadName","downloadText","DarkModeContext","darkMode","language","theme","DARK_THEME","LIGHT_THEME","valueUri","defaultProps","tokens","getLineProps","getTokenProps","float","line","index","lineProps","key","token","CodeBlock","DropzoneDialog","ImportButton","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","open","setOpen","handleOpen","handleSave","files","handleClose","VMInternalStatus","VM_WAKE_SLEEPER","VMJumpException","label","Error","VMTimerException","ms","VMCommandEvaluator","parent","env","gc","_regSaved","_changeSaved","_started","trace","context","command","evalExpression","e","expr","VMExprEvaluator","lookup","eval","checkExpression","start","callee","inst","args","arguments","evaluate","neededStart","Running","values","a","sendCommandAsync","Completed","hasEvent","regValue","unparse","reg","writeRegisterAsync","writeLocal","watch","sourceId","Stopped","VMError","VMCode","VMCommandRunner","handlerId","_status","_eval","handler","val","stepAsync","status","s","VMHandlerRunner","_commandIndex","_currentCommand","stopped","_labelToIndex","commands","c","cmd","reset","gotoTop","Ready","commandIndex","cancel","unsubscribe","wake","next","runToCompletionAsync","singleStep","singleStepCheckBreakAsync","getCommand","sid","breakpointOnAsync","singleStepAsync","emit","VM_EVENT","vmt","Sleeping","sleepAsync","JDEventSource","isEveryHandler","h","assert","VMStatus","VMProgramRunner","roleManager","program","_handlerRunners","_roles","_waitQueue","_everyQueue","_runQueue","_sleepQueue","_watch","_breaks","_in_run","compiled","compileProgram","checkProgram","registers","events","errors","roles","warn","_env","VMEnvironment","handlers","_waitRunMutex","Mutex","_breaksMutex","_sleepMutex","mount","CHANGE","waitingToRunning","wakeSleeper","initializeRoleManagement","setStatus","message","TRACE","oldValue","lookupWatch","setBreakpointsAsync","breaks","acquire","b","clearBreakpointsAsync","ret","handlerRunner","setTimeout","handlerMs","findIndex","p","splice","runAsync","startAsync","setRoles","slice","dup","resumeAsync","Paused","getCurrentRunner","runHandlerAsync","postProcessHandler","newHead","emitBreakpoint","oneStep","brkCommand","VMRoleNoServiceException","role","moveToWait","done","shift","refreshRegistersAsync","atTop","handlersStarted","newRunners","hs","consumeEvent","addRoleService","service","getService","serviceChanged","find","rv","ROLE_BOUND","ROLE_UNBOUND","JDClient","useVMRunner","autoRun","AppContext","setError","runner","setRunner","_autoStart","_setAutoStart","run","newTestRunner","unmount","debug","ERROR","handleTrace","Flags","RoleManager","on","DEVICE_ANNOUNCE","addServices","bind","DEVICE_DISCONNECT","removeServices","devices","ignoreSelf","announced","dev","newRoles","changed","supportedNewRoles","serviceShortId","serviceSpecificationFromName","i","newRole","existingRole","bindServices","unboundRoles","binding","boundRoles","services","serviceName","srv","selfDevice","device","useRoleManager","VMDiagnostics","xml","stringify","RoleChip","workspace","server","useServiceServer","handleRoleClick","specification","addServiceProvider","serviceProviderDefinitionFromServiceClass","classIdentifier","twinBlock","getTopBlocks","TWIN_BLOCK","inputList","fieldRow","getVariable","newBlock","variable","field","setValue","getId","getMetrics","moveBy","viewWidth","viewHeight","initSvg","centerOnBlock","handleDelete","removeServiceProvider","VMRoles","useChange","_","useWorkspaceBreakpoints","breakpoints","arrayConcatMany","setBreakpointHighlight","highlightBlock","VMRunnerButtons","t","indeterminate","setIndeterminate","breakpoint","setBreakpoint","pausing","paused","mounted","useMounted","handleRun","handleCancel","handleResume","handlePause","handleStep","VMStartSimulatorButton","toggleShowDeviceHostsDialog","VMLoadButton","handleFiles","file","jsfile","dom","Xml","clear","VMSaveButton","json","VMFileButtons","VMToolbar","useDevices","noRoles","VM_SOURCE_STORAGE_KEY","VMEditor","storageKey","workspaceRef","useLocalStorage","setXml","setSource","setProgram","autoStart","handleXml","handleJSON","handleI4Program","Page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY,E;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACe;AAChB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,iCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAI;AAC7B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,iCAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,yBAAI,kFAAkF,6BAAU,qDAAqD,6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","file":"component---src-pages-tools-vm-editor-tsx-702ec54ca43515230acd.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { DependencyList, useEffect } from \"react\"\n\nexport default function useWindowEvent<K extends keyof WindowEventMap>(type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    passive = false,\n    deps: DependencyList) {\n    useEffect(() => {\n        if (typeof window === \"undefined\")\n            return undefined; // SSR\n\n        // initiate the event handler\n        window.addEventListener<K>(type, listener, passive)\n\n        // this will clean up the event every time the component is re-rendered\n        return () => {\n            window.removeEventListener<K>(type, listener)\n        }\n    }, [type, listener, passive].concat(deps || []))\n}","import { useMemo, useContext } from \"react\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { makeCodeServices } from \"../../../jacdac-ts/src/jdom/makecode\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\n\nexport interface MakeCodeSnippetSource {\n    code: string;\n    ghost?: string;\n    meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    }\n}\n\nexport interface MakeCodeSnippetRendered {\n    uri?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\n\n\nexport function parseMakeCodeSnippet(source: string): MakeCodeSnippetSource {\n    let ghost: string;\n    let code: string;\n    const meta: {\n        editor?: string;\n        snippet?: boolean;\n        dependencies: string[];\n    } = {\n        dependencies: []\n    }\n\n    if (/^---\\n/.test(source)) {\n        let front: string;\n        const parts = source.replace(/^---\\n/, '').split(/---\\n/gm)\n        switch (parts.length) {\n            case 1: front = ghost = undefined; code = source; break;\n            case 2: [front, code] = parts; break;\n            default: [front, ghost, code] = parts; break;\n        }\n\n        // parse front matter\n        front?.replace(/(.+):\\s*(.+)\\s*\\n/g, (m, name, value) => {\n            switch (name) {\n                case \"dep\": meta.dependencies.push(value); break;\n                case \"snippet\": meta.snippet = !!value; break;\n                default: meta[name] = value;\n            }\n            return \"\";\n        })\n    } else {\n        code = source;\n    }\n\n    // sniff services\n    const mkcds = makeCodeServices()\n    mkcds.filter(info => {\n        const src = (ghost || \"\") + \"\\n\" + (code || \"\");\n        return src.indexOf(info.client.qName) > -1\n            || (info.client.default && src.indexOf(info.client.default) > -1);\n    }).map(info => `${info.client.name.replace(/^pxt-/, '')}=github:${info.client.repo}`)\n        .forEach(dep => meta.dependencies.push(dep));\n\n    // add jacdac by default\n    if (!meta.dependencies.length)\n        meta.dependencies.push(\"jacdac=github:microsoft/pxt-jacdac\");\n\n    // ensure unique deps\n    meta.dependencies = unique(meta.dependencies);\n\n    return {\n        code,\n        ghost,\n        meta\n    }\n}\n\ninterface RenderBlocksRequestMessage {\n    type: \"renderblocks\",\n    id: string;\n    code: string;\n    ghost?: string;\n    options?: {\n        packageId?: string;\n        package?: string;\n        snippetMode?: boolean;\n        dependencies?: string[];\n    }\n}\n\ninterface RenderBlocksResponseMessage {\n    source: \"makecode\",\n    type: \"renderblocks\",\n    id: string;\n    uri?: string;\n    css?: string;\n    svg?: string;\n    width?: number;\n    height?: number;\n    error?: string;\n}\n\ninterface RenderBlocksRequentResponse {\n    req: RenderBlocksRequestMessage,\n    resolve: (resp: RenderBlocksResponseMessage) => void,\n    reject: (e: unknown) => void\n}\n\nexport function useMakeCodeRenderer() {\n    const { target, rendererUrl } = useContext(MakeCodeSnippetContext);\n    const lang = \"\"\n    const iframeId = \"makecoderenderer\" + target;\n    const pendingRequests = useMemo<{\n        [index: string]: RenderBlocksRequentResponse\n    }>(() => ({}), [target, lang]);\n\n    const sendRequest = (req: RenderBlocksRequestMessage) => {\n        const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId) as HTMLIFrameElement;\n        if (iframe?.dataset.ready)\n            iframe?.contentWindow.postMessage(req, rendererUrl);\n    }\n\n    const render = (source: MakeCodeSnippetSource): Promise<MakeCodeSnippetRendered> => {\n        const { code, ghost, meta } = source;\n        const { dependencies, snippet } = meta;\n\n        // spin up iframe on demans\n        if (typeof document !== \"undefined\" && !document.getElementById(iframeId)) {\n            console.log(`mkcd: loading iframe`)\n            const f = document.createElement(\"iframe\");\n            f.id = iframeId;\n            f.style.position = \"absolute\";\n            f.style.left = \"0\";\n            f.style.bottom = \"0\";\n            f.style.width = \"1px\";\n            f.style.height = \"1px\";\n            f.src = `${rendererUrl}?render=1${lang ? `&lang=${lang}` : ''}`;\n            document.body.appendChild(f);\n        }\n\n        const req: RenderBlocksRequestMessage = {\n            type: \"renderblocks\",\n            id: \"r\" + Math.random(),\n            code,\n            ghost,\n            options: {\n                dependencies,\n                snippetMode: snippet\n            }\n        }\n        return new Promise<RenderBlocksResponseMessage>((resolve, reject) => {\n            pendingRequests[req.id] = { req, resolve, reject }\n            sendRequest(req);\n        })\n    }\n\n    // listen for messages\n    const handleMessage = (ev: MessageEvent) => {\n        const msg = ev.data;\n        if (msg.source != \"makecode\") return;\n        switch (msg.type) {\n            case \"renderready\": {\n                console.log(`mkcd: renderer ready, ${Object.keys(pendingRequests).length} pending`)\n                const iframe = typeof document !== \"undefined\" && document.getElementById(iframeId)\n                if (iframe) {\n                    console.log(`flushing messages`)\n                    iframe.dataset.ready = \"1\"\n                    Object.keys(pendingRequests)\n                        .forEach(k => sendRequest(pendingRequests[k].req));\n                }\n                break;\n            }\n            case \"renderblocks\": {\n                const id = msg.id; // this is the id you sent\n                const r = pendingRequests[id];\n                if (!r) return;\n                delete pendingRequests[id];\n                r.resolve(msg as RenderBlocksResponseMessage);\n                break;\n            }\n        }\n    }\n\n    useWindowEvent(\"message\", handleMessage, false, [])\n\n    return {\n        render\n    }\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useRef } from \"react\"\nimport {\n    PACKET_PROCESS,\n    PACKET_SEND,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { PacketMessage } from \"../../../jacdac-ts/src/jdom/iframebridgeclient\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\"\nimport { MakeCodeSnippetSource } from \"./useMakeCodeRenderer\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            width: \"100%\",\n        },\n        root2: {\n            position: \"relative\",\n            paddingTop: \"86.75%\",\n        },\n        iframe: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            border: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    })\n)\n\nexport default function MakeCodeSimulator(props: {\n    snippet: MakeCodeSnippetSource\n}) {\n    const { simUrl } = useContext(MakeCodeSnippetContext)\n    const { snippet } = props\n    const { code, ghost, meta } = snippet\n    const { dependencies } = meta\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const frameRef = useRef<HTMLIFrameElement>()\n    const classes = useStyles()\n\n    const src = `${ghost || \"\"}\\n${code || \"\"}`\n    const url = `${simUrl}#single=1&fullscren=1&nofooter=1&deps=${encodeURIComponent(\n        dependencies.join(\",\")\n    )}&code=${encodeURIComponent(src)}`\n    const origin = new URL(url).origin\n\n    useEffect(() =>\n        bus.subscribe([PACKET_SEND, PACKET_PROCESS], (pkt: Packet) => {\n            this.packetSent++\n            const msg: PacketMessage = {\n                type: \"messagepacket\",\n                channel: \"jacdac\",\n                broadcast: true,\n                data: pkt.toBuffer(),\n                sender: pkt.sender,\n            }\n            frameRef.current?.contentWindow?.postMessage(msg, origin)\n        })\n    )\n\n    return (\n        <PaperBox>\n            <div className={classes.root}>\n                <div className={classes.root2}>\n                    <iframe\n                        ref={frameRef}\n                        className={classes.iframe}\n                        src={url}\n                        aria-label=\"MakeCode rendering iframe to generate blocks images.\"\n                    />\n                </div>\n            </div>\n        </PaperBox>\n    )\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport PaperBox from \"../ui/PaperBox\"\nimport { Tab, Tabs } from '@material-ui/core';\nimport CodeBlock from \"../CodeBlock\";\nimport TabPanel from '../ui/TabPanel';\nimport MakeCodeSnippetContext from \"./MakeCodeSnippetContext\";\nimport { parseMakeCodeSnippet } from \"./useMakeCodeRenderer\";\nimport MakeCodeSimulator from \"./MakeCodeSimulator\";\nimport { withPrefix } from \"gatsby\"\ninterface Rendered {\n    url: string;\n    width: number;\n    height: number;\n}\n\nexport default function MakeCodeSnippet(props: { renderedSource: string }) {\n    const { renderedSource } = props;\n    const { source, rendered } = JSON.parse(renderedSource) as { source: string; rendered: Rendered; }\n    const { height, width, url } = rendered || {};\n    const tabs = [\"blocks\", \"typescript\", \"sim\"]\n    const { editor, setEditor } = useContext(MakeCodeSnippetContext);\n    const [tab, setTab] = useState(tabs.indexOf(editor) || 0);\n    const handleTabChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\n        if (newValue < tabs.length - 1)\n            setEditor(tabs[newValue]);\n        setTab(newValue);\n    };\n    const snippet = useMemo(() => parseMakeCodeSnippet(source), [source]);\n    const { code } = snippet;\n\n    return <PaperBox>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"Select MakeCode editor\">\n            <Tab label={\"Blocks\"} />\n            <Tab label={\"JavaScript\"} />\n            <Tab label={\"Simulator\"} />\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <img src={withPrefix(url)} alt={source} loading=\"lazy\" />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CodeBlock className=\"typescript\">{code}</CodeBlock>\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n            <MakeCodeSimulator snippet={snippet} />\n        </TabPanel>\n    </PaperBox>\n}\n","import React, { lazy, useContext } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/github\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./ui/DarkModeContext\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"./ui/Tooltip\"\nimport MakeCodeSnippet from \"./makecode/MakeCodeSnippet\"\nimport Suspense from \"./ui/Suspense\"\n\nconst TraceSnippet = lazy(() => import(\"./TraceSnippet\"))\nconst CodeSandboxButton = lazy(() => import(\"./ui/CodeSandboxButton\"))\n\nfunction HighlightedCode(props: {\n    children: string\n    codeSandbox?: boolean\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const {\n        children,\n        codeSandbox,\n        className,\n        downloadName,\n        downloadText,\n        url,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const language = className?.replace(/language-/, \"\") || \"\"\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const valueUri =\n        !!downloadText &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            downloadText\n        )}`\n\n    return (\n        <Highlight\n            {...defaultProps}\n            code={children?.replace(/[\\s\\r\\n]*$/g, \"\") || \"\"}\n            language={language as Language}\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={{ ...style }}>\n                    {!!url && (\n                        <Link style={{ float: \"right\" }} href={url}>\n                            <Tooltip title={`Open ${url}`}>\n                                <IconButton>\n                                    <LaunchIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {!!downloadText && (\n                        <Link\n                            style={{ float: \"right\" }}\n                            href={valueUri}\n                            download={downloadName || \"download\"}\n                        >\n                            <Tooltip title=\"Download\">\n                                <IconButton>\n                                    <GetAppIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    )}\n                    {codeSandbox && (\n                        <div style={{ float: \"right\" }}>\n                            <Suspense>\n                                <CodeSandboxButton source={children} />\n                            </Suspense>\n                        </div>\n                    )}\n                    {tokens?.map((line, index) => {\n                        const lineProps = getLineProps({ line, key: index })\n                        return (\n                            <div key={index} {...lineProps}>\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({ token, key })}\n                                    />\n                                ))}\n                            </div>\n                        )\n                    })}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n\nexport default function CodeBlock(props: {\n    children: string\n    className?: string\n    downloadName?: string\n    downloadText?: string\n    url?: string\n}) {\n    const { children, className } = props\n    const language = className?.replace(/language-/, \"\") || \"\"\n\n    switch (language) {\n        case \"trace\":\n            return (\n                <Suspense>\n                    <TraceSnippet source={children} />\n                </Suspense>\n            )\n        case \"blocks\":\n            return <MakeCodeSnippet renderedSource={children} />\n        case \"vanilla\":\n            return (\n                <HighlightedCode\n                    {...props}\n                    className={\"javascript\"}\n                    codeSandbox={true}\n                />\n            )\n        default:\n            return <HighlightedCode {...props} />\n    }\n}\n","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n","import { VMProgram, VMHandler, VMCommand, VMRole } from \"./ir\"\nimport RoleManager from \"../servers/rolemanager\"\nimport { VMEnvironment, VMRoleNoServiceException } from \"./environment\"\nimport { VMExprEvaluator, unparse } from \"./expr\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, ROLE_BOUND, ROLE_UNBOUND, TRACE } from \"../jdom/constants\"\nimport { checkProgram, compileProgram } from \"./compile\"\nimport { VM_EVENT, VMCode } from \"./events\"\nimport { VMError, Mutex } from \"./utils\"\nimport { assert, SMap } from \"../jdom/utils\"\nimport { JDClient } from \"../jdom/client\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type VMTraceContext = any\n\nenum VMInternalStatus {\n    Ready = \"ready\", // the pc is at this instruction, but pre-condition not met\n    Enabled = \"enabled\", // the instruction pre-conditions are met (is this needed?)\n    Running = \"running\", // the instruction has started running (may need retries)\n    Sleeping = \"sleep\", // waiting to be woken by timer\n    Completed = \"completed\", // the instruction completed successfully\n    Stopped = \"stopped\", // halt instruction encountered, handler stopped\n}\n\nconst VM_WAKE_SLEEPER = \"vmWakeSleeper\"\n\nexport interface VMEnvironmentInterface {\n    writeRegisterAsync: (\n        e: jsep.MemberExpression | string,\n        v: any\n    ) => Promise<void>\n    sendCommandAsync: (\n        command: jsep.MemberExpression,\n        values: any[]\n    ) => Promise<void>\n    refreshRegistersAsync: () => Promise<void>\n    lookup: (e: jsep.MemberExpression | string) => any\n    writeLocal: (e: jsep.MemberExpression | string, v: any) => boolean\n    hasEvent: (e: jsep.MemberExpression | string) => boolean\n    unsubscribe: () => void\n}\n\nclass VMJumpException extends Error {\n    constructor(public label: string) {\n        super()\n    }\n}\n\nclass VMTimerException extends Error {\n    constructor(public ms: number) {\n        super()\n    }\n}\n\nclass VMCommandEvaluator {\n    private _regSaved: number = undefined\n    private _changeSaved: number = undefined\n    private _started = false\n    constructor(\n        public parent: VMCommandRunner,\n        private readonly env: VMEnvironment,\n        private readonly gc: VMCommand\n    ) {}\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { command: this.gc.command.type, ...context })\n    }\n\n    private get inst() {\n        return (this.gc.command.callee as jsep.Identifier)?.name\n    }\n\n    private evalExpression(e: jsep.Expression) {\n        const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n        return expr.eval(e)\n    }\n\n    private checkExpression(e: jsep.Expression) {\n        return this.evalExpression(e) ? true : false\n    }\n\n    private start() {\n        if (\n            this.gc.command.callee.type !== \"MemberExpression\" &&\n            (this.inst === \"awaitRegister\" || this.inst === \"awaitChange\")\n        ) {\n            // need to capture register value for awaitChange/awaitRegister\n            const args = this.gc.command.arguments\n            this._regSaved = this.evalExpression(args[0])\n            if (this.inst === \"awaitChange\")\n                this._changeSaved = this.evalExpression(args[1])\n            return true\n        }\n        return false\n    }\n\n    public async evaluate(): Promise<VMInternalStatus> {\n        if (!this._started) {\n            const neededStart = this.start()\n            this._started = true\n            if (neededStart) return VMInternalStatus.Running\n        }\n        const args = this.gc.command.arguments\n        if (this.gc.command.callee.type === \"MemberExpression\") {\n            // interpret as a service command (role.comand)\n            const expr = new VMExprEvaluator(e => this.env.lookup(e), undefined)\n            const values = this.gc.command.arguments.map(a => expr.eval(a))\n            await this.env.sendCommandAsync(\n                this.gc.command.callee as jsep.MemberExpression,\n                values\n            )\n            return VMInternalStatus.Completed\n        }\n        switch (this.inst) {\n            case \"branchOnCondition\": {\n                const expr = this.checkExpression(args[0])\n                if (expr) {\n                    throw new VMJumpException((args[1] as jsep.Identifier).name)\n                }\n                return VMInternalStatus.Completed\n            }\n            case \"jump\": {\n                throw new VMJumpException((args[0] as jsep.Identifier).name)\n            }\n            case \"label\": {\n                return VMInternalStatus.Completed\n            }\n            case \"awaitEvent\": {\n                const event = args[0] as jsep.MemberExpression\n                if (this.env.hasEvent(event)) {\n                    return this.checkExpression(args[1])\n                        ? VMInternalStatus.Completed\n                        : VMInternalStatus.Running\n                }\n                return VMInternalStatus.Running\n            }\n            case \"awaitCondition\": {\n                return this.checkExpression(args[0])\n                    ? VMInternalStatus.Completed\n                    : VMInternalStatus.Running\n            }\n            case \"awaitChange\":\n            case \"awaitRegister\": {\n                const regValue = this.evalExpression(args[0])\n                if (\n                    (this.inst === \"awaitRegister\" &&\n                        regValue !== this._regSaved) ||\n                    (this.inst === \"awaitChange\" &&\n                        ((this._changeSaved === 0 &&\n                            regValue !== this._regSaved) ||\n                            (this._changeSaved < 0 &&\n                                regValue <=\n                                    this._regSaved + this._changeSaved) ||\n                            (this._changeSaved > 0 &&\n                                regValue >=\n                                    this._regSaved + this._changeSaved)))\n                ) {\n                    return VMInternalStatus.Completed\n                }\n                return VMInternalStatus.Running\n            }\n            case \"writeRegister\":\n            case \"writeLocal\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[1])\n                this.trace(\"eval-end\", { expr: unparse(args[1]) })\n                const reg = args[0] as jsep.MemberExpression\n                if (this.inst === \"writeRegister\") {\n                    await this.env.writeRegisterAsync(reg, ev)\n                    this.trace(\"write-after-wait\", {\n                        reg: unparse(reg),\n                        expr: ev,\n                    })\n                } else this.env.writeLocal(reg, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"watch\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                this.parent.watch(this.gc?.sourceId, ev)\n                return VMInternalStatus.Completed\n            }\n            case \"halt\": {\n                return VMInternalStatus.Stopped\n            }\n            case \"nop\": {\n                return VMInternalStatus.Completed\n            }\n            case \"wait\": {\n                const expr = new VMExprEvaluator(\n                    e => this.env.lookup(e),\n                    undefined\n                )\n                const ev = expr.eval(args[0])\n                throw new VMTimerException(ev * 1000)\n            }\n            case \"onRoleConnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            case \"onRoleDisonnected\": {\n                // first time fires based on state\n                // after that, only on transitions\n                return VMInternalStatus.Completed\n            }\n            default:\n                throw new VMError(\n                    VMCode.InternalError,\n                    `Unknown instruction ${this.inst}`\n                )\n        }\n    }\n}\n\nclass VMCommandRunner {\n    private _eval: VMCommandEvaluator\n    private _status: VMInternalStatus = VMInternalStatus.Running\n    constructor(\n        public readonly parent: VMHandlerRunner,\n        private handlerId: number,\n        env: VMEnvironment,\n        public gc: VMCommand\n    ) {\n        this._eval = new VMCommandEvaluator(this, env, gc)\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { handler: this.handlerId, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this._status\n    }\n\n    set status(s: VMInternalStatus) {\n        this._status = s\n    }\n\n    async stepAsync() {\n        if (this.status === VMInternalStatus.Running) {\n            this.trace(unparse(this.gc.command))\n            this.status = await this._eval.evaluate()\n        }\n    }\n}\n\nclass VMHandlerRunner extends JDEventSource {\n    private _commandIndex: number = undefined\n    private _currentCommand: VMCommandRunner = undefined\n    private stopped = false\n    private _labelToIndex: SMap<number> = {}\n\n    constructor(\n        public readonly parent: VMProgramRunner,\n        public readonly id: number,\n        public readonly env: VMEnvironment,\n        public readonly handler: VMHandler\n    ) {\n        super()\n        // find the label commands (targets of jumps)\n        this.handler.commands.forEach((c, index) => {\n            const cmd = c as VMCommand\n            const id = cmd.command?.callee as jsep.Identifier\n            if (id?.name === \"label\") {\n                const label = cmd.command.arguments[0] as jsep.Identifier\n                this._labelToIndex[label.name] = index\n            }\n        })\n        this.reset()\n    }\n\n    trace(msg: string, context: VMTraceContext = {}) {\n        this.parent.trace(msg, { id: this.id, ...context })\n    }\n\n    watch(id: string, val: any) {\n        this.parent.watch(id, val)\n    }\n\n    get status() {\n        return this.stopped\n            ? VMInternalStatus.Stopped\n            : this._commandIndex === undefined\n            ? VMInternalStatus.Ready\n            : this._commandIndex < this.handler.commands.length - 1\n            ? VMInternalStatus.Running\n            : this._currentCommand.status\n    }\n\n    get command() {\n        return this._currentCommand\n    }\n\n    get atTop() {\n        return (\n            this.status === VMInternalStatus.Running && this._commandIndex === 0\n        )\n    }\n\n    gotoTop() {\n        if (\n            this.status === VMInternalStatus.Ready &&\n            this.handler.commands.length\n        )\n            this.commandIndex = 0\n    }\n\n    reset() {\n        this.commandIndex = undefined\n        this.stopped = false\n    }\n\n    cancel() {\n        this.stopped = true\n        this.env.unsubscribe()\n    }\n\n    wake() {\n        if (this._currentCommand) {\n            this._currentCommand.status = VMInternalStatus.Completed\n            this.next()\n        }\n    }\n\n    // run-to-completion semantics (true if breakpoint)\n    async runToCompletionAsync(singleStep = false) {\n        if (this.stopped || !this.handler.commands.length) return undefined\n        if (this.commandIndex === undefined) {\n            this.commandIndex = 0\n        }\n        if ((await this.singleStepCheckBreakAsync(singleStep)) && !singleStep)\n            return this._currentCommand\n        while (this.next()) {\n            if (singleStep || (await this.singleStepCheckBreakAsync()))\n                return this._currentCommand\n        }\n        return undefined\n    }\n\n    private next() {\n        if (\n            this._currentCommand.status === VMInternalStatus.Completed &&\n            this.commandIndex < this.handler.commands.length - 1\n        ) {\n            this.commandIndex++\n            return true\n        }\n        return false\n    }\n\n    private getCommand() {\n        const cmd = this.handler.commands[this._commandIndex]\n        if (cmd.type === \"ite\") {\n            throw new VMError(VMCode.InternalError, \"ite not compiled away\")\n        }\n        return cmd as VMCommand\n    }\n\n    private async singleStepCheckBreakAsync(singleStep = false) {\n        this.trace(\"step begin\")\n        const sid = this._currentCommand.gc?.sourceId\n        if (!singleStep && (await this.parent.breakpointOnAsync(sid))) {\n            return true\n        }\n        await this.singleStepAsync()\n        this.trace(\"step end\")\n        return false\n    }\n\n    private async singleStepAsync() {\n        const sid = this._currentCommand.gc.sourceId\n        this.parent.emit(VM_EVENT, VMCode.CommandStarted, sid)\n        try {\n            await this._currentCommand.stepAsync()\n        } catch (e) {\n            if (e instanceof VMJumpException) {\n                const { label } = e as VMJumpException\n                const index = this._labelToIndex[label]\n                this.commandIndex = index\n                this._currentCommand.status = VMInternalStatus.Completed\n            } else if (e instanceof VMTimerException) {\n                const vmt = e as VMTimerException\n                this._currentCommand.status = VMInternalStatus.Sleeping\n                await this.parent.sleepAsync(this, vmt.ms)\n            } else {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.CommandFailed,\n                    this._currentCommand.gc.sourceId\n                )\n                throw e\n            }\n        }\n        if (this._currentCommand.status === VMInternalStatus.Completed)\n            this.parent.emit(\n                VM_EVENT,\n                VMCode.CommandCompleted,\n                this._currentCommand.gc.sourceId\n            )\n        if (this._currentCommand.status === VMInternalStatus.Stopped)\n            this.stopped = true\n    }\n\n    private set commandIndex(index: number) {\n        if (index === undefined) {\n            this._commandIndex = undefined\n            this._currentCommand = undefined\n        } else if (index !== this._commandIndex) {\n            this._commandIndex = index\n            this._currentCommand = new VMCommandRunner(\n                this,\n                this.id,\n                this.env,\n                this.getCommand()\n            )\n        }\n    }\n\n    private get commandIndex() {\n        return this._commandIndex\n    }\n}\n\nexport type WatchValueType = boolean | string | number\n\ninterface SleepingHandler {\n    ms: number\n    handlerRunner: VMHandlerRunner\n    handler?: VMHandler\n    id: NodeJS.Timeout\n}\n\nfunction isEveryHandler(h: VMHandler) {\n    assert(!!h)\n    if (h.commands.length) {\n        const cmd = (h.commands[0] as VMCommand).command\n            .callee as jsep.Identifier\n        return cmd.name === \"wait\"\n    }\n    return false\n}\n\nexport enum VMStatus {\n    Stopped = \"stopped\",\n    Running = \"running\",\n    Paused = \"paused\",\n}\n\nexport class VMProgramRunner extends JDClient {\n    // program, environment\n    private _handlerRunners: VMHandlerRunner[] = []\n    private _env: VMEnvironment\n    private _roles: VMRole[] = []\n    // running\n    private _status: VMStatus\n    private _waitQueue: VMHandlerRunner[] = []\n    private _everyQueue: VMHandlerRunner[] = []\n    private _runQueue: VMHandlerRunner[] = []\n    private _waitRunMutex: Mutex\n    private _sleepQueue: SleepingHandler[] = []\n    private _sleepMutex: Mutex\n    // debugging\n    private _watch: SMap<any> = {}\n    private _breaks: SMap<boolean> = {}\n    private _breaksMutex: Mutex\n\n    constructor(\n        readonly bus: JDBus,\n        readonly roleManager: RoleManager,\n        readonly program: VMProgram\n    ) {\n        super()\n        const compiled = compileProgram(program)\n        const { registers, events, errors } = checkProgram(compiled)\n        this._roles = compiled.roles\n        if (errors.length) {\n            console.warn(\"ERRORS\", errors)\n        }\n        // data structures for running program\n        this._status = VMStatus.Stopped\n        this._env = new VMEnvironment(registers, events)\n        this._handlerRunners = compiled.handlers.map(\n            (h, index) => new VMHandlerRunner(this, index, this._env, h)\n        )\n        // TODO: can't add multiple handlers until we have deduplicate CHANGE on Event\n        /*\n        const len = this._handlerRunners.length\n        compiled.handlers.forEach((h, index) =>\n            this._handlerRunners.push(\n                new VMHandlerRunner(this, len + index, this._env, h)\n            )\n        )*/\n\n        this._waitRunMutex = new Mutex()\n        this._breaksMutex = new Mutex()\n        this._sleepMutex = new Mutex()\n        // run on any change to environment\n        this.mount(\n            this._env.subscribe(CHANGE, () => {\n                this.waitingToRunning()\n            })\n        )\n        this.mount(\n            this.subscribe(\n                VM_WAKE_SLEEPER,\n                async (h: VMHandlerRunner | VMHandler) => {\n                    await this.wakeSleeper(h)\n                }\n            )\n        )\n        this.initializeRoleManagement()\n    }\n\n    // control of VM\n    get status() {\n        return this._status\n    }\n\n    private setStatus(s: VMStatus) {\n        if (s !== this._status) {\n            this._status = s\n            this.emit(CHANGE)\n        }\n    }\n\n    // debugging\n    trace(message: string, context: VMTraceContext = {}) {\n        this.emit(TRACE, { message, context })\n    }\n\n    // watch statement - watch an expression\n    watch(sourceId: string, value: WatchValueType) {\n        const oldValue = this._watch[sourceId]\n        if (oldValue !== value) {\n            this._watch[sourceId] = value\n            this.emit(VM_EVENT, VMCode.WatchChange, sourceId)\n        }\n    }\n\n    lookupWatch(sourceId: string) {\n        return this._watch[sourceId]\n    }\n\n    // breakpoints\n    async setBreakpointsAsync(breaks: string[]) {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n            breaks.forEach(b => {\n                this._breaks[b] = true\n            })\n        })\n    }\n\n    async clearBreakpointsAsync() {\n        await this._breaksMutex.acquire(async () => {\n            this._breaks = {}\n        })\n    }\n\n    async breakpointOnAsync(id: string) {\n        let ret = false\n        await this._breaksMutex.acquire(async () => {\n            ret = !!this._breaks?.[id]\n        })\n        return ret\n    }\n\n    // timers\n    async sleepAsync(\n        handlerRunner: VMHandlerRunner,\n        ms: number,\n        handler: VMHandler = undefined\n    ) {\n        await this._sleepMutex.acquire(async () => {\n            const id = setTimeout(() => {\n                this.emit(\n                    VM_WAKE_SLEEPER,\n                    handlerRunner ? handlerRunner : handler\n                )\n            }, ms)\n            this._sleepQueue.push({ ms, handlerRunner, id, handler })\n        })\n    }\n\n    private async wakeSleeper(h: VMHandlerRunner | VMHandler) {\n        try {\n            let handlerMs: number = undefined\n            let handlerRunner: VMHandlerRunner = undefined\n            let handler: VMHandler = undefined\n            await this._sleepMutex.acquire(async () => {\n                const index = this._sleepQueue.findIndex(\n                    p => p?.handlerRunner === h || p?.handler === h\n                )\n                assert(index>=0)\n                if (index >= 0) {\n                    const p = this._sleepQueue[index]\n                    handlerMs = p.ms\n                    handlerRunner = p.handlerRunner\n                    handler = p?.handler\n                    this._sleepQueue.splice(index, 1)\n                    // clearTimeout(p.id)\n                }\n            })\n            if (this.status === VMStatus.Stopped) return\n            // this logic is to deal with starting a handler rather than a runner\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                if (!handlerRunner && isEveryHandler(handler)) {\n                    const index = this._everyQueue.findIndex(\n                        h => h.handler === handler\n                    )\n                    if (index >= 0) {\n                        handlerRunner = this._everyQueue[index]\n                        this._everyQueue.splice(index, 1)\n                        handlerRunner.gotoTop()\n                    }\n                }*/\n                if (handlerRunner) {\n                    // transition to the run queue\n                    handlerRunner.wake()\n                    this._runQueue.push(handlerRunner)\n                }\n            })\n            /*\n            const theHandler = handlerRunner?.handler || handler\n            if (isEveryHandler(theHandler)) {\n                // setup next\n                this.sleepAsync(undefined, handlerMs, theHandler)\n            }*/\n            if (handlerRunner) this.runAsync()\n        } catch (e) {\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    async startAsync() {\n        if (this.status !== VMStatus.Stopped) return // already running\n        this.trace(\"start\")\n        try {\n            this.roleManager.setRoles(this._roles)\n            await this._waitRunMutex.acquire(async () => {\n                this._waitQueue = this._handlerRunners.slice(0)\n                this._waitQueue.forEach(h => h.reset())\n                this._runQueue = []\n                this._everyQueue = []\n                // make sure to have another handler for every\n                for (const h of this._waitQueue) {\n                    if (isEveryHandler(h.handler)) {\n                        const dup = new VMHandlerRunner(\n                            this,\n                            undefined,\n                            this._env,\n                            h.handler\n                        )\n                        dup.reset()\n                        this._everyQueue.push(dup)\n                    }\n                }\n            })\n            this.clearBreakpointsAsync()\n            this.setStatus(VMStatus.Running)\n            this.waitingToRunning()\n            this.runAsync()\n        } catch (e) {\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n    }\n\n    cancel() {\n        if (this.status === VMStatus.Stopped) return // nothing to cancel\n        this.setStatus(VMStatus.Stopped)\n        this.trace(\"cancelled\")\n    }\n\n    async resumeAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"resume\")\n        this.setStatus(VMStatus.Running)\n        await this.runAsync()\n    }\n\n    async stepAsync() {\n        if (this.status !== VMStatus.Paused) return\n        this.trace(\"step\")\n        const h = await this.getCurrentRunner()\n        if (h) {\n            await this.runHandlerAsync(h, true)\n            await this.postProcessHandler(h)\n            const newHead = await this.getCurrentRunner()\n            if (newHead && newHead !== h) {\n                this.emitBreakpoint(newHead)\n            }\n        }\n    }\n\n    private emitBreakpoint(h: VMHandlerRunner) {\n        this.emit(\n            VM_EVENT,\n            VMCode.Breakpoint,\n            h,\n            h.status === VMInternalStatus.Completed\n                ? \"\"\n                : h.command.gc?.sourceId\n        )\n    }\n\n    private async runHandlerAsync(h: VMHandlerRunner, oneStep = false) {\n        try {\n            const brkCommand = await h.runToCompletionAsync(oneStep)\n            if ((brkCommand && !oneStep) || this.status === VMStatus.Paused) {\n                this.setStatus(VMStatus.Paused)\n                this.emitBreakpoint(h)\n            }\n            if (h.status === VMInternalStatus.Completed) {\n                h.reset()\n            }\n        } catch (e) {\n            if (e instanceof VMRoleNoServiceException) {\n                this.emit(\n                    VM_EVENT,\n                    VMCode.RoleMissing,\n                    (e as VMRoleNoServiceException).role\n                )\n            } else {\n                this.emit(VM_EVENT, VMCode.InternalError, e)\n            }\n            // on handler error, reset the handler\n            h.reset()\n        }\n    }\n\n    private async postProcessHandler(h: VMHandlerRunner) {\n        if (\n            h.status === VMInternalStatus.Ready ||\n            h.status === VMInternalStatus.Sleeping\n        ) {\n            const moveToWait = h.status === VMInternalStatus.Ready\n            await this._waitRunMutex.acquire(async () => {\n                if (this._runQueue.length) {\n                    assert(h === this._runQueue[0])\n                    const done = this._runQueue.shift()\n                    if (moveToWait) {\n                        if (isEveryHandler(done.handler)) {\n                            await this.runHandlerAsync(done, true)\n                            // this._everyQueue.push(done)\n                        } else this._waitQueue.push(done)\n                    }\n                }\n            })\n        }\n    }\n\n    private _in_run = false\n    private async runAsync() {\n        if (this.status === VMStatus.Stopped) return\n        if (this._in_run) return\n        this.trace(\"run\")\n        this._in_run = true\n        try {\n            await this._env.refreshRegistersAsync()\n            let h: VMHandlerRunner = undefined\n            while (\n                this.status === VMStatus.Running &&\n                (h = await this.getCurrentRunner())\n            ) {\n                assert(!h.atTop)\n                await this.runHandlerAsync(h)\n                await this.postProcessHandler(h)\n            }\n        } catch (e) {\n            this.emit(VM_EVENT, VMCode.InternalError, e)\n        }\n        this._in_run = false\n        this.trace(\"run end\")\n    }\n\n    // call this whenever some event/change arises\n    private async waitingToRunning() {\n        // console.log(\"VM status: \", this.status)\n        if (this.status !== VMStatus.Stopped) {\n            await this._waitRunMutex.acquire(async () => {\n                /*\n                console.log(\"wait\", this._waitQueue.length)\n                console.log(\"run\", this._runQueue.length)\n                console.log(\"sleep\", this._sleepQueue.length)\n                console.log(\"every\", this._everyQueue.length)\n                console.log(\n                    \"TOTAL\",\n                    this._waitQueue.length +\n                        this._runQueue.length + this._sleepQueue.length +\n                        this._everyQueue.length\n                )*/\n                if (this.status === VMStatus.Paused && this._runQueue.length) {\n                    return\n                }\n                const handlersStarted: VMHandler[] = []\n                const newRunners: VMHandlerRunner[] = []\n                for (const h of this._waitQueue) {\n                    await this.runHandlerAsync(h, true)\n                    if (\n                        h.status === VMInternalStatus.Running &&\n                        !h.atTop &&\n                        handlersStarted.findIndex(hs => hs === h.handler) === -1\n                    ) {\n                        newRunners.push(h)\n                        handlersStarted.push(h.handler)\n                    }\n                }\n                newRunners.forEach(h => {\n                    const index = this._waitQueue.indexOf(h)\n                    this._runQueue.push(h)\n                    this._waitQueue.splice(index, 1)\n                })\n            })\n            this._env.consumeEvent()\n            this.runAsync()\n        }\n    }\n\n    private async getCurrentRunner() {\n        return await this._waitRunMutex.acquire(async () => {\n            if (this._runQueue.length) return this._runQueue[0]\n            return undefined\n        })\n    }\n\n    private initializeRoleManagement() {\n        // adding a (role,service) binding\n        const addRoleService = (role: string) => {\n            const service = this.roleManager.getService(role)\n            if (service) {\n                this._env.serviceChanged(role, service)\n            }\n        }\n        // initialize\n        this.roleManager.roles.forEach(r => {\n            if (this._roles.find(rv => rv.role === r.role)) {\n                addRoleService(r.role)\n            }\n        })\n        this.mount(\n            this.roleManager.subscribe(ROLE_BOUND, async (role: string) => {\n                addRoleService(role)\n            })\n        )\n        this.mount(\n            this.roleManager.subscribe(ROLE_UNBOUND, (role: string) => {\n                this._env.serviceChanged(role, undefined)\n            })\n        )\n    }\n}\n","import { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport {\n    VMProgramRunner,\n    VMTraceContext,\n} from \"../../../jacdac-ts/src/vm/runner\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport { ERROR, TRACE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useVMRunner(\n    roleManager: RoleManager,\n    program: VMProgram,\n    autoRun: boolean\n) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const [runner, setRunner] = useState<VMProgramRunner>()\n    const [_autoStart, _setAutoStart] = useState<boolean>(!!autoRun)\n\n    const run = async () => {\n        _setAutoStart(!!autoRun)\n        await runner.startAsync()\n    }\n    const cancel = async () => {\n        _setAutoStart(false)\n        runner.cancel()\n    }\n\n    // auto start\n    useEffect(() => {\n        if (_autoStart && runner) runner.startAsync()\n        return () => runner?.cancel()\n    }, [runner, _autoStart])\n\n    // create runner\n    useEffect(() => {\n        try {\n            const newTestRunner =\n                program && new VMProgramRunner(bus, roleManager, program)\n            setRunner(newTestRunner)\n\n            return () => newTestRunner?.unmount()\n        } catch (e) {\n            console.debug(e)\n            setRunner(undefined)\n        }\n    }, [roleManager, program])\n\n    // errors\n    useEffect(() => runner?.subscribe(ERROR, e => setError(e)), [runner])\n    // traces\n    const handleTrace = (value: {\n        message: string\n        context: VMTraceContext\n    }) => {\n        const { message, context } = value\n        if (Flags.diagnostics) console.debug(`vm> ${message}`, context)\n    }\n    useEffect(\n        () =>\n            runner?.subscribe<{ message: string; context: VMTraceContext }>(\n                TRACE,\n                handleTrace\n            ),\n        [runner]\n    )\n\n    return { runner, run, cancel }\n}\n","import { JDEventSource } from \"../jdom/eventsource\"\nimport { CHANGE, DEVICE_ANNOUNCE, DEVICE_DISCONNECT, ROLE_BOUND, ROLE_UNBOUND } from \"../jdom/constants\"\nimport { JDBus } from \"../jdom/bus\"\nimport { JDDevice } from \"../jdom/device\"\nimport { JDService } from \"../jdom/service\"\nimport { serviceSpecificationFromName } from \"../jdom/spec\"\n\nexport interface RoleBinding {\n    role: string\n    serviceShortId: string\n    service?: JDService\n}\n\n// TODO: replicate MakeCode role manager logic\nexport default class RoleManager extends JDEventSource {\n    private readonly _roles: RoleBinding[] = []\n\n    constructor(private readonly bus: JDBus) {\n        super()\n\n        this.bus.on(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        this.bus.on(DEVICE_DISCONNECT, this.removeServices.bind(this))\n\n        this.bus\n            .devices({ ignoreSelf: true, announced: true })\n            .forEach(dev => this.addServices(dev))\n\n        this.on(ROLE_UNBOUND, role => console.log(`role unbound`, { role }))\n        this.on(ROLE_BOUND, role => console.log(`role bound`, { role }))\n    }\n\n    get roles() {\n        return this._roles.slice(0)\n    }\n\n    get boundRoles() {\n        return this._roles.filter(r => !!r.service)\n    }\n\n    get unboundRoles() {\n        return this._roles.filter(r => !r.service)\n    }\n\n    setRoles(\n        newRoles: {\n            role: string\n            serviceShortId: string\n        }[]\n    ) {\n        let changed = false\n\n        // remove unknown roles\n        const supportedNewRoles = newRoles.filter(({ serviceShortId }) =>\n            serviceSpecificationFromName(serviceShortId)\n        )\n\n        // unbind removed roles\n        let i = 0\n        while (i < this._roles.length) {\n            const role = this._roles[i]\n            if (!supportedNewRoles.find(r => r.role === role.role)) {\n                changed = true\n                this._roles.splice(i, 1)\n                this.emit(ROLE_UNBOUND, role.role)\n            } else {\n                i++\n            }\n        }\n\n        // update or add roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = this._roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                changed = true\n                this._roles.push({ ...newRole })\n            } else if (existingRole.serviceShortId !== newRole.serviceShortId) {\n                // modified type, force rebinding\n                changed = true\n                existingRole.serviceShortId = newRole.serviceShortId\n                if (existingRole.service) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, existingRole.role)\n                }\n            } // else unmodifed role\n        }\n\n        // emit change as needed\n        if (changed) this.emit(CHANGE)\n\n        // bound services\n        this.bindServices()\n    }\n\n    private bindServices() {\n        let changed = false\n        this.unboundRoles.forEach(binding => {\n            const boundRoles = this.boundRoles\n            const service = this.bus\n                .services({\n                    ignoreSelf: true,\n                    serviceName: binding.serviceShortId,\n                })\n                .find(srv => !boundRoles.find(b => b.service === srv))\n            binding.service = service\n            this.emit(ROLE_BOUND, binding.role)\n            changed = true\n        })\n        if (changed) this.emit(CHANGE)\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        let changed = false\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                changed = true\n            })\n        if (changed) this.emit(CHANGE)\n    }\n\n    public getService(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    public addRoleService(role: string, serviceShortId: string) {\n        if (!serviceSpecificationFromName(serviceShortId)) return // unknown role type\n\n        let binding = this._roles.find(r => r.role === role)\n\n        // check if we already have this role\n        if (binding && serviceShortId === binding.serviceShortId) return\n\n        // new role\n        binding = { role, serviceShortId }\n        this._roles.push(binding)\n\n        const ret = this.bus\n            .services({ ignoreSelf: true, serviceName: serviceShortId })\n            .find(s => !this._roles.find(r => r.service === s))\n        if (ret) {\n            binding.service = ret\n            this.emit(ROLE_BOUND, role)\n        } else {\n            this.emit(ROLE_UNBOUND, role)\n        }\n        this.emit(CHANGE)\n    }\n}\n","import { useContext, useMemo } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\n\nexport default function useRoleManager() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const roleManager = useMemo(() => new RoleManager(bus), [])\n    return roleManager\n}\n","import { Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceJSON } from \"./jsongenerator\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function VMDiagnostics(props: {\n    program: VMProgram\n    source: WorkspaceJSON\n    xml: string\n}) {\n    const { program, source, xml } = props\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">VM</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json.vm\"}\n                    downloadText={JSON.stringify(program, null, 2)}\n                >\n                    {JSON.stringify(program, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(source, null, 2)}\n                >\n                    {JSON.stringify(source, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{xml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip, Grid, Tooltip } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport DeviceAvatar from \"../devices/DeviceAvatar\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport useChange from \"../../jacdac/useChange\"\nimport { BlockSvg, FieldVariable, WorkspaceSvg } from \"blockly\"\nimport { TWIN_BLOCK } from \"./toolbox\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\n\nfunction RoleChip(props: {\n    role: string\n    service: JDService\n    serviceShortId: string\n    workspace: WorkspaceSvg\n}) {\n    const { role, service, serviceShortId, workspace } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const server = useServiceServer(service)\n    const handleRoleClick = () => {\n        // spin off simulator\n        if (!service) {\n            const specification = serviceSpecificationFromName(serviceShortId)\n            if (specification)\n                addServiceProvider(\n                    bus,\n                    serviceProviderDefinitionFromServiceClass(\n                        specification.classIdentifier\n                    )\n                )\n        }\n        // add twin block\n        if (workspace) {\n            // try to find existing twin block\n            let twinBlock = workspace\n                .getTopBlocks(false)\n                .find(\n                    b =>\n                        b.type === TWIN_BLOCK &&\n                        (\n                            b.inputList[0].fieldRow.find(\n                                f => f.name === \"role\"\n                            ) as FieldVariable\n                        )?.getVariable()?.name === role\n                ) as BlockSvg\n            if (!twinBlock) {\n                twinBlock = workspace.newBlock(TWIN_BLOCK) as BlockSvg\n                const variable = workspace.getVariable(role, serviceShortId)\n                const field = twinBlock.inputList[0].fieldRow.find(\n                    f => f.name === \"role\"\n                ) as FieldVariable\n                field.setValue(variable.getId())\n                const m = workspace.getMetrics()\n                twinBlock.moveBy(m.viewWidth / 2, m.viewHeight / 3)\n                twinBlock.initSvg()\n                twinBlock.render(false)\n            }\n            workspace.centerOnBlock(twinBlock.id)\n        }\n    }\n\n    const handleDelete = () => bus.removeServiceProvider(server.device)\n    return (\n        <Chip\n            label={role}\n            variant={service ? \"default\" : \"outlined\"}\n            avatar={service && <DeviceAvatar device={service.device} />}\n            onClick={handleRoleClick}\n            onDelete={server ? handleDelete : undefined}\n            deleteIcon={\n                <Tooltip title=\"stop simulator\">\n                    <CancelIcon />\n                </Tooltip>\n            }\n        />\n    )\n}\n\nexport default function VMRoles(props: {\n    roleManager: RoleManager\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, workspace } = props\n    const roles = useChange(roleManager, _ => _?.roles)\n\n    return (\n        <>\n            {roles?.map(({ role, service, serviceShortId }) => (\n                <Grid item key={role}>\n                    <RoleChip\n                        role={role}\n                        service={service}\n                        serviceShortId={serviceShortId}\n                        workspace={workspace}\n                    />\n                </Grid>\n            ))}\n        </>\n    )\n}\n","import React, { useEffect, useMemo, useState } from \"react\"\nimport useChange from \"../../jacdac/useChange\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { VMProgramRunner, VMStatus } from \"../../../jacdac-ts/src/vm/runner\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport StopIcon from \"@material-ui/icons/Stop\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { Chip, Grid } from \"@material-ui/core\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { VM_EVENT, VMCode } from \"../../../jacdac-ts/src/vm/events\"\nimport { VMHandler, VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { WorkspaceSvg } from \"blockly\"\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\"\nimport useMounted from \"../hooks/useMounted\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport BugReportIcon from \"@material-ui/icons/BugReport\"\n\nfunction useWorkspaceBreakpoints(program: VMProgram, workspace: WorkspaceSvg) {\n    const breakpoints = useMemo(\n        () =>\n            arrayConcatMany(\n                program?.handlers?.map(h => h.commands.map(cmd => cmd.sourceId))\n            )?.filter(id => !!id) || [],\n        [program]\n    )\n    const setBreakpointHighlight = (sourceId: string) => {\n        workspace?.highlightBlock(sourceId)\n    }\n\n    return {\n        breakpoints,\n        setBreakpointHighlight,\n    }\n}\n\nexport default function VMRunnerButtons(props: {\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n    workspace: WorkspaceSvg\n}) {\n    const { runner, run, cancel, workspace } = props\n    const status = useChange(runner, t => t?.status)\n    const stopped = !status || status === VMStatus.Stopped\n    const program = runner?.program\n    const [indeterminate, setIndeterminate] = useState(false)\n    const [breakpoint, setBreakpoint] = useState<string>(undefined)\n    const pausing = breakpoint === \"\"\n    const paused = !!breakpoint?.length\n    const mounted = useMounted()\n    const disabled = indeterminate || !runner\n    const { breakpoints, setBreakpointHighlight } = useWorkspaceBreakpoints(\n        program,\n        workspace\n    )\n\n    //console.log(\"runner status\", status)\n\n    const handleRun = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await run()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleCancel = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.clearBreakpointsAsync()\n            setBreakpoint(undefined)\n            await cancel()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleResume = async () => {\n        try {\n            setIndeterminate(true)\n            setBreakpoint(undefined)\n            await runner.clearBreakpointsAsync()\n            await runner.resumeAsync()\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handlePause = async () => {\n        try {\n            setIndeterminate(true)\n            await runner.setBreakpointsAsync(breakpoints)\n            await runner.resumeAsync()\n            setBreakpoint(\"\")\n        } finally {\n            if (mounted()) setIndeterminate(false)\n        }\n    }\n    const handleStep = () => runner.stepAsync()\n\n    // register breakpoint handler\n    useEffect(\n        () =>\n            runner?.subscribe(\n                VM_EVENT,\n                (code: VMCode, _?: VMHandler, sourceId?: string) => {\n                    if (code === VMCode.Breakpoint) {\n                        console.log(\"breakpoint\", { sourceId, mounted: mounted() })\n                        if (mounted()) setBreakpoint(sourceId)\n                    }\n                }\n            ),\n        [runner]\n    )\n\n    // setting blockly breakpoint\n    useEffect(() => {\n        setBreakpointHighlight(breakpoint)\n        return () => setBreakpointHighlight(undefined)\n    }, [breakpoint])\n\n    // reset breakpoint in ui when runner, paused mode changes\n    useEffect(() => setBreakpoint(undefined), [runner])\n\n    return (\n        <>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={paused ? \"resume\" : stopped ? \"start\" : \"stop\"}\n                    disabled={disabled}\n                    onClick={\n                        paused\n                            ? handleResume\n                            : stopped\n                            ? handleRun\n                            : handleCancel\n                    }\n                >\n                    {paused || stopped ? <PlayArrowIcon /> : <StopIcon />}\n                </IconButtonWithTooltip>{\" \"}\n            </Grid>\n            <Grid item>\n                <IconButtonWithProgress\n                    title={pausing ? \"cancel pause\" : paused ? \"step\" : \"pause\"}\n                    disabled={disabled}\n                    indeterminate={pausing}\n                    onClick={\n                        pausing\n                            ? handleResume\n                            : paused\n                            ? handleStep\n                            : handlePause\n                    }\n                >\n                    {paused ? <PlayForWorkIcon /> : <PauseIcon />}\n                </IconButtonWithProgress>\n            </Grid>\n            {(pausing || paused) && (\n                <Grid item>\n                    <Chip\n                        icon={<BugReportIcon />}\n                        label={pausing ? \"pausing\" : \"paused\"}\n                        color={\"secondary\"}\n                    />\n                </Grid>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useContext } from \"react\"\nimport AppContext from \"../AppContext\"\n\nexport default function VMStartSimulatorButton() {\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <IconButtonWithTooltip\n            title=\"start simulator\"\n            onClick={toggleShowDeviceHostsDialog}\n        >\n            <AddIcon />\n        </IconButtonWithTooltip>\n    )\n}\n","import React, { useContext } from \"react\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { Grid, Tooltip } from \"@material-ui/core\"\nimport { IconButton, Link } from \"gatsby-theme-material-ui\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport ImportButton from \"../ImportButton\"\nimport AppContext from \"../AppContext\"\nimport { WorkspaceSvg, Xml } from \"blockly\"\nimport VMFile from \"../../../jacdac-ts/src/vm/file\"\n\nfunction VMLoadButton(props: { workspace: WorkspaceSvg }) {\n    const { workspace } = props\n    const { setError } = useContext(AppContext)\n    const disabled = !workspace\n\n    const handleFiles = async (files: File[]) => {\n        const file = files?.[0]\n        if (!file) return\n\n        try {\n            const text = await file.text()\n            const jsfile = JSON.parse(text) as VMFile\n            console.debug(`imported file`, jsfile)\n            const xml = jsfile?.xml\n            if (typeof xml !== \"string\") throw new Error(\"Invalid file format\")\n\n            // try loading xml into a dummy blockly workspace\n            const dom = Xml.textToDom(xml)\n\n            // all good, load in workspace\n            workspace.clear()\n            Xml.domToWorkspace(dom, workspace)\n        } catch (e) {\n            setError(e)\n        }\n    }\n    return (\n        <ImportButton\n            text=\"Open...\"\n            icon={true}\n            disabled={disabled}\n            acceptedFiles={[\"application/json\"]}\n            onFilesUploaded={handleFiles}\n            filesLimit={1}\n        />\n    )\n}\n\nfunction VMSaveButton(props: { xml: string; program: VMProgram }) {\n    const { xml, program } = props\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: VMFile = {\n        xml,\n        program,\n    }\n\n    const url = `data:application/json;charset=UTF-8,${encodeURIComponent(\n        JSON.stringify(json)\n    )}`\n\n    return (\n        <Link download=\"jacdac-blocks.json\" href={url}>\n            <Tooltip title={\"Save\"}>\n                <IconButton>\n                    <SaveIcon />\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nexport default function VMFileButtons(props: {\n    xml: string\n    program: VMProgram\n    workspace: WorkspaceSvg\n}) {\n    const { xml, program, workspace } = props\n    return (\n        <>\n            <Grid item>\n                <VMSaveButton xml={xml} program={program} />\n            </Grid>\n            <Grid item>\n                <VMLoadButton workspace={workspace} />\n            </Grid>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport RoleManager from \"../../../jacdac-ts/src/servers/rolemanager\"\nimport { VMProgramRunner } from \"../../../jacdac-ts/src/vm/runner\"\nimport VMRoles from \"./VMRoles\"\nimport VMRunnerButtons from \"./VMRunnerButtons\"\nimport VMStartSimulatorButton from \"./VMStartSimulatorButton\"\nimport { WorkspaceSvg } from \"blockly\"\nimport VMFileButtons from \"./VMFileButtons\"\nimport useChange from \"../../jacdac/useChange\"\nimport useDevices from \"../hooks/useDevices\"\n\nexport default function VMToolbar(props: {\n    roleManager: RoleManager\n    runner: VMProgramRunner\n    run: () => Promise<void>\n    cancel: () => Promise<void>\n    xml: string\n    program: VMProgram\n    workspace?: WorkspaceSvg\n}) {\n    const { roleManager, runner, run, cancel, xml, program, workspace } = props\n    const roles = useChange(roleManager, _ => _?.roles)\n    const devices = useDevices({ ignoreSelf: true })\n    const noRoles = !roles?.length && !devices?.length\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <VMFileButtons xml={xml} program={program} workspace={workspace} />\n            <VMRunnerButtons\n                runner={runner}\n                run={run}\n                cancel={cancel}\n                workspace={workspace}\n            />\n            <Grid item>\n                <VMStartSimulatorButton />\n            </Grid>\n            <VMRoles roleManager={roleManager} workspace={workspace} />\n        </Grid>\n    )\n}\n","import { Grid, NoSsr } from \"@material-ui/core\"\nimport React, { useRef, useState } from \"react\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { WorkspaceJSON } from \"../../components/vm/jsongenerator\"\nimport VMBlockEditor from \"../../components/vm/VMBlockEditor\"\nimport useLocalStorage from \"../../components/useLocalStorage\"\nimport useVMRunner from \"./useVMRunner\"\nimport useRoleManager from \"./useRoleManager\"\nimport VMDiagnostics from \"./VMDiagnostics\"\nimport VMToolbar from \"./VMToolbar\"\nimport { WorkspaceSvg } from \"blockly\"\nimport { VMProgram } from \"../../../jacdac-ts/src/vm/ir\"\nimport { DslProvider } from \"./dsl/DslContext\"\n\nconst VM_SOURCE_STORAGE_KEY = \"jacdac:tools:vmeditor\"\nexport default function VMEditor(props: { storageKey?: string }) {\n    const { storageKey } = props\n    const workspaceRef = useRef<WorkspaceSvg>()\n    const [xml, setXml] = useLocalStorage(\n        storageKey || VM_SOURCE_STORAGE_KEY,\n        \"\"\n    )\n    const [source, setSource] = useState<WorkspaceJSON>()\n    const [program, setProgram] = useState<VMProgram>()\n    const roleManager = useRoleManager()\n    const autoStart = false\n    const { runner, run, cancel } = useVMRunner(roleManager, program, autoStart)\n\n    const handleXml = (xml: string) => setXml(xml)\n    const handleJSON = (json: WorkspaceJSON) => setSource(json)\n    const handleI4Program = (json: VMProgram) => {\n        if (json) roleManager.setRoles(json.roles)\n        setProgram(json)\n    }\n\n    return (\n        <DslProvider>\n            <Grid container direction=\"column\" spacing={1}>\n                <Grid item xs={12}>\n                    <VMToolbar\n                        roleManager={roleManager}\n                        runner={runner}\n                        run={run}\n                        cancel={cancel}\n                        xml={xml}\n                        program={program}\n                        workspace={workspaceRef.current}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <NoSsr>\n                        <VMBlockEditor\n                            initialXml={xml}\n                            onXmlChange={handleXml}\n                            onJSONChange={handleJSON}\n                            onVMProgramChange={handleI4Program}\n                            runner={runner}\n                            roleManager={roleManager}\n                            workspaceRef={workspaceRef}\n                        />\n                    </NoSsr>\n                </Grid>\n                {Flags.diagnostics && (\n                    <VMDiagnostics\n                        program={program}\n                        source={source}\n                        xml={xml}\n                    />\n                )}\n            </Grid>\n        </DslProvider>\n    )\n}\n","import React from \"react\"\nimport VMEditor from \"../../components/vm/VMEditor\"\n\nexport default function Page() {\n    return <VMEditor />\n}\n"],"sourceRoot":""}